- en: Chapter 1. Dangerous Gas Sensors
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章：危险气体传感器
- en: In this chapter, we will learn how to use the **BeagleBone Black** to monitor
    some dangerous gases in a room, such as *CO*, *methane*, *LPG*, and so on, and
    then enabling an acoustic and visive alarm in case of danger. Also, by using a
    GSM module, the user will be able to send an SMS message to a predefined phone
    number to alert, for instance, a relative.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何使用**BeagleBone Black**来监测房间中的一些危险气体，如*一氧化碳*、*甲烷*、*液化石油气*等，并在危险发生时启用声光报警。此外，通过使用
    GSM 模块，用户还可以向预定义的电话号码发送短信，例如通知亲人。
- en: Also, the user will be able to control, log, and display the measured concentrations
    from the system console/terminal by using a command-line interface (this to keep
    the code simple).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，用户还可以通过命令行界面在系统控制台/终端中控制、记录和显示测量的浓度（这样可以保持代码的简洁）。
- en: We'll see how to build the circuitry to manage the sensors and how to get the
    gas concentration from them. Then, we'll take a look at how to manage a GSM module
    in order to send SMS messages.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看到如何构建电路来管理传感器，并从中获取气体浓度。接着，我们将了解如何管理 GSM 模块，以便发送短信。
- en: The basic of functioning
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本功能
- en: In this project, our BeagleBone Black will periodically read the environmental
    data from the sensors, comparing them with user selectable ranges, and then generate
    an alarm in case one (or more) data read is out of that range.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本项目中，我们的 BeagleBone Black 将定期读取传感器的环境数据，比较用户可选择的范围，如果某个（或多个）数据读数超出该范围，则触发报警。
- en: The sensors will be connected to the BeagleBone Black ADCs with a dedicated
    circuitry, while the alarms will be enabled with dedicated GPIO lines. Then a
    GSM module will be connected to our BeagleBone Black's serial port in order to
    send other alarm messages via SMS.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 传感器将通过专用电路连接到 BeagleBone Black 的 ADC，而报警器将通过专用 GPIO 引脚启用。然后，GSM 模块将连接到 BeagleBone
    Black 的串口，用于通过短信发送其他报警信息。
- en: Setting up the hardware
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置硬件
- en: 'As just stated, all devices are connected with the BeagleBone Black, which
    is the real core of the system, as shown in the following screenshot:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，所有设备都与 BeagleBone Black 连接，BeagleBone Black 是系统的核心，如下图所示：
- en: '![Setting up the hardware](img/B00255_01_01.jpg)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![设置硬件](img/B00255_01_01.jpg)'
- en: The data flow is from the sensors to the alarm actuators (LED, buzzer, and GSM
    module) and the user will be able to send commands to the system, or check the
    system status and the collected data, by using the system console.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 数据流从传感器流向报警执行器（LED、蜂鸣器和 GSM 模块），用户可以通过系统控制台发送命令或查看系统状态和采集到的数据。
- en: Connecting the gas sensors
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 连接气体传感器
- en: 'The gas sensors are used to monitor the environment and we can choose different
    kinds of such devices. I decided to use the ones shown in the following screenshot
    due to the fact they act as a variable resistor according to the gas concentration,
    so they can be easily read with a normal ADC:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 气体传感器用于监测环境，我们可以选择不同种类的设备。我决定使用以下截图中所示的传感器，因为它们根据气体浓度充当可变电阻，因此可以通过普通 ADC 轻松读取：
- en: '![Connecting the gas sensors](img/B00255_01_02.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![连接气体传感器](img/B00255_01_02.jpg)'
- en: In the prototype presented here, the gas sensors are actually four, but the
    ones named **MQ-2** (**smoke detector**), **MQ-4** (**methane detector**), and
    **MQ-7** (**LPG detector**) look very similar to each other (except the label
    on each sensor), so I reported only one of them in the preceding screenshot, while
    the carbon monoxide detector is the red device labeled with MQ-7.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里展示的原型中，气体传感器实际上有四个，但名为**MQ-2**（**烟雾探测器**）、**MQ-4**（**甲烷探测器**）和**MQ-7**（**液化石油气探测器**）的传感器看起来非常相似（除了每个传感器的标签），因此我只在前述截图中展示了其中一个，而一氧化碳探测器是带有
    MQ-7 标签的红色设备。
- en: Note
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'The devices can be purchased at the following links (or by surfing the Internet):'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这些设备可以通过以下链接购买（或在互联网上查找）：
- en: 'MQ-2: [http://www.cosino.io/product/mq-2-gas-sensor](http://www.cosino.io/product/mq-2-gas-sensor)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'MQ-2: [http://www.cosino.io/product/mq-2-gas-sensor](http://www.cosino.io/product/mq-2-gas-sensor)'
- en: 'MQ-4: [http://www.cosino.io/product/mq-4-gas-sensor](http://www.cosino.io/product/mq-4-gas-sensor)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'MQ-4: [http://www.cosino.io/product/mq-4-gas-sensor](http://www.cosino.io/product/mq-4-gas-sensor)'
- en: 'MQ-5: [http://www.cosino.io/product/mq-5-gas-sensor](http://www.cosino.io/product/mq-5-gas-sensor)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'MQ-5: [http://www.cosino.io/product/mq-5-gas-sensor](http://www.cosino.io/product/mq-5-gas-sensor)'
- en: 'MQ-7: [http://www.cosino.io/product/mq-7-gas-sensor](http://www.cosino.io/product/mq-7-gas-sensor)'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'MQ-7: [http://www.cosino.io/product/mq-7-gas-sensor](http://www.cosino.io/product/mq-7-gas-sensor)'
- en: 'The following are the URLs where we can get the datasheet for each GAS sensor:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们可以获取每个气体传感器说明书的URL：
- en: 'MQ-2: [http://www.seeedstudio.com/depot/datasheet/MQ-2.pdf](http://www.seeedstudio.com/depot/datasheet/MQ-2.pdf)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'MQ-2: [http://www.seeedstudio.com/depot/datasheet/MQ-2.pdf](http://www.seeedstudio.com/depot/datasheet/MQ-2.pdf)'
- en: 'MQ-4: [https://www.pololu.com/file/0J311/MQ4.pdf](https://www.pololu.com/file/0J311/MQ4.pdf)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'MQ-4: [https://www.pololu.com/file/0J311/MQ4.pdf](https://www.pololu.com/file/0J311/MQ4.pdf)'
- en: 'MQ-5: [http://www.dfrobot.com/image/data/SEN0130/MQ-5.pdf](http://www.dfrobot.com/image/data/SEN0130/MQ-5.pdf)'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'MQ-5: [http://www.dfrobot.com/image/data/SEN0130/MQ-5.pdf](http://www.dfrobot.com/image/data/SEN0130/MQ-5.pdf)'
- en: 'MQ-7: [https://www.parallax.com/sites/default/files/downloads/605-00007-MQ-7-Datasheet.pdf](https://www.parallax.com/sites/default/files/downloads/605-00007-MQ-7-Datasheet.pdf)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'MQ-7: [https://www.parallax.com/sites/default/files/downloads/605-00007-MQ-7-Datasheet.pdf](https://www.parallax.com/sites/default/files/downloads/605-00007-MQ-7-Datasheet.pdf)'
- en: Looking carefully at the datasheet of the gas sensors, we can see exactly how
    these sensors' class varies their internal resistance according to the gas concentration
    (in reality, it depends on environment humidity and temperature too; but for an
    indoor functioning, we can consider these values as constants). So, if we put
    it in series with a resistor and apply a constant voltage). We can get an output
    voltage that is proportional to the actual gas concentration.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 仔细查看气体传感器的说明书，我们可以看到这些传感器的类别如何根据气体浓度变化其内部电阻（实际上，它还取决于环境的湿度和温度；但对于室内使用，我们可以将这些值视为常数）。因此，如果我们将其与一个电阻串联并施加一个恒定电压，我们可以得到一个与实际气体浓度成正比的输出电压。
- en: The following diagram shows a possible schematics where the gas sensor is connected
    to **5V** power supply and the **RL** resistor is formed by two resistors (**R1**
    & **R2**) due to the fact we cannot put more than 1.8V at a BeagleBone Black's
    ADC pin. So, by choosing these two resistors in such a way that *R1 ≥ 2*R2*, we
    can be sure we have no more than *5.0V/3 ≈ 1.67V* at the ADC input pin on every
    possible functioning condition, even if the sensor's internal resistance is shorted.
    However, to be completely sure we can add a **Zener diode** (**Z**) with a reverse
    threshold on 1.8V (but I didn't use it on my prototype).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了一个可能的电路图，其中气体传感器连接到**5V**电源，**RL**电阻由两个电阻（**R1**和**R2**）组成，因为我们不能在BeagleBone
    Black的ADC引脚上施加超过1.8V的电压。因此，通过选择这两个电阻，使得*R1 ≥ 2*R2*，我们可以确保在任何可能的工作条件下，ADC输入引脚上的电压不超过*5.0V/3
    ≈ 1.67V*，即使传感器的内部电阻被短接。然而，为了完全确保安全，我们可以添加一个反向阈值为1.8V的**齐纳二极管**（**Z**），但我在我的原型中并没有使用它。
- en: 'The following diagram shows the circuitry I used to connect each sensor:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了我用于连接每个传感器的电路：
- en: '![Connecting the gas sensors](img/B00255_01_03.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![连接气体传感器](img/B00255_01_03.jpg)'
- en: Tip
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Note that the **GAS sensors** have six pins labeled in pairs as **A**, **B**,
    and **H**; while the **A** and **B** pair pins are shortened, the **H** labeled
    pairs must be connected at one end to the input voltage (5V in our case) and the
    other end to the GND (see the datasheet for further information).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，**气体传感器**有六个引脚，成对标记为**A**、**B**和**H**；其中**A**和**B**成对的引脚被短接，而标记为**H**的引脚一端必须连接到输入电压（在我们这里是5V），另一端连接到地（有关更多信息，请参阅说明书）。
- en: 'Another important issue regarding these sensors is the calibration we should
    perform before using them. This last adjustment is very important; as reported
    in the MQ-2 datasheet, we read the following recommendation:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 关于这些传感器的另一个重要问题是我们在使用它们之前应进行的校准。这个最后的调整非常重要；正如MQ-2的说明书中所报告的，我们读到以下建议：
- en: '*We recommend that you calibrate the detector for 1000 ppm **liquefied petroleum
    gas** (**LPG**), or 1000ppm **iso-butane** (**i-C**[**4**]**H**[**10**]) concentration
    in air and use value of **load resistance** that (**RL**) about 20K (5K to 47K).*'
  id: totrans-33
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*我们建议您将探测器校准为1000 ppm **液化石油气**（**LPG**）或1000 ppm **异丁烷**（**i-C**[**4**]**H**[**10**]）浓度的空气，并使用大约**负载电阻**（**RL**）为20K（5K至47K）的值。*'
- en: This step can be done by replacing resistors **R1** or **R2** with a **varistor**
    and then fine tuning its resistance. However, I decided to use normal resistors
    (*R1 = 15KΩ*, *R2 = 6.8KΩ* in such a way that *RL = R1 + R2 ≈ 20KΩ*, as suggested
    by the datasheet) and then implemented a little translation in software (see the
    following section), that is, we can translate raw data from the ADCs into a **ppm**
    (**part-per-million**) value in such a way the user can work with physic data.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这一步可以通过将电阻**R1**或**R2**替换为**可变电阻**，然后微调其电阻来完成。然而，我决定使用普通电阻（*R1 = 15KΩ*，*R2 =
    6.8KΩ*，使得 *RL = R1 + R2 ≈ 20KΩ*，如数据手册所示），然后在软件中实现了一些小的转换（见下节），即我们可以将 ADC 的原始数据转换为
    **ppm**（**百万分之一**）值，以便用户可以处理物理数据。
- en: 'This translation can be done using a *gain* and an *offset* value in the following
    formula for each sensor:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 该翻译可以通过以下公式中的 *增益* 和 *偏移* 值为每个传感器进行：
- en: '*ppm = raw * gain + offset*'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*ppm = raw * 增益 + 偏移*'
- en: 'During the calibration procedure, we just need to use two known points (*ppm1*
    and *ppm2*), read the corresponding raw data (*raw1* and *raw2*), and then apply
    the following formulas:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在校准过程中，我们只需要使用两个已知点（*ppm1* 和 *ppm2*），读取相应的原始数据（*raw1* 和 *raw2*），然后应用以下公式：
- en: '*gain = (ppm1 – ppm2) / (raw1 – raw2)*'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*增益 = (ppm1 – ppm2) / (raw1 – raw2)*'
- en: '*offset = ppm1 – raw1 * gain*'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*偏移 = ppm1 – raw1 * 增益*'
- en: Of course, we need four gain/offset couples, one per sensor (the calibration
    procedure is quite long!)
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们需要四组增益/偏移配对，每个传感器一组（校准过程相当长！）
- en: 'Once we have fixed the input circuits, we simply have to connect each **Vout**
    to the BeagleBone Black''s ADC input pins. Our board has 8 ADCs inputs, so we
    can use the following connections:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们修正了输入电路，我们只需要将每个**Vout**连接到 BeagleBone Black 的 ADC 输入引脚。我们的板子有 8 个 ADC 输入，因此我们可以使用以下连接：
- en: '| Pin | Gas sensor |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| 引脚 | 气体传感器 |'
- en: '| --- | --- |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| P9.39 - AIN0 | Vout @MQ-2 |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| P9.39 - AIN0 | Vout @MQ-2 |'
- en: '| P9.37 - AIN2 | Vout @MQ-4 |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| P9.37 - AIN2 | Vout @MQ-4 |'
- en: '| P9.35 - AIN6 | Vout @MQ-5 |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| P9.35 - AIN6 | Vout @MQ-5 |'
- en: '| P9.33 - AIN4 | Vout @MQ-7 |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| P9.33 - AIN4 | Vout @MQ-7 |'
- en: 'To enable them, we use the following command:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用它们，我们使用以下命令：
- en: '[PRE0]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'If everything works well, we should get the following kernel messages:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切正常，我们应该会看到以下内核信息：
- en: '[PRE1]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Then, the files `AIN0`, `AIN1`, …, `AIN7` should become available as follows:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，`AIN0`、`AIN1`、…、`AIN7` 文件应该会变得可用，如下所示：
- en: '[PRE2]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Note
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'These settings can be done using the `bin/load_firmware.sh` script in the book''s
    example code repository, as follows:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这些设置可以通过书中示例代码仓库中的`bin/load_firmware.sh`脚本来完成，如下所示：
- en: '[PRE3]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Then, we can read the input data by using the `cat` command:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以使用 `cat` 命令读取输入数据：
- en: '[PRE4]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Tip
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'Note that the ADC can also be read by using other files still into the **sysfs**
    filesystem. The following command, for instance, reads from AIN0 input pin:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，ADC 也可以通过其他文件在 **sysfs** 文件系统中读取。例如，以下命令从 AIN0 输入引脚读取：
- en: '[PRE5]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Connecting the alarm actuators
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 连接报警执行器
- en: Now, we have to connect the alarm actuators in such a way the user can have
    a visual and acoustic feedback of any possible dangerous gas concentration. Also,
    we have to connect the GSM module to a serial port to communicate with it.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要以一种方式连接报警执行器，使得用户可以通过视觉和听觉反馈任何可能的危险气体浓度。此外，我们还需要将 GSM 模块连接到串口以进行通信。
- en: LED and buzzer
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: LED 和蜂鸣器
- en: The LED and buzzer connections are very simple. The LEDs can be directly connected
    (with a resistor) with the BeagleBone Black's GPIO pins without problems, while
    the buzzer needs a little more work due to the fact that it needs a higher current
    than the LED to work. However, we can resolve the problem by using a transistor
    as shown in the following diagram to manage the buzzer with a higher current.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: LED 和蜂鸣器的连接非常简单。LED 可以直接（通过电阻）与 BeagleBone Black 的 GPIO 引脚连接，没有问题，而蜂鸣器则需要更多的工作，因为它需要比
    LED 更高的电流才能工作。然而，我们可以通过使用晶体管来解决这个问题，正如下图所示，通过晶体管以更高的电流管理蜂鸣器。
- en: Tip
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Note that the buzzer can't be a simple piezo without an internal oscillator,
    otherwise an external oscillator circuit or a **PWM** signal must be used!
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，蜂鸣器不能是没有内部振荡器的简单压电器，否则必须使用外部振荡器电路或 **PWM** 信号！
- en: '![LED and buzzer](img/B00255_01_04.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![LED 和蜂鸣器](img/B00255_01_04.jpg)'
- en: In my circuitry, I used an **R** (470Ω) resistor for the **LED** (**L**), an
    **R** (2KΩ), **Rd** (4.7KΩ) resistors for the buzzer, and a **BC546 transistor**
    (**T**). Note that, regarding the LEDs, an R = 100Ω resistor can result in a higher
    brightness, so you may change it according to the LED color to have different
    results.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的电路中，我为**LED**（**L**）使用了一个**R**（470Ω）电阻，为蜂鸣器使用了**R**（2KΩ）和**Rd**（4.7KΩ）电阻，并使用了一个**BC546晶体管**（**T**）。请注意，关于LED，R
    = 100Ω的电阻会导致更高的亮度，因此可以根据LED的颜色进行更改，以获得不同的效果。
- en: Note also that the resistor **Rd** in the buzzer circuitry is needed to pull-down
    the GPIO during the boot. In fact, during this stage it is set as input, and even
    in such configuration the current that flows out from the pin can turn on the
    buzzer!
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 另请注意，蜂鸣器电路中的电阻**Rd**用于在启动过程中将GPIO拉低。实际上，在此阶段它被设置为输入，即使在这种配置下，从引脚流出的电流也可能会启动蜂鸣器！
- en: 'The BeagleBone Black has a lot of GPIOs lines, so we can use the following
    connections:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: BeagleBone Black有很多GPIO线，因此我们可以使用以下连接：
- en: '| Pin | Actuator |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| 引脚 | 执行器 |'
- en: '| --- | --- |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| P8.9 - GPIO69 | R @LED |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| P8.9 - GPIO69 | R @LED |'
- en: '| P8.10 - GPIO68 | R @Buzzer |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| P8.10 - GPIO68 | R @蜂鸣器 |'
- en: 'Now, to test the connections, we can set up the **GPIO**s by exporting them
    and then setting these lines as outputs with the following commands:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，为了测试连接，我们可以通过导出GPIO并使用以下命令将这些线路设置为输出，以此来设置GPIO：
- en: '[PRE6]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that it will be a good idea to use blinking LEDs to do this job. However,
    for this first chapter I'm going to use normal GPIO lines, leaving this topic
    for the following chapters.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，使用闪烁的LED来执行此任务是个不错的主意。然而，在本章中，我将使用普通的GPIO线，留待后续章节再讨论这个话题。
- en: 'Now, to turn on and off both the LED and the buzzer, we simply write `1` or
    `0` into the proper files, as follows:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，要打开和关闭LED和蜂鸣器，我们只需将`1`或`0`写入相应的文件，如下所示：
- en: '[PRE7]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Note
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'These settings can be done by using the `bin/gpio_set.sh` script in the book''s
    example code repository, as follows:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这些设置可以通过使用本书示例代码库中的`bin/gpio_set.sh`脚本来完成，如下所示：
- en: '[PRE8]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: GSM module
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: GSM模块
- en: As stated in the introduction of this chapter, we wish to add a GSM module to
    be able to alert the user remotely too. In order to do this, we can connect this
    device with a normal serial port with TTL level signals. In this case, we have
    only to choose one of the serial ports available on our BeagleBone Black.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 如本章简介所述，我们希望添加一个GSM模块，以便能够远程提醒用户。为此，我们可以将此设备与TTL级信号的常规串口连接。在这种情况下，我们只需选择BeagleBone
    Black上的一个串口即可。
- en: 'The following screenshot shows the GSM module I decided to use:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了我决定使用的GSM模块：
- en: '![GSM module](img/B00255_01_05.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![GSM模块](img/B00255_01_05.jpg)'
- en: Note
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'The device can be purchased at the following link (or by surfing the Internet):'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 该设备可以通过以下链接购买（或通过网络搜索）：
- en: '[http://www.cosino.io/product/serial-gsmgprs-module](http://www.cosino.io/product/serial-gsmgprs-module)'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.cosino.io/product/serial-gsmgprs-module](http://www.cosino.io/product/serial-gsmgprs-module)'
- en: The user manual con be retrieved at [http://www.mikroe.com/downloads/get/1921/gsm_click_manual_v101c.pdf](http://www.mikroe.com/downloads/get/1921/gsm_click_manual_v101c.pdf).
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 用户手册可以通过[http://www.mikroe.com/downloads/get/1921/gsm_click_manual_v101c.pdf](http://www.mikroe.com/downloads/get/1921/gsm_click_manual_v101c.pdf)获取。
- en: 'The BeagleBone Black has four available serial ports. By deciding to use the
    device `/dev/ttyO1`, we can use the following connections:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: BeagleBone Black有四个可用的串口。通过选择使用设备`/dev/ttyO1`，我们可以使用以下连接：
- en: '| Pin | GSM module |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| 引脚 | GSM模块 |'
- en: '| --- | --- |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| P9.24 - TX-O1 | RX |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| P9.24 - TX-O1 | RX |'
- en: '| P9.26 - RX-O1 | TX |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| P9.26 - RX-O1 | TX |'
- en: '| P9.1 - GND | GND |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| P9.1 - GND | GND |'
- en: '| P9.3 - 3.3V | 3.3V |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| P9.3 - 3.3V | 3.3V |'
- en: '| P9.5 - 3.3V | 5V |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| P9.5 - 3.3V | 5V |'
- en: 'To enable the **serial port**, we have to use the following command:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用**串口**，我们必须使用以下命令：
- en: '[PRE9]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'If everything works well, we should get the following kernel messages:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切正常，我们应该会看到以下内核消息：
- en: '[PRE10]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The device file `/dev/ttyO1` should now become available.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 设备文件`/dev/ttyO1`现在应该可用。
- en: Note
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'These settings can be done by using the `bin/load_firmware.sh` script in the
    book''s example code repository, as follows:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这些设置可以通过使用本书示例代码库中的`bin/load_firmware.sh`脚本来完成，如下所示：
- en: '[PRE11]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'To verify that the new device is ready, we can use the `ls` command as follows:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 为了验证新设备是否已准备好，我们可以使用以下`ls`命令：
- en: '[PRE12]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Note
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The reader can take a look at the book *BeagleBone Essentials*, *Packt Publishing*,
    which was written by the author of this book, in order to have more information
    regarding how to activate and use the GPIO lines and the serial ports available
    on the system.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 读者可以参考本书作者所写的*BeagleBone Essentials*（*Packt Publishing*）一书，以获取更多关于如何激活和使用系统中可用的GPIO线和串口的信息。
- en: 'Now, we can test whether we actually talk with the modem by using the `screen`
    command as follows:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以通过使用`screen`命令来测试我们是否能够与调制解调器通信，具体命令如下：
- en: '[PRE13]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Note
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'The `screen` command can be installed by using the `aptitude` command as follows:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过使用`aptitude`命令来安装`screen`命令，具体命令如下：
- en: '[PRE14]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'After pressing the *ENTER* key, you should get a blank terminal where, if you
    enter the `ATZ` string, you should get the string `OK` as answer, as shown in
    the following code:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 按下*ENTER*键后，你应该会看到一个空白终端，在那里如果输入`ATZ`字符串，你应该会得到字符串`OK`作为回应，代码如下所示：
- en: '[PRE15]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: It's the GSM module that answers that it's okay and fully functional. To quit
    from the `screen` command, you have to enter the *CTRL* + *A* + *\* keys sequence
    and then answer *yes* by pressing the *y* key when the program asks you to `Really
    quit and kill all your windows [y/n]`.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 是GSM模块在回应表示其正常工作。要退出`screen`命令，你必须按下*CTRL* + *A* + *\*键组合，然后当程序提示你`Really quit
    and kill all your windows [y/n]`时，按*y*键确认。
- en: The final picture
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 最终图像
- en: 'Well, now we have to put it all together! The following image shows the prototype
    I made to implement this project and to test the software:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，现在我们需要将所有内容整合在一起！下面的图片展示了我制作的原型，用来实现这个项目并测试软件：
- en: '![The final picture](img/B00255_01_06.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![最终图像](img/B00255_01_06.jpg)'
- en: Note that we need an external power supplier due to the fact that the external
    circuitry (and especially the GSM module) needs the 5V power supply.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们需要外部电源供应，因为外部电路（尤其是GSM模块）需要5V电源。
- en: Setting up the software
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置软件
- en: 'Now, it''s time to think about the software needed to implement the desired
    functioning, that is, checking the gas concentrations, logging them, and eventually
    activating the alarms. We need the following:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候思考实现所需功能的软件了，即检查气体浓度、记录数据，并最终激活警报。我们需要以下内容：
- en: A periodic procedure (`read_sensors.php`) that periodically scans all the sensors
    and then logs their data into a database.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个周期性程序（`read_sensors.php`），定期扫描所有传感器并将其数据记录到数据库中。
- en: A periodic procedure (`monitor.php`) that reads the sensors' data, checks them
    against preset thresholds, and then sets some internal status.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个周期性程序（`monitor.php`），读取传感器的数据，将其与预设的阈值进行比较，然后设置一些内部状态。
- en: A periodic procedure (`write_actuators.php`) that enables the alarms according
    to the previously saved status.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个周期性程序（`write_actuators.php`），根据之前保存的状态启用警报。
- en: 'The following diagram shows the situation:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表展示了这一情况：
- en: '![Setting up the software](img/B00255_01_07.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![设置软件](img/B00255_01_07.jpg)'
- en: The core of the system is the database, where we store both the data we wish
    to log and the system's status. In this manner, all periodic functions can be
    realized as separate tasks that talk to each other by using the database itself.
    Also, we can control all the tasks from the system console by just altering the
    `config` table at runtime.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 系统的核心是数据库，我们将所有希望记录的数据以及系统状态存储在其中。这样，所有的周期性功能可以作为独立任务实现，它们通过数据库本身进行交互。同时，我们可以通过在运行时修改`config`表来控制所有任务。
- en: I used **MySQL** to implement the database system, and the preceding configuration
    can be created by using the `my_init.sh` script, where we define the proper tables.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用**MySQL**实现了数据库系统，之前的配置可以通过使用`my_init.sh`脚本创建，在其中我们定义了适当的表格。
- en: Tip
  id: totrans-134
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'The MySQL daemon can be installed by using the `aptitude` command as follows:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过使用`aptitude`命令来安装MySQL守护进程，具体命令如下：
- en: '[PRE16]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Here is a snippet of the script:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是脚本的片段：
- en: '[PRE17]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Note
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The `my_init.sh` script is stored in the `chapter_01/my_init.sh` file in the
    book's example code repository.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '`my_init.sh`脚本存储在本书示例代码库中的`chapter_01/my_init.sh`文件中。'
- en: The reader should notice that we define a `status` table with the `MEMORY` storage
    engine since we don't need to preserve it at reboot but need a good performance
    in accessing it, while the `config` table and the per-sensor logging tables (`MQ2_log`,
    `MQ4_log`, `MQ5_log`, and `MQ7_log`) are defined as normal tables since we need
    to save these data even during a complete restart. Note that we defined one table
    per variable in order to easily get access to the logged data; however, nothing
    changes, even if we decide to keep the logged data into a global logging table.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 读者应该注意，我们定义了一个`status`表，使用`MEMORY`存储引擎，因为我们不需要在重启时保留它，但需要良好的访问性能，而`config`表和每个传感器的日志表（`MQ2_log`、`MQ4_log`、`MQ5_log`和`MQ7_log`）则定义为普通表，因为我们需要在完全重启时仍然保存这些数据。请注意，我们为每个变量定义了一个表，以便轻松访问日志数据；然而，即使我们决定将日志数据保存在一个全局日志表中，也不会改变什么。
- en: Note also that during the database initialization, we can define some default
    settings by simply recording these values by using an `INSERT` command. For the
    `status` table, we just need the `alarm` variable to be set to `off`, while into
    the `config` table, we can set up the minimum delay in seconds (`sms_delay_s`)
    to wait before resending a new SMS alarm, the gain/offset translation couple variables
    (`mq2_gain`/`mq2_off` and friends), and the per-sensor threshold variables (`mq2_th_ppm`
    and friends) to be used to activate the alarms.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 还需要注意的是，在数据库初始化过程中，我们可以通过简单地使用`INSERT`命令记录这些值来定义一些默认设置。对于`status`表，我们只需要将`alarm`变量设置为`off`，而在`config`表中，我们可以设置等待重新发送新的短信报警前的最小延迟时间（秒）（`sms_delay_s`），增益/偏移量转换变量（`mq2_gain`/`mq2_off`等），以及每个传感器的阈值变量（`mq2_th_ppm`等），这些变量用于触发报警。
- en: Managing the ADCs
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理ADC
- en: 'Now, to get data from the **ADC** and save them into the database, we have
    to write a periodic task. This is quite easy and the following code snippet shows
    a PHP implementation of the main function of the file `read_sensors.php`, which
    does this:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，要从**ADC**获取数据并将其保存到数据库中，我们需要编写一个定期任务。这非常简单，以下代码片段展示了文件`read_sensors.php`的主要功能实现，该功能完成此操作：
- en: '[PRE18]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Note
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The complete script is stored in the `chapter_01/read_sensors.php` file in the
    book's example code repository.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的脚本存储在本书示例代码仓库中的`chapter_01/read_sensors.php`文件中。
- en: The function is quite simple. It starts the main loop to periodically read the
    ADC data, get the *gain* and *offset* conversion values for the current variable
    needed to convert it into the corresponding *ppm* number, then alters the current
    `status` variables, and adds a new value into the logging table of the read sensor.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数非常简单。它启动主循环，定期读取ADC数据，获取当前变量所需的*增益*和*偏移量*转换值，将其转换为相应的*ppm*值，然后修改当前的`status`变量，并将新值添加到读取传感器的日志表中。
- en: 'If we execute the script enabling all debugging command-line options, we get:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们执行脚本并启用所有调试命令行选项，我们将获得：
- en: '[PRE19]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Tip
  id: totrans-151
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Note that only the first sensor has been (more or less) calibrated!
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，只有第一个传感器已经（或多或少）被校准！
- en: The process can be stopped as usual with the *CTRL* + *C* sequence.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 该过程可以像往常一样通过*CTRL* + *C*组合键停止。
- en: 'Now, we can read the system status (in this case, the last read sensors datum)
    by using the `my_dump.sh` script, as follows:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以通过使用`my_dump.sh`脚本来读取系统状态（在这种情况下，最后读取的传感器数据），方法如下：
- en: '[PRE20]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Note
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The `my_dump.sh` script is stored in the `chapter_01/my_dump.sh` file in the
    book's example code repository.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '`my_dump.sh`脚本存储在本书示例代码仓库中的`chapter_01/my_dump.sh`文件中。'
- en: 'The same script can be used to dump a logging table too. For instance, if we
    wish to see the MQ-2 logged data, we can use the following command:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 同一个脚本也可以用于转储日志表。例如，如果我们希望查看MQ-2的日志数据，可以使用以下命令：
- en: '[PRE21]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Managing the actuators
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理执行器
- en: When a sensor detects a dangerous gas concentration, the `alarm` status variable
    is set to *on* state. Therefore, when this happens, we have to turn both the LED
    and the buzzer on, and we must send an SMS message to the user's predefined number.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 当传感器检测到危险的气体浓度时，`alarm`状态变量将被设置为*开启*状态。因此，当发生这种情况时，我们必须同时开启LED和蜂鸣器，并且必须向用户预定义的号码发送短信。
- en: 'In order to do these actions, we have to properly set up the GPIO lines that
    manage the LED and the buzzer as shown previously, and then we have to talk with
    the **GSM** module through the serial port to send the SMS message. To do this
    last step, we have to to install the `gsm-utils` package where we can find the
    `gsmsendsms` command, which is used to actually send the SMS. In order to install
    the package, we use the following command:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行这些操作，我们必须像之前展示的那样正确设置管理LED和蜂鸣器的GPIO线，并通过串口与**GSM**模块通信以发送短信。为了完成最后一步，我们需要安装`gsm-utils`软件包，在其中可以找到`gsmsendsms`命令，用于实际发送短信。要安装该软件包，可以使用以下命令：
- en: '[PRE22]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Then, after placing a functioning SIM into the module, we can verify to be
    able to talk with the GSM module with the `gsmctl` command, as shown in the following
    code:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在将可用的SIM卡放入模块后，我们可以验证通过以下代码与GSM模块通信：
- en: '[PRE23]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Then, we can verify the current PIN status by using the following command:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以使用以下命令验证当前PIN状态：
- en: '[PRE24]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The preceding message shows us that the GSM module is correctly configured
    and the SIM in it is ready to operate; however, the SIM must be enabled by inserting
    the proper PIN number if we get the following message:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 上述消息显示了GSM模块已正确配置，并且其中的SIM卡已准备好运行；然而，如果我们收到以下消息，则必须通过插入正确的PIN码来启用SIM卡：
- en: '[PRE25]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'In this case, we must use the following command:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们必须使用以下命令：
- en: '[PRE26]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: In the preceding command, `NNNN` is the PIN number of your SIM. If the command
    hangs with no output at all, it means that the connection is wrong.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述命令中，`NNNN`是你的SIM卡的PIN码。如果命令完全没有输出而挂起，意味着连接有问题。
- en: 'Now that we''ve checked the connection and the SIM is enabled, we can start
    to send SMS messages by using the following command:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经检查了连接并且SIM卡已启用，我们可以通过以下命令开始发送短信：
- en: '[PRE27]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: In the preceding command, the `NNNNNNNNNNNN` string is the number where the
    SMS must be sent.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述命令中，`NNNNNNNNNNNN`字符串是必须发送短信的号码。
- en: Tip
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'If the module answers is as follows it means that **SMS Service Centre Address**
    (**SCA**); which is the phone number of the centre that is accepting SMS for delivery
    is not set correctly in your phone:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 如果模块的回答如下，意味着**短信服务中心地址**（**SCA**）即接受短信以进行投递的中心电话号码未正确设置在你的手机中：
- en: '[PRE28]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'In this case, you should ask to your GSM operator and then try the following
    command:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，你应该向你的GSM运营商询问，然后尝试以下命令：
- en: '[PRE29]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: In the preceding command, the `SSSSSSSSSSSS` string is the number of your centre.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述命令中，`SSSSSSSSSSSS`字符串是你的服务中心号码。
- en: 'Okay, now we have all the needed information to control our actuators. A possible
    implementation of main function of the managing task is as follows:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经获得了所有控制执行器所需的信息。管理任务的主要功能可能的实现如下：
- en: '[PRE30]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Note
  id: totrans-184
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The complete script is stored in the `chapter_01/write_actuators.php` file in
    the book's example code repository.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的脚本存储在本书示例代码仓库中的`chapter_01/write_actuators.php`文件中。
- en: Again, the function is really simple—we simply have to read the current `alarm`
    variable status from the database and then set up the actuators according to it.
    Note that a special job must be done for the SMS management; in fact, the system
    must send one SMS at time and only during the *off-to-on* transition and not before
    `sms_delay` seconds. To do the trick, we use the `old_alarm` and `sms_time` variables
    to save the last loop status.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，这个函数非常简单——我们只需从数据库中读取当前`alarm`变量的状态，然后根据它设置执行器。请注意，必须为短信管理做特殊处理；事实上，系统必须每次只发送一条短信，并且仅在*从关到开*的转换中，并且必须在`sms_delay`秒后才能发送。为了实现这一点，我们使用`old_alarm`和`sms_time`变量来保存上次循环的状态。
- en: 'To test the code, we can control the `alarm` variable by using the `my_set.sh`
    command as follows:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 要测试代码，我们可以使用以下命令通过`my_set.sh`命令控制`alarm`变量：
- en: '[PRE31]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Note
  id: totrans-189
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The script is stored in the `chapter_01/my_set.sh` file in the book's example
    code repository.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本存储在本书示例代码仓库中的`chapter_01/my_set.sh`文件中。
- en: 'So, let''s start the script with the command:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们使用以下命令启动脚本：
- en: '[PRE32]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'On another terminal, we can change the `alarm` variable, as already stated,
    by using the following command:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 在另一个终端上，我们可以通过以下命令更改`alarm`变量，正如已经提到的那样：
- en: '[PRE33]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'After this we notice that the script does its job:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们注意到脚本正在正常工作：
- en: '[PRE34]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Regarding how to send an SMS message in PHP, I simply used the following code:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 关于如何在PHP中发送短信消息，我只是简单地使用了以下代码：
- en: '[PRE35]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Basically, here we use the `system()` function to call the `gsmsendsms` command.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，在这里我们使用`system()`函数调用`gsmsendsms`命令。
- en: Note
  id: totrans-200
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You may note that `gsmsendsms` takes a while to send the SMS. It's normal.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会注意到，`gsmsendsms`发送短信需要一些时间。这是正常现象。
- en: Controlling the environment
  id: totrans-202
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 控制环境
- en: Now, we only need the glue between the sensors and actuators managing tasks,
    that is, a periodic function that according to the user inputs periodically checks
    whether the alarms must be activated according to the information read, or not.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们只需要传感器和执行器之间的粘合剂，即一个周期性函数，根据用户输入定期检查是否根据读取的信息需要激活报警器。
- en: 'A possible implementation of the main function of the `monitor.php` script
    is as follows:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '`monitor.php`脚本主函数的可能实现如下：'
- en: '[PRE36]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Note
  id: totrans-206
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The complete script is stored in the `chapter_01/monitor.php` file in the book's
    example code repository.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 完整脚本存储在书籍示例代码库中的`chapter_01/monitor.php`文件中。
- en: The function starts the `main` loop where, after getting the sensors' thresholds,
    it simply gets the last sensor's values and sets up the `alarm` variable accordingly.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数启动了`main`循环，在获取传感器阈值后，它仅获取最后一个传感器的值，并相应地设置`alarm`变量。
- en: 'Again, we can change the gas concentration thresholds by using the `my_set.sh`
    command as follows:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们可以通过使用`my_set.sh`命令来更改气体浓度阈值，具体如下：
- en: '[PRE37]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'We can test the script by executing it in the same manner as the previous two,
    as follows:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过以下方式以与之前两次相同的方式执行脚本进行测试：
- en: '[PRE38]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'To stop the test, just use the *CTRL* + *C* sequence. You should get an output
    as follows:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 要停止测试，只需使用*CTRL* + *C*组合键。你应该能得到如下输出：
- en: '[PRE39]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Final test
  id: totrans-215
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最终测试
- en: Once everything has been connected and the software is ready, it's time to do
    a little test of our new system. The demonstration can be done by using a lighter.
    In fact, our system is really sensitive to the gas inside the lighter!
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦所有设备都连接好并且软件准备就绪，就可以对我们的新系统进行一个小测试。这个演示可以通过使用打火机来完成。事实上，我们的系统对打火机中的气体非常敏感！
- en: 'First of all, we have to check the system configuration:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要检查系统配置：
- en: '[PRE40]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Tip
  id: totrans-219
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Note that I used a very weak calibration setting; however, these are okay for
    a demo.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我使用了一个非常弱的校准设置；然而，这些设置适用于演示。
- en: 'Then, we can take a look at the system''s current status:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以查看系统的当前状态：
- en: '[PRE41]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Then, we can do all hardware settings at once by using the `chapter_01/SYSINIT.sh`
    script in the book''s example code repository as follows:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以通过使用`chapter_01/SYSINIT.sh`脚本一次性进行所有硬件设置，脚本可以在书中的示例代码库中找到，具体如下：
- en: '[PRE42]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Okay, now let''s start all the required process daemons:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，现在让我们启动所有必需的进程守护程序：
- en: '[PRE43]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Tip
  id: totrans-227
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'Note that all the daemons are running in background in this way; however, the
    debugging messages are enabled and they can be viewed into the system log with
    the following command:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，所有守护程序都在后台运行；然而，调试消息已启用，可以通过以下命令在系统日志中查看：
- en: '[PRE44]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Now, we have to approach the lighter to the sensors and press the button on
    the lighter in order to allow the sensor to detect the gas. After a while, the
    alarms should be turned on, and looking at the system status, we should get the
    following:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要将打火机靠近传感器，并按下打火机上的按钮，使传感器能够检测到气体。一段时间后，报警器应该会启动，查看系统状态时，我们应该能看到以下内容：
- en: '[PRE45]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Also, if we have set up a phone number, we should receive an SMS on the phone!
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果我们已设置了电话号码，我们应该会收到一条短信！
- en: 'As last step, let''s display the data logged by plotting them. We can use the
    following command to extract the data from the database:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步，让我们通过绘制图表来显示记录的数据。我们可以使用以下命令从数据库中提取数据：
- en: '[PRE46]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'In the `mq2.log` file, we should find something like the following:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 在`mq2.log`文件中，我们应该能找到如下内容：
- en: '[PRE47]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Now, using the next command, we''re going to create a PNG image holding a plot
    of our data:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，使用下一个命令，我们将创建一个包含我们数据图表的PNG图像：
- en: '[PRE48]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Tip
  id: totrans-239
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'Note that in order to execute this command, you need the `gnuplot` command,
    which can be installed by using the following command:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，要执行此命令，你需要安装`gnuplot`命令，安装方法如下：
- en: '[PRE49]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Also, both the `mq2.log` and `mq2.plot` files are need. The former is created
    by the preceding command line, while the latter can be found in the `chapter_01/mq2.plot`
    file in the book's example code repository. It holds the `gnuplot` instructions
    to effectively draw the plot.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还需要`mq2.log`和`mq2.plot`文件。前者由前述命令行创建，后者可以在书籍示例代码库中的`chapter_01/mq2.plot`文件中找到。它包含了有效绘制图表的`gnuplot`指令。
- en: 'The plot of the MQ-2 data of my test is shown in the following screenshot:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 我测试的MQ-2数据的图表如下图所示：
- en: '![Final test](img/B00255_01_08.jpg)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![最终测试](img/B00255_01_08.jpg)'
- en: As you can see, the sensors are very sensitive to the gas; as soon as I opened
    my lighter and the gas reached them, the ppm concentration went to high values
    very quickly.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，传感器对气体非常敏感；当我打开打火机并且气体接触到它们时，ppm浓度迅速上升到很高的值。
- en: 'To stop the test, we can use the following commands:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 要停止测试，我们可以使用以下命令：
- en: '[PRE50]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Summary
  id: totrans-248
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we discovered how to manage the ADCs, the GPIOs lines, a GSM
    module thought, and a serial port. We also saw how to implement a simple monitoring
    program that can communicate (through a database server) with a sensors reader
    task to collect input data, and with an actuators manager to alert the user in
    case of emergency.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们学习了如何管理ADC、GPIO线、GSM模块和串口。我们还了解了如何实现一个简单的监控程序，该程序可以通过数据库服务器与传感器读取任务进行通信，收集输入数据，并与执行器管理器配合，在紧急情况下提醒用户。
- en: 'In the next chapter, we''ll see how to manage an **ultrasonic distance** sensor
    to implement a parking assistant that can communicate to the driver, the distance
    between the car and the garage''s wall. However, the really interesting part of
    the next chapter is about how to manage the distance sensor in two different setups:
    one with all the peripherals near the BeagleBone Black, and another with a remote
    connection of the sensor through a USB cable.'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看到如何管理**超声波距离**传感器，以实现一个停车辅助系统，该系统能够向驾驶员传达汽车与车库墙壁之间的距离。然而，下一章真正有趣的部分是关于如何在两种不同的设置中管理距离传感器：一种是所有外设都靠近BeagleBone
    Black，另一种是通过USB电缆远程连接传感器。
