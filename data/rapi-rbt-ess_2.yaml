- en: Chapter 2. Building the Biped
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章. 构建双足机器人
- en: 'Now that you''ve got your Raspberry Pi 2 Model B all configured and ready to
    go, you''ll need to add some hardware to control and interface. In this chapter,
    you''ll learn:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经配置好树莓派2 Model B并准备就绪，你需要添加一些硬件来进行控制和接口。在本章中，你将学习：
- en: How to build a basic 10 **Degrees of Freedom** (**DOF**) biped
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何构建一个基本的10 **自由度**（**DOF**）双足机器人
- en: How to use a servo motor controller connected to the USB port of the Raspberry
    Pi to control the servos to make your robot move
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用连接到树莓派USB端口的伺服电机控制器来控制伺服电机，从而使机器人运动
- en: Building robots that can walk
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建可以行走的机器人
- en: 'There are several choices when considering how to create a mobile robot. One
    of the more interesting choices is a robot that can walk. This normally comes
    in three versions: a biped robot with two legs, a biped robot with four legs,
    and a hexapod robot with six legs. While each offers an interesting and different
    set of possibilities, in this chapter, you''ll build a basic, 10 DOF biped.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在考虑如何创建一个移动机器人时，有几种选择。比较有趣的选择之一是能够行走的机器人。通常有三种版本：一种是具有两条腿的双足机器人，另一种是具有四条腿的双足机器人，还有一种是具有六条腿的六足机器人。虽然每种选择都提供了有趣而不同的可能性，但在本章中，你将构建一个基本的10自由度双足机器人。
- en: You'll be using a total of 10 servos for your project, as each leg has 5 points
    that can move, or 5 degrees of freedom (DOF). As servos are the most critical
    component of this project, it is perhaps useful to go through a tutorial on servos
    and learn how to control them.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 你将为你的项目使用共计10个伺服电机，因为每条腿有5个活动点，或者说是5个自由度（DOF）。由于伺服电机是这个项目中最关键的组件，因此，可能有必要通过一个伺服电机的教程来学习如何控制它们。
- en: How servo motors work
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 伺服电机的工作原理
- en: Servo motors are somewhat similar to DC motors. However, there is an important
    difference. While DC motors are generally designed to move in a continuous way—rotating
    360 degrees at a given speed—servos are generally designed to move to a limited
    set of angles. In other words, in the DC motor world, you generally want your
    motors to spin with a continuous rotation speed that you control. In the servo
    world, you want your motor to move to a specific position that you control.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 伺服电机与直流电机有些相似。然而，它们之间有一个重要的区别。直流电机通常设计为以连续的方式旋转——以给定的速度旋转360度——而伺服电机通常设计为移动到有限的角度范围。换句话说，在直流电机的世界中，你通常希望电机以你控制的连续旋转速度旋转。在伺服电机的世界里，你希望电机移动到你控制的特定位置。
- en: 'This is done by sending a **Pulse-Width-Modulated** (**PWM**) signal to the
    control connector of the servo. The length of this pulse will control the angle
    of the servo like this:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这是通过向伺服电机的控制连接器发送**脉宽调制**（**PWM**）信号来完成的。这个脉冲的长度将控制伺服电机的角度，如下所示：
- en: '![How servo motors work](img/B04591_02_01.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![伺服电机的工作原理](img/B04591_02_01.jpg)'
- en: These pulses are sent out with a repetition rate of 60 Hz. You can position
    the servo to any angle by setting the correct control pulse.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这些脉冲以60 Hz的重复率发送。通过设置正确的控制脉冲，你可以将伺服电机定位到任何角度。
- en: Building the biped platform
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建双足平台
- en: There are several approaches to building your biped platform. Perhaps the most
    simple is to purchase a set of basic parts; this is the example you'll see in
    this chapter. There are several kit possibilities out there, including one at
    [http://www.robotshop.com/en/lynxmotion-biped-robot-scout-bps-ns-servos.html](http://www.robotshop.com/en/lynxmotion-biped-robot-scout-bps-ns-servos.html),
    a kit like the one offered at [http://www.ebay.com/itm/10-DOF-Biped-Robot-Mechanical-Leg-Robot-Servo-Motor-Bracket-NO-Servo-Motor-good-/131162548695?pt=LH_DefaultDomain_0&hash=item1e89e5a9d7](http://www.ebay.com/itm/10-DOF-Biped-Robot-Mechanical-Leg-Robot-Servo-Motor-Bracket-NO-Servo-Motor-good-/131162548695?pt=LH_DefaultDomain_0&hash=item1e89e5a9d7),
    or the one at [http://www.amazon.com/gp/product/B00DR7GA4I/ref=oh_aui_detailpage_o04_s00?ie=UTF8&psc=1](http://www.amazon.com/gp/product/B00DR7GA4I/ref=oh_aui_detailpage_o04_s00?ie=UTF8&psc=1).
    This is the specific kit we'll use in this chapter.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 构建双足平台有几种方法。也许最简单的方法是购买一套基本的零件；这是你在本章中将看到的示例。市面上有几个套件选择，其中包括在[http://www.robotshop.com/en/lynxmotion-biped-robot-scout-bps-ns-servos.html](http://www.robotshop.com/en/lynxmotion-biped-robot-scout-bps-ns-servos.html)上提供的套件、类似于[http://www.ebay.com/itm/10-DOF-Biped-Robot-Mechanical-Leg-Robot-Servo-Motor-Bracket-NO-Servo-Motor-good-/131162548695?pt=LH_DefaultDomain_0&hash=item1e89e5a9d7](http://www.ebay.com/itm/10-DOF-Biped-Robot-Mechanical-Leg-Robot-Servo-Motor-Bracket-NO-Servo-Motor-good-/131162548695?pt=LH_DefaultDomain_0&hash=item1e89e5a9d7)上提供的套件，或者[http://www.amazon.com/gp/product/B00DR7GA4I/ref=oh_aui_detailpage_o04_s00?ie=UTF8&psc=1](http://www.amazon.com/gp/product/B00DR7GA4I/ref=oh_aui_detailpage_o04_s00?ie=UTF8&psc=1)上的套件。这就是我们将在本章中使用的具体套件。
- en: In the end, your biped will work more like the legs of a Tyrannosaurus Rex of
    a human, but this will make it easier to program, and it will power down more
    gracefully. It will also be a bit more stable.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，您的双足机器人将更像人类或霸王龙的腿部，但这将使编程更容易，且关闭时更加平稳。它也会更加稳定。
- en: You'll also need 10 standard size servos. There are several possible choices,
    but **Hitec** servos are relatively inexpensive servos and you can get them at
    most hobby shops and online electronics retailers. One of the important steps
    in this process is to select the model of the servo. Servos come in different
    model numbers, primarily based on the amount of torque they can generate.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 您还需要10个标准尺寸的舵机。可以选择多个品牌，但**Hitec**舵机相对便宜，您可以在大多数模型店和在线电子零售商那里购买。这个过程中的一个重要步骤是选择舵机的型号。舵机有不同的型号，主要根据它们能产生的扭矩大小。
- en: Torque is the force that the servo can exert to move the part connected to it.
    In this case, your servos will need to lift and move the weight associated with
    your biped, so you'll need a servo with enough torque to do this. However, there
    are different torque needs for your biped robot. The angle joints will not lift
    the entire leg, so they can be servos with a lower servo rating, for example,
    the HS-422 servos. For the knee servo, you'll need a more powerful servo. In this
    case, I suggest that you use model HS-645MGHB servos. The hip joint that lifts
    the leg is where you will need the most torque to be able to lift the leg. Here,
    too, I suggest that you use the model HS-645MG servos. You can also just use 10
    HS-645MG servos for all the servos, but they are more expensive, so using different
    servos will save you some money.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 扭矩是舵机能够施加的力量，用来移动与其连接的部件。在本案例中，您的舵机需要提起并移动与双足机器人相关的重量，因此您需要选择具有足够扭矩的舵机。不过，双足机器人对于不同的部位有不同的扭矩需求。角关节不会抬起整个腿部，因此它们可以使用扭矩较小的舵机，例如HS-422舵机。对于膝关节舵机，您将需要一个更强大的舵机。在这种情况下，我建议您使用HS-645MGHB舵机。抬起腿部的髋关节是需要最多扭矩的地方，因此您也可以使用HS-645MG舵机。您也可以为所有舵机都使用HS-645MG舵机，但它们价格较高，因此使用不同型号的舵机可以节省一些资金。
- en: 'One final piece that you''ll need is some metal servo horns. These servo horns
    are optional, but they will make your biped robot much more solid than the plastic
    servo horns that normally come with the servos. Here is a picture of one of these
    horns:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个需要的零件是一些金属舵机舵盘。这些舵盘是可选的，但它们会让您的双足机器人比通常附带的塑料舵盘更加牢固。以下是其中一个舵盘的图片：
- en: '![Building the biped platform](img/B04591_02_02.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![构建双足平台](img/B04591_02_02.jpg)'
- en: 'Here are the steps to assemble the biped:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是组装双足机器人的步骤：
- en: Attach the first ankle servo to the foot. To do this, find the foot plate, as
    shown here:![Building the biped platform](img/B04591_02_03.jpg)
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将第一个脚踝舵机安装到脚部。为此，找到脚板，如下所示：![构建双足平台](img/B04591_02_03.jpg)
- en: 'This is the bottom of the foot. Notice the beveled holes-you''ll be using bevel-headed
    bolts to connect a servo bracket to the foot plate, as shown here:'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是脚底部。注意这些斜角孔——您将使用斜头螺栓将舵机支架连接到脚板上，如下所示：
- en: '![Building the biped platform](img/B04591_02_04.jpg)'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![构建双足平台](img/B04591_02_04.jpg)'
- en: Make sure that the bottom of the foot is flat. Before you mount the servo to
    this bracket, you'll first connect a U-shaped bracket to this servo bracket using
    one of the bearings in the kit, like this:![Building the biped platform](img/B04591_02_05.jpg)
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保脚底平整。在将舵机安装到这个支架之前，您需要先使用套件中的一个轴承将一个U形支架连接到舵机支架上，如下所示：![构建双足平台](img/B04591_02_05.jpg)
- en: Finally, mount one of the servos in the bracket and connect the U-shaped bracket
    to the servo horn, as shown here:![Building the biped platform](img/B04591_02_06.jpg)
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，将其中一个舵机安装到支架中，并将U形支架连接到舵机的舵盘上，如下所示：![构建双足平台](img/B04591_02_06.jpg)
- en: This first servo should allow your biped to move the foot, tipping it side to
    side. Now, add the second ankle servo to the foot. This will allow your biped
    to tip the ankle front to back. To do this, connect a servo bracket to the assembly
    you just created, and then add a U bracket to this assembly, like this:![Building
    the biped platform](img/B04591_02_07.jpg)
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一个舵机应该允许您的双足机器人移动脚部，使其左右倾斜。现在，安装第二个脚踝舵机到脚部。这将使您的双足机器人能够使脚踝前后倾斜。为此，将一个舵机支架连接到您刚刚创建的装配件上，然后将一个U形支架添加到这个装配件中，如下所示：![构建双足平台](img/B04591_02_07.jpg)
- en: Now, add the bracket to this assembly, like this:![Building the biped platform](img/B04591_02_08.jpg)
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，添加支架到这个组件，如下所示：![构建双足平台](img/B04591_02_08.jpg)
- en: Now, you can add the knee servo to your biped. However, you'll first want to
    connect the upper leg, the longest U bracket, to a servo bracket, like this:![Building
    the biped platform](img/B04591_02_09.jpg)
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你可以将膝部舵机添加到你的双足机器人上。不过，首先你需要将上腿，最长的U型支架，连接到舵机支架上，如下所示：![构建双足平台](img/B04591_02_09.jpg)
- en: Now, connect this assembly, using another bearing, to the lower leg that you
    have already built, like this:![Building the biped platform](img/B04591_02_10.jpg)
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，使用另一个轴承将这个组件连接到你已经组装好的下腿上，如下所示：![构建双足平台](img/B04591_02_10.jpg)
- en: Now, you can mount the knee servo in this place. If you have different servos,
    use a more powerful servo in the knee joint. Here is a picture:![Building the
    biped platform](img/B04591_02_11.jpg)
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你可以将膝部舵机安装在此位置。如果你使用的是不同的舵机，可以在膝关节处使用更强大的舵机。这里是图片：![构建双足平台](img/B04591_02_11.jpg)
- en: The last step is to put the hip together. First, you'll put the servo that turns
    the leg, connecting it to a servo bracket, as shown here:![Building the biped
    platform](img/B04591_02_12.jpg)
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后一步是将髋部组装好。首先，你需要将转动腿部的舵机与舵机支架连接，如下图所示：![构建双足平台](img/B04591_02_12.jpg)
- en: Now, connect this servo bracket to the long U bracket, and mount the servo that
    lifts the entire leg. This is another place; if you are using different servos,
    you'll want to use a servo with a significant torque. The entire assembly should
    look like this:![Building the biped platform](img/B04591_02_13.jpg)
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，将这个舵机支架连接到长U型支架，并安装能够抬起整个腿部的舵机。这是另一个位置；如果你使用的是不同的舵机，需要使用一个具有较大扭矩的舵机。整个组件应如下所示：![构建双足平台](img/B04591_02_13.jpg)
- en: Put the other leg together. It will be a mirror image of the first leg.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将另一条腿组装好，它将成为第一条腿的镜像。
- en: Now, you'll connect both legs to the hip by first connecting a servo bracket
    connector to the hip piece, in two places, like this:![Building the biped platform](img/B04591_02_14.jpg)
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你需要通过首先将舵机支架连接器连接到髋部件的两个位置，将两条腿连接到髋部，如下所示：![构建双足平台](img/B04591_02_14.jpg)
- en: Finally, mount the top of the leg servos into the brackets, like this:![Building
    the biped platform](img/B04591_02_15.jpg)
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，将腿部舵机的顶部安装到支架中，如下所示：![构建双足平台](img/B04591_02_15.jpg)
- en: Your biped is now ready to walk. Now that you have the basic hardware assembled,
    you can turn your attention to the electronics.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你的双足机器人已经准备好行走。既然你已经组装好了基本硬件，可以将注意力转向电子部分。
- en: Using a servo controller to control the servos
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用舵机控制器来控制舵机
- en: 'To make your biped walk, you first need to connect the servo motor controller
    to the servos. The servo controller you are going to use for this project is a
    simple servo motor controller utilizing the USB from Pololu—Pololu item number
    1354 is available at pololu.com—that can control 18 servo motors. Here is a picture
    of the unit:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 要让你的双足机器人行走，首先需要将舵机控制器连接到舵机。你将在这个项目中使用的舵机控制器是一个简单的舵机控制器，利用Pololu的USB接口——Pololu产品编号1354，可以在pololu.com购买——它可以控制18个舵机。以下是设备的图片：
- en: '![Using a servo controller to control the servos](img/B04591_02_16.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![使用舵机控制器来控制舵机](img/B04591_02_16.jpg)'
- en: Make sure that you order the assembled version. This piece of hardware will
    turn USB commands from Raspberry Pi into signals that control your servo motors.
    Pololu creates a number of different versions of this controller, and each one
    is able to control a certain number of servos. In this case, you may want to choose
    the 18 servo version, so that you can control all 12 servos with one controller,
    and you may also add an additional servo to control the direction of a camera
    or sensor. You could also choose the 12 servo version. One advantage of the 18
    servo controller is the ease of connecting power to the unit via screw-type connectors.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你订购的是已组装版本。这个硬件组件将把来自Raspberry Pi的USB命令转化为控制舵机电机的信号。Pololu生产了多个不同版本的控制器，每个版本能够控制一定数量的舵机。在这种情况下，你可能想选择18舵机版本，这样你就可以用一个控制器控制所有12个舵机，还可以增加一个额外的舵机来控制摄像头或传感器的方向。你也可以选择12舵机版本。18舵机控制器的一个优势是通过螺钉型连接器连接电源非常方便。
- en: 'There are two connections you''ll need to make to the servo controller in order
    to get started: the first to the servo motors and the second to a battery.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要做两个连接才能开始使用舵机控制器：第一个是连接舵机电机，第二个是连接电池。
- en: 'First, connect the servos to the controller. In order to be consistent, let''s
    connect your 12 servos to the connections marked 0 through 11 on the controller
    using this configuration:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，将伺服电机连接到控制器。为了保持一致性，使用以下配置将你的 12 个伺服电机连接到控制器上的 0 到 11 编号端口：
- en: '| Servo Connector | Servo |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| 伺服连接器 | 伺服电机 |'
- en: '| --- | --- |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| 0 | Right ankle in/out |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| 0 | 右脚踝进/出 |'
- en: '| 1 | Right ankle front/back |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 右脚踝前/后 |'
- en: '| 2 | Right knee |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 右膝 |'
- en: '| 3 | Right hip up/down |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 右臀上/下 |'
- en: '| 4 | Right hip turn |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 右臀旋转 |'
- en: '| 5 | Left ankle in/out |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| 5 | 左脚踝进/出 |'
- en: '| 6 | Left ankle front/back |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| 6 | 左脚踝前/后 |'
- en: '| 7 | Left knee |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| 7 | 左膝 |'
- en: '| 8 | Left up/down |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| 8 | 左上/下 |'
- en: '| 9 | Left hip turn |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| 9 | 左臀旋转 |'
- en: 'Here is a picture of the back of the controller; this will tell us where to
    connect our servos:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是控制器背面的图片，它将告诉我们在哪里连接伺服电机：
- en: '![Using a servo controller to control the servos](img/B04591_02_17.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![使用伺服控制器控制伺服电机](img/B04591_02_17.jpg)'
- en: 'Now, you need to connect the servo motor controller to your battery. For this
    project, you can use a 2S RC LiPo battery; it will supply the 7.4 volts and the
    current required by your servos, which can be on the order of 2 amps. Here is
    a picture:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你需要将伺服电机控制器连接到电池。对于这个项目，你可以使用一个 2S RC 锂电池；它将为你的伺服电机提供所需的 7.4 伏电压和电流，电流大约为
    2 安培。以下是一个图片：
- en: '![Using a servo controller to control the servos](img/B04591_02_18.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![使用伺服控制器控制伺服电机](img/B04591_02_18.jpg)'
- en: This battery will come with two connectors, one with larger gauge wires for
    normal usage and a smaller connector to connect to the battery recharger. You
    can use the XT60 Connector Pairs, solder some wires to the mating connector of
    the battery, and then insert the bare end of the wires into the servo controller.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这块电池将配有两个连接器，一个带有较粗的线径用于正常使用，另一个较小的连接器用于连接电池充电器。你可以使用 XT60 连接器对，将一些电线焊接到电池连接器的配对端口，然后将电线的裸端插入伺服控制器。
- en: Your system is now functional. You can connect the motor controller to your
    personal computer to check whether you can communicate with it. To do this, connect
    a mini USB cable between the servo controller and your personal computer.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 你的系统现在已经可以正常工作。你可以将电机控制器连接到你的个人计算机，检查是否能够与其通信。为此，将一根迷你 USB 数据线连接到伺服控制器和你的个人计算机。
- en: Communicating with the servo controller with a PC
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与伺服控制器通过 PC 进行通信
- en: 'Now that the hardware is connected, you can use some software provided by Polulu
    to control the servos. Let''s do this using your personal computer. First, download
    the Polulu SW from [www.pololu.com/docs/0J40/3.a](http://www.pololu.com/docs/0J40/3.a),
    and install it based on the instructions on the website. Once it is installed,
    run the software, and you should see this screen:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 硬件连接完毕后，你可以使用 Polulu 提供的一些软件来控制伺服电机。我们可以通过个人计算机来完成此操作。首先，从 [www.pololu.com/docs/0J40/3.a](http://www.pololu.com/docs/0J40/3.a)
    下载 Polulu 软件，并按照网站上的说明进行安装。安装完成后，运行软件，你应该看到如下屏幕：
- en: '![Communicating with the servo controller with a PC](img/B04591_02_19.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![与伺服控制器通过 PC 进行通信](img/B04591_02_19.jpg)'
- en: 'First, you will need to change the configuration in Serial Settings, so select
    the **Serial Settings** tabs, and you should see this:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要在“串口设置”中更改配置，选择 **串口设置** 标签，你应该会看到如下界面：
- en: '![Communicating with the servo controller with a PC](img/B04591_02_20.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![与伺服控制器通过 PC 进行通信](img/B04591_02_20.jpg)'
- en: 'Make sure that USB Chained is selected; this will allow you to connect and
    control the motor controller over USB. Now, go back to the main screen by selecting
    the **Status** tab; now, you can actually turn on the 10 servos. The screen should
    look like this:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 确保选择了“USB Chained”选项；这将允许你通过 USB 连接并控制电机控制器。现在，选择 **状态** 标签返回主屏幕；此时，你可以实际开启
    10 个伺服电机。屏幕应当显示如下：
- en: '![Communicating with the servo controller with a PC](img/B04591_02_21.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![与伺服控制器通过 PC 进行通信](img/B04591_02_21.jpg)'
- en: 'Now you can use the sliders to actually control the servos. Turn on servo 0\.
    Make sure that servo 0 moves the lower-right ankle servo. You can also use this
    to center the servos. Set servo 1 so that the slider is in the middle. Now, unscrew
    the servo horn on the servo until the servos are centered at this location. At
    the zero location of all servos, your biped should look like this:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以使用滑块来实际控制伺服电机。启动伺服电机 0，确保伺服电机 0 移动的是右下脚踝伺服电机。你也可以使用此功能来居中伺服电机。将伺服电机 1
    设置到滑块的中间位置。然后，松开伺服电机上的伺服角直到伺服电机居中。在所有伺服电机的零位置时，你的双足机器人应该看起来是这样的：
- en: '![Communicating with the servo controller with a PC](img/B04591_02_22.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![使用PC与伺服控制器通信](img/B04591_02_22.jpg)'
- en: Connecting the servo controller to the Raspberry Pi
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将伺服控制器连接到树莓派
- en: You've checked the servo motor controller and the servos. You can now connect
    the motor controller up to the Raspberry Pi and make sure that you can control
    the servos from it.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经检查了舵机电机控制器和舵机。现在，您可以将电机控制器连接到树莓派，并确保您可以从中控制舵机。
- en: 'Now, let''s talk to the motor controller. Here are the steps:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们与电机控制器交流。以下是步骤：
- en: Connect Raspberry Pi to the motor controller by connecting a mini USB to a mini
    USB cable. Connect the cable to the USB host connection on the Raspberry Pi, like
    this:![Connecting the servo controller to the Raspberry Pi](img/B04591_02_23.jpg)
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将树莓派与电机控制器连接，通过将迷你USB连接到树莓派上的USB主机连接，如图所示：![将伺服控制器连接到树莓派](img/B04591_02_23.jpg)
- en: Download the Linux code from Pololu at [https://www.pololu.com/docs/0J40/3.b](https://www.pololu.com/docs/0J40/3.b).
    Perhaps the best way to do this is to log on to your Raspberry Pi and then type
    `wget http://www.pololu.com/file/download/maestro-linux-100507.tar.gz?file_id=0J315`.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[https://www.pololu.com/docs/0J40/3.b](https://www.pololu.com/docs/0J40/3.b)下载Pololu的Linux代码。可能最好的方法是登录到您的树莓派，然后输入`wget
    http://www.pololu.com/file/download/maestro-linux-100507.tar.gz?file_id=0J315`。
- en: Then, move the file using `mv maestro-linux-100507.tar.gz\?file_id\=0J315 maestro-linux-100507.tar.gz`.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，使用`mv maestro-linux-100507.tar.gz\?file_id\=0J315 maestro-linux-100507.tar.gz`移动文件。
- en: Unpack the file by typing `tar –xvf maestro_linux_011507.tar.gz`. This will
    create a directory called `maestro_linux`. Go to this directory by typing `cd
    maestro_linux`, and then type `ls`; you should see something like this:![Connecting
    the servo controller to the Raspberry Pi](img/B04591_02_24.jpg)
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入`tar –xvf maestro_linux_011507.tar.gz`来解压文件。这将创建一个名为`maestro_linux`的目录。输入`cd
    maestro_linux`进入此目录，然后输入`ls`；您应该看到类似以下的内容：![将伺服控制器连接到树莓派](img/B04591_02_24.jpg)
- en: 'The `README.txt` document will give you explicit instructions on how to install
    the software. Unfortunately, you can''t run **MaestroControlCenter** on your Raspberry
    Pi; the version of Windows it uses doesn''t support the graphics, but you can
    control your servos using the **UscCmd** command-line application. First, type`./UscCmd
    --list`, and you should see the following:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '`README.txt`文件将为您提供如何安装软件的明确说明。不幸的是，您无法在树莓派上运行**MaestroControlCenter**；它使用的Windows版本不支持图形界面，但您可以使用**UscCmd**命令行应用程序控制您的舵机。首先，输入`./UscCmd
    --list`，您应该看到以下内容：'
- en: '![Connecting the servo controller to the Raspberry Pi](img/B04591_02_25.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![将伺服控制器连接到树莓派](img/B04591_02_25.jpg)'
- en: 'The unit sees your servo controller. If you just type `./UscCmd`, you can see
    all the commands you could send to your controller:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 单元看到您的伺服控制器。如果只输入`./UscCmd`，您可以看到可以发送到控制器的所有命令：
- en: '![Connecting the servo controller to the Raspberry Pi](img/B04591_02_26.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![将伺服控制器连接到树莓派](img/B04591_02_26.jpg)'
- en: Note that you can send a specific target angle to a servo, although the target
    is not in angle values, so it makes it a bit difficult to know where you are sending
    your servo. With a servo and battery connected to the servo controller, try to
    type `./UscCmd --servo 0, 10`. The servo will move to its full angle position.
    Type `./UscCmd – servo 0, 0`, and it will stop the servo from trying to move.
    In the next section, you'll write some Python code that will translate your angles
    to the commands that the servo controller will want to see in order to move it
    to specific angle locations. If you are struggling with the USB connection, refer
    to [http://www.linux-usb.org/FAQ.html](http://www.linux-usb.org/FAQ.html) for
    more information.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，您可以向舵机发送特定的目标角度，尽管目标不在角度值内，因此很难知道您正在发送舵机的位置。连接了舵机和电池到伺服控制器后，尝试输入`./UscCmd
    --servo 0, 10`。舵机将移动到其全角位置。输入`./UscCmd – servo 0, 0`，将停止舵机尝试移动。在下一节中，您将编写一些Python代码，将您的角度转换为舵机控制器希望看到的命令，以将其移动到特定的角度位置。如果您在USB连接方面遇到问题，请参考[http://www.linux-usb.org/FAQ.html](http://www.linux-usb.org/FAQ.html)获取更多信息。
- en: Note
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you didn't run the Windows version of Maestro Controller and set **Serial
    Settings** to **USB Chained**, your motor controller may not respond. Rerun the
    MaestroController code and set **Serial Settings** to **USB Chained**.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有运行Windows版本的Maestro Controller并将**串行设置**设置为**USB Chained**，则您的电机控制器可能无法响应。重新运行MaestroController代码，并将**串行设置**设置为**USB
    Chained**。
- en: Creating a program to control your biped
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个程序来控制您的双足机器人
- en: Now you know that you can talk to your servo motor controller and move your
    servos. In this section, you'll create a Python program that will let you talk
    to your servos to move them at specific angles. You can use Python as it is very
    simple and easy to run.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你知道可以与舵机控制器通信并移动舵机了。在本节中，你将创建一个 Python 程序，让你与舵机通信，移动它们到特定的角度。你可以使用 Python，因为它非常简单且容易运行。
- en: 'Let''s start with a simple program that will make your legged mobile robot''s
    servos go to 90 degrees (which should be somewhere close to the middle between
    the 0 to 180 degrees you can set). Here is the code:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从一个简单的程序开始，它会让你腿部移动的机器人舵机转到 90 度（这应该接近 0 到 180 度之间的中间位置）。下面是代码：
- en: '![Creating a program to control your biped](img/B04591_02_27.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![创建一个控制双足机器人的程序](img/B04591_02_27.jpg)'
- en: 'Here is an explanation of the code:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是代码的解释：
- en: '`#!/usr/bin/python`: This first line allows you to make this Python file execute
    from the command line.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`#!/usr/bin/python`：这行代码让你可以从命令行执行此 Python 文件。'
- en: '`import serial`: This line imports the serial library. You need the serial
    library to talk to your unit via the USB.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`import serial`：这一行导入了串行库。你需要这个库来通过 USB 与你的设备通信。'
- en: '`def setAngle(ser, channel, angle):`: This function converts your desired setting
    of servo and angle into the serial command that the servo motor controller needs.
    To understand the specifics of the code used to control the servos, refer to [https://www.pololu.com/docs/0J40](https://www.pololu.com/docs/0J40).'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`def setAngle(ser, channel, angle):`：这个函数将你设定的舵机和角度转换为舵机控制器所需的串行命令。要了解用于控制舵机的具体代码，请参考[https://www.pololu.com/docs/0J40](https://www.pololu.com/docs/0J40)。'
- en: '`ser = serial.Serial("/dev/ttyACM0", 9600)`: This opens the serial port connection
    to your servo controller.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ser = serial.Serial("/dev/ttyACM0", 9600)`：这行代码打开与你的舵机控制器的串行端口连接。'
- en: '`for i in range(0, 9)`: For loop to access all nine servos.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`for i in range(0, 9)`：for 循环用于访问所有九个舵机。'
- en: '`setAngle(ser, i, 90)`: Now, you can set each servo to the middle (home) position.
    The default would be to set each servo to 90 degrees. If your legs aren''t in
    their middle position, you can adjust them by adjusting the position of the servo
    horns on each servo.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`setAngle(ser, i, 90)`：现在，你可以将每个舵机设置为中间（家）位置。默认情况下，每个舵机会设置为 90 度。如果你的腿部不在中间位置，你可以通过调整每个舵机的舵机轮来进行调整。'
- en: To access the serial port, you'll need to make sure that you have the Python
    serial library. If you don't, then type `apt-get install python-serial`. After
    you have installed the serial library, you can run your program by typing `python
    quad.py`.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问串行端口，你需要确保你已经安装了 Python 串行库。如果没有，可以输入 `apt-get install python-serial` 来安装。安装好串行库后，你可以通过输入
    `python quad.py` 来运行你的程序。
- en: 'Once you have the basic home position set, you can ask your robot to do something.
    Let''s start by having your biped move its foot. Here is the Python code:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你设置好基本的家庭位置，就可以让你的机器人做一些事情。我们从让双足机器人移动它的脚开始。下面是 Python 代码：
- en: '![Creating a program to control your biped](img/B04591_02_28.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![创建一个控制双足机器人的程序](img/B04591_02_28.jpg)'
- en: In this case, you are using your `setAngle` command to set your servos to manipulate
    your robot's right ankle.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，你正在使用 `setAngle` 命令来设置你的舵机，操控机器人右脚踝。
- en: Summary
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: You now have a robot than can move! In the next chapter, you'll learn how to
    make your robot do many amazing things. You'll learn how to make it walk forward
    and backward and how to make it dance and turn. With some basic knowledge, any
    number of movements is possible.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你有了一个可以移动的机器人！在下一章中，你将学习如何让你的机器人做很多神奇的事情。你将学习如何让它向前和向后走，如何让它跳舞和转弯。有了一些基本的知识，任何动作都是可能的。
