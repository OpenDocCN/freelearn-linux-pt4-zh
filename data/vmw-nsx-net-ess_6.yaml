- en: Chapter 6. NSX Security Features
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章：NSX安全特性
- en: 'Traditionally, isolating and securing a network was done at the perimeter level
    of any data center, which was an error-prone and time-consuming activity. In the
    current Software Defined Data Center world, where most workloads are dynamic,
    we need better control over the security feature, and at the same time we expect
    configuration and management of these tasks to be automated without compromising
    any security features. If there is a virtual machine migration from one server
    to another server all my polices should move along with that irrespective of Layer
    2 and Layer 3 boundaries. But the real question would be, is that really possible? In
    this chapter, we will discuss how NSX has changed the view of modern-day data
    center security. We will be covering the following topics with some classic examples:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 传统上，隔离和保护网络是在任何数据中心的边界层面完成的，这是一项容易出错且耗时的活动。在当前的软件定义数据中心（SDDC）环境中，大多数工作负载是动态的，我们需要更好的安全控制功能，同时希望这些任务的配置和管理能够实现自动化，而不影响任何安全特性。如果虚拟机从一台服务器迁移到另一台服务器，我的所有策略应当随之移动，而不受第2层和第3层边界的限制。但真正的问题是，这真的可能吗？在本章中，我们将讨论NSX如何改变现代数据中心安全的视角。我们将通过一些经典示例来讨论以下主题：
- en: NSX Distributed Firewall
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NSX分布式防火墙
- en: NSX Service Composer
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NSX服务编排器
- en: NSX Distributed Firewall monitoring
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NSX分布式防火墙监控
- en: NSX SpoofGuard
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NSX SpoofGuard
- en: DFW takeaways
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DFW要点总结
- en: NSX Distributed Firewall
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NSX分布式防火墙
- en: 'NSX **Distributed Firewall** (**DFW**) focuses on East-West traffic and NSX
    Edge firewall focuses on North-South traffic. Those of us who remember the vCloud
    network security days will feel like this is an enhancement of the vShield app.
    Okay! For now, I would certainly agree with that; it is certainly an enhanced
    feature-rich version of the vShield app firewall. But the app demands that you
    run a dedicated firewall VM for each host and the virtual machine remains protected
    irrespective of where they are moving. Apart from the fact that it demands a hypervisor-specific
    firewall (FW) virtual machine, it was a featureless firewall and installation
    and troubleshooting was also slightly tedious. NSX Distributed Firewall is a hypervisor
    kernel-embedded firewall and policies are totally virtualization-aware. What does
    that mean? We can apply policies on vCenter objects such as data centers and clusters
    and virtual machine names and tags, and network constructs such as IP/VLAN/VXLAN
    addresses. What if we have the same firewall rule added in NSX Edge and Distributed
    Firewall? Which policy would be enforced first? There are two answers to that
    question. If the traffic is going out from the virtual machine, certainly the
    distributed firewall rule will be checked first, primarily because it is a VNIC-level
    firewall policy. However, if traffic is coming into the virtual data center, NSX
    Edge, our perimeter device, will be the first point of firewall rule table checking
    and later there would be a VNIC-level filtering also. Time to ask a few questions
    and justify why it is a feature-rich firewall:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: NSX **分布式防火墙** (**DFW**) 关注东西向流量，NSX Edge防火墙关注南北向流量。那些还记得vCloud网络安全时代的朋友会觉得这像是vShield应用的增强版。好吧！现在，我当然同意这一点；它无疑是vShield应用防火墙的功能增强版。但该应用要求你为每个主机运行一个专用的防火墙虚拟机，并且无论虚拟机移动到哪里，都能保持保护。除了它需要一个特定于虚拟化平台的防火墙（FW）虚拟机外，它还是一个功能单一的防火墙，安装和故障排除也稍显繁琐。NSX分布式防火墙是一个内嵌在虚拟化内核中的防火墙，策略完全与虚拟化环境兼容。这意味着什么？我们可以在vCenter对象上应用策略，如数据中心、集群、虚拟机名称和标签，以及网络构件，如IP/VLAN/VXLAN地址。如果我们在NSX
    Edge和分布式防火墙中添加了相同的防火墙规则，会发生什么？哪个策略会首先被执行？这个问题有两个答案。如果流量是从虚拟机流出的，显然会首先检查分布式防火墙规则，主要是因为它是基于虚拟网卡（VNIC）的防火墙策略。然而，如果流量是进入虚拟数据中心，NSX
    Edge（我们的边界设备）将是防火墙规则表检查的第一点，之后还会进行VNIC级别的过滤。是时候提出几个问题并证明为什么它是一个功能丰富的防火墙了：
- en: Can we have a dynamic FW rule creation based on the virtual name or operating
    system name?
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们能否基于虚拟机名称或操作系统名称动态创建防火墙规则？
- en: I have a domain user **A** and we need to **allow** and **block** a few rules
    based on user access **A**. Is that achievable?
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我有一个域用户**A**，我们需要基于用户访问**A**来**允许**和**阻止**一些规则。这能实现吗？
- en: I have two tenants and we are using IPV4 and IPV6 respectively; can we leverage
    the Distributed Firewall feature irrespective of the IP stack?
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我有两个租户，并且分别使用IPv4和IPv6；我们能否不受IP栈限制，利用分布式防火墙功能？
- en: Can we monitor the network activity between two virtual machines based on the
    firewall rule? This will ensure our rules are working as expected or we can take
    proactive action if required.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们是否可以基于防火墙规则监控两台虚拟机之间的网络活动？这样可以确保我们的规则按预期工作，或者在需要时我们可以采取主动措施。
- en: I'm migrating my virtual machine from cluster A to cluster B; will it retain
    the security/firewall policies? Do I need to add/delete any security/firewall
    settings in the physical network?
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我正在将虚拟机从集群 A 迁移到集群 B；它会保留安全/防火墙策略吗？我需要在物理网络中添加/删除任何安全/防火墙设置吗？
- en: Can we implement a few network security policies without changing/impacting
    our existing physical network topology?
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们是否可以在不更改/影响现有物理网络拓扑的情况下，实施一些网络安全策略？
- en: 'The preceding questions are not a complete list. However, these are few key
    concerns for now, apart from being keen to know if we have a security feature
    X when we leverage an NSX distributed firewall, the fundamental problem is the
    question of whether I can switch my traditional physical-network-based security
    controls to the NSX world so that my features and policies are more virtualization-aware
    or, one more ask is, are they application aware policies with visibility over
    users, process, usage, and so on?  Don''t get me wrong, we are not taking/removing
    all the physical network security settings and replicating them in the NSX world.
    All we need is a better secured network virtualized platform. NSX Distributed
    Firewall provides a micro-segmentation feature which resolves a lot of network
    security challenges. Since the firewall modules are running inside the ESXi host,
    we will always get a better throughput and policy configuration, deletion and
    monitoring all can be done from one single management console—vSphere web client.
    Before discussing firewall rules and how they work, let''s understand what components
    are involved and how they communicate with each other. As we can see from the
    following diagram, we have vSphere web client, NSX Manager, and vSphere farm with
    all the VIBS loaded. By connecting to vCenter Server through web client, we can
    create security policies and NSX Manager will push the policies to vSphere Servers.
    **VMware Service Insertion Platform** (**VSIP**), which is a module within DFW,
    will apply the policy to underlying virtual machines. Any new generation or traditional
    port-based firewall  will have an intelligent rule table and NSX DFW is of no
    exception. There are two tables associated with DFW:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的问题并不是完整的清单。然而，除了想了解当我们使用 NSX 分布式防火墙时是否具备某些安全特性 X 之外，根本性的问题是，是否可以将我的传统物理网络安全控制迁移到
    NSX 环境中，使我的功能和策略更具虚拟化感知？或者，另一个问题是，它们是否是具有应用感知的策略，能够查看用户、进程、使用情况等？别误会，我们并不是要取代/删除所有物理网络的安全设置并将其复制到
    NSX 环境中。我们需要的是一个更安全的网络虚拟化平台。NSX 分布式防火墙提供了一种微分段功能，可以解决许多网络安全挑战。由于防火墙模块运行在 ESXi
    主机内部，我们将始终获得更好的吞吐量，策略配置、删除和监控都可以通过一个单一的管理控制台——vSphere Web 客户端来完成。在讨论防火墙规则及其工作方式之前，让我们了解涉及的组件及它们如何相互通信。正如下图所示，我们有
    vSphere Web 客户端、NSX 管理器和加载了所有 VIBS 的 vSphere 集群。通过 Web 客户端连接到 vCenter 服务器后，我们可以创建安全策略，NSX
    管理器将把这些策略推送到 vSphere 服务器。**VMware 服务插入平台**（**VSIP**），这是 DFW 内的一个模块，将把策略应用于底层的虚拟机。任何新一代或传统的基于端口的防火墙都会拥有一个智能规则表，而
    NSX DFW 也不例外。与 DFW 相关联的有两个表：
- en: Rule table
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 规则表
- en: Connection table
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接表
- en: 'While the rule table maintains all the rules, the connection table will keep
    track of active connections based on the type of rules that we have created:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然规则表维护着所有规则，但连接表将根据我们创建的规则类型跟踪活动连接：
- en: '![NSX Distributed Firewall](img/image_06_001.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![NSX 分布式防火墙](img/image_06_001.jpg)'
- en: 'Now that we have a fundamental understanding of what Distributed Firewall is,
    it is equally important to know that DFW is fully virtualization-aware firewall
    and we can set firewall rules at the following vCenter Server objects:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经对分布式防火墙有了基本的了解，那么同样重要的是要知道，DFW 是完全虚拟化感知的防火墙，我们可以在以下 vCenter 服务器对象上设置防火墙规则：
- en: Data center
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据中心
- en: Cluster
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集群
- en: vSwitch Port Group
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: vSwitch 端口组
- en: Distributed Switch Port Group
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分布式交换机端口组
- en: Virtual app(vAPP)
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟应用（vAPP）
- en: Resource pool
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资源池
- en: Virtual machine
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟机
- en: vNIC
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: vNIC
- en: Logical switch
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 逻辑交换机
- en: Security Group
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全组
- en: IP Sets
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IP 集合
- en: NSX Service Composer
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NSX 服务组合器
- en: 'NSX Service Composer is a built-in feature which allows you to configure security
    services, firewall rules, and security policies with the help of security groups
    and security policies. We can create security groups and security policies and
    can apply a combination of security groups and security policies using NSX Service
    Composer, which is certainly a great way of automating rule/policy creation tasks.
    In a nutshell, we are doing two tasks and the final result is the automation of
    network security in the NSX world:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: NSX Service Composer 是一个内置功能，允许你在安全组和安全策略的帮助下配置安全服务、防火墙规则和安全策略。我们可以创建安全组和安全策略，并可以使用
    NSX Service Composer 应用安全组和安全策略的组合，这无疑是自动化规则/策略创建任务的一个极好方法。简而言之，我们正在执行两项任务，最终的结果是实现
    NSX 世界中网络安全的自动化：
- en: Deploy + Apply = Network Security Automation
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 部署 + 应用 = 网络安全自动化
- en: But the question is, What are we going to deploy and where are we going to apply
    that? For that, we need to understand what security groups and security policies
    are.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 但问题是，我们要部署什么，并且要在哪里应用它？为此，我们需要了解什么是安全组和安全策略。
- en: Security groups
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安全组
- en: 'A security group is where we define what type of assets we want to protect
    and we can define the group with the **dynamic way** of selecting an asset or
    we could simply create a **static membership** group. We will go back and read
    our questionnaire section in this chapter:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 安全组是我们定义要保护的资产类型的地方，我们可以通过**动态方式**选择资产来定义该组，或者我们可以简单地创建一个**静态成员**组。我们将回过头去阅读本章中的问卷部分：
- en: Can we have dynamic rule creation based on the virtual name or operating system
    name?
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们能否基于虚拟名称或操作系统名称动态创建规则？
- en: That gives us clarity on why dynamic membership would be a key factor while
    creating security groups. In a nutshell, when we create a Dynamic Membership Group
    with selection criteria *Include All Operating System of windows flavor and apply
    the Security Group with a Security Policy that will one the easiest way in which
    we would have created and Secured our Virtual Machines with the intelligence of
    DFW firewall.*
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这使我们更清晰地理解了为什么动态成员在创建安全组时会成为一个关键因素。简而言之，当我们创建一个动态成员组，并选择*包含所有 Windows 系统版本并应用安全组和安全策略时，这将是我们使用
    DFW 防火墙智能创建和保护虚拟机的最简单方法。*
- en: Security policies
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安全策略
- en: Security policies are combinations of security services and firewall rules.
    Policies can be a combination of antivirus, data security, vulnerability, network
    introspection, and firewall rules.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 安全策略是安全服务和防火墙规则的组合。策略可以是防病毒、数据安全、漏洞、网络内省和防火墙规则的组合。
- en: 'Okay! But what if we need to create a dynamic group, while excluding virtual
    machines running on one specific logic switch and given that all these configurations
    should be part of a single security group? This is the real power of security
    groups: all these configurations can be part of a single security group and in
    that case our security group will be like this:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 好的！但如果我们需要创建一个动态组，同时排除运行在特定逻辑交换机上的虚拟机，并且所有这些配置都应该是同一个安全组的一部分，那么该怎么办呢？这就是安全组的真正力量：所有这些配置都可以作为一个安全组的一部分，在这种情况下，我们的安全组将是这样的：
- en: Dynamic Inclusion + Static Inclusion (if required, we can still have a static
    inclusion list) - Static Exclusion = Security Group.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 动态包含 + 静态包含（如果需要，我们仍然可以有静态包含列表） - 静态排除 = 安全组。
- en: Creating a service group
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建服务组
- en: 'With a basic understanding of security groups and security policies, we will
    go ahead and discuss one of the security requirements to show the power of this
    feature. Let''s have a look at one of the network requirements for securing the
    traffic with DFW features and we will discuss the lab exercise. As per the following
    topology, we have our three-tier application running on three logical switches
    and a transit network:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在对安全组和安全策略有了基本了解后，我们将继续讨论其中一个安全需求，以展示该功能的强大。让我们看看利用 DFW 功能保护流量的一个网络需求，并讨论实验练习。根据以下拓扑图，我们的三层应用程序运行在三个逻辑交换机和一个传输网络上：
- en: App-Tier-01
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: App-Tier-01
- en: Web-Tier-01
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web-Tier-01
- en: DB-Tier-01
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DB-Tier-01
- en: Transit network
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 传输网络
- en: 'In the following diagram, by leveraging NSX DFW we will disable the ICMP traffic
    in the Web-Tier logic switch and the final result will be that web servers running
    in logical switch Web-Tier-01 will block ICMP traffic:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在下图中，通过利用 NSX DFW，我们将在 Web-Tier 逻辑交换机中禁用 ICMP 流量，最终的结果将是 Web-Tier-01 逻辑交换机中的
    Web 服务器将阻止 ICMP 流量：
- en: '![Creating a service group](img/image_06_002.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![创建服务组](img/image_06_002.jpg)'
- en: 'Before we start, let''s do a simple ping test to confirm whether ICMP is allowed.
    The following screenshot depicts successful ICMP traffic between `web-01a` and
    `web-02a` connected to same logical switch `Web Tier-01`:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，让我们做一个简单的 ping 测试，以确认是否允许 ICMP。以下截图显示了连接到同一逻辑交换机 **Web Tier-01** 的 `web-01a`
    和 `web-02a` 之间的 ICMP 流量成功：
- en: '![Creating a service group](img/image_06_003.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![创建服务组](img/image_06_003.jpg)'
- en: 'For configuring a Distributed Firewall rule, we have two methods:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 配置分布式防火墙规则时，我们有两种方法：
- en: By selecting **Firewall** | **Networking & Security** | **Firewall**
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过选择 **Firewall** | **Networking & Security** | **Firewall**
- en: By selecting **Service Composer** | **Networking & Security** | **Service Composer**
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过选择 **Service Composer** | **Networking & Security** | **Service Composer**
- en: 'In this example, I''m leveraging Service Composer. Let''s create a security
    group with the name **Web Security-Group**:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我正在使用 **Service Composer**。让我们创建一个名为 **Web Security-Group** 的安全组：
- en: '![Creating a service group](img/image_06_004.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![创建服务组](img/image_06_004.jpg)'
- en: 'In the dynamic membership list, we are not selecting any options. However,
    it is worth focusing on the **Criteria Details** option to get a clear picture
    of what options are available for defining a dynamic membership group as shown
    in the following screenshot. For example, if we select VM name in the following
    criteria list and mention Windows in white text box and create a Security Group.
    Any existing/future virtual machines which are getting deployed in vCenter Server
    will be applied with the DFW policy. Highly powerful feature as it ease lot of
    repeated task when same set of polices are required for a group of virtual machines
    also down the line adding and deletion of polices to same group is a one click
    task:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在动态成员列表中，我们没有选择任何选项。然而，值得关注的是 **Criteria Details** 选项，以便清楚地了解可用于定义动态成员组的选项，如下图所示。例如，如果我们在下面的条件列表中选择虚拟机名称，并在白色文本框中输入
    Windows 并创建安全组，则任何在 vCenter 服务器中部署的现有/未来虚拟机都会应用 DFW 策略。这是一个非常强大的功能，它可以简化很多重复任务，当一组虚拟机需要相同的策略时，此外，之后对同一组虚拟机的策略添加和删除只需要一步操作：
- en: '![Creating a service group](img/image_06_005.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![创建服务组](img/image_06_005.jpg)'
- en: 'In the static inclusion list, we set **Object Type** to **Logical Switch**
    so that we can apply the policy on the **Web-Tier-01** logical switch as shown
    in the following screenshot:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在静态包含列表中，我们将 **Object Type** 设置为 **Logical Switch**，这样我们就可以在下面的截图所示的 **Web-Tier-01**
    逻辑交换机上应用策略：
- en: '![Creating a service group](img/image_06_006.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![创建服务组](img/image_06_006.jpg)'
- en: 'What next? I have intentionally connected a **Linux VM** to our **Web-Tier**
    and the idea is to exclude only Linux from the security group policy that we are
    creating. Even though we are creating a security group at Logical Switch level,
    we can still filter our policy in such a way by mentioning a exclusion criteria.
    In a nutshell, polices are applied at logical switch level, however it is not
    applied to all the virtual machines connected to same logical switch. As we can
    see from following screenshot, we have set **Object Type** to **Virtual Machine**
    and excluded **Linux-01a**:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来做什么？我故意将一台 **Linux VM** 连接到我们的 **Web-Tier**，目的是排除我们正在创建的安全组策略中的 Linux。尽管我们是在逻辑交换机级别创建安全组，但我们仍然可以通过指定排除条件来以这种方式过滤我们的策略。简而言之，策略是在逻辑交换机级别应用的，但并不是应用于连接到同一逻辑交换机的所有虚拟机。正如我们从以下截图所看到的，我们将
    **Object Type** 设置为 **Virtual Machine**，并排除了 **Linux-01a**：
- en: '![Creating a service group](img/image_06_007.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![创建服务组](img/image_06_007.jpg)'
- en: With that step, we are done with security group creation and we will see the
    web security group created under **Service Composer** | **Networking & Security**
    | **Service Composer**. I have explicitly highlighted the virtual machine as I
    want everyone's attention on the virtual machine number, which is showing as **1**.
    Using the same step, we will create another security group called **Web2Security**
    and in the static inclusion we will include the **Web-02a** virtual machine.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此步骤后，我们就完成了安全组的创建，并且可以在 **Service Composer** | **Networking & Security** |
    **Service Composer** 中看到创建的 web 安全组。我已经特别标出虚拟机，因为我希望大家关注虚拟机编号，它显示为 **1**。通过相同的步骤，我们将创建另一个名为
    **Web2Security** 的安全组，并在静态包含中包括 **Web-02a** 虚拟机。
- en: 'So let''s revise the two security group rules with our example:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 那么让我们回顾一下我们的示例中的两个安全组规则：
- en: Security Group (Web Security-Group) = Dynamic Inclusion (Not Selected Anything)
    + Static Inclusion (Selected Web-Tier Logical Switch) - Static Exclusion (Excluded
    Linux VM)
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全组（Web Security-Group）= 动态包含（未选择任何项）+ 静态包含（选择了 Web-Tier 逻辑交换机） - 静态排除（排除了 Linux
    虚拟机）
- en: Security Group (Web2Security) = Dynamic Inclusion (Not Selected Anything) +
    Static Inclusion (Web-02a) - Static Exclusion (Not Selected anything)
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全组（Web2Security）= 动态包含（未选择任何项）+ 静态包含（Web-02a） - 静态排除（未选择任何项）
- en: 'The following screenshot depicts two security groups that we created and we
    can see the VM count also showing there:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了我们创建的两个安全组，我们还可以看到虚拟机数量也显示在那里：
- en: '![Creating a service group](img/image_06_008.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![创建服务组](img/image_06_008.jpg)'
- en: Creating a security policy
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建安全策略
- en: As we have discussed earlier, policies are groups of security services, such
    as antivirus, IPS/IDS solution, and DFW rules.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前讨论的，策略是安全服务的集合，如防病毒、IPS/IDS 解决方案和 DFW 规则。
- en: Before creating policies, we need to prioritize the policy with a weight attribute
    if required. The whole purpose of this feature is that, at times, objects (in
    our example, let's take a virtual machine as an object) will be part of multiple
    policies. Based on which policy has a higher weight attribute, that policy will
    take precedence over lower-weight attributes. In addition to that, if the policy
    that we are creating receives services from another security policy, we need to
    select the parent policy.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建策略之前，如果需要，我们需要通过权重属性来确定策略的优先级。此功能的主要目的是，在某些情况下，某些对象（在我们的示例中，我们将虚拟机作为对象）会属于多个策略。根据哪个策略的权重属性较高，较高权重的策略将优先于较低权重的策略。除此之外，如果我们正在创建的策略从另一个安全策略中获取服务，我们需要选择父策略。
- en: 'The following screenshot depicts a security policy being created; we name it
    **Web Security-Group**:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了一个安全策略正在被创建；我们将其命名为 **Web Security-Group**：
- en: '![Creating a security policy](img/image_06_009.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![创建安全策略](img/image_06_009.jpg)'
- en: 'Since we are not leveraging guest introspection and network introspection services
    in this example, I''m skipping that configuration and moving directly to the firewall
    rule. Both configurations will be extremely useful for the following scenarios:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 由于在本示例中我们没有使用来宾内省和网络内省服务，我将跳过这些配置，直接进入防火墙规则。这两种配置在以下场景中非常有用：
- en: Endpoint services are required for data security or third-party solution provider
    services such as antivirus or vulnerability management services.
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据安全或第三方解决方案提供商服务（如防病毒或漏洞管理服务）需要端点服务。
- en: To detect sensitive data such as **Payment Card Industry** (**PCI**), **Protected
    Health Information** (**PHI**), and **Personally Identifiable Information** (**PII**)
    information in our environment, we can create data security policies. When we
    run a scan, data security identifies data that violates the regulations in your
    policy will be **blocked** with brilliance of firewall policies.
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了在我们的环境中检测敏感数据，如 **支付卡行业**（**PCI**）、**受保护的健康信息**（**PHI**）和 **个人身份信息**（**PII**），我们可以创建数据安全策略。当我们运行扫描时，数据安全会识别违反您策略的规定的数据，并且会被防火墙策略**阻止**。
- en: Network introspection services that monitor your network, such as IPS.
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控网络的网络内省服务，例如 IPS。
- en: 'Let''s have a closer look at the firewall source and destination rules:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更仔细地查看防火墙源和目标规则：
- en: '**Source**: Policy Security Group'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**源**：策略安全组'
- en: '**Destination**: Web2Security Group'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**目标**：Web2Security Group'
- en: '**Service**: We are blocking all ICMP traffic (total 4 ICMP traffic selected
    which we will see very shortly)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务**：我们正在阻止所有 ICMP 流量（选择了总共 4 种 ICMP 流量，我们很快会看到这些）'
- en: 'The following screenshot depicts the preceding rules:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了前面的规则：
- en: '![Creating a security policy](img/image_06_010.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![创建安全策略](img/image_06_010.jpg)'
- en: 'Now that our security policies and security groups have been created, we can
    simply apply our policy to the **security group** which we created earlier by
    clicking on the **Apply Policy** option, which is portrayed in the following screenshot:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的安全策略和安全组已经创建完毕，我们可以通过点击以下截图中展示的 **应用策略** 选项，将策略应用到我们之前创建的 **安全组**：
- en: '![Creating a security policy](img/image_06_011.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![创建安全策略](img/image_06_011.jpg)'
- en: While applying the security policy, NSX will show us all **Security Groups**
    that have been created and we need to ensure we are applying it against the correct
    security group. Selecting the wrong security group will have a major impact on
    network traffic. Also, we can see a **Synchronize Firewall Config** option just
    below **Apply Policy**. Any time we modify a policy, it is recommended to synchronize
    the firewall configuration. A good sign with the latest release of NSX 6.2.3 is
    there is an out-of-sync security policy alarm which will be generated if a security
    policy is out of sync. But watch out for previous versions of NSX Manager as we
    will never know if the policy is out of sync unless a problem is reported and
    we isolate the same after troubleshooting.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用安全策略时，NSX将向我们展示已创建的所有**安全组**，我们需要确保将其应用于正确的安全组。选择错误的安全组将严重影响网络流量。此外，我们可以看到**应用策略**下方有一个**同步防火墙配置**选项。建议在修改策略时同步防火墙配置。NSX
    6.2.3的最新版本有一个很好的迹象，即如果安全策略不同步，将生成一个不同步安全策略的告警。但是，请注意NSX Manager的早期版本，除非报告问题并在故障排除后隔离问题，否则我们永远不会知道策略是否不同步。
- en: Testing firewall rules
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试防火墙规则
- en: 'What next? Well, if we have been alert so far, we will see these rules getting
    populated in **Firewall** | **Networking & Security** | **Firewall**. The following
    screenshot depicts the WebSecurity rule that we created for:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来呢？如果我们到目前为止一直都很警惕，我们将会看到这些规则在**防火墙** | **网络与安全** | **防火墙**中得到填充。以下屏幕截图描述了我们为以下目的创建的Web安全规则：
- en: '**Source**: **WebSecurity-Group** (**Web-01a**)'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**来源**：**Web安全组**（**Web-01a**）'
- en: '**Destination**: **Web2Security** (**Web-02a**)'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**目标**：**Web2安全**（**Web-02a**）'
- en: '**Services**: **4 ICMP protocols** and **Action** is **Block**'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务**：**4个ICMP协议**，**操作**为**阻止**'
- en: '![Testing firewall rules](img/image_06_012.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![测试防火墙规则](img/image_06_012.jpg)'
- en: 'Time to test what we have configured so far and I will show you the detailed
    firewall summary on the ESXi host. As we can see from the following screenshot,
    we have an SSH session to the `web-02a` machine and we are able to ping 172.16.10.11
    (web-01a):'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候测试我们迄今配置的内容，并且我将向您展示 ESXi 主机上详细的防火墙摘要。正如我们从以下屏幕截图中可以看到的那样，我们正在`web-02a`机器上有一个SSH会话，并且我们能够ping通172.16.10.11（web-01a）：
- en: '![Testing firewall rules](img/image_06_013.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![测试防火墙规则](img/image_06_013.jpg)'
- en: 'Now, if we do a ping test from `web-01a` to `web-02a,` as shown in the following
    screenshot, the result would be a failure, primarily because of the **ICMP DROP**
    rules that we have created:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们从`web-01a`到`web-02a`进行ping测试，如下面的屏幕截图所示，结果将会失败，主要是因为我们创建的**ICMP DROP**规则：
- en: '![Testing firewall rules](img/image_06_014.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![测试防火墙规则](img/image_06_014.jpg)'
- en: 'I strongly believe our DFW basics are crystal-clear. Even though we have a
    troubleshooting chapter coming up, I''m very excited to show you an informative
    output that we can check and view from the underlying host. All we need to do
    is to take an SSH session to the ESXi host wherein our web servers are running
    and issue the following command:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我坚信我们的DFW基础知识是非常清晰的。尽管我们即将进行故障排除章节，我非常兴奋地向您展示一个信息丰富的输出，我们可以从底层主机中检查和查看。我们所需做的就是对我们的Web服务器正在运行的ESXi主机进行SSH会话，并发出以下命令：
- en: '[PRE0]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Distributed Virtual Filter is the module that monitors the outgoing and incoming
    traffic that is protected by NSX DFW. So this command would display the same output.
    The following command output is for the Web-02a virtual machine and let''s make
    a note of the name of the vNic slot 2 associated with the `VM - nic-60841-eth0-vmware-sfw.2`:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式虚拟过滤器是监控由NSX DFW保护的出站和入站流量的模块。因此，这个命令会显示相同的输出。以下命令输出适用于Web-02a虚拟机，让我们记下与`VM
    - nic-60841-eth0-vmware-sfw.2`相关联的vNic插槽2的名称：
- en: '![Testing firewall rules](img/image_06_015.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![测试防火墙规则](img/image_06_015.jpg)'
- en: 'As we can see that the preceding command and output don''t give any information
    on all the DFW rules associated with that virtual machine, let''s display the
    rules associated with the name `nic-60841-eth0-vmware-sfw.2`. Issue the following
    command in the same host:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们可以看到的，前述命令和输出并没有提供关于与该虚拟机相关的所有DFW规则的任何信息，让我们在同一主机中发出以下命令：
- en: '[PRE1]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The following screenshot clearly depicts all the rules. I have marked the **DROP**
    rule and we have a total of four rules, which are just the ICMP rules we created
    a few minutes ago:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图清楚地显示了所有规则。我已标记了**DROP**规则，我们总共有四条规则，这些仅仅是我们几分钟前创建的ICMP规则：
- en: '![Testing firewall rules](img/image_06_016.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![测试防火墙规则](img/image_06_016.jpg)'
- en: As I said earlier, the complete centralized management of Distributed Firewall
    is done from vSphere web client and, as far as rules are concerned, we will provide
    a name, source and destination entities, type of service, action required, and
    where the rules are enforced. In addition to normal rule creation, DFW also supports
    an identity-based firewall.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 如我之前所说，分布式防火墙的完整集中管理是通过vSphere web客户端完成的，至于规则，我们将提供名称、源和目标实体、服务类型、所需的动作以及规则生效的位置。除了常规规则创建，DFW还支持基于身份的防火墙。
- en: Understanding identity-based firewall rules
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 理解基于身份的防火墙规则
- en: 'Let me reiterate our second query that we had when we discussed DFW:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 让我重申我们在讨论DFW时遇到的第二个问题：
- en: I have a domain user A and we need to allow and block a few rules based on user
    access A. Is that achievable?
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我有一个域用户A，我们需要根据用户A的访问权限允许和阻止一些规则。这可以实现吗？
- en: With an identity-based firewall, we can define firewall rules based on **Active
    Directory** (**AD**) groups. Obviously, there are few prerequisites and limitations
    when we use an identity-based firewall, which we will discuss in a short while.
    First and foremost, we need to register AD with NSX Manager.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 使用基于身份的防火墙，我们可以根据**Active Directory**（**AD**）组定义防火墙规则。显然，使用基于身份的防火墙时有一些前提条件和限制，我们稍后将讨论。首先，我们需要在NSX
    Manager中注册AD。
- en: Procedure for AD registration
  id: totrans-112
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: AD注册过程
- en: 'We will follow these steps to register the AD on NSX Manager:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将按照以下步骤在NSX Manager上注册AD：
- en: Firstly, we will log in to vSphere web client.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将登录到vSphere web客户端。
- en: Click **Networking & Security** and then click **NSX Managers**.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**网络与安全**，然后点击**NSX管理器**。
- en: Click an NSX Manager in the **Name** column and then click the **Manage** tab.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**名称**列中点击一个NSX Manager，然后点击**管理**标签页。
- en: Click the **Domain** tab and then click on the add domain icon.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**域**标签页，然后点击添加域图标。
- en: In the **Add Domain** dialog box, enter the fully qualified domain name and
    netBIOS name for the domain. The following figure depicts the preceding steps:![Procedure
    for AD registration](img/image_06_017.jpg)
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**添加域**对话框中，输入完全限定的域名和域的netBIOS名称。下图展示了上述步骤：![AD注册过程](img/image_06_017.jpg)
- en: In the **LDAP Options** page, specify the domain controller that the domain
    is to be synchronized with and select the protocol.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**LDAP选项**页面中，指定域控制器与域同步，并选择协议。
- en: Edit the port number if required.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如有需要，编辑端口号。
- en: Enter the user credentials for the domain account. This user must be able to
    access the directory tree structure.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入域账户的用户凭据。该用户必须能够访问目录树结构。
- en: 'The following figure shows the LDAP configuration that needs to be filled in
    during the configuration time:'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 下图显示了配置期间需要填写的LDAP配置：
- en: '![Procedure for AD registration](img/image_06_018.jpg)'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![AD注册过程](img/image_06_018.jpg)'
- en: In the **Security Event Log Access** page, select the connection method to access
    security event logs on the specified LDAP server. Change the port number if required.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**安全事件日志访问**页面中，选择连接方法以访问指定LDAP服务器上的安全事件日志。如有需要，可更改端口号。
- en: Select **Use Domain Credentials** to use the LDAP server user credentials. To
    specify an alternate domain account for log access, un-select **Use Domain Credentials**
    and specify the user name and password. The specified account must be able to
    read the security event logs on the domain controller.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**使用域凭据**来使用LDAP服务器用户凭据。如需指定备用域账户进行日志访问，请取消选中**使用域凭据**，并指定用户名和密码。指定的账户必须能够读取域控制器上的安全事件日志。
- en: Click **Next**.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**下一步**。
- en: In the **Ready to complete** page, review the settings you entered.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**准备完成**页面中，检查您输入的设置。
- en: Click **Finish**.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**完成**。
- en: 'Once after configuring required AD details as shown in the above steps, NSX
    manager to AD synchronization will start. Only when it is synchronized  properly
    we should start leveraging **Identity firewall** (**IDFW**). This is a one time
    task and further synchronization is automatic. What next? We can simply create
    security groups (AD groups) and security policies (Firewal policy) and allow/deny
    the services based on business requirement. The following diagram shows AD integration
    with NSX Manager and AD groups MG as source and destination is group of windows
    machines with http and icmp services allowed between them:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦按照上述步骤配置了所需的AD详细信息，NSX管理器与AD的同步将开始。只有在同步正确完成后，我们才应开始使用**身份防火墙**（**IDFW**）。这是一次性任务，后续的同步是自动进行的。接下来怎么办？我们可以简单地创建安全组（AD组）和安全策略（防火墙策略），并根据业务需求允许/拒绝服务。下图展示了AD与NSX管理器的集成，AD组MG作为源，目标是允许http和icmp服务的Windows机器组：
- en: '![Procedure for AD registration](img/need-to-change1.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![AD注册过程](img/need-to-change1.jpg)'
- en: NSX flow monitoring
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NSX流量监控
- en: Network monitoring tools are always difficult to set up, configure, and analyze.
    To date, most of us will have configured a third-party monitoring tool for analyzing
    network traffic and taken action accordingly. Maybe we could capture packets at
    a few points and have them analyzed using Wireshark. Do we really like switching
    from one management console to another management console for such scenarios?
    Are we happy with third-party monitoring software and expect all types of integration
    brilliance to showcase all the traffic? I know most people are not happy with
    such tools, which are vendor-dependent. We need a tool which will help us analyze
    things quickly and take proactive action. **NSX flow monitoring** is an built-in
    feature which gives that visibility and control over any traffic. In a nutshell,
    it configures Distributed Firewall to capture traffic and we can analyze traffic
    flow. Flow monitoring data includes the number of sessions and packets transmitted
    per session. Session details include sources, destinations, applications, and
    ports being used, and later we can create firewall allow or block rules based
    on session details. By default, the last 24 hours of data are displayed, the minimum
    time span is 1 hour and the maximum is 2 weeks.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 网络监控工具总是很难设置、配置和分析。到目前为止，大多数人可能已经配置了第三方监控工具来分析网络流量，并根据情况采取相应的行动。也许我们可以在几个点捕获数据包，并使用Wireshark进行分析。在这种情况下，我们真的喜欢从一个管理控制台切换到另一个管理控制台吗？我们是否满意第三方监控软件，并期望它展示所有类型的流量集成？我知道大多数人都不喜欢这种依赖供应商的工具。我们需要一种能够帮助我们快速分析情况并采取积极措施的工具。**NSX流量监控**是一个内置功能，可以提供对任何流量的可视化和控制。简而言之，它配置分布式防火墙以捕获流量，我们可以分析流量流动。流量监控数据包括每个会话传输的会话数和数据包数。会话详情包括源、目标、应用程序和使用的端口，之后我们可以根据会话详情创建防火墙允许或阻止规则。默认情况下，显示的是过去24小时的数据，最短时间跨度为1小时，最长为2周。
- en: 'To enable flow monitoring:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 启用流量监控：
- en: Log in to vSphere web client.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到vSphere Web客户端。
- en: Select **Networking & Security** from the left navigation pane and then select
    **Flow Monitoring**.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧导航窗格中选择**网络与安全**，然后选择**流量监控**。
- en: Select the **Configuration** tab.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**配置**选项卡。
- en: Ensure that **Global Flow Collection Status** is **Enabled** and we are not
    making any changes with the **Detail Collection Policy**.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保**全局流量收集状态**已设置为**启用**，并且我们没有更改**详细收集策略**。
- en: 'The following screenshot depicts **Global Flow Connection Status** set to **Enabled**:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了**全局流连接状态**设置为**启用**：
- en: '![NSX flow monitoring](img/image_06_020.jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![NSX流量监控](img/image_06_020.jpg)'
- en: OK! So we have enabled flow monitoring and we should be able to see a few flow
    stats. In our example, we will quickly check a live flow from a Windows 2008 machine
    (192.168.2.2).
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 好的！我们已经启用了流量监控，并且应该能看到一些流量统计数据。在我们的例子中，我们将快速检查来自Windows 2008机器（192.168.2.2）的实时流量。
- en: 'Capturing a live flow:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 捕获实时流量：
- en: Log in to vSphere web client.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到vSphere Web客户端。
- en: Select **Networking & Security** from the left navigation pane and then select
    **Flow Monitoring**.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从左侧导航窗格中选择**网络与安全**，然后选择**流量监控**。
- en: Click the **Live Flow** tab.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**实时流量**选项卡。
- en: Click **Browse** and select **windows-2008(IPSEC) NIC**.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**浏览**并选择**windows-2008（IPSEC）NIC**。
- en: Click **Start** to begin viewing live flow.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**开始**以开始查看实时流量。
- en: 'The following figure shows live flow stats and I have highlighted a block rule
    which applies when source windows-2008 192.168.2.2 tries to communicate with destination
    IP 192.168.4.2:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了实时流量统计，我已突出显示了当源主机 windows-2008 192.168.2.2 尝试与目标 IP 192.168.4.2 通信时应用的阻塞规则：
- en: '![NSX flow monitoring](img/image_06_021.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![NSX 流量监控](img/image_06_021.jpg)'
- en: As we can see, this is an excellent feature and we can easily work out not only
    what type of traffic is allowed and what is blocked but also the incoming and
    outgoing bytes, which is very important for situations wherein we would like to
    know which source is sending more bytes or where we are getting more incoming
    bytes from. In our case, the **TCP-SYNC** packet is sent, but there is no reply
    since I have created a DFW rule that is blocking the traffic between 192.168.2.2
    and 192.168.4.2.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，这是一个很棒的功能，我们不仅可以轻松了解哪些流量是被允许的，哪些是被阻止的，还可以查看进出字节数，这对于我们想了解哪个源发送了更多字节，或是我们从哪里接收到更多入站字节非常重要。在我们的案例中，**TCP-SYNC**
    数据包被发送，但没有收到回复，因为我创建了一个 DFW 规则，阻止了 192.168.2.2 和 192.168.4.2 之间的流量。
- en: NSX SpoofGuard
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NSX SpoofGuard
- en: Another powerful feature of NSX is SpoofGuard. The SpoofGuard feature will monitor
    and manage the IP address of a virtual machine. OK! Why do we need such a feature?
    If a virtual machine is compromised by chance, what are the outcomes? A hacker
    can certainly change the IP and bypass all firewall policies and the rest will
    be history. SpoofGuard gives us that granular control to ensure all IP changes
    are approved, until when traffic would be blocked. NSX Manager will collect the
    IP address of the virtual machines as long we have a VMware tool installed and
    running.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: NSX 的另一个强大功能是 SpoofGuard。SpoofGuard 功能将监控和管理虚拟机的 IP 地址。好吧！我们为什么需要这样一个功能呢？如果虚拟机被不小心攻破，会发生什么？黑客肯定可以更改
    IP 并绕过所有防火墙策略，后果不堪设想。SpoofGuard 为我们提供了更细致的控制，确保所有 IP 地址更改都经过批准，直到流量被阻止。只要我们安装并运行了
    VMware 工具，NSX 管理器就会收集虚拟机的 IP 地址。
- en: 'The following methods are supported in SpoofGuard:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: SpoofGuard 支持以下方法：
- en: '**Automatically trust IP assignments on their first use**: This mode allows
    all traffic from your virtual machines to pass; additionally, it builds a table
    of vNIC-to-IP address assignments. That way, we can review this table and make
    IP address changes. Both IPv4 and IPv6 are supported.'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**首次使用时自动信任 IP 分配**：此模式允许所有来自虚拟机的流量通过；此外，它会建立一个 vNIC 到 IP 地址分配的表格。这样，我们可以查看此表并进行
    IP 地址更改。IPv4 和 IPv6 都受支持。'
- en: '**Manually inspect and approve all IP assignments before use**: This mode blocks
    all traffic until you approve each vNIC-to-IP address assignment.'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**手动检查并在使用前批准所有 IP 分配**：此模式在您批准每个 vNIC 到 IP 地址的分配之前，阻止所有流量。'
- en: That brings us to another question. How about virtual machines which are leveraging
    DHCP IP? Will they get IP assigned? Do we need to approve them for DHCP IP assignment?
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 这引出了另一个问题。使用 DHCP IP 的虚拟机会怎么样？它们会获得 IP 分配吗？我们需要批准它们的 DHCP IP 分配吗？
- en: 'The answer is very simple if we have understood supported SpoofGuard methods.
    Only in **Manual Inspect**, DHCP traffic won''t be allowed until we approve the
    request; the rule applies the same for DHCP as well. By DHCP will be blocked if
    we are manually inspecting IP assignment. That being said, let''s do a lab test
    based on the following scenario:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们了解了支持的 SpoofGuard 方法，答案就非常简单了。只有在 **手动检查** 中，DHCP 流量才不会被允许，直到我们批准请求；此规则同样适用于
    DHCP。如果我们正在手动检查 IP 分配，那么 DHCP 将被阻止。话虽如此，基于以下场景，让我们进行实验测试：
- en: '*Virtual machines running on the web server logical switch should inspect all
    IP assignments*.'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '*运行在 Web 服务器逻辑交换机上的虚拟机应检查所有 IP 分配*。'
- en: Procedure for SpoofGuard configuration
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SpoofGuard 配置过程
- en: 'We need to perform the following steps for SpoofGuard configuration:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要执行以下步骤来配置 SpoofGuard：
- en: Firstly, log in to vSphere web client.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，登录到 vSphere Web 客户端。
- en: Click **Networking & Security** and then click **SpoofGuard**.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **Networking & Security**，然后点击 **SpoofGuard**。
- en: Click the add icon.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击添加图标。
- en: Type a name for the SpoofGuard policy.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为 SpoofGuard 策略输入一个名称。
- en: We can immediately enable or disable based on business requirements.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以根据业务需求立即启用或禁用。
- en: For **Operation Mode**, we select **Manually inspect and approve all IP assignments
    before use.** The following screenshot depicts the initial configuration of SpoofGuard:![Procedure
    for SpoofGuard configuration](img/image_06_022.jpg)
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于 **操作模式**，我们选择 **手动检查并在使用前批准所有 IP 分配**。以下截图展示了 SpoofGuard 的初始配置：![SpoofGuard
    配置过程](img/image_06_022.jpg)
- en: To specify where we need to apply the SpoofGuard policy, click **Add** and select
    the networks, distributed port groups, or logical switches that this policy should
    apply to. In our example, we are configuring the **Web-Tier** logical switch as
    shown in the following screenshot:![Procedure for SpoofGuard configuration](img/image_06_023.jpg)
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要指定需要应用 SpoofGuard 策略的位置，请点击 **添加** 并选择此策略应该应用的网络、分布式端口组或逻辑交换机。在我们的示例中，我们正在配置
    **Web-Tier** 逻辑交换机，如下图所示：![SpoofGuard 配置过程](img/image_06_023.jpg)
- en: Since we have set SpoofGuard to require manual approval of all IP address, let's
    check that assignment.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于我们已将 SpoofGuard 设置为需要手动批准所有 IP 地址，让我们检查一下该分配。
- en: 'In the following screenshot, we are viewing the **Virtual NIC IP Required Approval**
    screen, IP address changes that require approval before traffic can flow to or
    from these virtual machines. Other options available are as follows:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的截图中，我们查看的是 **虚拟网卡 IP 需要批准**屏幕，这是在流量可以进出这些虚拟机之前，需要批准的 IP 地址更改。其他可用选项如下：
- en: '**Active Virtual NICs**'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**活动虚拟网卡**'
- en: '**Active Virtual NICs Since Last Published**'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自上次发布以来的活动虚拟网卡**'
- en: '**Virtual NICs with Duplicate IP**'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**具有重复 IP 的虚拟网卡**'
- en: '**Inactive Virtual NICs**'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**非活动虚拟网卡**'
- en: 'Unpublished virtual NICs IP:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 未发布的虚拟网卡 IP：
- en: '![Procedure for SpoofGuard configuration](img/image_06_024.jpg)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![SpoofGuard 配置过程](img/image_06_024.jpg)'
- en: To approve an IP address, we need to click **Approve** next to the IP address
    option. That sums up our detailed discussion on NSX security and monitoring. A
    few more integrations are certainly possible with NSX, vRealize operations management
    (previously VROPS) with NSX, vCloud Director integration with NSX; vRealize Automation
    with NSX , NSX with third-party software such as Palo Alto networks, check point,
    and so on. Considering the positive momentum NSX has created in the market, more
    and more integrations will be coming down the line, which makes life easier for
    all architects. It's definitely worth knowing all these integrations; please read
    the links I will be providing in [Chapter 8](ch08.html "Chapter 8.  NSX Troubleshooting"),
    *NSX Troubleshooting*. Finally, let's have a quick look at a few key points that
    need to be taken care of.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 要批准一个 IP 地址，我们需要点击 **批准**，位于 IP 地址选项旁边。这就总结了我们对 NSX 安全性和监控的详细讨论。确实可以与 NSX 进行更多集成，例如与
    vRealize 操作管理（之前的 VROPS）、vCloud Director 集成、与 NSX 的 vRealize Automation、NSX 与第三方软件（如
    Palo Alto 网络、Check Point 等）集成。考虑到 NSX 在市场上所带来的积极动力，越来越多的集成将不断涌现，这使得所有架构师的工作更加轻松。了解这些集成绝对值得；请阅读我将在
    [第8章](ch08.html "第8章. NSX 故障排除")中提供的链接，*NSX 故障排除*。最后，让我们快速看一下需要注意的几个关键点。
- en: Distributed Firewall takeaways
  id: totrans-176
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分布式防火墙要点
- en: Distributed Firewall is a feature-rich firewall. But we have to be extremely
    careful while installing and creating rules. Gone are the days when gigantic physical
    firewalls were used for traffic filtering and other security measures. Applications
    demanded firewalls to be a little closer to them rather than running at **Top
    of Rack** (**TOR**). All we needed was a stateful firewall that is more application-aware.
    When we are inspecting the traffic at near line rate processing that too for East-West
    traffic which will give us better visibility over the traffic and reduces any
    attacking loopholes in virtualized data centers, we can call NSX DFW firewall
    the foundation pillar of **Micro Segmentation**. Worried about bottlenecks? No
    problem! DFW is the new kid in town. Let's have a quick look at a few key takeaways
    from this chapter.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式防火墙是功能丰富的防火墙。但在安装和创建规则时，我们必须格外小心。过去使用巨型物理防火墙进行流量过滤和其他安全措施的时代已经过去。应用程序要求防火墙更靠近它们，而不是运行在
    **机架顶部** (**TOR**)的位置。我们所需要的仅仅是一个更具应用感知的有状态防火墙。当我们在近线速率处理下检查流量，特别是对于东西向流量时，这将为我们提供更好的流量可见性并减少虚拟化数据中心中的攻击漏洞，我们可以称
    NSX DFW 防火墙为 **微分段**的基础支柱。担心瓶颈问题？没问题！DFW 是新来的小伙伴。让我们快速浏览一下本章的一些关键要点。
- en: DFW doesn't demand any physical network topology changes.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: DFW 不需要任何物理网络拓扑更改。
- en: Make a note of all management virtual machines (VMware appliances, third-party
    appliances, AD, DNS and exchange, and so on) that are installed in the vSphere
    environment and make a decision about which should be part of DFW protection.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意 vSphere 环境中安装的所有管理虚拟机（VMware 设备、第三方设备、AD、DNS 和 Exchange 等），并决定哪些应该成为 DFW
    保护的一部分。
- en: VSphere switch is not supported for policy enforcement; only logical switches
    and distributed switch port groups are supported. DFW is fully supported with
    IPv4 and IPv6.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: VSphere交换机不支持策略执行；仅支持逻辑交换机和分布式交换机端口组。DFW 完全支持 IPv4 和 IPv6。
- en: Starting from NSX 6.2, DFW rules leveraging vCenter Server objects even without
    VMware tools are supported. NSX 6.1 and above has a new option called **reject**
    in firewall actions. This action is available in NSX Edge as well.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 从 NSX 6.2 开始，DFW 规则即使没有 VMware 工具也支持利用 vCenter 服务器对象。NSX 6.1 及以上版本在防火墙操作中新增了一个名为
    **拒绝**（reject）的选项。这个操作在 NSX Edge 上也可用。
- en: NSX 6.2.3 supports **Trivial File Transfer Protocol** (**TFTP**)-ALG Distributed
    Firewall rules.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: NSX 6.2.3 支持 **简单文件传输协议**（**TFTP**）-ALG 分布式防火墙规则。
- en: An identity-based firewall is supported only for **Windows Clients**, ideal
    for East-West data center traffic. However, we can configure it with NSX Edge
    firewall and a physical firewall, which will bring end-to-end security in the
    overall data center.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 基于身份的防火墙仅支持 **Windows 客户端**，非常适合东西向数据中心流量。然而，我们可以将其与 NSX Edge 防火墙和物理防火墙一起配置，从而为整个数据中心提供端到端的安全性。
- en: Removing and adding vSphere virtual machines from vCenter won't delete any DFW
    rules. Make use of the **exclusion list** feature if you want to exclude a VM
    completely from DFW protection. I will be discussing exclusion lists in more detail
    in [Chapter 8](ch08.html "Chapter 8.  NSX Troubleshooting"), *NSX Troubleshooting*.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 从 vCenter 删除或添加 vSphere 虚拟机不会删除任何 DFW 规则。如果你想完全排除某个虚拟机免受 DFW 保护，请使用 **排除列表**
    功能。关于排除列表的详细内容，我将在 [第 8 章](ch08.html "第 8 章：NSX 故障排除")，*NSX 故障排除* 中讨论。
- en: If we are leveraging Identity firewall feature and for some reason there is
    a synchronization issue between NSX Manager and Active Directory, it will have
    a direct impact on DFW rules. So this is one scenario wherein Management plane
    (NSX Manager) outage causing a dataplane traffic issue because firewall is impacted.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们利用身份防火墙功能，并且由于某些原因，NSX 管理器与 Active Directory 之间存在同步问题，这将直接影响 DFW 规则。因此，这是一个管理平面（NSX
    管理器）故障导致数据平面流量问题的场景，因为防火墙受到影响。
- en: If we need to identity applications and allow/block the traffic irrespective
    of the port and protocols information, best firewall for such use case will be
    to integrate New generation firewalls like palo alto along with DFW.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们需要识别应用程序并允许/阻止流量，无论端口和协议信息如何，对于这种使用场景，最佳的防火墙方案是将像 Palo Alto 这样的下一代防火墙与 DFW
    集成。
- en: 'It is not mandatory to install the DFW feature in the vSphere management cluster;
    if we want to install DFW, watch out for the VCenter Server machine. Ensure that
    the machine is excluded from the list. If there is an other third-party management
    software running in the same cluster, DFW doesn''t have the intelligence to exclude
    it from protection. I have seen this mistake back in the VCNS days: all of a sudden,
    VC loses access to all management components. A simple click on the **Install**
    button will cause a major production outage.'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 在 vSphere 管理集群中安装 DFW 功能不是强制的；如果我们想安装 DFW，请注意 VCenter 服务器机器。确保该机器从列表中排除。如果在同一集群中运行其他第三方管理软件，DFW
    无法智能地将其排除在保护之外。我在 VCNS 时代就遇到过这个错误：突然间，VC 无法访问所有管理组件。点击 **安装** 按钮就可能导致重大生产中断。
- en: Summary
  id: totrans-188
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We started this chapter with an introduction to NSX security and later we covered
    DFW architecture, use cases, and features. We also had a discussion about monitoring
    options available in NSX and, finally, we wrapped up the chapter by discussing
    key points to be noted before installing NSX security features.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 我们以介绍 NSX 安全性开始了本章，随后讲解了 DFW 架构、使用案例和功能。我们还讨论了 NSX 中可用的监控选项，最后，我们总结了在安装 NSX
    安全功能之前需要注意的要点。
- en: In the next chapter, we will discuss cross-VC NSX for a multi-site solution
    with logical switch, Distributed Logical Router, and DFW installation and configuration
    across multiple vCenter domains.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将讨论跨 VC 的 NSX，涉及多站点解决方案，包括逻辑交换机、分布式逻辑路由器及跨多个 vCenter 域的 DFW 安装和配置。
