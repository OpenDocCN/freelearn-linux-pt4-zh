- en: Chapter 9. Troubleshooting Web Services
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章：Web服务故障排除
- en: Troubleshooting is not always about disaster recovery or fixing broken systems.
    In fact, most troubleshooters tend to spend their time discovering ways to constantly
    improve a system or assisting other colleagues to get the best out of the technology
    at hand. Some would call this Dev/Ops, but regardless of how you look at it, the
    essential principles remain the same. You are a troubleshooter, and you are a
    crucial part of the support network; so with this in mind, we will take a break
    from "saving the day" and approach the subject of web services a little more proactively.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 故障排除并不总是关于灾难恢复或修复损坏的系统。事实上，大多数故障排除者往往花时间发现不断改进系统的方法，或者协助其他同事充分利用现有技术。有些人会称之为Dev/Ops，但无论你如何看待，基本原则始终不变。你是故障排除者，你是支持网络中至关重要的一部分；因此，考虑到这一点，我们将暂时放下“拯救世界”的任务，以更积极的方式来探讨Web服务的主题。
- en: In this chapter, we will review the subject of investigating web services with
    the purpose of making improvements and to build on your knowledge as a troubleshooter.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将回顾调查Web服务的主题，目的是改进并扩展你作为故障排除者的知识。
- en: 'In this chapter, we will:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将：
- en: Learn how to audit the server with cURL
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何使用cURL审核服务器
- en: Discover ways to check your Akamai headers
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发现检查你的Akamai头信息的方法
- en: Learn how to implement Varnish on Apache
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何在Apache上实现Varnish
- en: Discover how to validate your Varnish installation with cURL
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发现如何使用cURL验证你的Varnish安装
- en: Learn how to use cURL in order to access an FTP directory
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何使用cURL访问FTP目录
- en: Learn how to monitor Apache by installing `mod_status`
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何通过安装`mod_status`来监控Apache
- en: Auditing the server with cURL
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用cURL审核服务器
- en: When a web server begins to exhibit problems, it can be for a vast number of
    reasons. However, when experiencing the issue as a troubleshooter, remember that
    you are not looking at the application itself (this is the realm of programmers
    and they will not thank you for joining in), but you will be looking at the state
    of the server.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 当Web服务器开始出现问题时，可能有很多原因。然而，作为故障排除者，在遇到这个问题时，请记住，你并不是在看应用程序本身（这是程序员的领域，他们不会感谢你加入其中），而是看服务器的状态。
- en: Essentially, you can say that this is a process to scrutinize the server and
    its ability to serve web pages or web applications. So, let's begin by checking
    to confirm that cURL is installed.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本质上，你可以说这是一个审查服务器及其提供网页或Web应用程序能力的过程。那么，让我们从检查确认cURL是否已安装开始。
- en: 'To do this, you should use the following syntax:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，你应该使用以下语法：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Having completed this step, you are now ready to run your first cURL command:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此步骤后，你现在可以运行你的第一个cURL命令了：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'More specifically, you can choose a particular location in the following way:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 更具体地说，你可以通过以下方式选择特定的位置：
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Alternatively, you can pass a string like this:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你可以像这样传递一个字符串：
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Each of the preceding commands will show the entire HTTP content of the target
    URL; and yes, it can make the screen look a bit messy. Thus, instead, you can
    invoke the tidy option like this:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 前面每个命令都会显示目标URL的全部HTTP内容；是的，这可能会让屏幕看起来有点乱。因此，你可以调用tidy选项，如下所示：
- en: '[PRE4]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'However, if you wish to capture data and save the output to a file of your
    choice, then you can achieve this by using the command-line redirection method
    like this:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果你希望捕获数据并将输出保存到你选择的文件中，可以通过使用命令行重定向方法来实现，如下所示：
- en: '[PRE5]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Alternatively, you can use the `-o` option in the following way:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你可以以以下方式使用`-o`选项：
- en: '[PRE6]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Note that by invoking the `-o` option approach, the target file must be stated
    first. However, given that the preceding example shows that we are saving the
    output to a text file, you can quite happily change this to almost any type of
    file you want, like this:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，通过调用`-o`选项的方法时，目标文件必须首先指定。然而，由于前面的示例表明我们将输出保存到文本文件中，你可以很高兴地将其更改为几乎任何类型的文件，如下所示：
- en: '[PRE7]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Now, working on the assumption that network connectivity is good, we have chosen
    cURL because we are now dealing with the specific problem of a web server that
    may be exhibiting difficulties in displaying web pages.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，假设网络连接良好，我们选择了cURL，因为我们现在处理的是一个可能存在显示网页困难的Web服务器的特定问题。
- en: As we have already seen, by default, cURL will simply output the contents of
    the web page that was requested. However, by using an assortment of additional
    options (or arguments), you can extend its abilities and request far more details.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前所见，默认情况下，cURL仅仅会输出所请求网页的内容。然而，通过使用一些额外的选项（或参数），你可以扩展它的功能，并请求更多的细节。
- en: 'For example, if we use the `-w` option (write-out), you can obtain the status
    code of any web page by using the following syntax:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我们使用`-w`选项（write-out），你可以通过以下语法获取任何网页的状态码：
- en: '[PRE8]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Here, `\n` is used to output the result on a new line (you can also output a
    tab with `\t` or a carriage return with `\r`). You should now know the HTTP status
    code and HTTP content type for the web page in question.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`\n`用于将结果输出到新的一行（你还可以用`\t`输出制表符，或用`\r`输出回车符）。你现在应该知道该网页的HTTP状态码和HTTP内容类型。
- en: 'For example, you can try this:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你可以尝试这样：
- en: '[PRE9]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The result of the preceding command is a bit too extensive to print in full,
    but at the end of the output, you should see the following (in which the target
    data is placed on separate lines as requested):'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 前述命令的结果稍显冗长，无法完整打印，但在输出的末尾，你应该能看到以下内容（其中目标数据按要求分行显示）：
- en: '[PRE10]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Moreover, you can even include a remote IP address like this:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你甚至可以像这样包含远程IP地址：
- en: '[PRE11]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The output of this command should show something like the following towards
    the end:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令的输出应该在末尾显示类似以下的内容：
- en: '[PRE12]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'You can obtain the size (in bytes) of a web page with the following command:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用以下命令获取网页的大小（以字节为单位）：
- en: '[PRE13]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The result of this command will show `63175` bytes towards the end of the output:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令的结果将在输出的末尾显示`63175`字节：
- en: '[PRE14]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'On the other hand, if you are dealing with a web server that uses both `301`
    and `302` redirection methods, we can use the `-L` option like this:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，如果你正在处理一个使用`301`和`302`重定向方法的Web服务器，我们可以像这样使用`-L`选项：
- en: '[PRE15]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Finally, if you would like to ensure your investigation of the server''s web
    pages provides a complete list of all the headers cURL may encounter, you should
    invoke the `-v` option for verbosity in the following way:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，如果你想确保你对服务器网页的调查提供了cURL可能遇到的所有头信息的完整列表，你应该通过以下方式调用`-v`选项来增加输出详细程度：
- en: '[PRE16]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'For example, once again you can test Red Hat like this:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，再次你可以像这样测试Red Hat：
- en: '[PRE17]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The result of this command will provide the following output:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令的结果将提供以下输出：
- en: '[PRE18]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'While for those of you who would prefer to minimize the output to response
    headers only, instead of using the preceding command you should invoke the `-I`
    option like this:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些希望仅将输出限制为响应头的用户，应该像这样使用`-I`选项，而不是使用前面的命令：
- en: '[PRE19]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'For example, if you retried Red Hat like this:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你像这样重新尝试Red Hat：
- en: '[PRE20]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The result of this command will provide the following output:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令的结果将提供以下输出：
- en: '[PRE21]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'At this stage, there is always a lot more that can be said about cURL. In fact,
    you could write an entire book on the subject; however, before we stray too far
    from our main topic, you will be happy to know that you can discover more about
    cURL by reading the manual:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一阶段，关于cURL的内容还有很多可以讨论。事实上，你可以写一本关于这个主题的书；然而，在我们偏离主要话题之前，你会很高兴知道你可以通过阅读手册来了解更多关于cURL的内容：
- en: '[PRE22]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Debugging Akamai headers with cURL
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用cURL调试Akamai头信息
- en: 'CDNs are becoming commonplace, and the most popular of them all is Akamai.
    However, where a CDN can deliver benefits, they can also provide a stumbling block
    when you are troubleshooting a web service, application, or even a simple home
    page. Look at it this way, with a CDN of any type, you are generally working with
    cached objects and you want to validate the traffic behavior. So, with this in
    mind, we will now discuss how `cURL` can come to the rescue:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: CDN（内容分发网络）正变得越来越普遍，其中最流行的是Akamai。然而，虽然CDN能够带来好处，但在你排查Web服务、应用程序，甚至一个简单的主页时，它们也可能成为一个绊脚石。换句话说，使用任何类型的CDN时，你通常在与缓存的对象进行交互，而你需要验证流量行为。因此，考虑到这一点，我们现在将讨论如何通过`cURL`来解决这一问题：
- en: 'To begin with, we must issue a properly formed Pragma header and, to do this,
    you can use the following syntax:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们必须发出一个正确格式的Pragma头，为此，你可以使用以下语法：
- en: '[PRE23]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'However, if you wish to include the debug information, you can use:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果你希望包含调试信息，可以使用：
- en: '[PRE24]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'For example, as Red Hat are known users of Akamai, if you try:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，由于Red Hat是Akamai的已知用户，如果你尝试：
- en: '[PRE25]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Then, unless there have been any significant changes since the publication
    of this book (and web pages always do change over time), the output will look
    similar to this:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，除非自本书出版以来发生了重大变化（而网页总是会随着时间改变），否则输出结果将类似于这样：
- en: '[PRE26]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Quite a long example I agree, but Akamai headers are quite extensive. Of course,
    this process is not restricted to web pages per se, as it can be used to target
    any object of your choice.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我同意这个例子相当长，但Akamai头部信息确实非常广泛。当然，这个过程不仅限于网页本身，也可以用来定位你选择的任何对象。
- en: 'For example, if you want to target a particular image, you can use:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你想定位特定的图像，可以使用：
- en: '[PRE27]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Alternatively, you can target a CSS file like this:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你可以像这样定位一个CSS文件：
- en: '[PRE28]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'At this point, I am assuming that you know most of the HTTP response codes
    (if not, you can find a reference link at the end of this chapter), but before
    we close this subject, let''s take a brief look at some of the less obvious headers
    you will encounter:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，我假设你已经了解了大多数HTTP响应代码（如果不了解，可以在本章末尾找到参考链接），但在我们结束这一主题之前，让我们简要看一下你可能遇到的一些不太显眼的头部：
- en: '`X-Check-Cacheable`: This value will tell us whether the object in question
    is cacheable by Akamai.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`X-Check-Cacheable`：该值将告诉我们目标对象是否可以被Akamai缓存。'
- en: '`X-Cache-Key`: Ignoring the first two values and starting from the third value
    in the resulting string, you will see the CP code and the relevant TTL, although
    the TTL may differ slightly when set at the application level through the Edge-Control
    header.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`X-Cache-Key`：忽略前两个值，从结果字符串的第三个值开始，你将看到CP代码和相关的TTL，尽管当通过Edge-Control头部在应用程序级别设置时，TTL可能会有所不同。'
- en: '`X-Cache`: This value will tell us what the Akamai Edge server returned as
    output. However, this value will also indicate one of the following instances:'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`X-Cache`：该值将告诉我们Akamai Edge服务器返回的输出内容。然而，该值还会指示以下几种情况：'
- en: '`TCP_HIT`: This value implies that the object was fresh in cache and the object
    was fetched from the disk cache.'
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TCP_HIT`：该值表示对象在缓存中是新鲜的，并且该对象是从磁盘缓存中获取的。'
- en: '`TCP_MISS`: This value implies that the object was not in cache; the server
    fetched the object from the origin.'
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TCP_MISS`：该值表示对象不在缓存中；服务器从源获取了该对象。'
- en: '`TCP_REFRESH_HIT`: This value implies that the object was stale in cache and
    we successfully refreshed the origin on an If-Modified-Since request.'
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TCP_REFRESH_HIT`：该值表示对象在缓存中是过期的，并且我们成功地在If-Modified-Since请求下刷新了源对象。'
- en: '`TCP_REFRESH_MISS`: This value implies that the object was stale in cache,
    and refresh obtained a new object from the origin in response to our If-Modified-Since
    request.'
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TCP_REFRESH_MISS`：该值表示对象在缓存中是过期的，并且刷新操作从源获取了新对象，作为对我们的If-Modified-Since请求的响应。'
- en: '`TCP_REFRESH_FAIL_HIT`: This value implies that the object was stale in cache,
    and we failed on refresh (couldn''t reach the origin), so we served the stale
    object.'
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TCP_REFRESH_FAIL_HIT`：该值表示对象在缓存中是过期的，并且我们刷新失败（无法访问源对象），因此我们返回了过期的对象。'
- en: '`TCP_IMS_HIT`: This value implies that an If-Modified-Since request from the
    client and object was fresh in cache and served.'
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TCP_IMS_HIT`：该值表示来自客户端的If-Modified-Since请求和对象在缓存中是新鲜的，并且已被提供。'
- en: '`TCP_NEGATIVE_HIT`: This value implies that the object previously returned
    a "not found" message (or any other negatively cacheable response) and that the
    cached response was a hit for this new request.'
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TCP_NEGATIVE_HIT`：该值表示该对象之前返回了一个“未找到”消息（或任何其他不可缓存的负面响应），并且缓存的响应对这个新请求是有效的。'
- en: '`TCP_MEM_HIT`: This value implies that the object was on disk and in the memory
    cache. The server served it without hitting the disk.'
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TCP_MEM_HIT`：该值表示对象位于磁盘并且已经在内存缓存中。服务器直接从内存中提供，而没有访问磁盘。'
- en: '`TCP_DENIED`: This value implies that you have been denied access to the client
    for whatever reason.'
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TCP_DENIED`：该值表示由于某种原因，你被拒绝了访问客户端的权限。'
- en: '`TCP_COOKIE_DENY`: This value implies that you have been denied access on cookie
    authentication (if the centralized or decentralized authorization feature is being
    used in configuration).'
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TCP_COOKIE_DENY`：该值表示你在进行Cookie认证时被拒绝访问（如果在配置中使用了集中式或分散式授权功能）。'
- en: So, as you can see, debugging Akamai headers using cURL is very easy to do.
    Yes, there are browser plugins that will do the same job, but knowing how to do
    it with cURL is far more fun.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，正如你所看到的，使用cURL调试Akamai头部信息非常简单。是的，也有浏览器插件可以完成相同的工作，但知道如何用cURL操作要有趣得多。
- en: Adding Varnish to Apache
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加Varnish到Apache
- en: Varnish is a high-performance HTTP accelerator that not only assists in reducing
    the overall server load, but also serves to improve website response times. For
    this reason, it has become very popular; as a consequence of this, we will look
    at the process of setting up Varnish in conjunction with the Apache web server.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: Varnish是一个高性能的HTTP加速器，不仅有助于减少服务器的总体负载，还有助于提高网站响应时间。因此，它变得非常受欢迎；因此，我们将研究在Apache
    Web服务器与Varnish同时设置的过程。
- en: Before we begin, it will be assumed that Apache is installed. Moreover, you
    should be aware that completing the next steps requires access to the EPEL repository.
    Please refer to [Chapter 4](ch04.html "Chapter 4. Troubleshooting Package Management
    and System Upgrades"), *Troubleshooting Package Management and System Upgrades*,
    for instructions on how to download and install the EPEL repository on CentOS
    7.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，我们假设已安装了Apache。此外，您需要知道完成接下来的步骤需要访问EPEL仓库。请参考[第4章](ch04.html "第4章。故障排除包管理和系统升级")，《故障排除包管理和系统升级》中有关如何在CentOS
    7上下载和安装EPEL仓库的说明。
- en: 'So when you are ready, let''s begin by installing Varnish:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，当您准备好时，让我们开始安装Varnish：
- en: '[PRE29]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Following a successful installation of Varnish, we will need to enable the
    service at boot. This can be achieved by typing:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Varnish成功后，我们需要在启动时启用服务。可以通过输入以下命令来实现：
- en: '[PRE30]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'We will then need to activate the service like this:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们需要激活服务，如下所示：
- en: '[PRE31]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'So, having completed the basic installation, you can now check the status of
    Varnish by typing:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在完成基本安装后，您现在可以通过输入以下命令来检查Varnish的状态：
- en: '[PRE32]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Then you check what version you are running by typing:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，通过输入以下命令来检查您正在运行的版本：
- en: '[PRE33]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'At this stage, we need to complete the basic configuration of this service
    and enable it to work in conjunction with Apache. To do this, we will begin by
    opening the main Apache configuration with your favorite text editor like this:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，我们需要完成此服务的基本配置，并使其能够与Apache配合工作。为此，我们将从打开主Apache配置文件开始，使用您喜爱的文本编辑器，如下所示：
- en: '[PRE34]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Now, scroll down to find the following line:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，向下滚动以找到以下行：
- en: '[PRE35]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Replace it with the following line:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 用以下行替换它：
- en: '[PRE36]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'If the web server is running one or more virtual hosts, you will need to make
    the following adjustment in order to reflect the new port that Apache is listening
    on:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 如果Web服务器正在运行一个或多个虚拟主机，则需要进行以下调整以反映Apache监听的新端口：
- en: '[PRE37]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Now save the file and run the following command to check your syntax:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 现在保存文件并运行以下命令来检查语法：
- en: '[PRE38]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'The output should read:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 输出应为：
- en: '[PRE39]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Now, having completed these steps, we will make our first configuration change
    to the original Varnish installation:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，完成了这些步骤后，我们将对原始Varnish安装进行第一个配置更改：
- en: '[PRE40]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Scroll down and look for the following line:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 向下滚动并查找以下行：
- en: '[PRE41]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Replace it with the following:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 用以下内容替换它：
- en: '[PRE42]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Now scroll down and locate the following line:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 现在向下滚动并找到以下行：
- en: '[PRE43]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: This is where Varnish gets interesting, and where you, as the troubleshooter,
    get to determine the most suitable method for optimizing web performance. Currently,
    you will notice that Varnish is configured to use the server's hard disk to cache
    files, and, in this instance, you have two options.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是Varnish变得有趣的地方，作为故障排除者，您可以确定最适合优化Web性能的方法。目前，您会注意到Varnish配置为使用服务器的硬盘来缓存文件，在这种情况下，您有两个选项。
- en: In a situation where a large cache is expected, where RAM is limited, or you
    intend to build a dedicated Varnish store to cache files, by making a simple adjustment
    to reflect the default settings you can specify the size of your cache.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在预期需要大量缓存、RAM有限或打算构建专用Varnish存储以缓存文件的情况下，通过对默认设置进行简单调整来指定缓存大小。
- en: 'For example, if you want to create a disk cache of 20 GB, you can use the following
    line:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果您希望创建20 GB的磁盘缓存，可以使用以下行：
- en: '[PRE44]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'However, if you want the ultimate Varnish experience that uses a RAM-caching
    approach, this can be achieved by customizing the following line to reflect the
    system''s needs:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果您希望体验使用RAM缓存方法的终极Varnish体验，则可以通过自定义以下行来实现，以反映系统的需求：
- en: '[PRE45]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Now let's take this one stage further.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们进一步探讨这个问题。
- en: 'For example, if you want the RAM to cache up to 4 GB of data, you can use:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果您希望RAM缓存高达4 GB的数据，可以使用以下方法：
- en: '[PRE46]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Alternatively, if you want to improve the performance of a not-so-rich RAM-based
    environment, you can change this value to 512 MB like this:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，如果您想改善性能不太强大的基于RAM的环境，可以将此值更改为512 MB，如下所示：
- en: '[PRE47]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'You can now save and close this file before opening the following:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以保存并关闭这个文件，然后打开以下文件：
- en: '[PRE48]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'This file is the overall configuration file for Varnish. I will not go into
    the exact details at this point, as there are many Varnish-based books that cover
    this topic in an exhaustive manner. However, for the purpose of troubleshooting,
    you will need to make a few basic changes in order to get things up-and-running.
    To do this, simply ensure that the following section reflects the criteria of
    the system in question:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 这个文件是 Varnish 的整体配置文件。我现在不会详细讲解具体内容，因为有很多基于 Varnish 的书籍已经详细覆盖了这个话题。然而，为了故障排除，你需要进行一些基本的修改，以确保系统正常运行。为此，只需确保以下部分符合相关系统的要求：
- en: '[PRE49]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Having done this, you should now restart Apache in the following way:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此操作后，你现在应该按如下方式重启 Apache：
- en: '[PRE50]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Follow this by restarting Varnish like this:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 然后按如下方式重启 Varnish：
- en: '[PRE51]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Well done! The installation of Varnish is now complete; you can continue to
    visit your Apache-based websites in the usual manner, but with the added advantage
    of experiencing improved speed and performance.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 干得好！Varnish 的安装已经完成；你可以像往常一样继续访问基于 Apache 的网站，但现在有了额外的优势，能够体验到更快的速度和性能。
- en: Testing Varnish with cURL
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 cURL 测试 Varnish
- en: If the web server relies on Varnish, then it is particularly important to ensure
    that your web pages are being cached and that they are served in a timely manner.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 Web 服务器依赖于 Varnish，那么确保网页被缓存并及时提供尤其重要。
- en: 'To confirm this, you can begin with the following syntax:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 要确认这一点，你可以使用以下语法开始：
- en: '[PRE52]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Having used the `-I` option to display the headers only, if Varnish is installed,
    you should see something like this:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `-I` 选项仅显示头部信息后，如果 Varnish 已安装，你应该看到类似这样的内容：
- en: '[PRE53]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'In the preceding example, the most important lines are the following:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，最重要的行是以下几行：
- en: '[PRE54]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Now, let''s run through a quick explanation of these values:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们快速浏览一下这些值的解释：
- en: '`X-Varnish: XXXXXXXX XXXXXXXX`: The `X-Varnish` header not only contains an
    ID of the current request, but also maintains the ID of the request that populated
    the cache. If there is only one number, you should be aware that the cache was
    populated with the current request and can be considered to be what is termed
    a cache miss.'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`X-Varnish: XXXXXXXX XXXXXXXX`：`X-Varnish` 头不仅包含当前请求的 ID，还维护了填充缓存的请求 ID。如果只有一个数字，你应该知道缓存是由当前请求填充的，可以认为是所谓的缓存未命中。'
- en: '`Age: XXXX`: This value indicates how long the content has been stored in cache.
    If a zero (0) is shown, then it implies that the page in question was not cached
    at all.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Age: XXXX`：这个值表示内容在缓存中存储的时间。如果显示为零（0），则意味着该页面根本没有被缓存。'
- en: Of course, the exact values shown may be different, but having seen this example,
    you are now able to not only confirm and verify the functionality of Varnish on
    your server, but also keep a constant eye on the `Age` value given (you will know
    how long (in seconds) a page will exist in the cache).
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，显示的确切值可能不同，但通过这个例子，你现在不仅能够确认并验证服务器上 Varnish 的功能，还可以时刻关注给定的 `Age` 值（你将知道页面在缓存中存在的时间（秒））。
- en: Using cURL to access an FTP directory
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 cURL 访问 FTP 目录
- en: With practice, everyone can use an FTP client, but a situation where you need
    to script certain events is where you will call on cURL to do all the hard work.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 通过实践，每个人都可以使用 FTP 客户端，但当你需要脚本化某些事件时，就需要调用 cURL 来完成所有的繁重工作。
- en: 'So, by starting at the most basic level, the easiest way to access an FTP directory
    with an existing username and password will be as follows:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，从最基础的层面开始，访问带有现有用户名和密码的 FTP 目录的最简单方法如下：
- en: '[PRE55]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'When requested, simply enter your password at the prompt:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 当系统提示时，只需在提示符下输入你的密码：
- en: '[PRE56]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Now, if you want to search an FTP directory for a particular list of files,
    you can use the `-s` silent option and `grep` in combination like this:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你想在 FTP 目录中搜索特定的文件列表，可以像这样使用 `-s` 静默选项和 `grep` 组合：
- en: '[PRE57]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'You can complete your search and upload a file with the following command:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用以下命令完成搜索并上传文件：
- en: '[PRE58]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Or you can make a direct download with the following syntax:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 或者你可以使用以下语法直接下载：
- en: '[PRE59]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Again, you should enter the correct password when prompted but, having found
    the relevant file, you can use the following syntax to discover your current location:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，当提示时，你需要输入正确的密码，找到相关文件后，可以使用以下语法来发现你当前的位置：
- en: '[PRE60]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Finally, to bring this section to an end, you can delete a file in the following
    way:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，为了结束这一部分，你可以通过以下方式删除一个文件：
- en: '[PRE61]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: Remember that you need to be extra careful when deleting a file as there will
    be no prompts. The action to delete with cURL is automatic.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，在删除文件时需要格外小心，因为系统不会给出任何提示。使用 cURL 删除文件的操作是自动进行的。
- en: Enabling mod_status in Apache
  id: totrans-174
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启用 Apache 中的 mod_status
- en: The `mod_status` is an Apache module that assists in the practice of monitoring
    web server load and current `httpd` connections. It comes complete with an HTML
    interface, and it is accessible using any browser.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '`mod_status` 是一个 Apache 模块，帮助监控 Web 服务器负载和当前的 `httpd` 连接。它配有一个 HTML 界面，并且可以通过任何浏览器访问。'
- en: 'To use `mod_status`, we need to make a few basic configuration changes to the
    `VirtualHosts` file, so let''s start at the beginning by creating a rudimentary
    virtual host with the following command:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 `mod_status`，我们需要对 `VirtualHosts` 文件进行一些基本的配置更改，因此让我们从头开始，使用以下命令创建一个简单的虚拟主机：
- en: '[PRE62]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'Add the following lines:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 添加以下几行：
- en: '[PRE63]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Remember: if you are using Varnish, ensure that it uses the correct port:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 记住：如果你使用的是 Varnish，请确保它使用正确的端口：
- en: '[PRE64]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'Having done this, you can now add the following lines between the appropriate
    `<VirtualHost></VirtualHost>` directives in order to enable `mod_status`:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此操作后，你可以在适当的 `<VirtualHost></VirtualHost>` 指令之间添加以下几行，以启用 `mod_status`：
- en: '[PRE65]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'The end result should look something like this:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 最终的结果应该是这样的：
- en: '[PRE66]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: You can see the line that reads `Allow from all`. For the purpose of the preceding
    example, this is fine, but for security reasons, you should lock the connection
    access to a specific IP address.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到那行写着 `Allow from all`。对于前面的示例来说，这没问题，但出于安全考虑，你应该将连接访问限制为特定的 IP 地址。
- en: 'For this reason, a better option will be to use the following syntax:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，更好的选择是使用以下语法：
- en: '[PRE67]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'Of course, you should customize the preceding example code to suit the needs
    of your system; when you are finished, simply save and close the file before restarting
    Apache:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，你应该根据系统的需求定制前面的示例代码；完成后，保存并关闭文件，然后重新启动 Apache：
- en: '[PRE68]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'Now, open a browser and visit the chosen virtual host using the following format:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，打开浏览器，使用以下格式访问选定的虚拟主机：
- en: '`http://XXX.XXX.XXX.XXX/server-status`'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://XXX.XXX.XXX.XXX/server-status`'
- en: 'This will give you full access to the static `server-status` page. However,
    if you append the URL with the `refresh` option as follows, the page should refresh
    every 5 seconds:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使你能够完全访问静态的 `server-status` 页面。然而，如果你在 URL 后面加上 `refresh` 选项，如下所示，页面应该每 5
    秒刷新一次：
- en: '`http://XXX.XXX.XXX.XXX/server-status/?refresh=5`'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://XXX.XXX.XXX.XXX/server-status/?refresh=5`'
- en: The resulting page will then show you an array of information that includes
    server uptime, server load, the total number of connections, CPU usage, process
    IDs, the total number of requests, and which requests are currently being processed.
    All of this should prove most useful when you are attempting to highlight any
    issues related to a specific website on the Apache web server.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的页面将显示一系列信息，包括服务器运行时间、服务器负载、连接总数、CPU 使用率、进程 ID、请求总数以及当前正在处理的请求。所有这些都在你尝试诊断与特定网站相关的问题时非常有用。
- en: Summary
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: The purpose of this chapter was to take a very different view on troubleshooting
    web services. From auditing the server with cURL to making performance enhancements
    with Varnish, we have not only considered the needs of a systems administrator,
    but we have also discovered the world of CDNs and Dev/Ops with the intention of
    showing just how versatile a troubleshooter can be and just how important your
    skills will become.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的目的是以一种非常不同的方式来看待 Web 服务故障排除。从使用 cURL 审核服务器到使用 Varnish 做性能优化，我们不仅考虑了系统管理员的需求，还探索了
    CDN 和 Dev/Ops 的世界，目的是展示故障排除人员可以有多么灵活，以及你的技能将变得多么重要。
- en: In the next chapter, we will discuss some techniques used when troubleshooting
    DNS-based services.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将讨论一些故障排除 DNS 基于服务时使用的技巧。
- en: References
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: 'The Wikipedia home page for Curl: [http://en.wikipedia.org/wiki/CURL](http://en.wikipedia.org/wiki/CURL)'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Curl 的 Wikipedia 主页：[http://en.wikipedia.org/wiki/CURL](http://en.wikipedia.org/wiki/CURL)
- en: 'The Curl home page: [http://curl.haxx.se](http://curl.haxx.se)'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Curl 主页：[http://curl.haxx.se](http://curl.haxx.se)
- en: 'The Wikipedia home page for HTTP status codes: [http://en.wikipedia.org/wiki/List_of_HTTP_status_codes](http://en.wikipedia.org/wiki/List_of_HTTP_status_codes)'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTTP 状态码的 Wikipedia 主页：[http://en.wikipedia.org/wiki/List_of_HTTP_status_codes](http://en.wikipedia.org/wiki/List_of_HTTP_status_codes)
- en: 'HTTPie, a curl alternative: [https://github.com/jakubroztocil/httpie](https://github.com/jakubroztocil/httpie)'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTTPie，curl 的替代工具：[https://github.com/jakubroztocil/httpie](https://github.com/jakubroztocil/httpie)
- en: 'The Varnish home page: [https://www.varnish-cache.org](https://www.varnish-cache.org)'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Varnish 官网：[https://www.varnish-cache.org](https://www.varnish-cache.org)
- en: 'Varnish Administrator Documentation: [https://www.varnish-cache.org/docs/trunk/index.html](https://www.varnish-cache.org/docs/trunk/index.html)'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Varnish 管理员文档：[https://www.varnish-cache.org/docs/trunk/index.html](https://www.varnish-cache.org/docs/trunk/index.html)
