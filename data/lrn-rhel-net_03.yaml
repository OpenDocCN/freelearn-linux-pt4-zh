- en: Chapter 3. Configuring Key Network Services
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三章 配置关键网络服务
- en: It must be said that having a network is great and most fulfilling; however,
    the reasons for using that network must be challenged and understood. No one has
    a network for the sake of having a network, so we must bring services to our network
    to give it a purpose, meaning, and reason to exist.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 必须说，拥有一个网络是非常棒且充实的；然而，使用该网络的原因必须受到挑战并且得到理解。没有人会仅仅为了拥有一个网络而拥有网络，因此我们必须为我们的网络带来服务，以赋予其目的、意义和存在的理由。
- en: 'Of course, there are many and varied services that we can add, many of which
    are covered during the course of this book. To begin with, we will look at the
    following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们可以添加许多种类的服务，其中许多将在本书中涉及。首先，我们将关注以下主题：
- en: DNS (the name resolution)
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DNS（名称解析）
- en: DHCP (the IP address assignment)
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DHCP（IP地址分配）
- en: NTP / PTP (time services)
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NTP / PTP（时间服务）
- en: SMTP (e-mail)
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SMTP（电子邮件）
- en: Domain Name System
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 域名系统
- en: '**Domain Name System** (**DNS**) servers help us to resolve friendly computer
    names, such as [www.packtpub.com](http://www.packtpub.com), to a less human-friendly
    IP address, such as `83.166.169.231`. In this way, mere humans can access many
    computer systems by guessing the address or the DNS name. In the early days of
    UNIX computers, where access was limited to a few academic systems, hostnames
    were distributed by **Network Information Service** (**NIS**); a central computer
    maintained a single file that mapped hostnames to IP addresses. This file was
    then pushed out to client subscribers. Although this worked, it was clearly not
    scalable.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**域名系统**（**DNS**）服务器帮助我们将友好的计算机名称（如[www.packtpub.com](http://www.packtpub.com)）解析为不太人性化的IP地址（如`83.166.169.231`）。通过这种方式，人类只需猜测地址或DNS名称就能访问许多计算机系统。在UNIX计算机的早期，访问仅限于少数学术系统时，主机名是通过**网络信息服务**（**NIS**）分发的；一台中央计算机维护一个映射主机名到IP地址的文件。然后，这个文件被推送到客户端订阅者。尽管这种方法有效，但显然不可扩展。'
- en: In 1988, the first release of the DNS server was developed by four graduates
    from UCB (the University of California, Berkeley). This software in now maintained
    by the **ISC** (**Internet Systems Consortium**). Even today, it's still known
    as **Berkeley Internet Name Domain** (**BIND**).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 1988年，DNS服务器的第一个版本由四位来自加利福尼亚大学伯克利分校（UCB）的研究生开发。这款软件目前由**ISC**（**互联网系统联盟**）维护。即使在今天，它仍然被称为**伯克利互联网域名系统**（**BIND**）。
- en: 'On Red Hat Enterprise Linux 7.1, the version of the DNS server or bind that
    is shipped is 9.9.4\. Once installed, the version can be verified entering the
    following command:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在Red Hat Enterprise Linux 7.1中，随附的DNS服务器或bind版本为9.9.4。安装完成后，可以通过输入以下命令来验证版本：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The DNS server can be installed and run without changes to the configuration.
    In this mode, it will operate as a *Local Caching Only* server. When operated
    in this manner, a server can resolve names on the Internet, but it does not host
    any of its own records. Additionally, in a setup without configuration changes,
    only localhost can query the server. In its simplest form, a caching-only server
    is still useful, but you will want to at least open the access control list to
    allow queries from your own network for it to be useful. In this way, computers
    on a local network can resolve names from a local server. Only the single server
    needs access to the Internet for name resolution, decreasing the Internet footprint
    of the organization.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: DNS服务器可以安装并运行，而无需更改配置。在这种模式下，它将作为*仅本地缓存*服务器运行。当以这种方式操作时，服务器可以解析互联网中的名称，但不会托管任何自己的记录。此外，在没有配置更改的设置中，只有本地主机能够查询服务器。在其最简单的形式下，缓存-only服务器仍然有用，但为了使其有用，至少需要打开访问控制列表，以允许来自本地网络的查询。通过这种方式，局域网中的计算机可以从本地服务器解析名称。仅有一个服务器需要访问互联网进行名称解析，从而减少了组织的互联网足迹。
- en: Installing and configuring a Caching Only DNS server
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装和配置仅缓存DNS服务器
- en: To begin with, we will install the `bind` package on our system and configure
    it to resolve names for hosts on the local network. There is little to do here
    other than a simple change to the configuration file, but it will get us started.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将在系统上安装`bind`软件包，并将其配置为解析本地网络中主机的名称。除了对配置文件进行简单修改外，其他操作几乎不需要，但这将帮助我们入门。
- en: 'To install `bind` from console, enter the following command:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 要从控制台安装`bind`，请输入以下命令：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'With the package installed, we will now need to edit the `/etc/named.conf`
    configuration file:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完软件包后，我们现在需要编辑`/etc/named.conf`配置文件：
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We will edit three existing lines as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将按如下方式编辑三个现有的行：
- en: '`listen-on port 53 { 127.0.0.1; };` changes to the following:'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`listen-on port 53 { 127.0.0.1; };` 更改为以下内容：'
- en: '[PRE3]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '`listen-on-v6 port 53 { ::1; };` changes to the following:'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`listen-on-v6 port 53 { ::1; };` 更改为以下内容：'
- en: '[PRE4]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '`allow-query { localhost; };` changes to the following:'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`allow-query { localhost; };` 更改为以下内容：'
- en: '[PRE5]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The changes that we have made are explained here:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们所做的更改在此解释：
- en: Allows the DNS server to listen on all IPv4 interfaces
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许 DNS 服务器监听所有 IPv4 接口。
- en: Disallow the DNS server to listen on IPv6, unless you need it to listen on IPv6
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁止 DNS 服务器监听 IPv6，除非您需要它监听 IPv6。
- en: Allows queries from my local network
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许来自我本地网络的查询
- en: Adjusts the address range to match your network and the subnet mask
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调整地址范围以匹配您的网络和子网掩码。
- en: 'With the changes in place, we will be able to save them. We can test the changes
    before we start the server. To do so, we will use the following command:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 进行这些更改后，我们将能够保存它们。在启动服务器之前，我们可以测试这些更改。为此，我们将使用以下命令：
- en: '[PRE6]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The output should be silent. The only output will occur if there are errors
    in the configuration. If you prefer an output, then you can make use of the `-p`
    option:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 输出应该是静默的。只有在配置中出现错误时才会输出。如果您需要输出，您可以使用 `-p` 选项：
- en: '[PRE7]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Using this option, we will be presented with configuration options as they are
    interpreted by the service. If there are errors, we will only see errors and not
    the configuration.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此选项，我们将看到由服务解释的配置选项。如果存在错误，我们只会看到错误，而不是配置。
- en: 'We can now start and enable the DNS service with the `systemctl` command; the
    order in which commands are executed is not important:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以使用 `systemctl` 命令启动并启用 DNS 服务；命令执行的顺序不重要：
- en: '[PRE8]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'For the purpose of these labs, we will not run the firewall at present. You
    can check this on your system using the following command:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 出于这些实验的目的，目前我们将不运行防火墙。您可以通过以下命令检查系统：
- en: '[PRE9]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'If it''s running, then either stop the firewall if it''s not required or enable
    the DNS traffic on UDP and the TCP port `53` to pass into the system. To stop
    and disable the firewall, use the following command:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果它正在运行，那么要么停止防火墙（如果不需要的话），要么启用 UDP 和 TCP 端口 `53` 上的 DNS 流量，允许它进入系统。要停止并禁用防火墙，请使用以下命令：
- en: '[PRE10]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'From the local system, we can test the name resolution using our DNS server;
    we will use the IP address of our server to prove that it''s accessible from the
    network, rather than just from the localhost alias. You can use the same command
    and make sure that the `@address` at the end of the sequence points to the address
    of your server:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 从本地系统，我们可以使用我们的 DNS 服务器测试名称解析；我们将使用我们服务器的 IP 地址来证明它能从网络中访问，而不仅仅是从本地别名访问。您可以使用相同的命令并确保序列末尾的`@address`指向您的服务器地址：
- en: '[PRE11]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Tip
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Here, use the IP address of your DNS server in place of the address we use.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，使用您 DNS 服务器的 IP 地址替代我们使用的地址。
- en: You should now see the **ANSWER** section in your output, detailing the address
    of the Packt server.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在应该在输出中看到 **ANSWER** 部分，详细列出 Packt 服务器的地址。
- en: If you have another system on the same network, you can use the identical command
    to verify that it does indeed work for any host on your network.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在同一网络上有其他系统，您可以使用相同的命令验证它是否确实适用于网络中的任何主机。
- en: At this stage, we will have a working DNS configured in the caching-only mode.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一阶段，我们将拥有一个配置为仅缓存模式的工作 DNS。
- en: Configuring clients to use this server
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置客户端使用此服务器
- en: When we were using the `dig` command before to test our DNS lookups, we had
    hardcoded the name server that we used, ignoring the client configuration. Traditionally,
    the client configuration file was `/etc/resolv.conf`. We can still use this, but
    more often in more modern Linux systems, this is overwritten by the NetworkManager
    service, which will read the name server from the interface configuration. In
    this way, we can use different DNS servers for different connection profiles.
    Of course, DNS will work with other operating systems as well, including your
    Microsoft Windows desktops and Apple iPhones. Very often, the DNS server list
    is handed out to the **DHCP** service (**Dynamic Host Configuration Protocol**),
    affecting the configuration across all DHCP clients. We will look at DHCP a little
    later in this chapter.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 之前我们使用 `dig` 命令测试 DNS 查询时，我们硬编码了使用的名称服务器，忽略了客户端配置。传统上，客户端配置文件是 `/etc/resolv.conf`。我们仍然可以使用它，但在更多现代的
    Linux 系统中，这通常会被 NetworkManager 服务覆盖，该服务会从接口配置中读取名称服务器。这样，我们就可以为不同的连接配置文件使用不同的
    DNS 服务器。当然，DNS 也适用于其他操作系统，包括您的 Microsoft Windows 台式机和 Apple iPhone。通常，DNS 服务器列表由
    **DHCP** 服务（**动态主机配置协议**）分配，影响所有 DHCP 客户端的配置。稍后我们将在本章中讨论 DHCP。
- en: 'On RHEL 7.1, we can use the following command to display an active connection:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在 RHEL 7.1 上，我们可以使用以下命令来显示活动连接：
- en: '[PRE12]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: My active connection shows `eno16777736`; this is the same system that we worked
    with in the [Chapter 2](part0019.xhtml#aid-I3QM1 "Chapter 2. Configuring Network
    Settings"), *Configuring Network Settings*, where we looked at the consistent
    network device name that we find on modern Linux systems.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我的活动连接显示为 `eno16777736`；这与我们在[第 2 章](part0019.xhtml#aid-I3QM1 "第 2 章. 配置网络设置")，*配置网络设置*中使用的系统相同，我们在该章节中讨论了现代
    Linux 系统中一致的网络设备名称。
- en: 'We can modify DNS servers for this configuration using the `nmcli` command:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 `nmcli` 命令修改此配置的 DNS 服务器：
- en: '[PRE13]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'If the connection that is being modified relates to a traditional `ifcfg-`
    script, the corresponding file is also edited with the previous `nmcli` command.
    This is the case with the connection that we have modified. We can view the changes
    by looking at the file that `nmcli` modified:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果正在修改的连接涉及传统的 `ifcfg-` 脚本，那么相应的文件也会通过前面的 `nmcli` 命令进行编辑。这就是我们修改的连接情况。我们可以通过查看
    `nmcli` 修改的文件来查看更改：
- en: '[PRE14]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'To implement changes, we can restart the `NetworkManger` service as follows:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 要实施更改，我们可以通过以下方式重新启动 `NetworkManager` 服务：
- en: '[PRE15]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'We can now perform the DNS lookup with dig without the need to specify the
    address of our server:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以使用 dig 命令执行 DNS 查询，而无需指定服务器的地址：
- en: '[PRE16]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Here, we have been able to configure the local client to resolve hostnames from
    the locally configured DNS server.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们已经能够配置本地客户端，从本地配置的 DNS 服务器解析主机名。
- en: Tip
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: As a quick solution, editing the `/etc/resolv.conf` file will work, but it may
    be overwritten if the changes are not made with the NetworkManager service.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一种快速解决方案，编辑 `/etc/resolv.conf` 文件是可行的，但如果不通过 NetworkManager 服务进行更改，可能会被覆盖。
- en: Configuring the DNS zone
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置 DNS 区域
- en: One reason to configure a local DNS server is to provide a centralized configuration
    for name lookups for your local servers. We will now look at how to configure
    a DNS zone to provide a name resolution for local servers. We will configure a
    zone called `tup.local.`; using the local suffix will ensure that the zone is
    configured locally and only available to DNS servers we configure with this zone.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 配置本地 DNS 服务器的一个原因是为本地服务器的名称查找提供集中式配置。接下来我们将介绍如何配置一个 DNS 区域，为本地服务器提供名称解析。我们将配置一个名为
    `tup.local.` 的区域；使用本地域后缀将确保该区域仅在我们配置的 DNS 服务器上可用。
- en: As a caching-only DNS server, we have not hosted DNS zones thus far. A DNS zone
    is simply a text file that houses hostnames to IP address mappings. We can see?
    which zones we host in the `/etc/named.conf` file. Zone files are stored in the
    `/var/named` directory.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个仅缓存的 DNS 服务器，我们目前没有托管 DNS 区域。DNS 区域只是一个文本文件，包含主机名与 IP 地址的映射。我们可以查看在 `/etc/named.conf`
    文件中托管了哪些区域。区域文件存储在 `/var/named` 目录中。
- en: Referencing the zone from /etc/named.conf
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 引用 /etc/named.conf 中的区域
- en: 'Within the bind configuration file, we must point to the zone file. The following
    example illustrates how this can be achieved:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在 BIND 配置文件中，我们必须指向区域文件。以下示例演示了如何实现这一点：
- en: 'Open `named.conf` using the following command:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令打开 `named.conf`：
- en: '[PRE17]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Add the following section at the end of the file:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在文件末尾添加以下部分：
- en: '[PRE18]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Tip
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'Do not forget the dot after the domain name: `tup.local`.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忘记域名后的点：`tup.local`。
- en: 'With the file configured and saved, we can check the configuration file as
    before:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 配置并保存文件后，我们可以像之前一样检查配置文件：
- en: '[PRE19]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Creating the zone file
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建区域文件
- en: 'We have configured the DNS server to point to the `named.tup` file. By default,
    this file needs to exist within the `/var/named/` directory on RHEL 7.1\. This
    directory location is dictated by the directory directive in the main options
    of the `named.conf` file. This extract is taken from the `/etc/named.conf` file
    and shows the configuration of the directory root:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已配置DNS服务器指向`named.tup`文件。默认情况下，该文件需要存在于RHEL 7.1的`/var/named/`目录中。该目录位置由`named.conf`文件主选项中的目录指令决定。此摘录来自`/etc/named.conf`文件，显示了目录根的配置：
- en: '[PRE20]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'First, create an empty zone file and set the permissions so that it can be
    read by the DNS server. The `touch` command will create an empty file. We set
    the permissions to be readable/writable by the user owner and only readable by
    the group owner. Finally, we set the permissions for the group owner of the file
    to named (the group used by the DNS server):'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，创建一个空的区域文件，并设置权限，使其可以被DNS服务器读取。`touch`命令将创建一个空文件。我们将权限设置为用户所有者可读/写，组所有者仅可读。最后，我们将文件的组所有者权限设置为`named`（DNS服务器使用的组）：
- en: '[PRE21]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'With the file and permissions in place, we can edit the file as root using
    `sudo`, so it reads similar to the following screenshot:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 文件和权限到位后，我们可以使用`sudo`以root身份编辑文件，使其与以下截图类似：
- en: '![Creating the zone file](img/image00206.jpeg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![创建区域文件](img/image00206.jpeg)'
- en: 'We can interpret the preceding screenshot line by line as follows:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以逐行解释上面的截图如下：
- en: '`$ORIGIN tup.local.`: This sets the name of the DNS domain to be appended to
    all names not ending in a dot.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`$ORIGIN tup.local.`：这设置了DNS域名的名称，所有未以点号结尾的名称将附加此域名。'
- en: '`$TTL 1D`: This directive sets the default time that records may be retrieved
    from cache **TTL** (**Time To Live**). The value is normally in seconds, but we
    can use letters defining larger units, such as `H` for hours, `D` for days, or
    even `W` for weeks. It''s possible to overwrite this default value within an individual
    DNS record. The larger the value assigned to TTL, the longer it will take to propagate
    changes on the Internet because records may still be served from cache for the
    TTL time period. The shorter the TTL is set, shorter the time to propagate changes,
    but more lookups will be performed on the server.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`$TTL 1D`：该指令设置记录从缓存中检索的默认时间**TTL**（**生存时间**）。该值通常以秒为单位，但我们可以使用字母来定义更大的单位，例如`H`表示小时，`D`表示天，甚至`W`表示周。也可以在单独的DNS记录中覆盖此默认值。TTL值越大，传播更改到互联网的时间越长，因为记录可能会在TTL时间段内仍从缓存中提供。TTL设置得越短，传播更改的时间越短，但服务器上的查询次数会增加。'
- en: '`@ IN SOA ns1 root ( … )`: This sets the **Start Of Authority** (**SOA**) record
    for the `tup.local.` DNS domain. The `@` symbol represents this domain and the
    SOA record is set to the `ns1.tup.local` computer`.` Remember`$ORIGIN` and the
    e-mail contact is `root@tup.local.`. The brackets contain the serial number and
    timeouts used in the domain. The expiry record is overwritten by the `$TTL` directive
    where it''s used.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`@ IN SOA ns1 root ( … )`：这设置了`**Start Of Authority**`（**SOA**）记录，适用于`tup.local.`
    DNS域名。`@`符号表示该域，SOA记录设置为`ns1.tup.local`计算机。`记住`$ORIGIN`以及电子邮件联系地址是`root@tup.local.`。括号中包含了该域使用的序列号和超时时间。过期记录由`$TTL`指令覆盖（如果它被使用）。'
- en: '`NS ns1`: This sets the name server record for the domain. If we have additional
    slave servers, we can add more NS records in the zone.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`NS ns1`：这设置了域的名称服务器记录。如果我们有额外的从属服务器，可以在区域中添加更多的NS记录。'
- en: '`ns1 A 192.168.40.3`: This sets the IP address mapping for the `ns1.tup.local.`
    server to the IP address we have set on the system. A single `A` represents an
    IPv4 address mapping, while `AAAA` will represent on IPv6 mapping.'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ns1 A 192.168.40.3`：这设置了`ns1.tup.local.`服务器的IP地址映射到我们在系统中设置的IP地址。单个`A`表示IPv4地址映射，而`AAAA`表示IPv6地址映射。'
- en: 'When we complete the edit, we can check the zone syntax and integrity. In the
    command line, we enter the following command:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑完成后，我们可以检查区域的语法和完整性。在命令行中，输入以下命令：
- en: '[PRE22]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The output should be similar to the following screenshot from the demonstration
    system:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 输出应类似于演示系统中的以下截图：
- en: '![Creating the zone file](img/image00207.jpeg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![创建区域文件](img/image00207.jpeg)'
- en: 'Having edited the `/etc/named.conf` file and implemented the new zone `/var/named/named.tup`
    database file, we are now ready to restart the service. We have also checked `named.conf`
    with the `named-checkconf` command and the zone file with the `named-checkzone`
    command, so we can be reassured of the integrity of the changes we have made;
    with this in mind, we will restart the service with `systemctl`:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在编辑了`/etc/named.conf`文件并实现了新的区域`/var/named/named.tup`数据库文件后，我们现在准备重新启动服务。我们还使用`named-checkconf`命令检查了`named.conf`，并使用`named-checkzone`命令检查了区域文件，因此我们可以放心我们所做的更改是完整的；考虑到这一点，我们将使用`systemctl`重新启动服务：
- en: '[PRE23]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'We can use `dig` or even just `ping` to check the operation of the zone now:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以使用`dig`或甚至只是`ping`来检查区域的操作：
- en: '[PRE24]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Although we have only added a single record, there is nothing stopping us from
    adding more records as required. The serial number is normally incremented after
    zone changes, but it's used more to indicate when the changes have been made.
    Slave servers should synchronize these changes. If you have only the master server,
    there is no need to increment the serial number. Later in this chapter, we will
    add an **MX** or **Mail Exchange** record to support the use of e-mail delivery
    in the out domain.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们只添加了一个记录，但没有任何阻止我们根据需要添加更多记录的原因。序列号通常会在区域更改后递增，但它更多地用于指示更改发生的时间。从属服务器应同步这些更改。如果你只有主服务器，则不需要递增序列号。本章后面，我们将添加一个**MX**或**邮件交换**记录，以支持在外部域中使用电子邮件传递。
- en: Configuring a DHCP server
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 DHCP 服务器
- en: The **DHCP** (**Dynamic Host Configuration Protocol**) server is used to assign
    IP addresses to network hosts, rather than having to statically assign records
    to each host. This is, of course, particularly useful where guest devices—such
    as mobile phones and tablets—connect to you network.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '**DHCP**（**动态主机配置协议**）服务器用于为网络主机分配 IP 地址，而不需要为每个主机静态分配记录。当然，这在客用设备——如手机和平板电脑——连接到网络时特别有用。'
- en: 'On Red Hat Enterprise Linux 7, a single DHCP server can supply IPv4 and IPv6
    configurations. Each configuration has its own separate file: `/etc/dhcp/dhcpd.conf`
    for IPv4 configurations and `/etc/dhcpd/dhcpd6.conf` for IPv6 configurations.
    Additionally, if you are used to the previous editions of Red Hat, there is no
    longer any need to configure the interface in `/etc/sysconfig/dhcp`. RHEL 7 will
    automatically listen on all interfaces that match a subnet definition in the `dhcpd.conf`
    or `dhcpd6.conf` file. In other words, interfaces that the DHCP server will listen
    for DHCP requests will match those interfaces that have addresses within the defined
    DHCP subnet.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Red Hat Enterprise Linux 7 上，一个 DHCP 服务器可以同时提供 IPv4 和 IPv6 配置。每个配置都有自己的独立文件：IPv4
    配置文件是`/etc/dhcp/dhcpd.conf`，IPv6 配置文件是`/etc/dhcpd/dhcpd6.conf`。此外，如果你习惯于以前版本的
    Red Hat，不再需要在`/etc/sysconfig/dhcp`中配置接口。RHEL 7 会自动监听所有与`dhcpd.conf`或`dhcpd6.conf`文件中子网定义匹配的接口。换句话说，DHCP
    服务器监听 DHCP 请求的接口将匹配那些在定义的 DHCP 子网内有地址的接口。
- en: Tip
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'If you have not configured the DNS server on the same system, you will need
    to create an empty lease file before the service will start, as shown in the following
    command:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有在同一系统上配置 DNS 服务器，你需要在服务启动之前创建一个空的租约文件，如以下命令所示：
- en: '[PRE25]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'You can install the DHCP Server using the following command line:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用以下命令行安装 DHCP 服务器：
- en: '[PRE26]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'In this example, we will configure the server to issue the IPv4 address configuration
    by editing the `/etc/dhcp/dhcpd.conf` file. The configuration file will be empty,
    except for a few comments. A simple configuration that is shown as follows, will
    match the configuration that we have been using on our demo system:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们将通过编辑`/etc/dhcp/dhcpd.conf`文件来配置服务器发放 IPv4 地址配置。配置文件将是空的，除了几条注释。一个简单的配置如下所示，这将与我们在演示系统中使用的配置相匹配：
- en: '[PRE27]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The resulting file should be similar to the following screenshot:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的文件应类似于以下屏幕截图：
- en: '![Configuring a DHCP server](img/image00208.jpeg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![配置 DHCP 服务器](img/image00208.jpeg)'
- en: 'Let''s interpret the preceding screenshot line by line as follows:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐行解释前面的屏幕截图：
- en: '`option domain-name "tup.local";`: This configures the domain name to append
    to the client name.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`option domain-name "tup.local";`：这将配置要附加到客户端名称的域名。'
- en: '`option domain-name-servers 192.168.40.3;`: This sets the DNS server or servers.
    If more than one server is used, addresses are separated by spaces.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`option domain-name-servers 192.168.40.3;`：这设置了 DNS 服务器。如果使用多个服务器，地址之间用空格分隔。'
- en: '`default-lease-time 86400;`: This is a value specified in seconds, where we
    set the DHCP lease time. The value of `86400` is one day. The maximum lease time
    is similar, but it''s used only if a client requests a lease time.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`default-lease-time 86400;`：这是一个以秒为单位的值，我们用它来设置 DHCP 租约时间。值 `86400` 表示一天。最大租约时间是类似的，但仅在客户端请求租约时间时使用。'
- en: '`ddns-update-style none;`: This disables the dynamic DNS, according to which
    the DHCP server will create DNS entries for clients that are issued with an IP
    address.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ddns-update-style none;`：此命令禁用动态 DNS，根据该设置，DHCP 服务器将为获得 IP 地址的客户端创建 DNS 记录。'
- en: '`log-facility local7;`: This sets the syslog facility that is used by DHCP.
    Entries in log files will be shown as coming from the `local7` facility. DHCP
    does not have its own facility entry.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`log-facility local7;`：此命令设置 DHCP 使用的 syslog 功能。日志文件中的条目将显示为来自 `local7` 功能。DHCP
    没有自己的功能条目。'
- en: Then follows subnet definitions, where we describe the network, subnet mask,
    address, and options that will be issued for the subnet.
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接下来是子网定义，我们在此描述网络、子网掩码、地址以及将为子网发放的选项。
- en: 'With this, we should now be familiar with the next step. Here, we start and
    enable the service using system:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此操作后，我们应该熟悉接下来的步骤。在此，我们使用系统启动并启用该服务：
- en: '[PRE28]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Tip
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: If you are running on a network where a DHCP server is already present, you
    will need to ensure that it's stopped before stating your own server. This includes
    the VMware Player and Virtual Box applications that can issue addresses on their
    private networks through their own DHCP service. Refer to your virtualization
    software for more help if required.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在一个已经存在 DHCP 服务器的网络上运行，需要确保在启动自己的服务器之前停止该服务器。这包括可以通过其自己的 DHCP 服务在其私人网络上发放地址的
    VMware Player 和 Virtual Box 等应用程序。如有需要，请参考你的虚拟化软件获取更多帮助。
- en: 'If you have additional RHEL 7 clients on a network, they can be forced to renew
    their DHCP leases with the following command:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的网络中有额外的 RHEL 7 客户端，可以通过以下命令强制它们续订 DHCP 租约：
- en: '[PRE29]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Here is an example:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个示例：
- en: '[PRE30]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The preceding command will renew the DHCP lease on the Ethernet PCI card plugged
    in to the PCI bus address `12` and slot `0`. If a lease or leases have been issued
    by your server, you can check the leases file. This can be read as a standard
    user with the following command:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将会续订插入到 PCI 总线地址为 `12` 且插槽为 `0` 的以太网 PCI 卡上的 DHCP 租约。如果你的服务器已经发放了租约，你可以通过以下命令检查租约文件。该文件可以作为普通用户读取：
- en: '[PRE31]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'The following screenshot shows a lease from the demonstration RHEL 7.1 system
    and the lease for the host named `trusty`:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了来自演示 RHEL 7.1 系统的租约，以及名为 `trusty` 主机的租约：
- en: '![Configuring a DHCP server](img/image00209.jpeg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![配置 DHCP 服务器](img/image00209.jpeg)'
- en: With the DHCP server in place, we will move on to how to configure our basic
    networking services with a DNS and DHCP server. We will make this a little better
    by looking at time services.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在配置了 DHCP 服务器后，我们将继续了解如何使用 DNS 和 DHCP 服务器配置基本的网络服务。我们会通过查看时间服务使其更加完善。
- en: Configuring time services on RHEL 7
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 RHEL 7 上配置时间服务
- en: One of the essential services on your network is the supply of accurate time.
    This is required for authentication with Active Directory or other Kerberos-based
    mechanisms and to make timestamps useful in log files.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 网络中的一个基本服务是提供准确的时间。这对于与 Active Directory 或其他基于 Kerberos 的机制进行身份验证以及使日志文件中的时间戳具有实际意义是必需的。
- en: '**Network Time Protocol** (**NTP**) uses UDP and the traditional port `123`.
    This protocol dictates the number of seconds that have elapsed since midnight
    on January 1, 1900\. NTP is 32 bit, which means that the maximum time will be
    reached in 2036; however, as only the difference in timestamps is used rather
    than the actual time, the date does not present an issue unlike UNIX time ending
    in 2038, which is a little more serious.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '**网络时间协议**（**NTP**）使用 UDP 协议和传统的端口 `123`。该协议规定自 1900 年 1 月 1 日午夜以来已经过去的秒数。NTP
    是 32 位的，这意味着最大时间将于 2036 年到达；然而，由于仅使用时间戳之间的差异，而不是实际时间，因此日期不会出现问题，不像 UNIX 时间在 2038
    年结束时会出现较为严重的问题。'
- en: Once the time service is started and synchronized with another time source,
    the client time can be changed to match the server's time as long as the time
    is said to be sane. Insane time is said to be a server, offering a time with more
    than 1000 seconds offset to the client. Using this level of sanity, a client is
    prevented from synchronizing with a rogue time source.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦时间服务启动并与另一个时间源同步，只要时间被认为是正常的，客户端时间就可以调整为与服务器的时间匹配。异常时间指的是服务器提供的时间与客户端之间的偏差超过
    1000 秒。通过这种时间正常性，客户端可以防止与不可信的时间源同步。
- en: It's also possible to deploy **Precision Time Protocol** (**PTP**). This works
    with a hardware or software support on your **Network Interface Card** (**NIC**).
    Firstly, we will look at common NTP implementations and then look at PTP.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以部署 **精确时间协议** (**PTP**)。这需要硬件或软件支持，支持的设备包括 **网络接口卡** (**NIC**)。首先，我们将查看常见的
    NTP 实现，然后再讨论 PTP。
- en: The provision of NTP on RHEL 7 can be done via the `chronyd` or `ntpd` daemon
    itself. The `chronyd` daemon is enabled by default; however, this is really designed
    for desktops and machines that are often disconnected from networks. Synchronization
    of time with `chronyd` is much quicker than `ntpd` and is therefore suitable for
    machines that are booted frequently or often suspended. The `ntpd` daemon is still
    preferred for servers because it supports more authentication options and can
    broadcast time over the network.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在 RHEL 7 上提供 NTP 服务可以通过 `chronyd` 或 `ntpd` 守护进程本身实现。默认情况下启用 `chronyd` 守护进程；然而，这主要是为桌面和经常与网络断开连接的机器设计的。`chronyd`
    的时间同步速度比 `ntpd` 快，因此更适合那些频繁启动或经常挂起的机器。由于 `ntpd` 支持更多的认证选项并能在网络上传播时间，因此仍然是服务器的首选。
- en: To help maintain accurate time even when the time server may not be available,
    both `chronyd` and `ntpd` can implement a drift file. The drift file is maintained
    on the client and shows the offset in the frequency of the local hardware clock
    and the frequency of the remote time source.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在时间服务器不可用时也能保持准确时间，`chronyd` 和 `ntpd` 都可以实现漂移文件。漂移文件保存在客户端，并显示本地硬件时钟与远程时间源频率之间的偏移。
- en: NTP is based on a hierarchy of servers. Each server is assigned a stratum number.
    The possible start values range from 0 to 15\. Stratum 16 indicates that time
    services are not available. A time server with a stratum value of 0 gets its time
    from a physical time source (such as a GPS clock or an atomic clock). A stratum
    1 server retrieves its time from a stratum 0 server, and so on.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: NTP 基于一个服务器层次结构。每个服务器都分配一个层次编号。可能的起始值范围从 0 到 15。层次 16 表示时间服务不可用。层次 0 的时间服务器从物理时间源（如
    GPS 时钟或原子钟）获取时间。层次 1 的服务器从层次 0 服务器获取时间，以此类推。
- en: Implementing chronyd
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实现 chronyd
- en: 'As mentioned in the introduction of this section, `chronyd` is enabled by default
    on the RHEL 7.1 system we are using for this book. We can see the output of the
    status subcommand for this service with `systemctl` in the following screenshot:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 如本节介绍所提到的，`chronyd` 在我们为本书使用的 RHEL 7.1 系统上默认启用。我们可以在以下截图中查看该服务的 `systemctl`
    状态子命令输出：
- en: '![Implementing chronyd](img/image00210.jpeg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![实现 chronyd](img/image00210.jpeg)'
- en: As we can see from the preceding output of `sudo systemctl status`, `chronyd`
    is described as an NTP client/server. This is similar to what we expect from the
    traditional `ntpd` daemon. If `chronyd` acts as a service as well, then we should
    listen on port `123`. We can use the `netstat` command to display this. If we
    use the command with root privileges, we also see that the service holding the
    port open is `chronyd`. The `-p` option displays this, but requires root privileges.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 从之前的 `sudo systemctl status` 输出中可以看到，`chronyd` 被描述为一个 NTP 客户端/服务器。这与我们从传统的 `ntpd`
    守护进程中预期的类似。如果 `chronyd` 也作为服务运行，那么我们应该监听 `123` 端口。我们可以使用 `netstat` 命令来显示这一点。如果我们使用根权限执行该命令，我们还会看到持有该端口的服务是
    `chronyd`。`-p` 选项显示此信息，但需要根权限。
- en: 'We run the following command:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 我们运行以下命令：
- en: '[PRE32]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The output is shown in the following screenshot:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如以下截图所示：
- en: '![Implementing chronyd](img/image00211.jpeg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![实现 chronyd](img/image00211.jpeg)'
- en: 'Going beyond what the output of `systemctl status` can display to use, we can
    see more detail on the synchronization status of `chronyd` using the `chronyc`
    command-line tool. Hopefully, you can see the pattern in the names now: `chronyd`
    for the service or daemon and `chronyc` for the command-line tool.'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 超越`systemctl status`输出所能显示的内容，我们可以使用`chronyc`命令行工具查看更多关于`chronyd`同步状态的细节。希望你现在能看到命名中的模式：`chronyd`是服务或守护进程，而`chronyc`是命令行工具。
- en: 'To show which server has been selected and the status of synchronization, we
    will use the following command:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 为了显示选定的服务器以及同步状态，我们将使用以下命令：
- en: '[PRE33]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The following screenshot shows the output of the `chronyc` command. If you
    look carefully at the output, you will see the command and then the output that
    follows the issuance of the same:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了`chronyc`命令的输出。如果仔细观察输出，你会看到命令及其后续的输出：
- en: '![Implementing chronyd](img/image00212.jpeg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![实现chronyd](img/image00212.jpeg)'
- en: '`Reference ID` shows the current server that we use to synchronize time with.
    `Frequency` shows as `ppm` (parts per million). This indicates the rate at which
    the system clock can become wrong if it was not synchronized. The value here of
    `0.8` means that after 1,000,000 seconds of not synchronizing, the clock will
    have an inaccuracy of `0.8` seconds; not at all bad. `Update Interval` shows how
    frequently we are currently synchronizing This expands to a much larger value
    than possible with `ntpd` being limited to 2 ^ 10 seconds (1024). This interval
    is quite permissible, given the accuracy of our clock.'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '`Reference ID`显示了当前用于同步时间的服务器。`Frequency`显示为`ppm`（百万分之一）。这表示系统时钟在未同步的情况下可能出错的速率。这里的值`0.8`意味着，如果1,000,000秒内没有同步，时钟将有`0.8`秒的误差；这并不算太糟。`Update
    Interval`显示了我们当前同步的频率。这个值比`ntpd`限制的2 ^ 10秒（1024秒）要大得多。鉴于我们时钟的精度，这个间隔是完全可以接受的。'
- en: 'With the following command, we can display all servers that we have configured
    to synchronize with:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令，我们可以显示所有已配置的同步服务器：
- en: '[PRE34]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'If we want an on screen display of the meaning of columns, we can use the `-v`
    option. The output is shown in the following screenshot:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们希望在屏幕上显示列的含义，可以使用`-v`选项。输出结果如下所示：
- en: '![Implementing chronyd](img/image00213.jpeg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![实现chronyd](img/image00213.jpeg)'
- en: If we want to synchronize ourselves with one of our own local time servers,
    we can edit the `/etc/chrony.conf` configuration file. It will seem reasonable
    to allocate one server on your network as a time server and use this server as
    a time reference for the network. The single server then can synchronize with
    external time sources. This ensures accurate time to all servers on the network
    while maintaining a small Internet footprint, thus limiting servers that need
    to access the time servers on the Internet.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要与自己的本地时间服务器同步，可以编辑`/etc/chrony.conf`配置文件。合理的做法是将你网络中的一个服务器分配为时间服务器，并将该服务器作为网络的时间参考。然后，这个单独的服务器可以与外部时间源同步。这样可以确保网络中所有服务器的时间准确，同时保持较小的互联网带宽，从而限制需要访问互联网时间服务器的服务器数量。
- en: 'The `server` directive within the configuration file defines potential synchronization
    partners. To set a bias towards your local server, the `prefer` option can be
    used. The following screenshot shows my edited file, where I leave just one of
    the original entries and add my own local time source:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 配置文件中的`server`指令定义了潜在的同步伙伴。为了偏向本地服务器，可以使用`prefer`选项。以下截图展示了我编辑后的文件，在文件中我保留了原始条目中的一个，并添加了自己的本地时间源：
- en: '![Implementing chronyd](img/image00214.jpeg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![实现chronyd](img/image00214.jpeg)'
- en: 'For any changes to take effect, the `chronyd` service should be restarted:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使任何更改生效，应该重启`chronyd`服务：
- en: '[PRE35]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: The frequency of synchronization will start slowly and gradually rise to match
    the accuracy of the offset frequency. Checking the output of `chronyc` tracking
    soon after the restart will show a value of 64 seconds for `Update Frequency`;
    however, this will increase to a larger interval over time.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 同步频率将从较低的频率开始，逐渐上升，直到匹配偏移频率的精度。在重启后不久，检查`chronyc`跟踪的输出会显示`Update Frequency`为64秒；然而，随着时间的推移，这个间隔会增加。
- en: Implementing ntpd
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实现ntpd
- en: 'If you want to revert to the traditional `ntpd` daemon for time services, you
    can install the `ntp` package. The main advantage of the traditional package is
    the option of broadcast and stronger **ACL** (**Access Control List**). To install
    the package, you can use the following command:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想恢复到传统的`ntpd`守护进程提供时间服务，你可以安装`ntp`包。传统包的主要优点是广播选项和更强的**ACL**（**访问控制列表**）。要安装该包，可以使用以下命令：
- en: '[PRE36]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'The configuration file is located at `/etc/ntp.conf` and is not similar to
    the `chrony` file. When we edit `ntp.conf` in a similar way to `chrony.conf`,
    we will be able to configure a local server as before, as shown in the following
    screenshot:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 配置文件位于`/etc/ntp.conf`，它与`chrony`文件不同。当我们像编辑`chrony.conf`一样编辑`ntp.conf`时，我们将能够像之前一样配置本地服务器，如下图所示：
- en: '![Implementing ntpd](img/image00215.jpeg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![Implementing ntpd](img/image00215.jpeg)'
- en: The additional ACLs that we find here are defined using the `restrict` keyword.
    The local host address is not restricted at all, although everyone else is affected
    by the default restriction.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在此找到的额外ACL是使用`restrict`关键字定义的。虽然本地主机地址不受任何限制，但其他所有人都受到默认限制的影响。
- en: 'The default restriction is explained here:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的限制在此处进行了解释：
- en: '`nomodify`: This prevents any changes to the configuration via the NTP protocol.'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nomodify`：这阻止通过NTP协议对配置进行任何更改。'
- en: '`notrap` : This prevents `ntpdc` control traps that are designed for use by
    the remote logging program.'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`notrap` ：这阻止了`ntpdc`控制陷阱，控制陷阱是由远程日志程序使用的。'
- en: '`nopeer` :This prevents peer associations from being created, where 50 percent
    adjustments are made by each peer.'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nopeer` ：这阻止了对等关联的创建，其中每个对等方都会进行50%的调整。'
- en: '`noquery` :This prevents information on the status of the time server being
    accessed. Do not confuse this with preventing access to a time server. This option
    will still allow normal NTP time queries from clients. Should you want to restrict
    access to the time service, use `noserve`.'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`noquery` ：这可以防止访问时间服务器状态的信息。不要将其与阻止访问时间服务器混淆。此选项仍然允许客户端进行正常的NTP时间查询。如果你想限制对时间服务的访问，请使用`noserve`。'
- en: 'When you are comfortable with the changes made to your `/etc/ntp.conf` file,
    we will need first to stop and disable the `chronyd` service and then enable and
    start the `ntpd` service:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 当你对`/etc/ntp.conf`文件中的更改感到满意时，我们需要首先停止并禁用`chronyd`服务，然后启用并启动`ntpd`服务：
- en: '[PRE37]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'To query the status of a service, we will use the `ntpq -p` command. The output
    is shown in the following screenshot, indicating on my system that the server
    being used to synchronize with is `192.168.0.3` (indicated by asterix):'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 要查询服务的状态，我们将使用`ntpq -p`命令。输出如下图所示，指示在我的系统中用于同步的服务器是`192.168.0.3`（由星号标记）：
- en: '![Implementing ntpd](img/image00216.jpeg)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![Implementing ntpd](img/image00216.jpeg)'
- en: Implementing PTP on RHEL 7
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在RHEL 7上实现PTP
- en: '**Precision Time Protocol** (**PTP**) like NTP is used to synchronize clocks
    on a network, but unlike NTP, if PTP is used with hardware support that can achieve
    sub-microsecond accuracy; support for PTP comes from your NIC in either software
    or hardware forms. The `linuxptp` package provides `ptp4l` and `phc2sys` programs
    (PTP for Linux and physical clock to system clock). However, `phc2sys` is only
    needed for hardware timestamping. Although implemented within NICs, many networking
    components (including switches) support PTP in software or hardware modes, thus
    enabling servers to synchronize time with their switch. The process is far more
    automated than traditional NTP and more accurate with each clock running the best
    master software that can select the best master to synchronize with. It''s best
    suited to Enterprise networks because switches will often provide time to devices
    they serve.'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '**精确时间协议** (**PTP**) 与NTP一样用于在网络上同步时钟，但与NTP不同，如果PTP与硬件支持一起使用，可以实现亚微秒级的精度；PTP的支持来自于你的NIC，可以是软件或硬件形式。`linuxptp`包提供了`ptp4l`和`phc2sys`程序（Linux的PTP和物理时钟到系统时钟）。然而，`phc2sys`仅在硬件时间戳情况下需要。虽然在NIC内实现，但许多网络组件（包括交换机）支持软件或硬件模式的PTP，从而使服务器能够与其交换机同步时间。这个过程比传统的NTP更加自动化，并且每个时钟运行最好的主控软件，能够选择最佳主机进行同步。它最适合企业网络，因为交换机会经常为它们所服务的设备提供时间。'
- en: 'Many NICs support software timestamping, but to query your own interface, use
    the following command, which will display the timestamping capabilities of your
    selected interface:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 许多网络接口卡（NIC）支持软件时间戳，但要查询自己的接口，请使用以下命令，它将显示所选接口的时间戳能力：
- en: '[PRE38]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Adjust the preceding command to match the interface that you wish to interrogate.
    For the software support, we need to find the following lines in the output:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 调整前面的命令以匹配您希望查询的接口。对于软件支持，我们需要在输出中找到以下行：
- en: '`SOF_TIMESTAMPING_SOFTWARE`'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SOF_TIMESTAMPING_SOFTWARE`'
- en: '`SOF_TIMESTAMPING_TX_SOFTWARE`'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SOF_TIMESTAMPING_TX_SOFTWARE`'
- en: '`SOF_TIMESTAMPING_RX_SOFTWARE`'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SOF_TIMESTAMPING_RX_SOFTWARE`'
- en: 'For the hardware support, we will need the following options:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 对于硬件支持，我们需要以下选项：
- en: '`SOF_TIMESTAMPING_RAW_HARDWARE`'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SOF_TIMESTAMPING_RAW_HARDWARE`'
- en: '`SOF_TIMESTAMPING_TX_HARDWARE`'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SOF_TIMESTAMPING_TX_HARDWARE`'
- en: '`SOF_TIMESTAMPING_RX_HARDWARE`'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SOF_TIMESTAMPING_RX_HARDWARE`'
- en: 'The output from my system is shown in the following screenshot:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 我系统的输出显示如下截图：
- en: '![Implementing PTP on RHEL 7](img/image00217.jpeg)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![在 RHEL 7 上实现 PTP](img/image00217.jpeg)'
- en: 'To install `linuxptp` on the system, we can use the following command to install
    from standard Red Hat repositories:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 要在系统上安装 `linuxptp`，我们可以使用以下命令从标准 Red Hat 仓库进行安装：
- en: '[PRE39]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'The services can be run from the command line as a simple test. However, prior
    to this, we should stop NTP if it''s running. This is shown in the following commands:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 服务可以通过命令行进行简单测试。但在此之前，我们应该停止正在运行的 NTP。以下命令展示了这一操作：
- en: '[PRE40]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'To start a service from the command line rather than as a daemon, we can verify
    that it works using the following command:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 要从命令行启动服务，而不是作为守护进程运行，我们可以使用以下命令验证它是否正常工作：
- en: '[PRE41]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: This starts the service using the interface we specify using the `-i` option,
    we ask output to go to the screen with the `-m` option and we set the software
    mode with the `-S` option.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 这会使用我们通过 `-i` 选项指定的接口启动服务，我们通过 `-m` 选项要求将输出显示到屏幕上，并通过 `-S` 选项设置软件模式。
- en: 'The service will listen on UDP ports `319` and `320`. The output of the command
    is shown in the following screenshot:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 服务将在 UDP 端口 `319` 和 `320` 上监听。以下截图显示了该命令的输出：
- en: '![Implementing PTP on RHEL 7](img/image00218.jpeg)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![在 RHEL 7 上实现 PTP](img/image00218.jpeg)'
- en: 'Once we are happy with our configuration, we can create the startup configuration
    file and adjust the `sysconfig` file. We will start with the `sysconfig` file:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们对配置感到满意，我们可以创建启动配置文件并调整 `sysconfig` 文件。我们将从 `sysconfig` 文件开始：
- en: '[PRE42]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Remove the interface option at the end of the line. The file should read the
    same as the following screenshot:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 删除行尾的接口选项。文件应与以下截图相同：
- en: '![Implementing PTP on RHEL 7](img/image00219.jpeg)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![在 RHEL 7 上实现 PTP](img/image00219.jpeg)'
- en: 'Next, we will rename the existing configuration and create a minimal configuration
    that supports the same options that we used from the command line as follows:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将重命名现有配置，并创建一个最小化配置，支持我们从命令行使用的相同选项，如下所示：
- en: '[PRE43]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'The `ptp4l.conf` file should be similar to adjusting the interface in order
    to match the interface on your own system. The following screenshot shows the
    `ptp4l.conf` file on my system:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '`ptp4l.conf` 文件应类似于调整接口，以便与您系统上的接口匹配。以下截图显示了我系统上的 `ptp4l.conf` 文件：'
- en: '![Implementing PTP on RHEL 7](img/image00220.jpeg)'
  id: totrans-209
  prefs: []
  type: TYPE_IMG
  zh: '![在 RHEL 7 上实现 PTP](img/image00220.jpeg)'
- en: 'We are now ready to implement `ptp4l` as a service. With the `systemctl` command,
    we will be able to enable and start the service, as shown in the following commands:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们准备将 `ptp4l` 实现为服务。使用 `systemctl` 命令，我们可以启用并启动该服务，如下所示的命令：
- en: '[PRE44]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Using the `status` subcommand to `systemctl` as in the previous commands, we
    will see the output similar to the following, indicating that the service has
    started and looking for clock announcements:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `systemctl` 的 `status` 子命令，和前面的命令一样，我们将看到类似以下的输出，指示服务已启动并正在寻找时钟公告：
- en: '![Implementing PTP on RHEL 7](img/image00221.jpeg)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: '![在 RHEL 7 上实现 PTP](img/image00221.jpeg)'
- en: 'When the server is running, it may listen for other clock announcements and
    then negotiate as to which will be the grand master. In the following screenshot
    taken from the demonstration system, we can view the output of the `systemctl
    status` command. From the log extract, we can see the election of the new grand
    master:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 当服务器运行时，它可能会监听其他时钟公告，然后协商确定哪一个将成为主时钟。在以下从演示系统拍摄的截图中，我们可以查看 `systemctl status`
    命令的输出。从日志中提取的内容表明了新主时钟的选举过程：
- en: '![Implementing PTP on RHEL 7](img/image00222.jpeg)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![在 RHEL 7 上实现 PTP](img/image00222.jpeg)'
- en: We have now seen how to implement time services on Linux using either NTP, Cronyd,
    or PTP. With accurate time, we can now move forward to e-mail and **SMTP** (**Simple
    Mail Transfer Protocol**).
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经看到如何使用 NTP、Cronyd 或 PTP 在 Linux 上实现时间服务。拥有准确的时间后，我们可以继续进行电子邮件和 **SMTP**（**简单邮件传输协议**）的配置。
- en: Implementing e-mail delivery on RHEL 7
  id: totrans-217
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 RHEL 7 上实现电子邮件投递
- en: The default SMTP server used in the current release of RHEL is Postfix; the
    original Sendmail package is still available, but is no longer the default.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 当前版本的 RHEL 默认使用的 SMTP 服务器是 Postfix；原来的 Sendmail 包仍然可以使用，但不再是默认选择。
- en: It's normal for the e-mail server to listen on the localhost or loopback address
    only when using default settings. In this way, local e-mail delivery is possible
    out of the box. This is used by many services, including the `crond` job schedule
    manager. If we wanted to enable Postfix to listen on all interfaces and receive
    messages from remote systems, there is a little configuration required.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用默认设置时，电子邮件服务器仅监听本地主机或回环地址是正常现象。这样，本地电子邮件投递在开箱即用时即可实现。这被许多服务使用，包括 `crond`
    作业调度管理器。如果我们希望 Postfix 启用监听所有接口并接收来自远程系统的消息，则需要进行一些配置。
- en: 'Firstly, we will back up and tidy the main configuration file. There is a tendency
    for many software packages to over comment their configurations. This can cause
    issues where you think that you have implemented a change; however, it was also
    set later on and you may not have noticed it. There are 679 lines in the default
    configuration file: `/etc/postfix/main.cf`. We will back up the file so that we
    do not lose comments and documentations, but we will also have a new working file
    with less than 10 percent of the number of lines. The following command shows
    how this is done:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将备份并整理主要配置文件。许多软件包倾向于过度注释它们的配置文件。这可能导致一些问题：你认为已经实施了某个更改，然而该更改可能已在后续设置中出现，而且你可能没有注意到。默认配置文件
    `/etc/postfix/main.cf` 中有 679 行。我们将备份该文件，以保留注释和文档，但同时也会创建一个新文件，其行数不到原文件的 10%。以下命令展示了如何操作：
- en: '[PRE45]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: This reduces the file from 679 lines to 25 lines and is far easier to work with.
    We can now edit this file without any distractions. We will add two new lines
    and edit two existing lines to the `/etc/postfix/main.cf` file. This will need
    to be edited as root.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 这将文件的行数从 679 行减少到 25 行，便于操作。我们现在可以在没有任何干扰的情况下编辑此文件。我们将向 `/etc/postfix/main.cf`
    文件中添加两行新内容并编辑两行现有内容。该文件需要以 root 用户权限进行编辑。
- en: 'We will edit the `inet_interfaces = localhost` line so that it reads as follows:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将编辑 `inet_interfaces = localhost` 行，使其读取如下：
- en: '[PRE46]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: This will enable the SMTP service to listen on all interfaces, rather than just
    the loopback addresses.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使 SMTP 服务能够在所有接口上监听，而不仅仅是回环地址。
- en: 'We also need to make sure that we receive e-mails for the correct host and
    domain. This is controlled through the `mydestination` directive; however, we
    have to add the `myhostname` and `mydomain` directives before the `mydestination`
    line. These are the two lines that we add. We also need to add `$mydomain` to
    the existing `mydestination` line. On my system, these lines are set as follows:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要确保接收来自正确主机和域的电子邮件。这是通过 `mydestination` 指令来控制的；然而，我们需要在 `mydestination`
    行之前添加 `myhostname` 和 `mydomain` 指令。这是我们要添加的两行内容。我们还需要将 `$mydomain` 添加到现有的 `mydestination`
    行。在我的系统中，这些行设置如下：
- en: '[PRE47]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'The following screenshot shows the top few lines of the file where these changes
    have been implemented:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了已实施这些更改的文件顶部几行：
- en: '![Implementing e-mail delivery on RHEL 7](img/image00223.jpeg)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![在 RHEL 7 上实现电子邮件投递](img/image00223.jpeg)'
- en: 'With these edits is place, we can save the file and restart the SMTP service.
    The following command shows how to restart the Postfix SMTP service:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些编辑后，我们可以保存文件并重新启动 SMTP 服务。以下命令展示了如何重新启动 Postfix SMTP 服务：
- en: '[PRE48]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Adding an MX record to the DNS server
  id: totrans-232
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向 DNS 服务器添加 MX 记录
- en: 'If we are to receive an e-mail for the domain, we will need an MX record (e-mail
    exchange) to the DNS database that we created earlier in this section. The file
    that was used earlier for the `tup.local.` DNS domain was /`var/named/named.tup`.
    The record that we add for the MX or Mail Exchange record should be similar to
    the following line:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们要接收某个域的电子邮件，则需要一个 MX 记录（邮件交换记录），该记录会被添加到我们在本节前面创建的 DNS 数据库中。之前用于 `tup.local.`
    DNS 域的文件是 `/var/named/named.tup`。我们为 MX 或邮件交换记录添加的记录应类似于以下内容：
- en: '[PRE49]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: With this setting, we configure the MX or Mail Exchange priority to 10\. The
    lowest priority MX Record is the e-mail server that is used first if more than
    one e-mail server record exists.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此设置，我们将配置 MX（邮件交换）优先级为 10\. 如果存在多个电子邮件服务器记录，优先级最低的 MX 记录将是首先使用的电子邮件服务器。
- en: 'The updated zone file is shown in the following screenshot:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 更新后的区域文件显示在以下截图中：
- en: '![Adding an MX record to the DNS server](img/image00224.jpeg)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
  zh: '![将MX记录添加到DNS服务器](img/image00224.jpeg)'
- en: 'With these updates in place, we can check the zone and restart the server.
    For convenience, the commands are listed here:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些更新到位后，我们可以检查区域并重启服务器。为方便起见，命令在这里列出：
- en: '[PRE50]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'We can verify that DNS is working with the following command:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过以下命令验证DNS是否正常工作：
- en: '[PRE51]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'To test the e-mail delivery, we should be able to send e-mails to the domain:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测试电子邮件的发送，我们应该能够向该域发送电子邮件：
- en: '[PRE52]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: We will be prompted for the `Subject` message and then we can enter the e-mail
    we wish. To end an e-mail, we will include a line with just the period or a dot
    character and nothing else. This should be delivered to the root on your system
    being recognized as the e-mail server for the domain.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将被提示输入`Subject`信息，然后可以输入我们希望的电子邮件。要结束一封电子邮件，我们将在邮件中仅包含一个句号或点字符，其他内容不填写。这应该被传递到你系统上的根目录，并被识别为该域的电子邮件服务器。
- en: 'To view the message system working in more detail, we can take a look at the
    log files. To see the recent activity, we can use the tail command as follows:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 要更详细地查看消息系统的工作情况，我们可以查看日志文件。要查看最近的活动，我们可以使用如下的`tail`命令：
- en: '[PRE53]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: We now have a simple e-mail server to go with time, DNS, and DHCP services.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经有了一个简单的电子邮件服务器，与时间、DNS和DHCP服务配套使用。
- en: Summary
  id: totrans-248
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learned how to configure some of the fundamental network
    services often associated with Linux. We started off with how to set up the name
    resolution using DNS and ended up finishing on the same topic as we added e-mail
    server records to DNS. Having looked at DNS, we stayed alliteratively with D and
    studied DHCP, thus allowing a supply of IP configuration to the network. This
    took us to the complexities of the different time services that are on offer with
    `chronyd`, `ntpd`, and `ptp4l`. At the end of the chapter, we looked at a simple
    configuration of the Postfix SMTP server on RHEL 7\. This should give you a simple
    overview of services that you can expect to work with on a day-to-day basis with
    Enterprise Linux.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了如何配置一些常见的与Linux相关的基础网络服务。我们从如何使用DNS设置名称解析开始，并通过向DNS添加电子邮件服务器记录结束。了解了DNS后，我们紧接着学习了与D相关的内容，研究了DHCP，从而为网络提供IP配置。这将我们带入了与`chronyd`、`ntpd`和`ptp4l`等不同时间服务的复杂性。最后，在本章末，我们查看了RHEL
    7上Postfix SMTP服务器的简单配置。这应该能为你提供一个简单的概览，帮助你了解在日常使用Enterprise Linux时会接触到的服务。
- en: In the next chapter, we will see what is new on RHEL 7 and 7.1 and how to set
    up iSCSI storage services. You will find that the ISCSI target is now kernel-based
    and works very differently to the previous iSCSI target service on RHEL 6.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将了解RHEL 7和7.1中的新功能，并学习如何设置iSCSI存储服务。你会发现ISCSI目标现在是基于内核的，与RHEL 6中的旧版iSCSI目标服务工作方式截然不同。
