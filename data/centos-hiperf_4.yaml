- en: Chapter 4. Real-world Implementations of Clustering
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章 集群的实际应用
- en: In this chapter, you will learn how to use your cluster in real-life scenarios
    by deploying a web server and a database server. Before we do this, we will need
    to review some fundamental concepts related to these key components, configure
    replicated storage so that files are kept in sync between nodes, and then finally,
    populate our database with sample data, which we will then query using a simple
    PHP application.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习如何通过部署 Web 服务器和数据库服务器在实际场景中使用集群。在此之前，我们需要回顾一些与这些关键组件相关的基本概念，配置复制存储，以便文件在节点之间保持同步，然后最后用示例数据填充数据库，之后我们将使用一个简单的
    PHP 应用程序对其进行查询。
- en: Since the programming side of things is out of the scope of this book, feel
    free to use some other programming language of your choice if you want to do so.
    I have chosen PHP for simplicity. Keep in mind that this book is not aimed at
    teaching you how to build web-based applications for use in a CentOS 7 cluster,
    but rather how to use it in order to provide high availability for those applications.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 由于本书不涉及编程方面的内容，您可以根据自己的选择使用其他编程语言。如果您希望使用 PHP，我选择它是因为简便。请记住，本书的重点不是教您如何构建用于
    CentOS 7 集群的 Web 应用程序，而是如何使用它为这些应用程序提供高可用性。
- en: During the course of this chapter, you will notice that we will rely on the
    concepts introduced and the services configured in previous chapters as we dive
    into taking advantage of the cluster architecture that we have already put in
    place.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将注意到我们将依赖前几章介绍的概念和配置的服务，随着深入探讨如何利用我们已经搭建好的集群架构。
- en: Setting up storage
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置存储
- en: When we started discussing the fundamental concepts of clustering, we mentioned
    that high availability clusters aim, in simple terms, to minimize downtime of
    services by providing failover capabilities. As we begin the journey of installing
    a web server and a database server in our cluster, we can't help but wonder how
    will we synchronize between nodes the content that those services should make
    available to us. We need to find a way for nodes to share a piece of common storage
    where data will be saved. If one node fails to provide access to it, the other
    node will take client requests from then on.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们开始讨论集群的基本概念时，我们提到高可用性集群的目标，简单来说，就是通过提供故障切换功能，尽量减少服务的停机时间。在我们开始在集群中安装 Web
    服务器和数据库服务器的过程中，我们不禁要想，如何在节点之间同步这些服务应提供给我们的内容。我们需要找到一种方法，让节点共享一个共同的存储空间，数据将保存在其中。如果一个节点无法提供访问，另一个节点将接管客户端请求。
- en: 'In Linux, a common and cost-free method of dealing with this question is an
    open source technology known as **Distributed Replicated Block Device** (**DRBD**),
    which makes it possible to mirror or replicate individual storage devices (such
    as hard disks or partitions) from one node to the other(s) over a network connection.
    In a somewhat high-level explanation, you can think of the functionality offered
    by DRBD as a network-based RAID-1\. Its basic structure and data flow are illustrated
    in the following figure:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 中，处理这个问题的一种常见且免费的方法是一个开源技术，称为**分布式复制块设备**（**DRBD**），它使得能够通过网络连接将单个存储设备（如硬盘或分区）从一个节点镜像或复制到另一个节点。用一个相对高层次的解释，您可以把
    DRBD 提供的功能看作是一个基于网络的 RAID-1。其基本结构和数据流如图所示：
- en: '![Setting up storage](img/00033.jpeg)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![设置存储](img/00033.jpeg)'
- en: Tip
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: All replicated data sets, such as a shared storage device, are called a resource
    in DRBD and should not be confused with a PCS resource, as discussed in previous
    chapters.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 所有复制的数据集，例如共享存储设备，都称为 DRBD 中的资源，不应与前面章节中讨论的 PCS 资源混淆。
- en: 'In order to install DRBD, you will need to enable the ELRepo repository on
    both nodes, because this software package is not distributed through the standard
    CentOS repositories. Here is a brief explanation of the purpose and contents of
    the ELRepo repository:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了安装 DRBD，您需要在两个节点上启用 ELRepo 仓库，因为该软件包未通过标准的 CentOS 仓库分发。以下是 ELRepo 仓库的目的和内容的简要说明：
- en: The first step consists of importing the GPG key that is used to sign the `rpm`
    package, which represents the foundation to the repository. Should you try to
    install the package using rpm before importing the key, the installation will
    fail as a security measure.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是导入用于签署`rpm`包的 GPG 密钥，该包代表着仓库的基础。如果在导入密钥之前尝试使用 rpm 安装该软件包，安装将因为安全措施而失败。
- en: 'Run the following commands on both nodes:'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在两个节点上运行以下命令：
- en: '[PRE0]'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You can verify that ELRepo has been added to your configured repositories with
    the following command:'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以通过以下命令验证 ELRepo 是否已被添加到你配置的仓库中：
- en: '[PRE1]'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The output should be similar to the one shown in the following screenshot:'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 输出应该与以下屏幕截图所示相似：
- en: '![Setting up storage](img/00034.jpeg)'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![设置存储](img/00034.jpeg)'
- en: Tip
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'Alternatively, you can explicitly disable ELRepo after installing the `rpm`
    packages that add it to your system and enable it only to install the necessary
    packages (for precaution, make sure you make a copy of the original repository
    configuration file first):'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 另外，你可以在安装添加它到系统中的 `rpm` 包后显式禁用 ELRepo，并仅在安装必要的包时启用它（为防万一，请确保先备份原始仓库配置文件）：
- en: '[PRE2]'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then, use the following command:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，使用以下命令：
- en: '[PRE3]'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'It will install the necessary management utilities, along with the corresponding
    kernel module for DRBD. Once this process is complete, you will need to check
    whether the module is loaded, using this command:'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 它将安装必要的管理工具，以及相应的 DRBD 内核模块。此过程完成后，你需要使用以下命令检查模块是否已加载：
- en: '[PRE4]'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If it is not loaded automatically, you can load the module to the kernel on
    both nodes, as follows:'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果模块没有自动加载，你可以按如下方式在两个节点上手动加载该模块：
- en: '[PRE5]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Note that `modprobe` command will take care of loading the kernel module for
    the time being on your current session. However, in order for it to be loaded
    during boot, you have to make use of the systemd-modules-load service by creating
    a file inside `/etc/modules-load.d/` so that the DRBD module is loaded properly
    each time the system boots:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`modprobe` 命令将在当前会话中负责加载内核模块。然而，为了让它在启动时加载，你必须通过创建一个文件到 `/etc/modules-load.d/`
    中来使用 systemd-modules-load 服务，以确保每次系统启动时 DRBD 模块都能正确加载：
- en: '[PRE6]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: ELRepo repository and DRBD availability
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ELRepo 仓库与 DRBD 可用性
- en: ELRepo is a community repository for Linux distributions that are compatible
    with Red Hat Enterprise Linux, which CentOS and Scientific Linux are derivatives
    of. ELRepo has hardware-related packages (especially drivers) as the primary focus
    in order to enhance or provide functionality that is not present in the current
    kernel. Thus, by installing the corresponding package, you save yourself from
    the pain of having to recompile the kernel only to add a certain feature, or having
    to wait for it to be supported by upstream repositories, or for the feature to
    be included in a later kernel release. The ELRepo repository is maintained by
    active members of the related distributions (RHEL, CentOS, and Scientific Linux).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: ELRepo 是一个为兼容 Red Hat 企业版 Linux 的 Linux 发行版提供的软件仓库，CentOS 和 Scientific Linux
    是其衍生版。ELRepo 主要关注与硬件相关的软件包（尤其是驱动程序），以增强或提供当前内核中没有的功能。因此，通过安装相应的软件包，你可以免去仅为添加某个功能而重新编译内核，或者等待它在上游仓库中得到支持，或等待该功能被包含在以后版本的内核发布中。ELRepo
    仓库由相关发行版（RHEL、CentOS 和 Scientific Linux）的活跃成员维护。
- en: DBRD, as made available by ELRepo, is intended primarily to evaluate and get
    experience with DRBD on RHEL-based platforms, but is not officially supported
    by Red Hat and LINBIT, the creators of DRBD. However, following the procedures
    outlined in this chapter and throughout the rest of this book, you can ensure
    that all of the necessary functionality will be available in your cluster.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 由 ELRepo 提供的 DBRD 主要用于评估和体验 RHEL 基础平台上的 DRBD，但它并未得到 Red Hat 和 DRBD 的创建者 LINBIT
    官方支持。然而，按照本章及本书其余部分所述的程序，你可以确保在集群中提供所有必要的功能。
- en: Once we have installed the packages mentioned earlier, we need to allocate the
    physical space that will be used to store the replicated contents on both servers.
    With scalability in mind, we will use the **Logical Volume Manager** (**LVM**)
    technology to create dynamic hard disk partitions that are easily resizable down
    the road if we need to.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们安装了前面提到的包，我们需要分配用于存储复制内容的物理空间。考虑到可扩展性，我们将使用 **逻辑卷管理器**（**LVM**）技术来创建动态硬盘分区，这样以后如果需要，可以轻松调整其大小。
- en: To begin with, we will add a 2 GB hard disk to each node. The purpose of this
    hard disk is to serve as the underlying filesystem for a PHP application accessed
    by the Apache web server.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将为每个节点添加一块 2GB 的硬盘。该硬盘的用途是作为 Apache Web 服务器访问的 PHP 应用程序的底层文件系统。
- en: I chose this size because it will be enough to store all the necessary files
    to be replicated, and because Virtualbox allows you to pick arbitrary sizes for
    storage disks. If you happen to be using real hardware as you follow along with
    this book, you may want to choose a different size accordingly.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我选择这个大小是因为它足以存储所有需要复制的文件，并且因为 Virtualbox 允许你为存储磁盘选择任意大小。如果你在跟随本书操作时使用的是实际硬件，你可能需要根据实际情况选择不同的大小。
- en: 'To add a virtual hard disk to an existing virtual machine in Virtualbox, follow
    these steps:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 要向 Virtualbox 中的现有虚拟机添加虚拟硬盘，请按照以下步骤操作：
- en: Turn off the **VM**
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭 **虚拟机**
- en: Right-click on it in Virtualbox's initial screen
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Virtualbox 的初始界面中右击它
- en: From the contextual menu, choose **Settings** and then **Storage**
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在上下文菜单中选择 **设置**，然后选择 **存储**
- en: 'Select **Controller: SATA**, and click on **Add hard disk** and then click
    on **Create new disk**'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **控制器：SATA**，然后点击 **添加硬盘**，接着点击 **创建新磁盘**
- en: Choose **Virtual Disk Image (VDI)** and **Dynamically Allocated** and proceed
    to next step
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **虚拟磁盘映像（VDI）** 和 **动态分配**，然后继续到下一步
- en: Finally, assign a name for the device and choose 2 GB as size
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，为设备指定一个名称并选择 2 GB 作为大小
- en: 'After starting and booting up each node, we should issue the following command
    in order to identify the newly added disk (the new disk will be, in our case,
    the one that is not partitioned yet):'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 启动并启动每个节点后，我们应该执行以下命令来识别新添加的磁盘（在我们的例子中，新磁盘是尚未分区的那个）：
- en: '[PRE7]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'We will identify the newly added disk with the following command:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过以下命令来识别新添加的磁盘：
- en: '[PRE8]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Here, `/dev/sdb` is the new disk ID, as returned by listing the contents of
    the `/dev` directory earlier:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`/dev/sdb` 是新磁盘的 ID，正如之前列出 `/dev` 目录内容时返回的那样：
- en: '[PRE9]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Now, let''s create a partition on the disk, the corresponding physical volume,
    a volume group (`drbd_vg`), and finally, a logical volume (`drbd_vol`) on top.
    Make sure you repeat these steps on each node, changing the device (`dev/sdX`)
    as needed:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们在磁盘上创建一个分区，对应的物理卷，一个卷组（`drbd_vg`），以及最终的逻辑卷（`drbd_vol`）。确保在每个节点上重复这些步骤，根据需要更改设备（`dev/sdX`）：
- en: '[PRE10]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Note
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can check the status of the newly created logical volume with `lvdisplay
    /dev/drbd_vg/drbd_vol`.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过命令 `lvdisplay /dev/drbd_vg/drbd_vol` 来检查新创建的逻辑卷的状态。
- en: Configuring DRBD
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 DRBD
- en: 'After having successfully created and partitioned our DRBD disks on each node,
    the main configuration file for DRBD is located in `/etc/drbd.conf`, which consists
    only of the following two lines:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个节点上成功创建并分区我们的 DRBD 磁盘后，DRBD 的主配置文件位于 `/etc/drbd.conf`，该文件仅包含以下两行：
- en: '[PRE11]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Both lines include relative paths, starting at `/etc/`, of the actual configuration
    files. In the `global_common.conf` file, you will find the global settings for
    your DRBD installation, along with the common section (which defines those settings
    that should be inherited by every resource) of the DRBD configuration. On the
    other hand, in the `.res` files, you will find the specific configuration for
    each DRBD resource.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这两行包括相对路径，从 `/etc/` 开始，指向实际的配置文件。在 `global_common.conf` 文件中，你将找到你的 DRBD 安装的全局设置，以及
    DRBD 配置中的公共部分（定义那些应该被每个资源继承的设置）。另一方面，在 `.res` 文件中，你会找到每个 DRBD 资源的特定配置。
- en: 'We will now rename the existing `global_common.conf` file as `global_common.conf.orig`
    (as a backup copy of the original settings) with the following command:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过以下命令将现有的 `global_common.conf` 文件重命名为 `global_common.conf.orig`（作为原始设置的备份副本）：
- en: '[PRE12]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'We will then create a new `global_common.conf` file with the following contents
    by opening the file with your preferred text editor:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将通过打开文件并使用你喜欢的文本编辑器创建一个新的 `global_common.conf` 文件，内容如下：
- en: '[PRE13]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Once you created the preceding file on one node (say, `node01`), you can easily
    copy it to the another node, as follows:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你在一个节点（例如，`node01`）上创建了前面的文件，你可以轻松地将其复制到另一个节点，方法如下：
- en: '[PRE14]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Note
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You should make it a habit to make backup copies of the original configuration
    files so that you can roll back to previous settings, should something go wrong
    at any time.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该养成备份原始配置文件的习惯，这样当出现问题时，你可以恢复到之前的设置。
- en: The `usage-count no` line in the global section skips sending a notice to the
    DRBD team each time a new version of the software is installed in your system.
    You could change it to `yes` if you want to submit information from your system.
    Alternatively, you could change it to `ask` if you want to be prompted for a decision
    each time you do an upgrade. Either way, you should know that they use this information
    for statistical analysis only, and their reports are always available to the public
    at [http://usage.drbd.org/cgi-bin/show_usage.pl](http://usage.drbd.org/cgi-bin/show_usage.pl).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '`usage-count no` 行在全局部分会跳过每次安装新版本软件时向 DRBD 团队发送通知。如果你希望提交来自系统的信息，可以将其更改为 `yes`。或者，如果你希望每次升级时都提示你做出决定，可以将其更改为
    `ask`。无论哪种方式，你都应该知道他们仅将这些信息用于统计分析，而且他们的报告总是公开的，位于 [http://usage.drbd.org/cgi-bin/show_usage.pl](http://usage.drbd.org/cgi-bin/show_usage.pl)。'
- en: The `protocol C` line tells the DRBD resource to use a fully synchronous replication,
    which means that local write operations on the node that is functioning as primary
    are considered completed only after both the local and remote disk writes have
    been confirmed. Thus, if you run into the loss of a single node, that should not
    lead to any data loss under normal circumstances, unless both nodes (or their
    storage subsystems) are irreversibly destroyed at the same time.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '`protocol C` 行告诉 DRBD 资源使用完全同步的复制，这意味着，作为主节点的本地写操作只有在本地和远程磁盘的写入都得到确认后，才视为完成。因此，如果单个节点出现故障，在正常情况下不会导致任何数据丢失，除非两个节点（或其存储子系统）同时不可恢复地损坏。'
- en: 'Next, we will need to create a specific new configuration file file (called
    `/etc/drbd.d/drbd0.res`) for our resource, which we will name `drbd0`, with the
    following contents (where `192.168.0.2` and `192.168.0.3` are the IP addresses
    of our two nodes, and `7789` is the port used for communication):'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要为我们的资源创建一个特定的新配置文件（称为 `/etc/drbd.d/drbd0.res`），我们将其命名为 `drbd0`，文件内容如下（其中
    `192.168.0.2` 和 `192.168.0.3` 是我们两个节点的 IP 地址，`7789` 是用于通信的端口）：
- en: '[PRE15]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Note
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can look up the meaning of each directive (and the rest as well) in the
    resource configuration file at Linbit's website at [http://drbd.linbit.com/users-guide-8.4/](http://drbd.linbit.com/users-guide-8.4/).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 Linbit 网站上的资源配置文件中查找每个指令的含义（以及其他指令），地址为 [http://drbd.linbit.com/users-guide-8.4/](http://drbd.linbit.com/users-guide-8.4/)。
- en: TCP port `7789` is the typical port number used in most DRBD installations.
    However, the official documentation states that DRBD (by convention) uses TCP
    ports from `7788` upwards, with every resource listening on a separate port. In
    this chapter, since we are dealing with only one resource, we will only use port
    `7789`—both in the only resource configuration file and in the firewall settings
    on both nodes. It is essential that you remember to open this port in the firewall,
    because otherwise, the resources will not be able to synchronize later.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: TCP 端口 `7789` 是大多数 DRBD 安装中使用的典型端口号。然而，官方文档指出，DRBD（按照惯例）使用从 `7788` 开始的 TCP 端口，每个资源都监听一个单独的端口。在本章中，由于我们只处理一个资源，我们将仅使用端口
    `7789`——无论是在唯一的资源配置文件中，还是在两个节点的防火墙设置中。请务必记住在防火墙中打开此端口，否则，资源将无法进行后续的同步。
- en: 'To open the `7789` TCP port in the firewall configuration, execute the following
    commands on both nodes:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 要在防火墙配置中打开 `7789` TCP 端口，在两个节点上执行以下命令：
- en: '[PRE16]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Again, you can copy this file to the other node, as follows:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，你可以按如下方式将此文件复制到另一个节点：
- en: '[PRE17]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'When we installed DRBD earlier, a utility called `drbdadm` was installed as
    well, which, as you will be able to guess from its name, is intended to be used
    for the administration of DRBD resources, such as our newly configured volume
    The first step in starting and bringing a DRBD resource online is to initialize
    its metadata (you may need to change the resource name if you set a different
    name in the configuration file previously). Note that the `/var/lib/drbd` directory
    is needed beforehand. If it was not created previously when you installed DRBD,
    create it manually before proceeding, using the following lines of code:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们之前安装 DRBD 时，一个名为 `drbdadm` 的工具也被安装了，从它的名字可以猜到，它是用于管理 DRBD 资源的工具，类似于我们新配置的卷。启动并使
    DRBD 资源上线的第一步是初始化其元数据（如果你在配置文件中设置了不同的名称，可能需要更改资源名称）。请注意，事先需要 `/var/lib/drbd` 目录。如果在安装
    DRBD 时没有创建该目录，请在继续之前手动创建它，使用以下代码：
- en: '[PRE18]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'These lines should result in the following output, with the corresponding confirmation
    message that indicates a successful creation of the metadata for the device:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这些行应返回以下输出，并显示相应的确认消息，表示设备的元数据已成功创建：
- en: '![Configuring DRBD](img/00035.jpeg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![配置DRBD](img/00035.jpeg)'
- en: Note
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The word "metadata" has been defined as data about the data. In the context
    of DRBD resources, the metadata of a resource consists of several pieces of information
    about the device and the data that is kept in it. The `drbdadm create-md [drbd
    resource]` command will return useful debugging information if something does
    not work as expected.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: “元数据”一词被定义为关于数据的数据。在DRBD资源的上下文中，资源的元数据包含有关设备及其所存储数据的多条信息。如果出现问题，`drbdadm create-md
    [drbd resource]`命令将返回有用的调试信息。
- en: 'The next step consists of enabling `drbd0` in order to finish allocating both
    disk and network resources for its operation:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是启用`drbd0`，以完成磁盘和网络资源的分配：
- en: '[PRE19]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'You can verify the status of the resource by taking a look at the `/proc` virtual
    filesystem, which allows you to view the system''s resources as the kernel sees
    them, as you can see in the following screenshot. However, make sure you have
    followed the instructions outlined earlier on both nodes:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过查看`/proc`虚拟文件系统来验证资源的状态，它允许你查看内核视角下的系统资源，正如以下截图所示。但是，请确保你已按照之前的指示在两个节点上执行：
- en: '[PRE20]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Take a look at the following screenshot:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 请查看以下截图：
- en: '![Configuring DRBD](img/00036.jpeg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![配置DRBD](img/00036.jpeg)'
- en: Note that the status of the device shows as unknown and inconsistent since we
    haven't indicated yet which of the DRBD devices (one in each node) will act as
    a primary device and which one as a secondary device. At this point, given our
    current scenario where we have set up two DRBD devices from scratch, it does not
    matter which one you choose to be primary. However, if we had used one device
    with data already residing in it, it is crucial that you select that one device
    as the primary resource. Otherwise, you run the serious risk of losing your data.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，由于我们尚未指明哪个DRBD设备（每个节点一个）将作为主设备，哪个将作为从设备，因此设备的状态显示为未知和不一致。在这种情况下，考虑到我们从零开始设置了两个DRBD设备，选择哪个作为主设备并不重要。然而，如果我们使用了一个已有数据的设备，那么选择那个设备作为主资源就非常重要。否则，你有丢失数据的严重风险。
- en: 'Run this command in order to mark one device as primary and to perform the
    initial synchronization. You only need to do this in the node that has the primary
    resource (in our example, this means `node01`):'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令，将其中一个设备标记为主设备并执行初步同步。你只需要在具有主资源的节点（在我们的示例中，是`node01`）执行此操作：
- en: '[PRE21]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'As you did earlier, you can check the current status of the synchronization
    while it''s being performed. The cat `/proc/drbd` command displays the creation
    and synchronization progress of the resource, as shown here:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如同之前一样，你可以在同步进行时检查当前的同步状态。`cat /proc/drbd`命令显示资源的创建和同步进度，如下所示：
- en: '![Configuring DRBD](img/00037.jpeg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![配置DRBD](img/00037.jpeg)'
- en: 'Now, with the help of `drbd-overview` command, as its name implies, you can
    see an overview of the currently configured DRBD resources. In this case, you
    should see that `node01` is acting as primary and `node02` as secondary, as indicated
    by running the command on both nodes (which can also be seen in the following
    screenshot):'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，通过`drbd-overview`命令，如其名称所示，你可以查看当前配置的DRBD资源概览。在这种情况下，你应该会看到`node01`作为主设备，`node02`作为从设备，通过在两个节点上运行命令可以验证这一点（如下截图所示）：
- en: 'In `node01` : the drbd-overview command should return:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在`node01`上，`drbd-overview`命令应该返回：
- en: '[PRE22]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Whereas in `node02` you should see:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 而在`node02`上，你应该看到：
- en: '[PRE23]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '![Configuring DRBD](img/00038.jpeg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![配置DRBD](img/00038.jpeg)'
- en: Finally, we need to create a filesystem on `/dev/drbd0` in `node01`. You can
    choose whatever suits your needs or requirements, if any. `Ext4` is a good choice
    if you have not decided which one to use. XFS is the default filesystem for CentOS
    7 out of the box. However, it is not possible to resize it if we need to do so
    at a later time, should we run into a more complex setup for the underlying storage
    needed for the operation of the web and database servers.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要在`node01`上的`/dev/drbd0`上创建一个文件系统。你可以选择任何适合你需求或要求的文件系统，如果有的话。如果你还没有决定使用哪个，`Ext4`是一个不错的选择。XFS是CentOS
    7系统默认的文件系统。然而，如果我们以后需要调整它的大小（例如，遇到更复杂的底层存储需求来支持网页和数据库服务器的运行），则无法调整XFS的大小。
- en: 'Run the following command on the primary node to create an `ext4` filesystem
    on `/dev/drbd0` and wait until it completes, as shown in the following screenshot:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在主节点上运行以下命令，为`/dev/drbd0`创建`ext4`文件系统，并等待其完成，如下面的屏幕截图所示：
- en: '[PRE24]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '![Configuring DRBD](img/00039.jpeg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![配置DRBD](img/00039.jpeg)'
- en: Now, your DRBD resource is ready to be used as usual. You can now mount it and
    start saving files to it. However, we still need to add it as a cluster resource
    before we can start using it as a highly available and fail-safe component. This
    is what we will do in the next section.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您的DRBD资源已准备好如常使用。您现在可以挂载它并开始保存文件。但是，在我们将其用作高可用和故障转移组件之前，我们仍然需要将其添加为集群资源。这就是我们将在下一节中执行的操作。
- en: It is very important that you create the filesystem on the resource from `node01`,
    our primary node. Otherwise, you will run into a mounting issue that is caused
    when you try to add a filesystem from a node that is not the primary member of
    the cluster.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 非常重要的是，您需要从`node01`，即我们的主节点上为资源创建文件系统。否则，在试图从非主集群成员节点添加文件系统时，将遇到挂载问题。
- en: Adding DRBD as a PCS cluster resource
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将DRBD添加为PCS集群资源
- en: You will recall how in [Chapter 2](part0018_split_000.html#H5A42-1d2c6d19b9d242db82da724021b51ea0
    "Chapter 2. Installing Cluster Services and Configuring Network Components"),
    *Installing Cluster Services and Configuring Network Components*, we added a virtual
    IP address to the cluster. Now, it's time to do the same with the DRBD resource
    that we have just created and configured.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 您会回想起在[第2章](part0018_split_000.html#H5A42-1d2c6d19b9d242db82da724021b51ea0 "Chapter 2. Installing
    Cluster Services and Configuring Network Components")中，我们如何为集群添加虚拟IP地址。现在，是时候为我们刚刚创建和配置的DRBD资源执行相同的操作了。
- en: Before doing that, however, we must point out that one of the most distinguishing
    features of the PCS command-line tool that we first introduced back in [Chapter
    2](part0018_split_000.html#H5A42-1d2c6d19b9d242db82da724021b51ea0 "Chapter 2. Installing
    Cluster Services and Configuring Network Components"), *Installing Cluster Services
    and Configuring Network Components*, is its ability to save the current cluster
    configuration to a file, to which you can add further settings using command-line
    tools. Then, you can use the resulting file to update the running cluster configuration.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在执行此操作之前，我们必须指出PCS命令行工具的一个最显著特性之一，即它能够将当前集群配置保存到文件中，然后可以使用命令行工具添加进一步的设置。然后，您可以使用生成的文件更新运行中的集群配置。
- en: 'To retrieve the cluster configuration from the **Cluster Information Base**
    (**CIB**) and save it to a file named `drbd0_conf` in the current working directory,
    use the following command to make sure you started the cluster first:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 要从**集群信息库**（**CIB**）中检索集群配置并将其保存到名为`drbd0_conf`的文件中，当前工作目录，请确保首先启动集群，并使用以下命令：
- en: '[PRE25]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Then save the cluster configuration to the file mentioned earlier (`drbd0_conf`
    will be created automatically):'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 然后将集群配置保存到之前提到的文件中（`drbd0_conf`将自动创建）：
- en: '[PRE26]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Next, we will add the DRBD device as a PCS cluster resource. Note the `-f`
    switch, which indicates that changes resulting from the following command should
    be appended to the `drbd0_conf` file. The following command must be executed from
    the same directory as the previous command (meaning the directory where the `drbd0_conf`
    file is located):'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将DRBD设备作为PCS集群资源添加。请注意`-f`开关，指示以下命令的更改应追加到`drbd0_conf`文件。以下命令必须从与前一条命令相同的目录执行（即包含`drbd0_conf`文件的目录）：
- en: '[PRE27]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Finally, we need to make sure that the resource will run on both nodes simultaneously
    by adding a clone resource (a special type of resource that should be active on
    multiple hosts at the same time) for that purpose:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要确保该资源同时在两个节点上运行，通过添加克隆资源（一种应在多个主机上同时活动的特殊资源）来实现此目的：
- en: '[PRE28]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'At this point, we can update the cluster configuration using the `drbd0_conf`
    file. However, a quick inspection of the cluster status and its resources will
    allow us to better visualize the changes if we run `pcs status` command before
    and after updating the global configuration, in that order:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，我们可以使用`drbd0_conf`文件更新集群配置。但是，在更新全局配置之前和之后运行`pcs status`命令快速检查集群状态及其资源，能更好地可视化变更：
- en: '[PRE29]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The last command should result in the following message if the update was successful:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 如果更新成功，最后的命令应该会显示以下消息：
- en: '[PRE30]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Now, let''s check the current cluster configuration again:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们再次检查当前的集群配置：
- en: '[PRE31]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'In the case the last PCS status indicates some failure event (most likely related
    to SELinux policies and less likely with regular file permissions), you should
    inspect the `/var/log/audit/audit.log` file to start your troubleshooting. Lines
    starting with AVC will point out the places where you need to look first. Here
    is an example:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 如果最后的PCS状态显示有某个故障事件（很可能与SELinux策略有关，而不太可能与常规文件权限有关），你应该检查`/var/log/audit/audit.log`文件来开始排查问题。以AVC开头的行会指明你需要首先查看的地方。以下是一个示例：
- en: '[PRE32]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The preceding error message seems to indicate that SELinux is denying the `drbdsetup-84`
    executable read/write access to the temporary `tmpfs` filesystem. Its corresponding
    denied system call supports this theory:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的错误信息似乎表明SELinux正在拒绝`drbdsetup-84`可执行文件对临时`tmpfs`文件系统的读/写访问。其相应的被拒绝的系统调用支持这一理论：
- en: '[PRE33]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Note
  id: totrans-126
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: NSA Security-Enhanced Linux (SELinux) is an implementation of a flexible mandatory
    access control architecture in Linux. You can disable it to perform the following
    steps (but it is strongly recommended that you don't) if you experience several
    issues with it at first. If you choose to disable SELinux by editing `/etc/sysconfig/selinux`,
    do not forget to clean the resource error count with `pcs resource cleanup [resource_id]`,
    where `resource_id` is the name of the resource as returned by `pcs resource show`.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: NSA增强安全Linux（SELinux）是Linux中一个灵活的强制访问控制架构的实现。如果你在最初遇到一些问题，你可以禁用SELinux来执行以下步骤（但强烈建议不要这么做）。如果你选择通过编辑`/etc/sysconfig/selinux`禁用SELinux，别忘了使用`pcs
    resource cleanup [resource_id]`清理资源错误计数，其中`resource_id`是`pcs resource show`返回的资源名称。
- en: 'To clear all doubts, install the `policycoreutils-python` package (which contains
    the management tools used to manage an SELinux environment):'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 为了清除所有疑虑，安装`policycoreutils-python`包（其中包含用于管理SELinux环境的管理工具）：
- en: '[PRE34]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Use the `audit2allow` utility included in it to view the reason of access denied
    in human-readable form and then generate an SELinux policy-allow rule based on
    logs of denied operations. The following command will output the last line in
    the `audit.log` file where the word AVC appears and then pipe it to `audit2allow`
    to produce the result in human-readable form:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 使用其中包含的`audit2allow`工具，以人类可读的形式查看访问被拒绝的原因，然后根据被拒绝操作的日志生成SELinux的允许规则。以下命令将输出`audit.log`文件中最后一行包含AVC的内容，然后将其传递给`audit2allow`，生成可读格式的结果：
- en: '[PRE35]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'As shown in the following screenshot, we can confirm that access was denied
    due to a missing type enforcement rule:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 如下图所示，我们可以确认由于缺少类型强制规则，访问被拒绝：
- en: '![Adding DRBD as a PCS cluster resource](img/00040.jpeg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![将DRBD添加为PCS集群资源](img/00040.jpeg)'
- en: 'Now that we know what is causing the problem, let''s create a policy package
    in order to implement the necessary type enforcement rule into a module whose
    name is specified in the command line:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道是什么原因导致了问题，让我们创建一个策略包，将必要的类型强制规则应用到命令行中指定的模块：
- en: '[PRE36]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'If you do `ls -l` in your current working directory, you will find that the
    preceding command created a type enforcement file (`drbd_access_0.te`) and compiled
    it into a policy package (`drbd_access_0.pp`), which you will need to activate
    with the following command:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在当前工作目录中执行`ls -l`，你会发现前面的命令创建了一个类型强制文件（`drbd_access_0.te`）并将其编译成一个策略包（`drbd_access_0.pp`），你需要使用以下命令激活它：
- en: '[PRE37]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'The preceding command can take about a minute to complete, so do not worry
    if this is the case for you, as you can see in the following screenshot, no output
    means a successful operation:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的命令可能需要约一分钟才能完成，所以如果你遇到这种情况也不用担心，正如下面的截图所示，没有输出意味着操作成功：
- en: '![Adding DRBD as a PCS cluster resource](img/00041.jpeg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![将DRBD添加为PCS集群资源](img/00041.jpeg)'
- en: 'Now, we need to copy the module to `node02` and install it there. This is one
    of the reasons why we set up key-based authentication between nodes in [Chapter
    1](part0014_split_000.html#DB7S1-1d2c6d19b9d242db82da724021b51ea0 "Chapter 1. Cluster
    Basics and Installation on CentOS 7"), *Cluster Basics and Installation on CentOS
    7*:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要将模块复制到`node02`并在那里安装。这也是我们在[第1章](part0014_split_000.html#DB7S1-1d2c6d19b9d242db82da724021b51ea0
    "第1章 集群基础与CentOS 7上的安装")中设置节点间基于密钥的认证的原因之一，*集群基础与CentOS 7上的安装*：
- en: '[PRE38]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Then, run the following command in `node02`:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在`node02`上运行以下命令：
- en: '[PRE39]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Alternatively, you can execute the following command in `node01`:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，你也可以在 `node01` 上执行以下命令：
- en: '[PRE40]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'In addition, the SELinux `daemons_enable_cluster_mode` policy should be set
    to true on both nodes:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，SELinux 的 `daemons_enable_cluster_mode` 策略应在两个节点上设置为 true：
- en: '[PRE41]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Then, you may need to repeat this process more than once if the output of `pcs
    status` shows further errors. If you find that you have to repeat it several times,
    you may want to consider setting SELinux to permissive so that it will still issue
    warnings instead of blocking the cluster resource. Then, you can continue with
    the setup for the time being and debug later.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，如果 `pcs status` 的输出显示进一步的错误，你可能需要多次重复这个过程。如果你发现需要多次重复，可能需要考虑将 SELinux 设置为
    permissive，这样它就会发出警告而不是阻止集群资源。然后，你可以继续进行设置，稍后再进行调试。
- en: 'We can see that both nodes are online, and the cluster resources are properly
    started, as shown here:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到两个节点都在线，集群资源已正确启动，如下所示：
- en: '![Adding DRBD as a PCS cluster resource](img/00042.jpeg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![将 DRBD 添加为 PCS 集群资源](img/00042.jpeg)'
- en: Now, let's give DRBD a rest for a brief moment, and let's focus on the installation
    of the web and database servers. Note that we will also revisit this topic in
    [Chapter 5](part0041_split_000.html#173721-1d2c6d19b9d242db82da724021b51ea0 "Chapter 5. Monitoring
    the Cluster Health"), *Monitoring the Cluster Health*, where we will simulate
    and troubleshoot issues. Note that if you reboot a node or both of them, nodes
    may detect a split-brain situation at this point, which we will fix manually (as
    that is the method that is recommended by LINBIT) later during the next chapter,
    when we troubleshoot the most common issues that may come up during the cluster
    operation.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们暂时休息一下 DRBD，集中安装 Web 和数据库服务器。请注意，我们将在[第5章](part0041_split_000.html#173721-1d2c6d19b9d242db82da724021b51ea0
    "第5章 集群健康监控") *集群健康监控*中重新讨论这个话题，我们将在那里模拟并排除问题。需要注意的是，如果你重新启动了一个节点或两个节点，它们可能会在此时检测到分脑情况，我们将在下一章手动修复这一问题（因为这是
    LINBIT 推荐的方法），当时我们会排除集群操作中可能出现的最常见问题。
- en: Installing the web and database servers
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Web 和数据库服务器
- en: As of the time of writing this book, the Apache HTTP server (or just Apache
    for short) remains the world's most widely used web server and is often used within
    what is called a **LAMP stack**. In this stack, a Linux distribution is used as
    the operating system, Apache as the web server, MySQL/MariaDB as the database
    server, and PHP as the server-side programming language for applications. Each
    one of these components is free, and these technologies are widely spread and
    thus easy to learn/get help on.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在写这本书时，Apache HTTP 服务器（简称 Apache）仍然是全球使用最广泛的 Web 服务器，通常用于所谓的 **LAMP 堆栈**中。在这个堆栈中，Linux
    发行版作为操作系统，Apache 作为 Web 服务器，MySQL/MariaDB 作为数据库服务器，PHP 作为应用程序的服务器端编程语言。每个组件都是免费的，这些技术被广泛使用，因此学习和获取帮助也非常容易。
- en: 'To install the Apache and MariaDB (a free and open source fork of MySQL) servers,
    run the following commands on each node. Note that this will install PHP as well:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 Apache 和 MariaDB（MySQL 的免费开源分支）服务器，请在每个节点上运行以下命令。请注意，这也会安装 PHP：
- en: '[PRE42]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Upon successful installation, we will proceed as we did earlier. To begin,
    let''s enable and start the web server on both nodes:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 安装成功后，我们将继续之前的操作。首先，让我们在两个节点上启用并启动 Web 服务器：
- en: '[PRE43]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Don''t forget to make sure that Apache is running:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 别忘了确保 Apache 正在运行：
- en: '[PRE44]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Allow traffic through TCP port `80` in the firewall:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在防火墙中允许通过 TCP 端口 `80` 的流量：
- en: '[PRE45]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'At this point, you can fire up a web browser and point it to the individual
    IP addresses of the nodes (remember that we haven''t added Apache as a cluster
    resource, and thus, we can''t access the web server on the virtual IP that is
    common to both nodes). You should see Apache''s welcome page, as shown in the
    following figure, where we can see that web server is running correctly on `node02`
    (`192.168.0.3` as per our initial setup):'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，你可以启动一个 Web 浏览器，并指向节点的独立 IP 地址（记住，我们还没有将 Apache 添加为集群资源，因此不能通过两个节点的虚拟 IP
    访问 Web 服务器）。你应该能看到 Apache 的欢迎页面，如下图所示，我们可以看到 Web 服务器在 `node02`（根据我们的初始设置为 `192.168.0.3`）上运行正常：
- en: '![Installing the web and database servers](img/00043.jpeg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![安装Web和数据库服务器](img/00043.jpeg)'
- en: 'Now, it is time to take a small step back. We will disable and stop Apache
    on both nodes so that the cluster will manage it when PCS is moving forward:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，是时候稍微退后一步了。我们将禁用并停止两个节点上的 Apache，这样 PCS 在继续时会管理它：
- en: '[PRE46]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'In order for Apache to listen on the virtual IP (to which we assigned `192.168.0.4`
    as the IP address) and the loopback address (we will see why in just a minute),
    we need to modify the main configuration file `(/etc/httpd/conf/httpd.conf`),
    as follows (you may want to make a backup of this file first):'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让 Apache 在虚拟 IP（我们已将 `192.168.0.4` 分配为该 IP 地址）和回环地址上监听（稍后我们会解释原因），我们需要修改主配置文件
    `(/etc/httpd/conf/httpd.conf)`，如下所示（你可能需要先备份此文件）：
- en: '[PRE47]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Then, restart Apache:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，重新启动 Apache：
- en: '[PRE48]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Note that while restarting the web server in the second node, an error is to
    be expected since there is already a service running in that socket. However,
    that is normal, and now, you should be able to access the Apache welcome page
    by pointing your browser to the virtual IP.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，当在第二个节点上重启 Web 服务器时，预计会出现错误，因为该套接字上已经有一个服务在运行。然而，这是正常现象，现在，你应该能够通过将浏览器指向虚拟
    IP 来访问 Apache 欢迎页面。
- en: 'The fun part is finding out which is the node in which the virtual IP was started,
    as shown in the following screenshot. If you get an error here instead, make sure
    `virtual_ip` is started by PCS first:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的部分是找出虚拟 IP 启动的节点，如下图所示。如果这里出现错误，确保 `virtual_ip` 首先由 PCS 启动：
- en: '[PRE49]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '![Installing the web and database servers](img/00044.jpeg)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![安装 Web 和数据库服务器](img/00044.jpeg)'
- en: 'Now, let''s stop the cluster in that node, using the following command:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用以下命令停止该节点上的集群：
- en: '[PRE50]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Then, on the other node, it should still indicate that the resource is active.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在另一个节点上，它仍应指示该资源处于活动状态。
- en: However, even when the virtual IP is failed over to `node02`, the web server
    is not accessible through that resource because it wasn't started there in the
    first place. For this reason, we still need to configure Apache as a cluster resource
    so that it can be managed as such.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，即使虚拟 IP 被故障转移到 `node02`，也无法通过该资源访问 Web 服务器，因为它最初并没有在该节点启动。因此，我们仍然需要将 Apache
    配置为集群资源，以便它能作为资源进行管理。
- en: Configuring the web server as a cluster resource
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 Web 服务器配置为集群资源
- en: You will recall from when we configured the virtual IP in [Chapter 2](part0018_split_000.html#H5A42-1d2c6d19b9d242db82da724021b51ea0
    "Chapter 2. Installing Cluster Services and Configuring Network Components"),
    *Installing Cluster Services and Configuring Network Components*, and when we
    added replicated storage earlier during this chapter that we must indicate a way
    for PCS to check on a periodic basis whether the resource is available or not.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 你会记得在我们在[第2章](part0018_split_000.html#H5A42-1d2c6d19b9d242db82da724021b51ea0
    "第2章. 安装集群服务和配置网络组件") *安装集群服务和配置网络组件*中配置虚拟 IP 时，以及在本章早些时候添加复制存储时，我们必须指明一种方式，供
    PCS 定期检查资源是否可用。
- en: 'In this case, we will use the server status page (`http://node0[1-2]/server-status`),
    which is the preferred Apache web page as it provides information about how well
    the server will be performing PCS will query this page once per minute. This is
    accomplished by creating a file named `status.conf` inside `/etc/httpd/conf.d`
    on both nodes:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们将使用服务器状态页面（`http://node0[1-2]/server-status`），这是首选的 Apache 网页，因为它提供了有关服务器性能的信息，PCS
    每分钟会查询一次该页面。通过在两个节点的`/etc/httpd/conf.d`目录下创建一个名为`status.conf`的文件，可以实现这一功能：
- en: '[PRE51]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Then, with the following command, we will add Apache as a cluster resource.
    The status of the resource will be checked by PCS once every minute:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，使用以下命令，我们将 Apache 添加为集群资源。资源的状态将由 PCS 每分钟检查一次：
- en: '[PRE52]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: By default, pacemaker will try to balance the resource usage over the cluster.
    However, at certain times, our setup will require that two related resources (as
    it is in the case of the web server and the virtual IP) need to run on the same
    host.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，pacemaker 会尝试平衡集群中的资源使用。然而，在某些情况下，我们的设置要求两个相关资源（如 Web 服务器和虚拟 IP）必须在同一主机上运行。
- en: The web server should always run on the host on which the virtual IP is active.
    This also means that if the virtual IP resource is not active on any node, the
    web server should not run at all. In addition, since we need the web server to
    listen on the virtual IP address as well as on the loopback device on each host,
    it goes without saying that
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: Web 服务器应始终在虚拟 IP 活动的主机上运行。这也意味着，如果虚拟 IP 资源在任何节点上都没有激活，则 Web 服务器根本不应运行。此外，由于我们需要
    Web 服务器在虚拟 IP 地址上以及每个主机的回环设备上监听，显然
- en: We must ensure that the virtual IP resource is started before the web server
    resource.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须确保虚拟 IP 资源在 Web 服务器资源之前启动。
- en: 'We can accomplish both requirements through the use of the following constraints:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过以下约束来实现这两个要求：
- en: '[PRE53]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'After running the second command, you should see the following message on your
    screen. Note that starting the virtual IP resource before the web server is a
    mandatory requirement:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 运行第二个命令后，您应该会在屏幕上看到以下消息。请注意，必须先启动虚拟 IP 资源，然后才能启动 Web 服务器，这是强制性的要求：
- en: '[PRE54]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Now, let''s check the status of the cluster and focus on its assigned resources,
    as shown in the following screenshot:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们检查集群的状态，并关注其分配的资源，如下图所示：
- en: '![Configuring the web server as a cluster resource](img/00045.jpeg)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![将 Web 服务器配置为集群资源](img/00045.jpeg)'
- en: 'You can now simulate a failover by forcing `node01` to go offline. To do so,
    you can run the following command:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以通过强制 `node01` 下线来模拟故障转移。为此，您可以运行以下命令：
- en: '[PRE55]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'The resources should be automatically started on `node02`, as indicated in
    the following screenshot:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 资源应该会在 `node02` 上自动启动，如下图所示：
- en: '![Configuring the web server as a cluster resource](img/00046.jpeg)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![将 Web 服务器配置为集群资源](img/00046.jpeg)'
- en: The last step consists of mounting the DRBD resource on the `/var/html/www directory`
    and adding in it a simple PHP page to display the PHP configuration of the cluster.
    You will then be able to build on that simple example to add more sophisticated
    applications.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 最后的步骤是将 DRBD 资源挂载到 `/var/html/www 目录` 上，并在其中添加一个简单的 PHP 页面以显示集群的 PHP 配置。然后，您可以在这个简单示例的基础上构建更复杂的应用程序。
- en: 'Before attempting to use `/dev/drbd0`, we should check its status on both nodes
    with `drbd-overview`. If the output shows StandAlone or WFConnection, we are looking
    at a split-brain situation, which can be confirmed in the output of the following
    command:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在尝试使用 `/dev/drbd0` 之前，我们应该通过 `drbd-overview` 检查它在两个节点上的状态。如果输出显示 StandAlone
    或 WFConnection，我们就遇到了脑裂（split-brain）情况，可以通过以下命令的输出确认这一点：
- en: '[PRE56]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: This will result in a `Split-Brain detected, dropping connection!` error message.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 这将导致出现 `Split-Brain detected, dropping connection!` 错误信息。
- en: 'Linbit recommends to manually resolve such cases by choosing a node whose modifications
    will be discarded and then issuing the following commands in it:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: Linbit 建议通过选择一个修改将被丢弃的节点来手动解决此类情况，然后在该节点上执行以下命令：
- en: '[PRE57]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Then connect the DRBD resource on the other node:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 然后连接另一个节点上的 DRBD 资源：
- en: '[PRE58]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'You can also start or stop DRBD and get an overview with the following commands
    in `node01`:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以在 `node01` 上使用以下命令启动或停止 DRBD 并查看概况：
- en: '[PRE59]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Note
  id: totrans-207
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Review the DRBD documentation carefully before choosing a recovery method after
    a split-brain situation. Since there is no one-size-fits-all answer to this issue,
    I have chosen to cover the recommended method in this book.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择脑裂情况的恢复方法之前，请仔细审查 DRBD 文档。由于没有适用于所有情况的单一解决方案，因此我选择在本书中介绍推荐的方法。
- en: Mounting the DRBD resource and using it with Apache
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 挂载 DRBD 资源并与 Apache 一起使用
- en: Before using the DRBD resource, you must define a filesystem on it and mount
    it on a local directory. We will use Apache's document root directory (`/var/www/html`),
    but given the case, you could use a virtual host directory as well. As we did
    earlier, we will add these changes in a configuration file, step by step, and
    we will push it to the running CIB later on `node01` (or whatever the DC is).
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 DRBD 资源之前，必须在其上定义一个文件系统并将其挂载到本地目录。我们将使用 Apache 的文档根目录（`/var/www/html`），但根据情况，您也可以使用虚拟主机目录。如前所述，我们将逐步在配置文件中添加这些更改，并稍后将其推送到运行中的
    CIB（`node01` 或其他数据中心）。
- en: 'To begin, create a new configuration file named `fs_dbrd0_cfg` (feel free to
    change the name if you want):'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，创建一个名为 `fs_dbrd0_cfg` 的新配置文件（如果需要，可以更改文件名）：
- en: '[PRE60]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Next, we''ll create the filesystem resource itself (again, change the variable
    values if needed). This is another special type of resource provided out of the
    box:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将创建文件系统资源本身（如果需要，修改变量值）。这是另一个开箱即用的特殊类型资源：
- en: '[PRE61]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'It indicates that the filesystem should always be available on the master DRBD
    resource:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 这表示文件系统应该始终在主 DRBD 资源上可用：
- en: '[PRE62]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'Note that in order for the filesystem to be started properly, `/dev/drbd0`
    must be started first, so we will have to add a constraint for this purpose:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，为了确保文件系统能够正确启动，必须首先启动 `/dev/drbd0`，因此我们需要为此目的添加一个约束条件：
- en: '[PRE63]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Finally, ensure that Apache needs to run on the same node as the filesystem
    resource, which also needs to come online before the web server resource can be
    started:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，确保 Apache 需要与文件系统资源在同一节点上运行，且该资源也需要在 Web 服务器资源启动之前上线：
- en: '[PRE64]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'You can review the configuration with the following command:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用以下命令查看配置：
- en: '[PRE65]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'The output is shown in the following screenshot:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下所示的截图：
- en: '![Mounting the DRBD resource and using it with Apache](img/00047.jpeg)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
  zh: '![挂载DRBD资源并与Apache一起使用](img/00047.jpeg)'
- en: 'If everything is correct, then push it to the running CIB with this command:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切正确，使用以下命令将其推送到运行中的CIB：
- en: '[PRE66]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: The preceding command should show CIB updated on successful completion.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令应在成功完成后显示CIB已更新。
- en: 'If you now run `pcs status`, you should see the newly added resources, as you
    can see in the following screenshot:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 如果现在运行`pcs status`，你应该会看到新添加的资源，正如下面截图所示：
- en: '![Mounting the DRBD resource and using it with Apache](img/00048.jpeg)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![挂载DRBD资源并与Apache一起使用](img/00048.jpeg)'
- en: 'Now, you don''t need to manually mount `/dev/drbd0` in `/var/www/html`, because
    the cluster will take care of it. You can verify that the DRBD device has been
    mounted in `/var/www/html` using this command:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你无需手动挂载`/dev/drbd0`到`/var/www/html`，因为集群会自动处理。你可以使用以下命令验证DRBD设备是否已经挂载到`/var/www/html`：
- en: '[PRE67]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: Note
  id: totrans-232
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Remember that any original contents present in `/var/html/www` will not be available
    while `/dev/drbd0` is mounted.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，在`/dev/drbd0`挂载时，`/var/html/www`中任何原有的内容将不可用。
- en: Testing the DRBD resource along with Apache
  id: totrans-234
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试DRBD资源与Apache一起使用
- en: 'As a simple test, we will display the information about the PHP installation.
    Create a file named `info.php` inside `/var/www/html` on `node01` with the following
    contents:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个简单的测试，我们将显示PHP安装信息。在`node01`的`/var/www/html`中创建一个名为`info.php`的文件，内容如下：
- en: '[PRE68]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'Now, point your browser to `192.168.0.4/info.php` and verify that the output
    is similar to the one shown here:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，将浏览器指向`192.168.0.4/info.php`，并验证输出是否与此处显示的类似：
- en: '![Testing the DRBD resource along with Apache](img/00049.jpeg)'
  id: totrans-238
  prefs: []
  type: TYPE_IMG
  zh: '![测试DRBD资源与Apache一起使用](img/00049.jpeg)'
- en: 'Then, stop the cluster (`pcs cluster stop`) on `node01` or put it into the
    standby mode (`pcs cluster standby node01`) and refresh the browser. The only
    thing that should change on the output is the system name, as shown in the following
    screenshot, since the `phinfo()` PHP function returns the local hostname along
    with the information about the PHP installation:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，停止`node01`上的集群（`pcs cluster stop`）或将其置于待机模式（`pcs cluster standby node01`），并刷新浏览器。输出中唯一应该变化的是系统名称，如下图所示，因为`phinfo()`
    PHP函数返回的是本地主机名以及PHP安装的信息：
- en: '![Testing the DRBD resource along with Apache](img/00050.jpeg)'
  id: totrans-240
  prefs: []
  type: TYPE_IMG
  zh: '![测试DRBD资源与Apache一起使用](img/00050.jpeg)'
- en: 'In addition, if you list the contents of `/var/www/html` on `node02`, you will
    see that the `info.php` file that was created originally on `node01` now shows
    on `node02` as well, as indicated in this screenshot:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果你列出`node02`上`/var/www/html`的内容，你会看到原本在`node01`上创建的`info.php`文件现在也出现在`node02`上，如下图所示：
- en: '![Testing the DRBD resource along with Apache](img/00051.jpeg)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![测试DRBD资源与Apache一起使用](img/00051.jpeg)'
- en: 'Before proceeding, remember to return `node01` to normal mode:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，请记得将`node01`恢复到正常模式：
- en: '[PRE69]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: Setting up a high-availability database with replicated storage
  id: totrans-245
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置具有复制存储的高可用数据库
- en: 'The last part of this chapter focuses on setting up a HA MariaDB database with
    replicated storage. To begin, we will have to set up another DRBD resource as
    we did earlier. We will review the necessary steps here for clarity:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的最后部分重点介绍设置具有复制存储的高可用MariaDB数据库。首先，我们需要像之前一样设置另一个DRBD资源。为了清晰起见，我们将在此回顾必要的步骤：
- en: Add another virtual disk to each virtual machine (a 2 GB disk will do).
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为每个虚拟机添加另一个虚拟磁盘（2 GB磁盘即可）。
- en: 'Create a partition on the newly added disk and then go through the process
    of creating a **Physical Volume** (**PV**) on `/dev/``sdc1`, a **Volume Group**
    (**VG**, named `drbd_db_vg`), and finally a **Logical Volume** (**LV**, `drbd_db_vol`):'
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在新添加的磁盘上创建一个分区，然后按照流程在`/dev/``sdc1`上创建**物理卷**（**PV**）、**卷组**（**VG**，命名为`drbd_db_vg`），最后创建**逻辑卷**（**LV**，`drbd_db_vol`）：
- en: '[PRE70]'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'Create a configuration file (`/etc/drbd.d/drbd1.res`) for the new DRBD resource
    (`drbd1`), and based on the configuration file for the first replicated storage
    resource, edit the settings accordingly and use a different port:'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为新的DRBD资源（`drbd1`）创建一个配置文件（`/etc/drbd.d/drbd1.res`），并基于第一个复制存储资源的配置文件，按需编辑设置并使用不同的端口：
- en: '[PRE71]'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'The, add a firewall rule to allow traffic:'
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后，添加一条防火墙规则以允许流量：
- en: '[PRE72]'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'Repeat the previous steps on the second node. Initialize the metadata for the
    new DRBD resource on both nodes:'
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第二个节点上重复之前的步骤。为新DRBD资源初始化元数据：
- en: '[PRE73]'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'Enable the replicated storage resource in order to allocate disk and network
    resources for its operation:'
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用复制存储资源，以便为其操作分配磁盘和网络资源：
- en: '[PRE74]'
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'Mark the DRBD device on the DC node as primary:'
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将DC节点上的DRBD设备标记为主设备：
- en: '[PRE75]'
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'Add the new DRBD device as cluster resource:'
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将新的DRBD设备添加为集群资源：
- en: '[PRE76]'
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'When this process is complete, the overview of all configured DRBD resources
    up until this point should look like this:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 当此过程完成时，所有已配置的DRBD资源概述应如下所示：
- en: '[PRE77]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'In addition, the cluster should now include the new DRBD resource and its clone
    (`db_drbd` and `db_drbd_clone`, respectively) as well as the filesystem resource,
    as you can see in this screenshot:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，集群现在应包含新的DRBD资源及其克隆（分别为`db_drbd`和`db_drbd_clone`）以及文件系统资源，正如您在此截图中所看到的：
- en: '![Setting up a high-availability database with replicated storage](img/00052.jpeg)'
  id: totrans-265
  prefs: []
  type: TYPE_IMG
  zh: '![设置高可用性数据库与复制存储](img/00052.jpeg)'
- en: 'We can now divide the MariaDB files into two separate sections:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以将MariaDB文件分成两个独立的部分：
- en: Binaries, socket, and `.pid` files will be placed inside a directory on a regular
    partition, independent on each node `(/var/lib/mysql` by default). These are files
    we don't need to be highly available or fail-safe.
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 二进制文件、套接字和`.pid`文件将放置在常规分区的一个目录中，每个节点独立（默认在`/var/lib/mysql`）。这些文件不需要具备高可用性或故障安全性。
- en: Database and configuration files (`my.cnf`) will be stored in a DRBD resource,
    which will be mounted under `/var/lib/mariadb_drbd1`, inside a directory named
    data.
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库和配置文件（`my.cnf`）将存储在一个DRBD资源中，该资源将挂载在`/var/lib/mariadb_drbd1`下的名为data的目录中。
- en: 'Next, we need to add the database server as a cluster resource:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要将数据库服务器作为集群资源添加：
- en: '[PRE78]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'This we will add the same constraints that we did with Apache:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将添加与Apache相同的约束：
- en: '[PRE79]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: 'Next, we will add a firewall rule to allow traffic:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将添加防火墙规则以允许流量：
- en: '[PRE80]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: 'We will begin by creating an `ext4` filesystem on `drbd1` and mounting it in
    the directory that was created previously. Only perform this step on the DC:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先在`drbd1`上创建一个`ext4`文件系统，并将其挂载到之前创建的目录中。此步骤仅在数据中心（DC）上执行：
- en: '[PRE81]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'Next, we need to move the database server configuration file to the mount point
    of `drbd1` (perform all of the following steps on both nodes):'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要将数据库服务器配置文件移动到`drbd1`的挂载点（在两个节点上执行以下所有步骤）：
- en: '[PRE82]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'Edit it so that the `datadir` variable will point to the right directory inside
    the mount point of the DRBD resource and at the same time, specify that the database
    server should listen for TCP connections on a defined address (in this case, the
    IP address of our virtual IP resource):'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑该文件，确保`datadir`变量指向DRBD资源挂载点内正确的目录，同时指定数据库服务器应监听虚拟IP资源的IP地址上的TCP连接：
- en: '[PRE83]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: 'Next, we need to initialize the database data directory:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要初始化数据库数据目录：
- en: '[PRE84]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: 'Finally, log on to the database server:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，登录到数据库服务器：
- en: '[PRE85]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: 'Then, grant all permissions to the root user identified by the defined password:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，授予通过定义的密码识别的root用户所有权限：
- en: '[PRE86]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: Note
  id: totrans-287
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This permission set is only for testing and should be modified with the necessary
    security parameters before moving the cluster to a production environment.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 此权限设置仅用于测试，在将集群迁移到生产环境之前，应根据需要修改以满足安全要求。
- en: 'Alternatively, we can create an empty database:'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，我们可以创建一个空数据库：
- en: '[PRE87]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: 'Finally, make sure the `mysql` user can access the `/var/lib/mariadb_drbd1`
    directory:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，确保`mysql`用户可以访问`/var/lib/mariadb_drbd1`目录：
- en: '[PRE88]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: If we now failover, from the active node to the passive one, the actual database
    files within `datadir` will be replicated by DRBD to the same directory on the
    other node.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们现在从活动节点切换到被动节点，`datadir`中的实际数据库文件将通过DRBD复制到另一个节点的相同目录中。
- en: Troubleshooting
  id: totrans-294
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 故障排除
- en: As explained previously, the output of `pcs status` under `Failed actions` will
    show you whether there are problems with the cluster resources and provide information
    as to what you should do in order to fix them.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，`pcs status`命令的`Failed actions`部分将显示集群资源是否存在问题，并提供解决方案的信息。
- en: 'Here is an example:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个示例：
- en: '`exit-reason=''Config /var/lib/mariadb_drbd1/my.cnf doesn''t exist''`: Make
    sure the configuration file for MariaDB exists and is identical on both nodes.'
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`exit-reason=''Config /var/lib/mariadb_drbd1/my.cnf doesn''t exist''`：确保MariaDB的配置文件存在，并且在两个节点上的内容完全一致。'
- en: '`exit-reason=''Couldn''t find device [/dev/drbd1]. Expected /dev/??? to exist''`:
    The DRBD device was not created correctly. Review the instructions and try to
    create it.'
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`exit-reason=''Couldn''t find device [/dev/drbd1]. Expected /dev/??? to exist''`：DRBD设备未正确创建。请检查指示并尝试重新创建该设备。'
- en: 'As you can see, the exit reason will give you valuable information to troubleshoot
    and fix the issues you may have. If, after verifying the conditions outlined in
    the error messages, you are still experiencing issues with a particular resource,
    it is useful to clean up the operation history of a resource and redetect its
    current state:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，退出原因将为您提供有价值的信息，以帮助排除故障并修复可能遇到的问题。如果在验证了错误信息中列出的条件后，您仍然在处理特定资源时遇到问题，那么清理资源的操作历史并重新检测其当前状态是非常有用的：
- en: '[PRE89]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: 'From Kamran, a real world problem scenario, which happens when the reader follows
    (or gets lost following) instructions in this chapter:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 来自Kamran的真实问题场景，发生在读者按照本章的指示操作时（或者在跟随过程中迷失方向）：
- en: '[PRE90]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: Summary
  id: totrans-303
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'In this chapter, we explained how to set up real-world applications of clusters:
    a database server and a web server. Both applications build upon a replicated
    storage device in a setup that increases availability by providing failover storage
    for regular and database files.'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，我们解释了如何设置集群的实际应用：一个数据库服务器和一个Web服务器。这两个应用都基于一个复制的存储设备，通过提供故障转移存储来增加可用性，用于存储常规文件和数据库文件。
- en: In the next two chapters, we will build upon the concepts and resources that
    we introduced here, troubleshoot common issues in cluster-based web and database
    servers, and prevent common bottlenecks in order to ensure the high availability
    of applications.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的两章中，我们将基于这里介绍的概念和资源进行扩展，排查基于集群的Web和数据库服务器中的常见问题，并防止常见瓶颈，以确保应用程序的高可用性。
