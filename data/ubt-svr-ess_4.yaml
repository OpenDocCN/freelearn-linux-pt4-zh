- en: Chapter 4. Security with Ubuntu
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章：Ubuntu的安全性
- en: 'In the field of computer servers, security is a very hot key. That''s why,
    Ubuntu Server gives it a lot of importance. In this chapter, we will take a look
    at how to activate, configure, and enhance a lot of security aspects. This chapter
    will be divided into the following three parts:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算机服务器领域，安全性是一个非常热门的主题。这就是为什么Ubuntu Server非常重视它。在本章中，我们将看看如何激活、配置和增强许多安全方面。本章将分为以下三部分：
- en: Getting a basic security level for Ubuntu Server
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为Ubuntu Server获得基本的安全级别
- en: Going in depth to see how to configure advanced security settings
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 深入了解如何配置高级安全设置
- en: Performing a backup/restore procedure for the whole Ubuntu Server
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行整个Ubuntu Server的备份/恢复程序
- en: The basic security settings
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本安全设置
- en: First of all, let's have a look at how to set up a basic security level for
    Ubuntu Server. There is a saying in security circles that *security is a process,
    not a product*. What this means is that despite what your vendor might tell you,
    you can't solve all your security problems with some application or software.
    Instead, you will find real security when you start to follow good security principles
    and develop good security procedures. This is what we will mainly see in this
    section.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们看看如何为Ubuntu Server设置基本的安全级别。安全领域有一句话叫做*安全是一个过程，而不是一个产品*。这意味着，尽管你的供应商可能告诉你，你不能通过某个应用程序或软件解决所有的安全问题。相反，只有当你开始遵循好的安全原则并制定良好的安全流程时，才能实现真正的安全。这正是我们在本节中将主要讨论的内容。
- en: Managing users
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户管理
- en: In this subsection, you will discover best practices in terms of user management,
    which covers not only user creation, modification, and deletion, but also group
    attribution, permissions, and a lot of other details.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本小节中，你将了解关于用户管理的最佳实践，涉及不仅仅是用户创建、修改和删除，还包括组分配、权限和其他许多细节。
- en: User account administration
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 用户账户管理
- en: 'The following are the most useful commands that are required to set up and
    manage user accounts:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是设置和管理用户账户时需要的最有用的命令：
- en: '`useradd`: This command adds the user that was passed in as a parameter to
    the local authentication system'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`useradd`：此命令将作为参数传递的用户添加到本地身份验证系统。'
- en: '`usermod`: This command modifies the properties of the user passed in as a
    parameter'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`usermod`：此命令修改作为参数传递的用户属性。'
- en: '`userdel`: This command properly deletes from a system the user passed in as
    a parameter'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`userdel`：此命令正确删除系统中作为参数传递的用户。'
- en: '`passwd`: This command modifies the passwords for a user passed in as a parameter'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`passwd`：此命令修改作为参数传递的用户密码。'
- en: We can add some options to those commands, those options are listed and detailed
    using -for example for the case of `useradd-` either `man useradd` or `useradd
    --help`.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以为这些命令添加一些选项，这些选项会列出并详细说明——例如，在`useradd-`的情况下，可以通过`man useradd`或`useradd
    --help`来查看。
- en: Tip
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: There exists the `adduser` command that also allows you to create new users.
    The difference between `useradd` and `adduser` depends on the Linux distribution.
    For example, for Fedora/Centos/Gentoo, `adduser` is just a symbolic link to `useradd`.
    But in our case, on Debian or Ubuntu systems, `useradd` is the command itself,
    and you can create users and define options for these users by using it. On the
    other hand, `adduser` is a Perl script that uses `useradd` to create an account
    and asks you for a password, your full name, phone number, and other information.
    We can say that in this case, it simplifies things for you.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 存在一个`adduser`命令，也允许你创建新用户。`useradd`和`adduser`的区别取决于Linux发行版。例如，对于Fedora/Centos/Gentoo，`adduser`只是指向`useradd`的符号链接。但在我们的例子中，在Debian或Ubuntu系统上，`useradd`是命令本身，你可以使用它来创建用户并为这些用户定义选项。另一方面，`adduser`是一个Perl脚本，它使用`useradd`来创建账户，并会询问你密码、全名、电话号码和其他信息。可以说，在这种情况下，它为你简化了操作。
- en: 'The following are the most important options that you need to take into account
    when creating a new user, especially for security reasons:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是创建新用户时需要考虑的最重要选项，尤其是出于安全原因：
- en: '`-m`: Use this option during the creation of a home directory for the user
    that needs to be created. Without it, you''d have to create a new directory, change
    its ownership and permissions that fit the needs of the user, put within it the
    default files and directories that should exist under a home directory, and then
    assign the default directories and files to the home directory by using the `usermod`
    command with the `-d` option.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-m`：在创建需要创建的用户的主目录时使用此选项。如果不使用此选项，你将需要手动创建新目录、更改其所有权和权限，使其符合用户需求，将默认的文件和目录放入主目录中，然后通过使用`usermod`命令和`-d`选项，将默认的目录和文件分配给主目录。'
- en: '`-e date`: This is used to set an expiration date for the user. After this
    date, the system will automatically disable the user''s account. Use this in case
    you need to create temporary users for your server. So, even if you forget to
    delete them, the system will at least lock their accounts.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-e date`：用于设置用户的过期日期。过了这个日期，系统将自动禁用该用户的账户。如果需要为服务器创建临时用户时，可以使用此选项。即使你忘记删除它们，系统至少会锁定他们的账户。'
- en: '`-G groups`: This sets the group membership of users. It is good security practice
    to classify server users by groups and set specific parameters and permissions
    for each group.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-G groups`：此选项用于设置用户的组成员资格。将服务器用户按组分类，并为每个组设置特定的参数和权限是良好的安全实践。'
- en: Tip
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Every user has a unique ID, which is the UID variable. In Ubuntu, this variable
    starts from *1,000* for regular users, and values under *500* are reserved for
    system accounts with a specification value; the UID variable *0* is reserved for
    root users. Normally, this UID is unique, but there is only one case where you
    may want to give the same UID to more than one user—when you want to create a
    backup root user. To do this, you need to use either the `-o` option, or the `-u
    0` option with the `useradd` command when creating a user.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 每个用户都有一个唯一的ID，即UID变量。在Ubuntu中，普通用户的UID从*1,000*开始，低于*500*的值保留给具有特定值的系统账户；UID变量*0*保留给root用户。通常情况下，UID是唯一的，但在有一种情况你可能想要给多个用户分配相同的UID——即当你想创建一个备份的root用户时。为了做到这一点，你需要在创建用户时使用`-o`选项或使用`-u
    0`选项与`useradd`命令结合使用。
- en: Password administration
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 密码管理
- en: 'Passwords are one of the security keys for an **operating system** (**OS**).
    In Ubuntu Server, passwords are managed by using the `passwd` command. A simple
    user can use it to change their password, and an administrator can use it to change
    the password of another regular user. Not only that, the `passwd` command has
    other important features, such as the following ones, which are useful in the
    maintenance of system security:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 密码是**操作系统**（**OS**）的安全钥匙之一。在Ubuntu服务器中，密码通过使用`passwd`命令进行管理。普通用户可以使用它来更改密码，而管理员则可以用它来更改其他普通用户的密码。不仅如此，`passwd`命令还具有其他一些重要功能，如以下这些，对于系统安全的维护非常有用：
- en: By using the `-l` option, an administrator can lock a user account temporarily.
    It can be unlocked later by using the `-u` option.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过使用`-l`选项，管理员可以暂时锁定用户账户。稍后可以通过使用`-u`选项解锁账户。
- en: The status of the password for a given user account can be reported by using
    the `-S` option.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以通过使用`-S`选项来报告特定用户账户的密码状态。
- en: Users can be forced to change their password during the next login by using
    the `-e` option.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户可以通过使用`-e`选项，在下次登录时强制更改密码。
- en: Setting a minimum number of days to use a password before the possibility of
    changing it again is done via the `-n min_days_number` option. This is useful
    when you wish to prevent users from changing their password after expiration and
    then changing it back to the old one immediately.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置密码在再次更改之前必须使用的最小天数，通过`-n min_days_number`选项进行设置。此选项有助于防止用户在密码过期后立即将密码更改回原来的密码。
- en: You can set a maximum period of days to use a password. After completing this
    period, users are obliged to change their password. This is done by using the
    `-x max_days_number` option.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以设置密码的最大使用天数。完成这个周期后，用户必须更改密码。通过使用`-x max_days_number`选项来完成此操作。
- en: You can notify a user about the expiration of their password; the period in
    days is specified in the argument of the `-c notif` option.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以通过`-c notif`选项通知用户密码即将过期；该选项的参数是以天为单位的通知期。
- en: You can also set an automatic expiration of a user account in case there is
    no activity for a given period. This period is set in days and passed as an argument
    of the `-i exper` option.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您还可以设置用户账户的自动过期时间，如果一段时间内没有活动，则账户将过期。此时间以天为单位，并作为`-i exper`选项的参数传递。
- en: 'Some additional security features that are specifically related to password
    management and user login in general can be located and modified in the `/etc/login.defs`
    file. The following are the most important of these parameters:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 与密码管理和用户登录相关的一些额外安全功能可以在`/etc/login.defs`文件中找到并进行修改。以下是这些参数中最重要的几个：
- en: '`FAIL_DELAY`: This sets the amount of time (in seconds) that is taken by a
    system after a failed login before a user is prompted again to re-enter their
    password. By default, it is *3* seconds. By setting a suitable value here, we
    can block a **brute force attack**.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FAIL_DELAY`：此参数设置系统在登录失败后等待的时间（以秒为单位），然后再提示用户重新输入密码。默认情况下，它是*3*秒。通过在此设置适当的值，我们可以阻止**暴力破解攻击**。'
- en: '`LASTLOG_ENAB`: This is a Boolean value. When it is set to *1*, it means that
    this feature is enabled. By enabling this feature, the system will log all the
    successful logins in the `/var/log/lastlog` file. The `lastlog` file should exist
    to have this feature working. In case it doesn''t, you can create it by using
    the touch `/var/log/lastlog` command.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LASTLOG_ENAB`：这是一个布尔值。当设置为*1*时，表示此功能已启用。启用此功能后，系统将在`/var/log/lastlog`文件中记录所有成功的登录记录。`lastlog`文件必须存在才能使此功能生效。如果不存在，您可以通过使用`touch
    /var/log/lastlog`命令来创建它。'
- en: '`PASS_MIN_LEN`: This parameter contains the minimum number of characters that
    must be used for new passwords.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PASS_MIN_LEN`：此参数包含新密码必须使用的最小字符数。'
- en: Permission settings
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 权限设置
- en: Permissions are the second security barrier after the login process in an OS.
    Ubuntu, like other Linux servers, has a strong and well-made permission structure.
    In this section, we will cover two main concepts—file ownership and operation
    permissions (read/write/execute).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 权限是操作系统登录过程后的第二道安全屏障。与其他Linux服务器一样，Ubuntu拥有强大且完善的权限结构。在本节中，我们将介绍两个主要概念——文件所有权和操作权限（读/写/执行）。
- en: File ownership
  id: totrans-39
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 文件所有权
- en: Each file on Ubuntu Server has its owner (user) and group owner (the user's
    primary group in general). In some cases, an administrator needs to change a file
    ownership for some reason (general security reasons). To do this, we have to call
    either the `chown` or `chgrp` command.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 每个Ubuntu服务器上的文件都有所有者（用户）和组所有者（通常是用户的主组）。在某些情况下，管理员可能需要由于某些原因（如一般的安全原因）更改文件的所有权。为此，我们需要调用`chown`或`chgrp`命令。
- en: 'For `chown`, the command has the following pattern:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`chown`，命令的模式如下：
- en: '[PRE0]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Here are a couple of examples of this command:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是几个该命令的示例：
- en: '`chown one_user some_file`: This command changes the owner of `some_file` to
    `one_user`.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`chown one_user some_file`：此命令将`some_file`的所有者更改为`one_user`。'
- en: '`chown one_user:one_group some_file`: This command not only does what the preceding
    command did, but also changes its group to `one_group`.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`chown one_user:one_group some_file`：此命令不仅执行了前面命令的操作，还将文件的组更改为`one_group`。'
- en: We can also use `chown` to change only the group ownership. An example of this
    is `chown .one_group some_file`. Don't forget the (.) character just before the
    group name, which is `one_group` in this case. Note that we recently started using
    the colon character (`:`); both `.` and `:` are doing the job.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以使用`chown`来仅更改组所有权。一个例子是`chown .one_group some_file`。不要忘记在组名之前的（.）字符，这里组名是`one_group`。注意我们最近开始使用冒号字符（`:`）；`
    .`和`:`都能完成这项工作。
- en: For group ownership, there is another alternative, namely the `chgrp` command.
    An example of its usage is `chgrp one_group some_file`. Note that we don't need
    the `.` character before the group name, which is `one_group` in this case.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 对于组所有权，还有一个替代命令，即`chgrp`命令。它的使用示例是`chgrp one_group some_file`。请注意，在组名之前我们不需要`
    .`字符，这里组名是`one_group`。
- en: Note
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: By default, the scope of the `chown` and `chgrp` commands applies only to the
    file or directory on which they are used. If you want to use these commands in
    a recursive way, you just have to add the `-R` option. For example, `chown -R
    one_user some_dir` makes the `one_user` user the owner of all the files in `some_dir`
    and all of its subdirectories.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`chown`和`chgrp`命令的作用范围仅限于它们所使用的文件或目录。如果您希望递归使用这些命令，只需添加`-R`选项。例如，`chown
    -R one_user some_dir`会将`one_user`用户设置为`some_dir`及其所有子目录中文件的所有者。
- en: Configuring permissions
  id: totrans-50
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 配置权限
- en: 'Operation permissions are of three types, namely **read** (the **r** symbol
    or a value of **4**), **write** (the **w** symbol or a value of **2**), and **execute**
    (the **x** symbol or a value of **1**). Each one of these three types can be applied
    on a file or directory for the **owner user** (**u**), its **primary user group**
    (**g**) members, and **other users** (**o**). We can apply permissions on **all
    users** (**a**). To set these permissions, you can use the following two ways:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 操作权限有三种类型，分别是**读**（**r**符号或值为**4**）、**写**（**w**符号或值为**2**）和**执行**（**x**符号或值为**1**）。这些权限可以分别应用于**所有者用户**（**u**）、其**主用户组**（**g**）成员和**其他用户**（**o**）。我们还可以对**所有用户**（**a**）应用权限。设置这些权限的方法有两种：
- en: '**Specific use**: This is used to configure specific permissions for a specific
    file. This is done by using the `chmod` command.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**特定用途**：此功能用于配置特定文件的特定权限。通过使用`chmod`命令来完成此操作。'
- en: '**General use**: This is used to configure default permissions attribution
    for new created files. This is done by using the `umask` command.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**通用用途**：用于配置新创建文件的默认权限分配。通过使用`umask`命令来完成此操作。'
- en: Tip
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: There are some additional specific permissions called **special permissions**,
    namely **SUID**, SGID, and Sticky bit. This is beyond the scope of this book.
    You can explore them in an advanced Linux administration guide.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些额外的特殊权限，称为**特殊权限**，即**SUID**、**SGID**和**粘滞位**。这些内容超出了本书的范围，您可以在高级Linux管理指南中进一步探讨。
- en: 'For the `chmod` tool, you can use the following two modes:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`chmod`工具，您可以使用以下两种模式：
- en: 'The relative mode: This can be used in the same way as we use the absolute
    mode, which is detailed in the next section, to set huge changes at a time in
    terms of permissions, but it is even more useful when you need to add or remove
    just one permission at a time in an easy and convenient manner. When using `chmod`
    in this mode, you need to specify the entity (u, g, o, a) to which we will grant
    permissions, which is followed by the granting symbol (`+` for adding, `-` for
    removing, and `=` for setting the permissions) and the permissions that you wish
    to apply (r, w, x). For example, the `chmod g+w some_file` command will add write
    permissions on the `some_file` file to the entity group. Let''s take a look at
    another example where we set more than one permission at the same time by using
    the `chmod u+rwx,g+rx-w,o+r-wx another_file` mode, where we added all the rights
    to a user, added `read` and `execute` to the group and removed `write` from it,
    and added only `read` to others and removed `write` and `execute`.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 相对模式：这种模式与绝对模式相似，后者将在下一节中详细介绍，可以一次性设置大量权限变更。但当您需要一次仅添加或删除一个权限时，它更加实用且方便。当使用`chmod`的相对模式时，您需要指定要授予权限的实体（u、g、o、a），然后是授予符号（`+`表示添加，`-`表示删除，`=`表示设置权限）以及您希望应用的权限（r、w、x）。例如，`chmod
    g+w some_file`命令将向实体组添加`some_file`文件的写权限。我们来看另一个例子，通过使用`chmod u+rwx,g+rx-w,o+r-wx
    another_file`模式，我们一次性设置多个权限，其中将所有权限授予用户，向组添加`read`和`execute`权限并移除`write`权限，同时仅向其他用户添加`read`权限并移除`write`和`execute`权限。
- en: 'The absolute mode: This mode offers a short and convenient way to set permissions,
    especially when you need to change more than one permission at a time. In this
    mode, we use numeric values to define permissions. The permission value is composed
    of four digits. The first one refers to the special permissions (not covered in
    this book, as explained in a previous note). This digit can be omitted, unless
    you want to use it (be careful because it is dangerous). The other values refer
    in the order from left to right to the permissions related to a user, group, and
    others. Values are counted for each entity by adding values related to each permission
    (r=4, w=2, x=1). For example, the equivalent of `chmod u+rwx,g+rx-w,o+r-wx another_file`
    should be `chmod 754 another_file`.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 绝对模式：这种模式提供了一种简短而方便的方式来设置权限，特别是当您需要一次修改多个权限时。在此模式下，我们使用数字值来定义权限。权限值由四个数字组成。第一个数字表示特殊权限（本书不涉及，之前的注释中有解释）。除非您需要使用此权限，否则可以省略该数字（小心，因为它可能有危险）。其余的数字按从左到右的顺序分别表示与用户、组和其他用户相关的权限。每个实体的值是通过将与每个权限相关的值相加来计算的（r=4，w=2，x=1）。例如，`chmod
    u+rwx,g+rx-w,o+r-wx another_file`命令的等效命令应为`chmod 754 another_file`。
- en: For the `umask` tool, it is the **user file creation mode mask**. It determines
    the default permissions that are set when creating a new file. The `umask` parameter
    is expressed in a numeric value, and this value is subtracted from the maximum
    permissions that can be set automatically; which is *666* for files and *777*
    for directories. The order of digits used in `umask` is the same as that for `chmod`;
    the first one from the left is for a user, the second digit is for a group, and
    the third digit is for others. By default, `umask` is set to *022*, which gives
    *644* permissions to all the newly created files and the *755* permissions to
    all the newly created directories.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`umask`工具，它是**用户文件创建模式掩码**。它决定了创建新文件时所设置的默认权限。`umask`参数以数字值表示，该值从可以自动设置的最大权限中减去；文件的最大权限是*666*，目录的最大权限是*777*。`umask`中使用的数字顺序与`chmod`命令相同；最左边的数字是针对用户的，第二个数字是针对组的，第三个数字是针对其他人的。默认情况下，`umask`设置为*022*，这为所有新创建的文件提供*644*权限，为所有新创建的目录提供*755*权限。
- en: The `umask` setting can be changed either for all users or for individual ones.
    If you want to set the `umask` value for all users, you must make sure that the
    `umask` setting is entered in the `/etc/login.defs` configuration file (before,
    it was entered in the `/etc/profile` file, but now it is changed to `/etc/login.defs`).
    On the other hand, if you would like to apply specific `umask` settings to only
    a specific user, you have to edit the profile file that exists under this user's
    home directory and set the desired `umask` value there.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '`umask`设置可以为所有用户或单独的用户进行更改。如果您希望为所有用户设置`umask`值，必须确保在`/etc/login.defs`配置文件中输入`umask`设置（以前是在`/etc/profile`文件中输入的，但现在已更改为`/etc/login.defs`）。另一方面，如果您希望仅对特定用户应用特定的`umask`设置，则必须编辑该用户主目录下的配置文件，并在其中设置所需的`umask`值。'
- en: Applying quota to user accounts
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对用户帐户应用配额
- en: User quota is another security barrier for servers. They allow administrators
    to apply a quota restriction to the file and directory creation for users and
    groups.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 用户配额是服务器的另一层安全防护。它们允许管理员对用户和组的文件和目录创建应用配额限制。
- en: 'To use this feature, you need to perform the following steps:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用此功能，您需要执行以下步骤：
- en: First of all, install the `quota` software. This is done by using the `sudo
    apt-get install quota` command.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，安装`quota`软件。可以使用`sudo apt-get install quota`命令完成此操作。
- en: 'Secondly, prepare the filesystem to support quota. To do this, you need to
    add the `usrquota` option (if you want to apply quota to users) or the `grpquota`
    option (for groups) in the options column in the `/etc/fstab` file for every filesystem
    in which you want to use quota. Then, remount all the partitions in which quota
    has been applied by using the following command:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 其次，准备文件系统以支持配额。为此，您需要在`/etc/fstab`文件中的选项列中，为每个希望使用配额的文件系统添加`usrquota`选项（如果要对用户应用配额）或`grpquota`选项（如果是对组应用配额）。然后，通过使用以下命令，重新挂载所有已应用配额的分区：
- en: '[PRE1]'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Next, initialize the quota software. The best way to initialize the quota system
    is by running the `sudo quotacheck -augmv` command, which will create the `aquota.user`
    and `aquota.group` files to list all the quota information for actual users.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，初始化配额软件。初始化配额系统的最佳方法是运行`sudo quotacheck -augmv`命令，这将创建`aquota.user`和`aquota.group`文件，以列出所有实际用户的配额信息。
- en: Finally, the real work involves setting up quota for users and groups. This
    is done via the `edquota` command. For example, the `sudo edquota -u <username>`
    command will open a temporary file for quota for that user in a text editor. This
    file contains six numbers that specify the quota for all the filesystems on your
    server. The first one represents the block's number, which is currently being
    used by the user that you're setting the quota for. The second number is the soft
    limit for the block's number, while the third number is the hard limit. The fifth
    and sixth numbers are the equivalents for inodes, which are almost equal to the
    number of files that this user can create on the filesystem. The first and fourth
    numbers are just used to record the number of blocks and inodes that are currently
    being used for this user.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最终，实际的工作是为用户和组设置配额。这是通过`edquota`命令完成的。例如，`sudo edquota -u <username>`命令会在文本编辑器中为该用户打开一个临时的配额文件。该文件包含六个数字，指定了服务器上所有文件系统的配额。第一个数字表示当前用户所使用的块数量。第二个数字是该块数量的软限制，而第三个数字是硬限制。第五个和第六个数字是inode的对应值，几乎等同于该用户在文件系统上能创建的文件数量。第一个和第四个数字用于记录此用户当前使用的块和inode数量。
- en: After setting up the quota, you need to use the `sudo edquota -t` command to
    set the grace time that you want to use either in hours, or in days. The grace
    time is set per filesystem. Therefore, there's no option to specify different
    grace time settings for different users.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置完配额后，你需要使用`sudo edquota -t`命令来设置你想使用的宽限期（可以是小时或天数）。宽限期是按文件系统设置的。因此，没有选项可以为不同的用户指定不同的宽限期设置。
- en: Tip
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The initialization step is mandatory in the setting up of quota for a new user;
    it makes sure that new users are known to the quota system.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 初始化步骤是为新用户设置配额时的必需步骤；它确保新用户被配额系统识别。
- en: After setting up quota, it is useful to monitor it. To do that, you can use
    the `repquota` command. With the `-aug` options, this command shows the current
    quota settings for all the users and groups on all the volumes.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 设置配额后，监控它是很有用的。你可以使用`repquota`命令来做到这一点。使用`-aug`选项时，命令会显示所有用户和组在所有卷上的当前配额设置。
- en: Finally, after setting up quotas, don't forget to start the quota service by
    running the `/etc/init.d/quota start` command.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在设置完配额后，别忘了通过运行`/etc/init.d/quota start`命令来启动配额服务。
- en: Once you have set quotas for one user, you may want to apply them to other users.
    Instead of following the same procedure for all the users on the system, you can
    use the `edquota -p` command. For example, `sudo edquota -p user1 user2` copies
    the quotas currently applied for `user1 user` to `user user2`.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 设置一个用户的配额后，你可能想将其应用到其他用户。你可以使用`edquota -p`命令，而不是为系统上所有用户遵循相同的程序。例如，`sudo edquota
    -p user1 user2`会将当前应用于`user1`的配额复制到`user2`。
- en: Tip
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The `edquota` command works only with blocks and not bytes, kilobytes, or anything
    else. So, to set quota properly, you need to know the block size that's currently
    being used. To find this block size, use the `sudo dumpe2fs <device> | grep "Block
    size"` command.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '`edquota`命令仅对块（blocks）有效，而不是字节、千字节或其他单位。因此，为了正确设置配额，你需要知道当前使用的块大小。要查找此块大小，可以使用`sudo
    dumpe2fs <device> | grep "Block size"`命令。'
- en: Configuring administration tasks with sudo
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用sudo配置管理任务
- en: Ubuntu implements a number of practices out of the box to make the default installation
    more secure. One of these practices is the disabling of the root account and the
    use of `sudo` for superuser privileges. The `sudo` program provides a much more
    robust set of features to increase user privileges as compared to the traditional
    su program.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: Ubuntu通过一些默认的实践来提高默认安装的安全性。其做法之一是禁用root账户，并使用`sudo`来获得超级用户权限。与传统的su程序相比，`sudo`程序提供了一套更为强大的功能来提升用户权限。
- en: The `sudo` command's configuration file can be found at `/etc/sudoers`. By default,
    Ubuntu provides a basic file that allows root users to do anything as any other
    user, and allows members of the admin group to become root users (the user that
    you create at the time of installation is automatically added to this group).
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '`sudo`命令的配置文件位于`/etc/sudoers`。默认情况下，Ubuntu提供了一个基本文件，允许root用户以任何其他用户的身份执行任何操作，并允许admin组成员成为root用户（在安装时创建的用户会自动被添加到此组）。'
- en: 'The `sudo` package provides a tool called `visudo` that you should use whenever
    you want to make changes to the file. Therefore, to view and edit the `/etc/sudoers`
    file, type in the following command:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '`sudo`软件包提供了一个叫做`visudo`的工具，任何时候你想修改文件时都应该使用它。因此，要查看和编辑`/etc/sudoers`文件，可以输入以下命令：'
- en: '[PRE2]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The reason you want to use `visudo` is that it automatically checks your `sudoers`
    file for mistakes. Since a mistake in the `sudoers` file could potentially lock
    you out of root access, this syntax check is pretty important. In case you do
    make a mistake, `visudo` will tell you about it after you save your settings and
    exit the page. So, you will have the option of going back and fixing your mistake,
    exiting without saving, or ignoring its warnings and saving anyway (which is not
    recommended).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 你想使用`visudo`的原因是它会自动检查你的`sudoers`文件是否存在错误。由于`sudoers`文件中的错误可能会导致你无法访问root权限，因此这个语法检查非常重要。如果你确实犯了错误，`visudo`会在你保存设置并退出页面后告诉你。这样，你可以选择回去修复错误、不保存并退出，或者忽略警告并保存（这不推荐）。
- en: Note
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: To edit the file and manage the `sudo` program in the best possible way, the
    easiest thing to do is to read and follow the examples in the manual pages. You
    can access it via the man `sudoers` command.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 为了最佳地编辑文件和管理`sudo`程序，最简单的方法是阅读并遵循手册页面中的示例。你可以通过`man sudoers`命令访问它。
- en: Configuring the AppArmor tool
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置AppArmor工具
- en: The AppArmor system that is installed by default in Ubuntu Server adds access
    control to specific system services with an aim to enhance the server security
    level. AppArmor is based on the security principle of least privileges. For every
    program, it assigns a series of rules that define a set of files and directories
    that this program is allowed to handle and explains how to handle them (`read
    only` or `read write`). When an application that is being managed by AppArmor
    violates these access controls, AppArmor intervenes, prevents it from doing so,
    and logs the event. There is a huge number of services that include AppArmor profiles
    by default, and more are being added in every Ubuntu release. In addition to the
    default profiles, the universe repository has an `apparmor-profiles` package that
    you can install to add more profiles for other services. Once you learn the syntax
    for the AppArmor rules, you can even add your own profiles.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Ubuntu Server安装的AppArmor系统为特定的系统服务添加了访问控制，旨在增强服务器的安全性。AppArmor基于最小权限的安全原则。它为每个程序分配一系列规则，定义了该程序可以处理的一组文件和目录，并解释如何处理这些文件（`只读`或`读写`）。当一个由AppArmor管理的应用程序违反这些访问控制时，AppArmor会介入，阻止它这样做，并记录该事件。默认情况下，有大量的服务包含了AppArmor配置文件，并且每个Ubuntu版本都会添加更多的服务。除了默认的配置文件，宇宙仓库中还有一个`apparmor-profiles`软件包，你可以安装它来为其他服务添加更多的配置文件。一旦你学会了AppArmor规则的语法，你甚至可以添加自己的配置文件。
- en: 'The best way to see how AppArmor works is by using an example program. The
    MySQL database server is one program that is automatically managed by AppArmor
    under Ubuntu. So, once the MySQL package is installed, you can use the `aa-status`
    program to see that AppArmor is already managing it, as follows:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 了解AppArmor如何工作的最佳方式是通过使用一个示例程序。MySQL数据库服务器是一个在Ubuntu下由AppArmor自动管理的程序。因此，一旦安装了MySQL软件包，你可以使用`aa-status`程序查看AppArmor已经在管理它，如下所示：
- en: '[PRE3]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Here you can see that the `/usr/sbin/mysqld profile` is loaded and is in the
    enforce mode and that the currently running `/usr/sbin/ mysqld process` (PID *6288*)
    is being managed by AppArmor.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以看到`/usr/sbin/mysqld profile`已加载，并且处于强制模式，当前正在运行的`/usr/sbin/mysqld process`（PID
    *6288*）正由AppArmor管理。
- en: 'AppArmor stores its profiles under the `/etc/apparmor.d/ directory`, and each
    filename is derived from the binary file that they manage. For instance, the profile
    for `/usr/sbin/mysqld` is located at `/etc/apparmor.d/usr.sbin.mysqld`. If you
    look at the contents of the file, you will get an idea of how the AppArmor profiles
    work and what sort of protection they provide:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: AppArmor将其配置文件存储在`/etc/apparmor.d/`目录下，每个文件名来源于它们管理的二进制文件。例如，`/usr/sbin/mysqld`的配置文件位于`/etc/apparmor.d/usr.sbin.mysqld`。如果你查看文件内容，你将了解AppArmor配置文件如何工作以及它们提供什么样的保护：
- en: '[PRE4]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The syntax is pretty straightforward for these files. First, there is a file
    or a directory path, which is followed by the permissions that are allowed. Globs
    are also allowed. So for instance, `/etc/mysql/**` recursively applies the files
    to all the files in the `/etc/mysql` directory. A single `*` will apply files
    only to files within the current directory.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 文件的语法非常简单。首先是文件或目录路径，其后是允许的权限。还支持通配符。例如，`/etc/mysql/**` 会递归地应用到`/etc/mysql`目录下的所有文件。一个单独的`*`会将文件应用到当前目录下的文件。
- en: 'After modifying an AppArmor profile, you should reload the AppArmor daemon
    so that the changes take effect. You can do this by using the following command:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 修改AppArmor配置文件后，应重新加载AppArmor守护程序以使更改生效。您可以通过以下命令执行此操作：
- en: '[PRE5]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: In AppArmor, there are two modes, namely **enforce** and **complain**. In the
    **enforce** mode, AppArmor actively blocks all the attempts by a program to violate
    its profile. In the **complain** mode, AppArmor simply logs the attempt but allows
    it to happen. You can easily change a profile so that it is in the enforce or
    complain mode by using the `aa-enforce` and `aa-complain` programs respectively.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在AppArmor中，有两种模式，即**enforce**和**complain**。在**enforce**模式下，AppArmor会积极阻止程序违反其配置文件的尝试。在**complain**模式下，AppArmor只是记录这些尝试，但允许它们发生。您可以使用`aa-enforce`和`aa-complain`程序轻松地将配置文件设置为enforce或complain模式。
- en: 'For example, in case you would like to change the MySQL AppArmor profile from
    the enforce to complain mode, this profile can perform read and write without
    restrictions in the profile file, but just those actions will be logged. All that
    we need to do is run the following command:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果您想要将MySQL的AppArmor配置文件从enforce模式更改为complain模式，则此配置文件可以在配置文件中执行读取和写入而无需限制，但只会记录这些操作。我们只需要运行以下命令：
- en: '[PRE6]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We can check the AppArmor status after this change, as follows:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行此更改后，我们可以检查AppArmor的状态，方法如下：
- en: '[PRE7]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Note
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'To be able to use the `aa-complain` and `aa-enforce` programs, you should first
    of all install the `apparmor-utils` package by using the following command:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用`aa-complain`和`aa-enforce`程序，您首先需要使用以下命令安装`apparmor-utils`软件包：
- en: '[PRE8]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'If you want to temporary disable AppArmor (for instance, for some debugging
    purposes, in case some processes are not working as expected and you are trying
    to check whether the `apparmor` profiles are the reason behind it or if it''s
    something else), you just have to run the following command:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想临时禁用AppArmor（例如，出于调试目的，以检查某些进程是否按预期工作，以及您是否尝试确定`apparmor`配置文件是否是问题的原因或其他原因），只需运行以下命令：
- en: '[PRE9]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Note that running the preceding command will only clear the profile''s cache.
    In case you need to unload the profile, you need to run the following command:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，运行上述命令只会清除配置文件的缓存。如果您需要卸载配置文件，则需要运行以下命令：
- en: '[PRE10]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Advanced security configuration
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高级安全配置
- en: In this section, we will discover some advanced security settings that are needed
    for most Ubuntu servers that are in a production environment, especially when
    they contain critical services. This advanced configuration is important because
    it will directly touch the behavior of services besides Ubuntu Server itself.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将探讨一些在生产环境中大多数Ubuntu服务器上都需要的高级安全设置，特别是当它们包含关键服务时。这些高级配置非常重要，因为它们直接影响除Ubuntu服务器本身以外的服务行为。
- en: SSH security enhancement
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SSH安全增强
- en: By definition, SSH is a secure communication protocol, but there are some additional
    enhancements that we can apply to take this security a step ahead.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 按定义，SSH是一种安全通信协议，但我们可以应用一些额外的增强措施来进一步提升安全性。
- en: Let's start with the default Ubuntu SSH configuration. The `/etc/ssh/sshd_config`
    file, which is very secure as it allows authentication keys to be used, uses privilege
    separation and allows only SSH protocol 2\. The only questionable setting is **PermitRootLogin**
    `yes`, which defines the option that allows root users to log in via SSH. In our
    case (Ubuntu Server with the default installation), this setting is useless since
    the root account is disabled, but in case you would like to enable the root account,
    you might want to set this option to no and run `sudo service ssh reload` to save
    the settings. By following these steps, you force users to log in with their regular
    accounts and they can perform `sudo up` command to root in case they need root
    privileges. This also allows you to prevent a user from being able to guess the
    root password and gain access.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从默认的Ubuntu SSH配置开始。`/etc/ssh/sshd_config`文件非常安全，因为它允许使用身份验证密钥、使用权限分离并且只允许SSH协议2。唯一值得怀疑的设置是**PermitRootLogin**
    `yes`，该选项定义了允许root用户通过SSH登录的选项。在我们的例子中（默认安装的Ubuntu Server），这个设置是无用的，因为root账户已被禁用，但如果你想启用root账户，你可能需要将此选项设置为no，并运行`sudo
    service ssh reload`来保存设置。通过这些步骤，你强制用户使用常规账户登录，如果需要root权限，他们可以执行`sudo up`命令来获取root权限。这也可以防止用户猜测root密码并获得访问权限。
- en: Another important security enhancement with SSH is the use of key-based authentication
    instead of passwords. This feature allows you to keep your server safe from brute
    force attacks. The working of key-based authentication is really simple. It is
    based on a couple of keys (one public and one private) generated by users. Then,
    the public key is placed in a special file on the remote server, and the private
    one must be kept with the user and mustn't be shared with others. When a user
    logs in, these keys are used to authenticate the user instead of a password. With
    this approach, and, users can also work more comfortably since they are able to
    log in to their machines without typing in the password every time. However, in
    case you want an extra layer of security, you can set a passphrase on your keys
    as well.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: SSH的另一个重要安全增强是使用基于密钥的身份验证而不是密码。这项功能可以保护你的服务器免受暴力破解攻击。基于密钥的身份验证工作原理非常简单。它基于用户生成的一对密钥（一个公钥和一个私钥）。然后，公钥被放置在远程服务器的一个特殊文件中，私钥则必须保存在用户本地，并且不能与他人共享。当用户登录时，这些密钥将用于身份验证，而不是密码。通过这种方法，用户还可以更加舒适地工作，因为他们可以在不每次输入密码的情况下登录到自己的机器。然而，如果你希望增加额外的安全层，你还可以在你的密钥上设置密码短语。
- en: 'It is relatively simple to set up key-based authentication. In this example,
    we have a user named `abdel` on a computer named **abdelmonam2** who wants to
    set up key authentication on a server named `abdelmonam1`. The first step is to
    use the `ssh-keygen` program to create an RSA public and private key on `abdelmonam2`.
    At each prompt, you can press the *Enter* key to accept the defaults, as shown
    in the following screenshot:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 设置基于密钥的身份验证相对简单。在本例中，我们有一个名为`abdel`的用户，他想在名为`abdelmonam1`的服务器上设置密钥身份验证，且这台计算机的名称为**abdelmonam2**。第一步是在`abdelmonam2`上使用`ssh-keygen`程序创建RSA公钥和私钥。在每次提示时，你可以按*Enter*键接受默认设置，如下截图所示：
- en: '![SSH security enhancement](img/B04800_04_01.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![SSH安全增强](img/B04800_04_01.jpg)'
- en: The script creates the keys in the `.ssh` directory under your home directory,
    which is `/home/abdel/.ssh` in this case. The private key and the public key are
    named `id_rsa` and `id_rsa.pub` respectively. It's very important (especially
    if you chose an empty passphrase) to keep the private key (`id_rsa`) safe! If
    anyone else gets access to this file, they can copy it and will be able to log
    in to a machine that you have set up with this key.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本将在你的主目录下的`.ssh`目录中创建密钥，在本例中是`/home/abdel/.ssh`。私钥和公钥分别命名为`id_rsa`和`id_rsa.pub`。如果你选择了空的密码短语，保持私钥（`id_rsa`）的安全非常重要！如果有人获得了这个文件的访问权限，他们可以复制它并能够登录到你设置了这个密钥的机器上。
- en: 'Once you have created the keys, the next step is to copy the `id_rsa.pub` key
    to the server and then append it to the `~/.ssh/authorized_keys` file. There are
    a number of ways to do this. The automatic one involves using the following command:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你创建了密钥，下一步是将`id_rsa.pub`密钥复制到服务器上，然后将其附加到`~/.ssh/authorized_keys`文件中。有多种方法可以做到这一点。自动化方法涉及使用以下命令：
- en: '[PRE11]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: One of the manual ways is to SSH into the remote machine, open `~/.ssh/authorized_keys`
    with a text editor, and paste in the contents of `id_rsa.pub`.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 一种手动的方法是通过 SSH 登录到远程机器，使用文本编辑器打开 `~/.ssh/authorized_keys`，并粘贴 `id_rsa.pub` 的内容。
- en: 'Once you have the keys set up on a machine, you should be able to log in without
    a password prompt unless you set a passphrase for your key. If the latter is the
    case, you will need to type it. After your keys work, you might want to disable
    SSH password authentication altogether. Just make sure that your SSH keys work
    first, or you could lock yourself out! To disable password authentication, edit
    `/etc/ssh/sshd_config` and locate the line that says `#PasswordAuthentication
    yes`. Uncomment this line and set it to no, as follows:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你在机器上设置好密钥，除非你为密钥设置了密码短语，否则应该能够登录而无需密码提示。如果是后者，你将需要输入密码短语。在你的密钥正常工作后，你可能想要完全禁用
    SSH 密码认证。只要确保你的 SSH 密钥正常工作，否则你可能会锁定自己！要禁用密码认证，编辑 `/etc/ssh/sshd_config` 文件，找到包含
    `#PasswordAuthentication yes` 的行。取消该行的注释并将其设置为 no，如下所示：
- en: '[PRE12]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Finally, run `sudo service sshd reload` to load the new change.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，运行 `sudo service sshd reload` 来加载新的更改。
- en: Tip
  id: totrans-122
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'The default is a *2048 bit* key. You can increase this to *4096 bits* with
    the `-b` flag (increasing the bits makes it harder to crack the key by brute force
    methods), as follows:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下使用 *2048 位* 密钥。你可以使用 `-b` 标志将其增加到 *4096 位*（增加位数可以使密钥更难通过暴力破解方法破解），如下所示：
- en: '[PRE13]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Another method that allows you to prevent SSH brute force attacks, especially
    when you can not disable password authentication for one reason or another, is
    the use of the `denyhosts` package. This package monitors for failed SSH logins.
    When a host attempts to log in either as a user that doesn't exist, or too many
    times, that host is added to `/etc/hosts.deny` and blocked from future SSH access.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种防止 SSH 暴力破解攻击的方法，特别是当由于某些原因无法禁用密码认证时，是使用 `denyhosts` 包。这个包会监控失败的 SSH 登录。当一个主机尝试以不存在的用户身份登录，或多次尝试失败时，该主机会被添加到
    `/etc/hosts.deny` 中，并阻止未来的 SSH 访问。
- en: Configuring firewalls
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置防火墙
- en: One of the most common ways of protecting machines on a network is with a firewall.
    Essentially, a firewall gives you the ability to restrict access to services over
    the network. With a firewall, you can limit access to SSH, for instance, to hosts
    only within your internal network, while allowing HTTP access to everyone.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 保护网络中机器的一种常见方法是使用防火墙。本质上，防火墙使你能够限制对网络服务的访问。例如，使用防火墙，你可以将对 SSH 的访问限制为仅允许来自内部网络的主机访问，同时允许每个人访问
    HTTP 服务。
- en: Historically, the firewall rules in Linux need to be set with a long and complicated
    set of `iptables` commands (also known as the `iptables` rules). This complexity
    is a weakness because one of the main security principles is to do things in a
    simple way. Luckily for Ubuntu administrators, there is now a simpler tool named
    `ufw`, which aims to simplify firewall administration by providing a frontend
    to the `iptables` commands.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 历史上，Linux 中的防火墙规则需要通过一组冗长且复杂的 `iptables` 命令来设置（也称为 `iptables` 规则）。这种复杂性是一个弱点，因为主要的安全原则之一是以简单的方式处理事务。幸运的是，对于
    Ubuntu 管理员来说，现在有一个名为 `ufw` 的更简单工具，旨在通过提供 `iptables` 命令的前端来简化防火墙管理。
- en: The `ufw` program is installed by default on Ubuntu Server, but it is disabled;
    you need to enable it before you start adding rules.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '`ufw` 程序默认安装在 Ubuntu Server 上，但它是禁用的；你需要在添加规则之前启用它。'
- en: 'The basic set of `ufw` commands is pretty straightforward. If you run `ufw
    -h`, you will get a help page that describes the main `ufw` commands, but if you
    want the entire syntax information, type in `man ufw` to read the entire manual
    page. First of all, let''s identify the main commands and then see some examples:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '`ufw` 的基本命令集非常简单。如果你运行 `ufw -h`，你将得到一个帮助页面，描述了主要的 `ufw` 命令；但如果你想查看完整的语法信息，可以输入
    `man ufw` 阅读完整的手册页。首先，让我们识别主要命令，然后看一些示例：'
- en: You can enable and disable `ufw` by using `sudo ufw enable` and `sudo ufw disable`
    respectively.
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以通过使用 `sudo ufw enable` 和 `sudo ufw disable` 来分别启用和禁用 `ufw`。
- en: Check the `ufw` status by using `sudo ufw status`; the same command will list
    all the rules in case `ufw` is enabled.
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `sudo ufw status` 检查 `ufw` 的状态；相同的命令将列出所有规则，以防 `ufw` 被启用。
- en: You can also set the default policy of your firewall. A very important command
    that you need to consider is the `default` command. This command defines the default
    policy of your firewall, as in whether all the packets are allowed or denied by
    default. The general consensus is that a firewall is more secure if you deny all
    packets by default and then enable services as needed. That way, in case you start
    a new service (or worse, a user starts a service) and you forget to set firewall
    rules for it, it will be blocked by default. So, to deny all packets by default,
    type in `sudo ufw default deny`. To allow all packets by default, type in `sudo
    ufw default allow`. Note that `ufw` will deny all packets by default unless you
    change the settings.
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你还可以设置防火墙的默认策略。你需要考虑的一个非常重要的命令是`default`命令。该命令定义了防火墙的默认策略，例如，所有数据包是否默认被允许或拒绝。普遍的共识是，防火墙如果默认拒绝所有数据包，然后根据需要启用服务，通常会更安全。这样，在你启动一个新服务时（或者更糟的是，一个用户启动了一个服务），如果你忘记为其设置防火墙规则，它将会被默认阻止。因此，为了默认拒绝所有数据包，请输入`sudo
    ufw default deny`。要默认允许所有数据包，请输入`sudo ufw default allow`。请注意，除非你更改设置，否则`ufw`默认会拒绝所有数据包。
- en: You can configure the logging function to trace anything that it blocks, along
    with anything against your default policy. To enable logging, type in `sudo ufw
    logging on`, and to disable it, type in `sudo ufw logging off`.
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以配置日志功能来追踪任何被阻止的内容以及任何违反默认策略的内容。要启用日志记录，请输入`sudo ufw logging on`，要禁用日志记录，请输入`sudo
    ufw logging off`。
- en: A basic `ufw` rule takes a port or service as an argument. To open port 53 (used
    for DNS servers), you would run `sudo ufw allow 53`.
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个基本的`ufw`规则接受端口或服务作为参数。要打开端口53（用于DNS服务器），你需要运行`sudo ufw allow 53`。
- en: The `ufw` command also accepts service names that are defined in the `/etc/services`
    file instead of specific ports. If you look in the `/etc/services` file, you will
    see that port 53 TCP and UDP is set to the domain service. So, another way of
    stating this rule is `sudo ufw allow domain`.
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ufw`命令还接受在`/etc/services`文件中定义的服务名称，而不是特定的端口。如果你查看`/etc/services`文件，你会发现端口53的TCP和UDP都设置为域名服务。因此，另一种表达该规则的方式是`sudo
    ufw allow domain`。'
- en: You can also specify the transport protocol. An example of this is `sudo ufw
    allow 53/udp`.
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你还可以指定传输协议。举个例子，`sudo ufw allow 53/udp`。
- en: 'You can also set a specific subnet that is allowed to access the server. Here''s
    an example command that is used to limit web access (port 80) to just the *192.168.1.0*
    network:'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你也可以设置允许访问服务器的特定子网。以下是一个命令示例，用于将Web访问（端口80）限制为仅*192.168.1.0*网络：
- en: '[PRE14]'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Even if you deny all packets by default, there may be circumstances in which
    you may also add a deny rule. For instance, let''s say that you are running an
    external SMTP (e-mail) server and you see that a host inside your network at *192.168.1.111*
    appears to be infected with a virus and is flooding your e-mail server with invalid
    messages. To block just that IP address, you will execute the following command:'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 即使你默认拒绝所有数据包，也可能会遇到需要添加拒绝规则的情况。例如，假设你正在运行一个外部的SMTP（电子邮件）服务器，并且发现你网络内部的某台主机（IP地址为*192.168.1.111*）似乎感染了病毒，并且正在向你的电子邮件服务器发送大量无效的消息。为了阻止该IP地址，你可以执行以下命令：
- en: '[PRE15]'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'In case you want to block all the packets from that host and not just the SMTP,
    you wouldn''t need to define the proto and to arguments:'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你希望阻止来自该主机的所有数据包，而不仅仅是SMTP，你就不需要定义proto和to参数：
- en: '[PRE16]'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Later on, once the virus has been removed and the host is back to normal, you
    can remove the rule with the help of the following command:'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 稍后，一旦病毒被清除并且主机恢复正常，你可以通过以下命令删除该规则：
- en: '[PRE17]'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Alternatively, in case you dropped all the packets from the host, the following
    command will remove it:'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 或者，如果你已经丢弃了来自该主机的所有数据包，以下命令将会删除该规则：
- en: '[PRE18]'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Tip
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'Be careful when using `ufw` while you are connected via SSH because enabling
    `ufw` with its default action of denying all packets will close your SSH connection
    and isolate your server. The best thing to do when you start configuring `ufw`
    and before enabling it or adding any other rules is to add the following rule:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 当你通过SSH连接时，使用`ufw`要小心，因为启用`ufw`并使用默认的拒绝所有数据包的操作会关闭你的SSH连接并隔离你的服务器。在你开始配置`ufw`并在启用它或添加任何其他规则之前，最好的做法是添加以下规则：
- en: '[PRE19]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Now, let''s have a look at a couple of examples:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看几个示例：
- en: 'For a DNS server, we need to allow DNS packets and deny the others, of course
    after allowing SSH, and at the end, enable `ufw` and check its status. The following
    is a sequence of commands. Take care of the order; it matters a lot:'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 DNS 服务器，我们需要允许 DNS 数据包并拒绝其他数据包，当然在允许 SSH 后，最后启用 `ufw` 并检查其状态。以下是命令的顺序，顺序很重要，务必注意：
- en: '[PRE20]'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The following is another example where we have more than one service. This
    is the web server, where in general, we should allow `http (80)` and `https (443)`
    access:'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下是另一个示例，展示了我们拥有多个服务的情况。这是一个 web 服务器，一般来说，我们应该允许 `http (80)` 和 `https (443)`
    访问：
- en: '[PRE21]'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Backuping and restoring
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 备份与恢复
- en: The tools and procedures that we saw in this chapter until now allow us to raise
    the server security level and enhance the ability to block attacks, but what if
    we are being attacked? In some cases, we can investigate and clean up the system,
    but in most cases, neither the time nor the means allow us to do that, and the
    best solution is to restore a healthy backed up image of the system. The backup
    and restore procedures solve not only problems related to attacks, but also problems
    related to data loss that are caused by human mistakes or physical accidents such
    as a server room fire.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中我们看到的工具和流程允许我们提升服务器安全级别并增强防御攻击的能力，但如果我们正遭受攻击怎么办？在某些情况下，我们可以调查并清理系统，但在大多数情况下，既没有足够的时间，也没有足够的手段来完成此操作，最好的解决方案是恢复一个健康的备份镜像。备份和恢复过程不仅可以解决与攻击相关的问题，还可以解决因人为错误或物理事故（如服务器机房火灾）导致的数据丢失问题。
- en: In the following section, you will discover how to perform a backup/restore
    of Ubuntu Server in more than one way with more than one tool.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分中，你将学到如何使用多种工具和多种方法进行 Ubuntu Server 的备份/恢复。
- en: The principles of backup
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 备份原则
- en: 'There are a number of principles that should guide you when you choose your
    backup strategy. Most of these are common sense but bear repeating:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择备份策略时，有一些原则应当遵循。大多数这些原则是常识，但值得反复强调：
- en: Back up your data to a separate system
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将你的数据备份到独立的系统
- en: Test your backups
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试你的备份
- en: RAID is not a substitute for backups
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RAID 不能替代备份
- en: Create full and incremental backup schedules
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建完整的增量备份计划
- en: Decide how often you need to back up
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 决定备份的频率
- en: Archive your backups
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存档你的备份
- en: Drive imaging
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 磁盘镜像
- en: An image is a complete bit-for-bit copy of a drive. So, once you image a drive,
    you will get an identical image of the original drive.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 镜像是驱动器的完整逐位复制。因此，一旦你对驱动器进行镜像，你将得到一个与原始驱动器完全相同的镜像。
- en: Note
  id: totrans-169
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: When imaging a drive, it's important that the drive is not in use. In case the
    drive changes when imaging it, you will not be able to guarantee that the image
    is consistent. So, be sure that the filesystems on a drive are unmounted.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在镜像驱动器时，重要的是该驱动器不能在使用中。如果在镜像过程中驱动器发生变化，你将无法确保镜像的一致性。所以，请确保驱动器上的文件系统已卸载。
- en: 'Ubuntu Server uses the classic UNIX imaging tool named dd. Its working process
    is simple—it reads an input file bit by bit and copies it to an output file bit
    by bit. If you had two drives of identical size, say `/dev/sda and /dev/sdb`,
    use the following command to image `sda` to `sdb`:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: Ubuntu Server 使用经典的 UNIX 镜像工具 `dd`。其工作过程简单——它逐位读取输入文件并逐位复制到输出文件。如果你有两个大小相同的驱动器，比如
    `/dev/sda` 和 `/dev/sdb`，使用以下命令将 `sda` 镜像到 `sdb`：
- en: '[PRE22]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The `dd` tool also works with files as input and output arguments instead of
    drivers. So it's better to image our target in a file instead of a driver so that
    we can copy it easily in a transportable device such as a USB driver or send it
    to a remote file server.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '`dd` 工具也可以处理文件作为输入和输出参数，而不是驱动器。因此，将目标镜像到文件而非驱动器会更好，这样我们就可以将其轻松复制到便携设备如 USB
    驱动器中，或发送到远程文件服务器。'
- en: 'For example, if you want to back up the `sda` partition in an image file under
    a USB driver mounted under `/media/myUSB/`, all you need to do is execute the
    following command:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你想将 `sda` 分区备份到 `/media/myUSB/` 下的 USB 驱动器中的镜像文件中，你只需执行以下命令：
- en: '[PRE23]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'To restore this image, just reverse the two arguments. Here are the commands
    to restore the two previous examples:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 要恢复此镜像，只需交换这两个参数。以下是恢复之前两个示例的命令：
- en: '[PRE24]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'You can also image individual partitions. This can be useful because you can
    easily mount the image loopback and read through them. First, let''s image a partition
    on `/dev/sda`, as follows:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以对单个分区进行镜像。这是有用的，因为你可以轻松地挂载镜像回环并读取它们。首先，让我们对 `/dev/sda` 上的分区进行镜像，步骤如下：
- en: '[PRE25]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Now, you can create a directory named `/mnt/temp` and use the loop mount option
    to mount this image, as follows:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以创建一个名为`/mnt/temp`的目录，并使用循环挂载选项来挂载此镜像，如下所示：
- en: '[PRE26]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: This is handy when you need to recover only a few files from an image. You can
    browse `/mnt/temp` like any other filesystem and copy individual files or entire
    directories from it.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 当您只需要从镜像中恢复几个文件时，这非常方便。您可以像浏览其他文件系统一样浏览`/mnt/temp`，并从中复制单个文件或整个目录。
- en: 'We can directly back up an image of a given driver to a remote server by using
    SSH. For example, to transfer `/dev/sda` from the local machine over the network
    to *192.168.1.200* and dump the image at `/media/MyBackupData/sda-image.img`,
    you would type in the following code:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过SSH直接将给定驱动器的镜像备份到远程服务器。例如，要将`/dev/sda`从本地机器通过网络传输到*192.168.1.200*并将镜像转储到`/media/MyBackupData/sda-image.img`，可以输入以下代码：
- en: '[PRE27]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'To restore this image, use the following code:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 要恢复此镜像，请使用以下代码：
- en: '[PRE28]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Database backups
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据库备份
- en: For the most part, backing up a system is as easy as creating a copy of its
    files. However, on a database system, things aren't quite that simple. A database
    often won't commit changes to disk immediately. So, if you simply make a copy
    of the database files, the database itself might be in an inconsistent state.
    When you restore it, you can't necessarily guarantee that it is an uncorrupted
    copy.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数情况下，备份一个系统就像创建其文件的副本一样简单。然而，在数据库系统中，事情并不那么简单。数据库通常不会立即将更改提交到磁盘。因此，如果您仅仅复制数据库文件，数据库本身可能处于不一致的状态。当您恢复它时，无法保证它是一个未损坏的副本。
- en: The solution to this problem is to use tools included with the database to provide
    a consistent dump of the complete database to a file that you can back up. In
    the following section, you will learn how to use the tools provided for the MySQL
    databases in Ubuntu. A similar procedure is applied to other databases, depending
    on their own dumping tools.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 解决这个问题的方法是使用数据库自带的工具，提供一个一致的数据库转储，将其保存到一个可以备份的文件中。在接下来的部分，您将学习如何在Ubuntu中使用MySQL数据库的工具。类似的步骤也适用于其他数据库，具体取决于它们自己的转储工具。
- en: 'The tool that MySQL uses to create a backup of its database is called **mysqldump**.
    This tool dumps an entire database or databases to the screen. Most people then
    redirect the output to a file or pipe it to a tool such as gzip to compress it
    first. For instance, if your user had a database called `mySite`, here is how
    should will back it up:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL用来创建数据库备份的工具叫做**mysqldump**。这个工具将整个数据库或多个数据库转储到屏幕上。大多数人然后将输出重定向到一个文件，或者将其通过管道传输给像gzip这样的工具进行压缩。例如，如果您的用户有一个名为`mySite`的数据库，下面是备份方法：
- en: '[PRE29]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'If you wanted to compress the database as it was dumped, put a pipe to `gzip`
    in the middle, as follows:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望在转储数据库的同时进行压缩，可以在中间加上`gzip`管道，如下所示：
- en: '[PRE30]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Now, if you want to back up more than one database, there are two main ways
    to do it. The first way is to use the `--databases` argument, followed by a space-separated
    list of databases that you need to back up. The other method is to use the `--all-databases`
    argument, which backs up everything, as follows:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果您想要备份多个数据库，有两种主要的方法。第一种方法是使用`--databases`参数，后面跟上需要备份的数据库列表，数据库之间用空格分隔。另一种方法是使用`--all-databases`参数，这将备份所有内容，如下所示：
- en: '[PRE31]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'In case you set passwords for the MySQL users, you should provide them by using
    the `-u` and `-p` options to get this command working. For example, for the root
    user with a `mySecret` password, run the following command:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您为MySQL用户设置了密码，您需要通过`-u`和`-p`选项来提供密码，以使此命令生效。例如，对于具有`mySecret`密码的root用户，请运行以下命令：
- en: '[PRE32]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The preceding command will back up all the databases as the root user is using
    an insecure password. I gave this example only to say that while this option works,
    it is insecure. The reason is that the full list of arguments, including the password,
    will be visible to all the users on the system who run the `ps` command. A better
    method is to use `-p` without specifying a password:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将备份所有数据库，因为root用户使用的是不安全的密码。我给出这个例子只是想说明，虽然这个选项有效，但它是不安全的。原因是，所有参数的完整列表，包括密码，都可以通过运行`ps`命令的系统用户看到。更好的方法是使用`-p`而不指定密码：
- en: '[PRE33]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'When you specify `-p` without a password, `mysqldump` behaves like the `mysql`
    command and prompts you to enter a password. This provides good security, but
    it of course also means that you have to enter the password manually. Most people
    who back up their MySQL databases set up a `cron` job to do it at night. The way
    that MySQL recommends to solve this problem is to add the password to the client
    section in the `~/.my.cnf` file for the user performing the backups. If you already
    don''t have a `~/.my.cnf` file, create a new one and add the following text in
    it:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 当你指定`-p`但不提供密码时，`mysqldump`会像`mysql`命令一样提示你输入密码。这提供了良好的安全性，但当然也意味着你必须手动输入密码。大多数备份MySQL数据库的人都会设置一个`cron`任务在晚上自动执行。MySQL推荐的解决方法是将密码添加到执行备份的用户的`~/.my.cnf`文件中的客户端部分。如果你还没有`~/.my.cnf`文件，可以创建一个新的，并在其中添加以下内容：
- en: '[PRE34]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Replace `mypassword` with the password that your user will use to log in. Once
    you set up this file, you don''t need to specify the `-p` option anymore, because
    `mysqldump` will pick up the password from this file. The downside here is that
    this password is in a plain-text file on the system. So, you will want to set
    its permissions so that only your user can see it:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 将`mypassword`替换为你的用户用来登录的密码。一旦你设置好这个文件，就不再需要指定`-p`选项了，因为`mysqldump`会从这个文件中获取密码。这里的缺点是密码以明文文件的形式存储在系统中。所以，你需要设置文件权限，以确保只有你的用户可以查看它：
- en: '[PRE35]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'To restore a backup on MySQL, use the `mysql` command-line tool and point it
    at your backup. For instance, to back up the `mySite` database to `mySite_backup.sql`,
    execute the following command:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 要在MySQL上恢复备份，使用`mysql`命令行工具并指向你的备份。例如，要将`mySite`数据库备份到`mySite_backup.sql`，执行以下命令：
- en: '[PRE36]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Instead, in case you are backing up a number of databases, just execute the
    following command:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你备份的是多个数据库，只需执行以下命令：
- en: '[PRE37]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'To restore all the databases, you need to log in as the root user. In case
    you set a root password, you must use the `-p` option (unless you set up a `.my.cnf`
    file; in that case, you can leave out `-p`), as follows:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 要恢复所有数据库，你需要以root用户身份登录。如果你设置了root密码，必须使用`-p`选项（除非你设置了`.my.cnf`文件，在这种情况下可以省略`-p`），如下所示：
- en: '[PRE38]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Backup tools
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 备份工具
- en: There are a lot of backup tools that we can use to backup and easily restore
    Ubuntu Server. Some of them use CLI and others use GUI; some are free, while others
    come with a paid license. They also differ according to the backup mode, which
    can be **full** (the tool backs up all the files in the backup target), **incremental**
    (the tool backs up all the files that have been changed since the last backup),
    or **differential** (the tool backs up all the files that have been changed since
    the last full backup).
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用很多备份工具来备份并轻松恢复Ubuntu Server。有些使用CLI，有些使用GUI；有些是免费的，其他则需要付费许可。它们还根据备份模式有所不同，备份模式可以是**完全备份**（工具备份备份目标中的所有文件）、**增量备份**（工具备份自上次备份以来所有已更改的文件）或**差异备份**（工具备份自上次完全备份以来所有已更改的文件）。
- en: 'Here''s a comparison of some of the well-known tools:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一些知名工具的比较：
- en: '| Tool name | Interface | Remarks |'
  id: totrans-213
  prefs: []
  type: TYPE_TB
  zh: '| 工具名称 | 界面 | 备注 |'
- en: '| --- | --- | --- |'
  id: totrans-214
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| **Areca Backup** | GUI | This is a great backup software that works locally
    or with FTP, is written in Java, has a very intuitive GTK graphical interface,
    and provides possibilities of complete restorations and file search. |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
  zh: '| **Areca Backup** | GUI | 这是一个出色的备份软件，可以本地使用或通过FTP工作，使用Java编写，具有非常直观的GTK图形界面，并提供完全恢复和文件搜索的功能。
    |'
- en: '| **Bacula** | GUI | This is a professional open source backup software. It
    saves the contents of a PC or a PC with multiple networks. Bacula has a lot of
    features. But it requires you to have advanced knowledge in terms of backups.
    |'
  id: totrans-216
  prefs: []
  type: TYPE_TB
  zh: '| **Bacula** | GUI | 这是一个专业的开源备份软件。它可以备份单台计算机或多网络计算机的内容。Bacula有很多功能，但需要你具备一定的备份知识。
    |'
- en: '| **BackInTime** | GUI | This is a very simple backup tool that is available
    for Linux. The backup is done by taking "snapshots" of a set of directories. Currently,
    there are two available GUIs, namely Gnome and KDE.This solution is one of the
    few tools that let you save the file on a remote server via SSH and store it in
    an encrypted form. It is possible to save the file on a dedicated server without
    concern for the security of its data once it''s stored. |'
  id: totrans-217
  prefs: []
  type: TYPE_TB
  zh: '| **BackInTime** | GUI | 这是一个非常简单的备份工具，适用于 Linux。备份通过对一组目录进行“快照”来完成。目前，有两个可用的
    GUI，分别是 Gnome 和 KDE。该解决方案是少数几个能够通过 SSH 将文件保存到远程服务器并以加密形式存储的工具之一。一旦存储，您可以毫不担心数据的安全性，将文件保存到专用服务器上。
    |'
- en: '| **BackupPC** | GUI | This is a very powerful tool that can be used to back
    up multiple clients (Linux or Windows).BackupPC is used to save a set of machines.
    It has a web interface to configure and initiate backups or restore files. It
    is also possible to back up databases.BackupPC can automatically save the directories
    on networked computers at regular time intervals.It can also do much more. |'
  id: totrans-218
  prefs: []
  type: TYPE_TB
  zh: '| **BackupPC** | GUI | 这是一个非常强大的工具，可以用于备份多个客户端（Linux 或 Windows）。BackupPC 用于保存一组机器。它具有一个网页界面，可以配置和启动备份或恢复文件。它还可以备份数据库。BackupPC
    可以定期自动保存网络计算机上的目录。它还可以做更多的事情。 |'
- en: '| **Déjà Dup** | GUI | This is a simple backup utility and a GUI tool for duplicity.
    It allows you to create backups in a local directory, on servers (SSH/FTP/HTTP),
    or on the Cloud. It also allows you to encrypt the saved files and schedule automatic
    backups. |'
  id: totrans-219
  prefs: []
  type: TYPE_TB
  zh: '| **Déjà Dup** | GUI | 这是一个简单的备份工具，是 duplicity 的图形界面工具。它允许您在本地目录、服务器（SSH/FTP/HTTP）或云端创建备份。它还允许您加密保存的文件并安排自动备份。
    |'
- en: '| **LuckyBackup** | GUI | This is a simple tool with the power of rsync in
    a friendly interface. It offers features such as simple or advanced mode, restore,
    simulation, the remote operation, superuser mode, profiles, and planning. |'
  id: totrans-220
  prefs: []
  type: TYPE_TB
  zh: '| **LuckyBackup** | GUI | 这是一个简单的工具，具有 rsync 的强大功能，且界面友好。它提供简单模式或高级模式、恢复、模拟、远程操作、超级用户模式、配置文件和计划等功能。
    |'
- en: '| **SBackup** | GUI | This is a simple tool that you can use easily, and it
    is powerful. It allows you to perform an incremental backup but not a differential
    backup. |'
  id: totrans-221
  prefs: []
  type: TYPE_TB
  zh: '| **SBackup** | GUI | 这是一个简单易用且功能强大的工具。它允许您执行增量备份，但不支持差异备份。 |'
- en: '| **Backup-Manager** | CLI | With this tool, backup files are stored locally
    in archives and can be exported on a server (FTP, SSH, rsync, and so on) or burned
    on a CD/DVD. |'
  id: totrans-222
  prefs: []
  type: TYPE_TB
  zh: '| **Backup-Manager** | CLI | 使用此工具，备份文件会保存在本地档案中，并可以导出到服务器（FTP、SSH、rsync 等），或刻录到
    CD/DVD 上。 |'
- en: '| **Duplicity** | CLI | This tool performs backups by creating TAR archives
    that are encrypted with GnuPG. These archives are then sent to a local or remote
    backup directory. The supported remote protocols are FTP, SSH/SCP, Rsync, WebDAV/
    WebDAVs, and Amazon S3. |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '| **Duplicity** | CLI | 该工具通过创建 TAR 压缩包并使用 GnuPG 加密来执行备份。然后，将这些压缩包发送到本地或远程备份目录。支持的远程协议包括
    FTP、SSH/SCP、Rsync、WebDAV/WebDAVs 和 Amazon S3。 |'
- en: '| **Rsync** | CLI | Rsync (for remote synchronization) is a file synchronization
    software. It is frequently used to implement remote backup systems.Rsync works
    unidirectionally, which means that it synchronizes, copies, or updates source
    data (local or remote) to a destination (local or remote) by transferring the
    bytes of the files that have been modified. |'
  id: totrans-224
  prefs: []
  type: TYPE_TB
  zh: '| **Rsync** | CLI | Rsync（用于远程同步）是一个文件同步软件。它通常用于实现远程备份系统。Rsync 是单向同步，这意味着它通过传输已修改文件的字节，将源数据（本地或远程）同步、复制或更新到目标位置（本地或远程）。
    |'
- en: '| **Unison** | CLI | Unison is a synchronization software. Unlike Rsync, it
    displays bidirectional synchronization. |'
  id: totrans-225
  prefs: []
  type: TYPE_TB
  zh: '| **Unison** | CLI | Unison 是一个同步软件。与 Rsync 不同，它显示双向同步。 |'
- en: 'There are also some specific backup tools that are dedicated to partition cloning.
    The following are two such famous tools for Ubuntu:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些专门用于分区克隆的备份工具。以下是两种 Ubuntu 系统中非常有名的工具：
- en: '| Tool name | Interface | Remarks |'
  id: totrans-227
  prefs: []
  type: TYPE_TB
  zh: '| 工具名称 | 界面 | 备注 |'
- en: '| --- | --- | --- |'
  id: totrans-228
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| **Clonezilla** | GUI | This is a free equivalent of Norton Ghost or Acronis
    True Image. It allows you to create an image backup of a hard disk or partition
    and then restore it. |'
  id: totrans-229
  prefs: []
  type: TYPE_TB
  zh: '| **Clonezilla** | GUI | 这是 Norton Ghost 或 Acronis True Image 的免费等效工具。它允许您创建硬盘或分区的镜像备份，并进行恢复。
    |'
- en: '| **Partclone** | CLI | It is used to backup a partition. It is somehow the
    equivalent of Norton Ghost. It can be installed on a `live usb` to save your system.
    |'
  id: totrans-230
  prefs: []
  type: TYPE_TB
  zh: '| **Partclone** | CLI | 它用于备份分区。它某种程度上是 Norton Ghost 的等效工具。可以将其安装在 `live usb`
    上以保存您的系统。 |'
- en: 'Now, let''s take as an example the powerful backup tool named **BackupPC**.
    To install it, you need to run the following command:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们以一个强大的备份工具**BackupPC**为例。要安装它，你需要运行以下命令：
- en: '[PRE39]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'You will be asked for some information related to the mail server (postfix)
    and the web server that you wish to use (in our case, it is Apache), as shown
    in the following screenshot. In the end, you will get a message indicating the
    URL needed to manage BackupPC and the needed credentials to log in to the system:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 系统会要求你提供一些关于邮件服务器（postfix）和你希望使用的Web服务器的信息（在我们的案例中，是Apache），如下图所示。最后，你将收到一条消息，指出管理BackupPC所需的URL和登录系统所需的凭证：
- en: '![Backup tools](img/B04800_04_02.jpg)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![备份工具](img/B04800_04_02.jpg)'
- en: 'To activate the new configuration, you need to run the following command:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 为了激活新配置，你需要运行以下命令：
- en: '[PRE40]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Then, you can start using BackupPC via a web browser by using either the URL
    given in the message, or the server IP address followed by `/backuppc/`. You will
    be asked for login credentials, as shown in the following screenshot. After entering
    them, you will get a a good interface that is easy to use with a very rich documentation:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你可以通过使用消息中给出的URL，或者服务器IP地址后跟`/backuppc/`，通过网页浏览器开始使用BackupPC。系统会要求你输入登录凭证，如下图所示。输入凭证后，你将看到一个易于使用且文档非常丰富的界面：
- en: '![Backup tools](img/B04800_04_03.jpg)'
  id: totrans-238
  prefs: []
  type: TYPE_IMG
  zh: '![备份工具](img/B04800_04_03.jpg)'
- en: Note
  id: totrans-239
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can find out more information on how to use BackupPC in both GUI and CLI
    modes at [https://help.ubuntu.com/community/BackupPC](https://help.ubuntu.com/community/BackupPC).
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[https://help.ubuntu.com/community/BackupPC](https://help.ubuntu.com/community/BackupPC)找到更多关于如何在GUI和CLI模式下使用BackupPC的信息。
- en: Summary
  id: totrans-241
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we focused on a very important subject related to Ubuntu Server,
    namely security management. We covered the basic and advanced security features
    inside Ubuntu Server and explored how to use them to enhance a system's security
    level. Then, we got an overview of the backup/restore operations for Ubuntu Server.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们专注于一个与Ubuntu Server相关的重要主题，即安全管理。我们覆盖了Ubuntu Server内的基本和高级安全功能，并探讨了如何利用这些功能提高系统的安全性。接着，我们概览了Ubuntu
    Server的备份/恢复操作。
- en: In the next chapter, we will concentrate on one of the hottest IT subjects nowadays,
    which is virtualization and Cloud computing based on Ubuntu Server.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将集中讨论当今最热门的IT话题之一——基于Ubuntu Server的虚拟化和云计算。
