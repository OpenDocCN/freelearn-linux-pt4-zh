- en: Chapter 10. Securing the System with SELinux
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章：使用SELinux保护系统
- en: All too often you will find a tutorial or a blog that will advise you to disable
    SELinux. This will be in order to get a particular feature of vservice working.
    In many cases, people have to do is to follow the blog or tutorial instructions
    because very little is known about SELinux. The aim of this chapter is to provide
    you a remedy to this and help you become more familiar with how SELinux works.
    This chapter will provide you with the protection that SELinux provides so that
    next time you are better equipped to deal with a blog that metaphorically advises
    you to leave the keys in the ignition of your parked car.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 很多时候，你会发现一些教程或博客建议你禁用SELinux。这是为了让vservice的某个特性能够工作。在许多情况下，人们不得不按照博客或教程的指示操作，因为关于SELinux了解甚少。本章的目的是为你提供一个解决方案，帮助你更好地理解SELinux的工作原理。通过本章的内容，你将更了解SELinux提供的保护，以便下次遇到博客建议你将车钥匙留在停车场的点火器上时，你能做出更明智的决策。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: What is SELinux
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是SELinux
- en: Understanding SELinux
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解SELinux
- en: Working with the targeted policy type
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用目标策略类型
- en: Policies in SELinux
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SELinux中的策略
- en: SELinux tools
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SELinux工具
- en: Troubleshooting SELinux
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SELinux故障排除
- en: What is SELinux
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是SELinux
- en: SELinux is a **MAC** (**Mandatory Access Control**) system working together
    with the existing **DAC** (**Discretionary Access Control**) list we are familiar
    with, such as the file permissions list.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux是一个**MAC**（**强制访问控制**）系统，和我们熟悉的现有**DAC**（**自主访问控制**）列表共同工作，比如文件权限列表。
- en: Tip
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: SELinux can only restrict permissions; it cannot add permissions. If the DAC
    does not allow access, SELinux cannot allow.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux只能限制权限；它不能添加权限。如果DAC不允许访问，SELinux也无法允许。
- en: In order to work with labeled objects, access is granted based on these labels
    and controlled via policies. All objects—such as users, processes, and files—have
    labels. The label that you have or (more often) the process that you run must
    match the label supplied to the resource that you need to access. In simple terms,
    think of this like bathrooms; humans with the label MEN have access to the bathroom
    labeled MEN. In Linux terms, the Apache web server process is labeled as `httpd_t`
    and can access files with the `httpd_sys_content_t` label. In this way, your system
    is protected against a rogue or **pwned** (compromised) web server as the scope
    of files that has access to it is limited by SELinux.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 为了与标记的对象进行交互，访问是基于这些标签进行授权的，并通过策略进行控制。所有对象——如用户、进程和文件——都有标签。你所拥有的标签或（更常见的）你运行的进程，必须与资源所提供的标签相匹配。简单来说，想象一下厕所；拥有MEN标签的人可以进入标记为MEN的厕所。在Linux术语中，Apache
    web服务器进程被标记为`httpd_t`，并可以访问具有`httpd_sys_content_t`标签的文件。通过这种方式，系统能够防止恶意或**被攻破**（被妥协）的web服务器，因为它能够访问的文件范围受限于SELinux。
- en: 'SELinux is maintained by Red Hat, NSA, and Secure Computing, so it has a rich
    pedigree. It comprises of four major components that we will investigate in this
    chapter:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux由Red Hat、NSA和Secure Computing维护，因此它有着丰富的背景。它由四个主要组件组成，我们将在本章中详细探讨：
- en: Modes
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模式
- en: Labels
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标签
- en: Policy types
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 策略类型
- en: Policy packages
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 策略包
- en: 'To help you work with SELinux, we will install some additional packages. These
    RPM packages are shown in the following command line. For ease of layout, we have
    added line breaks:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助你使用SELinux，我们将安装一些附加的包。这些RPM包在以下命令行中列出。为了方便布局，我们添加了换行符：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Understanding SELinux
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解SELinux
- en: Let's start pulling the covers off SELinux and discover a little more about
    what makes these controls work, starting with SELinux modes.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始揭开SELinux的面纱，深入了解这些控制机制如何工作，从SELinux的模式开始。
- en: Modes
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模式
- en: 'To begin with, we will discuss three modes that we can run with SELinux. These
    modes are illustrated for you in the following figure:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将讨论三种可以与SELinux一起运行的模式。这些模式将在下图中为你展示：
- en: '![Modes](img/image00304.jpeg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![Modes](img/image00304.jpeg)'
- en: The disabled mode
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 禁用模式
- en: 'When SELinux is disabled, SELinux is not used and the objects are NOT labeled.
    In the disabled mode, we rely solely on the original DAC. If we later need to
    enable SELinux, the boot process is lengthened because all the objects need to
    be relabeled again. Disabling SELinux completely like this is probably not a good
    idea, but should it be required, it can be set in the /`etc/selinux/config` file
    by changing the following line:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 当SELinux被禁用时，SELinux不会被使用，且对象不会被标记。在禁用模式下，我们完全依赖原始的DAC。如果稍后需要启用SELinux，启动过程会变得更长，因为所有对象需要重新标记。像这样完全禁用SELinux可能不是一个好主意，但如果需要，可以通过更改`/etc/selinux/config`文件中的以下行来设置：
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'One reason this is not a great idea is that a reboot is required for this to
    take effect. As mentioned before, files need to be relabeled if SELinux is enabled
    later. We can force a relabel if all filesystem objects are running by running
    the the following command:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这样做不是一个好主意的原因之一是，必须重启才能生效。正如前面提到的，如果稍后启用SELinux，则需要重新标记文件。我们可以通过运行以下命令强制重新标记所有文件系统对象：
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Alternatively, we can create the `/.autorelabel` file, as shown in the following
    command:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，我们可以创建`/.autorelabel`文件，如以下命令所示：
- en: '[PRE3]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The permissive mode
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 宽松模式
- en: If you are having issues with a service and want to check whether SELinux is
    a possible culprit, you may prefer to set SELinux in the permissive mode. In this
    way, SELinux is still enabled and the objects maintain their labels; however,
    events are not blocked, but logged to the `/var/log/audit/audit.log` file.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你遇到服务问题并希望检查SELinux是否是可能的原因，你可以选择将SELinux设置为宽松模式。通过这种方式，SELinux仍然启用，且对象保持其标签；然而，事件不会被阻止，而是被记录到`/var/log/audit/audit.log`文件中。
- en: 'To enter the permissive mode, we can perform this while the system is running
    without performing a reboot on your system. The following line illustrates how
    this is achieved:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 要进入宽松模式，我们可以在系统运行时执行此操作，而无需重启系统。以下行演示了如何实现这一点：
- en: '[PRE4]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If the change is made in this way, then on a reboot, the permissive mode is
    applied from `/etc/selinux/config`. To set the mode permanently to permissive,
    we should set the permissive mode in the following line:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果以这种方式进行更改，则在重新启动时，宽松模式将从`/etc/selinux/config`中应用。要将模式永久设置为宽松模式，我们应在以下行中设置宽松模式：
- en: '[PRE5]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Although I do feel that setting the mode to permissive is acceptable as a quick
    and simple test, the more you know about SELinux, the less likely you are to move
    from the Enforcing mode where your protection is guaranteed. In this chapter,
    you will learn how to correct issues and even add a process to be permissive rather
    than the whole system.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我确实认为将模式设置为宽松模式作为快速和简单的测试是可以接受的，但你对SELinux了解得越多，就越不可能从强制模式下转移，强制模式能保证你的保护。在本章中，你将学习如何纠正问题，甚至为某个进程添加宽松模式，而不是将整个系统设置为宽松模式。
- en: 'It''s also possible to set permissive or enforcing modes via the boot loader,
    adding the following commands at the end of the kernel line (where `0` is off
    or permissive and `1` is on or enforcing):'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以通过启动加载程序设置宽松模式或强制模式，在内核行末尾添加以下命令（其中`0`表示关闭或宽松模式，`1`表示开启或强制模式）：
- en: '[PRE6]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The enforcing mode
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 强制模式
- en: The enforcing mode is very similar to the permissive mode, where you can switch
    between permissive and enforcing on the command line with the `setenforce` command.
    As the name suggests, SELinux is enforced in this mode and reported to the log
    file as well.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 强制模式与宽松模式非常相似，你可以在命令行中通过`setenforce`命令在宽松和强制模式之间切换。顾名思义，在此模式下，SELinux被强制执行，并且也会报告到日志文件中。
- en: 'To interrogate your current SELinux mode, you can issue the `getenforce` command.
    If you have installed additional tools, you will also be able to run the `sestatus`
    command, which is part of the `policycoreutils` package. This command displays
    the current mode and the mode from the configuration file; the output of `sestatus`
    is shown in the following screenshot:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 要查询当前的SELinux模式，可以执行`getenforce`命令。如果你已安装其他工具，还可以运行`sestatus`命令，它是`policycoreutils`包的一部分。此命令显示当前模式及配置文件中的模式；`sestatus`的输出如下图所示：
- en: '![The enforcing mode](img/image00305.jpeg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![强制模式](img/image00305.jpeg)'
- en: Labels
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标签
- en: As mentioned previously, when SELinux is in the permissive or enforcing mode,
    all objects—such as files, users, and processes—have labels. When accessing resources,
    these labels are compared to see whether the match is compatible.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，当SELinux处于宽松或强制模式时，所有对象（如文件、用户和进程）都会有标签。在访问资源时，这些标签会被比较，以查看是否匹配兼容。
- en: 'Each label consists of four colon delimited values:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 每个标签由四个冒号分隔的值组成：
- en: The SELinux user
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SELinux 用户
- en: The SELinux role
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SELinux 角色
- en: The SELinux type
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SELinux 类型
- en: The SELinux level
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SELinux 等级
- en: In general, a level is only used in very secure government environments, where
    the secrecy level of the user must match the secrecy level of the document or
    resource. The idea here is that the President will be able to read anything, but
    only write to documents that match his security level. This even prevents him
    from writing to documents holding a lower security level. Of course, this can
    be read by lower authorized people and can perhaps be a security breach.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下，级别仅在非常安全的政府环境中使用，其中用户的保密级别必须与文件或资源的保密级别相匹配。这里的想法是总统将能够阅读任何东西，但只能写入与其安全级别匹配的文件。这甚至阻止他写入具有较低安全级别的文件。当然，这些可以被较低授权的人员阅读，可能构成安全漏洞。
- en: 'Using the `ls` command, we can list the label of a file using the `–Z` option.
    The following command is an example of listing the SELinux label from the `/etc/hosts`
    file:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`ls`命令，我们可以使用`–Z`选项列出文件的标签。以下命令是列出`/etc/hosts`文件中 SELinux 标签的示例：
- en: '[PRE7]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The output should look similar to the following screenshot:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 输出应该类似于以下截图：
- en: '![Labels](img/image00306.jpeg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![Labels](img/image00306.jpeg)'
- en: 'After reading the label, we can determine the following values that are read
    from left to right from the previous screenshot:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读标签后，我们可以确定从前述截图中从左到右读取以下数值：
- en: '| The SELinux user | `system_u` |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| SELinux 用户 | `system_u` |'
- en: '| The SELinux role | `object_r` |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| SELinux 角色 | `object_r` |'
- en: '| The SELinux type | `net_conf_t` |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| SELinux 类型 | `net_conf_t` |'
- en: '| The SELinux level | `s0` |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| SELinux 等级 | `s0` |'
- en: 'To read a label from a Linux user perspective, we can use the `id –Z <username>`
    command. The following screenshot shows this for the currently logged in user,
    where the `<username>` field can be left blank:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Linux 用户的角度来看，我们可以使用`id –Z <username>`命令来读取标签。下面的截图显示了当前登录用户的情况，其中`<username>`字段可以留空：
- en: '![Labels](img/image00307.jpeg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![Labels](img/image00307.jpeg)'
- en: 'Similarly, we can examine the label of a process using the `–Z` option with
    the `ps` command, as shown in the following command:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们可以使用`ps`命令和`–Z`选项检查进程的标签，如下命令所示：
- en: '[PRE8]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![Labels](img/image00308.jpeg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![Labels](img/image00308.jpeg)'
- en: Policy types
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 策略类型
- en: 'The default SELinux policy type is targeted, but three policy types are listed
    as follows:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的 SELinux 策略类型是有针对性的，但列出了三种策略类型如下：
- en: Minimum
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最小
- en: Targeted
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有针对性的
- en: MLS
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MLS
- en: They are all contained in packages that match the `selinux-policy-minimum`,
    `selinux-policy-targeted`, and `selinux-policy-mls` names.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些都包含在与`selinux-policy-minimum`、`selinux-policy-targeted`和`selinux-policy-mls`名称匹配的软件包中。
- en: Minimum
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 最小
- en: 'As the name suggests, this is designed as a minimum configuration for SELinux.
    As strange as it may sound, this is for situations where you want to target just
    one service, such as the Apache web server. Starting with the basics, it''s easy
    to include additional policies in your `Minimum` type. The following command shows
    how we can use `semodule` to add the Apache policy:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 正如名称所示，这是为 SELinux 设计的最小配置。听起来可能很奇怪，但这是针对只想针对一个服务（例如 Apache Web 服务器）的情况。从基础开始，可以轻松地将其他策略包含在您的`Minimum`类型中。以下命令显示了如何使用`semodule`添加
    Apache 策略：
- en: '[PRE9]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'To configure SELinux to use the `Minimum` policy, we set the `SELINUXTYPE`
    directive using the `/etc/selinux/config` file:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 要配置 SELinux 使用`Minimum`策略，我们使用`/etc/selinux/config`文件设置`SELINUXTYPE`指令：
- en: '[PRE10]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Targeted
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 有针对性的
- en: 'This is the default policy type; by default, many policies are included. On
    the demo system, there are 395 policies installed other than the basic policy.
    We can use `semodule` to list all modules:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这是默认的策略类型；默认情况下包含许多策略。在演示系统上，除了基本策略外，安装了 395 个策略，我们可以使用`semodule`列出所有模块：
- en: '[PRE11]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: MLS
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: MLS
- en: 'The multi-level security or MLS policy type will allow you to add additional
    levels of security. These can be interrogated from labels to help you control
    access to resources. This is generally used only in high security deployments.
    Outside of MLS, the level element of a label is not used. To enable MLS, the `/etc/selinux/config`
    file is configured with the following directive:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 多级安全或 MLS 策略类型将允许您添加额外的安全级别。可以通过标签查询这些级别，以帮助您控制对资源的访问。这通常仅在高安全性部署中使用。在 MLS 外，标签的级别元素不被使用。要启用
    MLS，需要在`/etc/selinux/config`文件中配置以下指令：
- en: '[PRE12]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Policies
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 策略
- en: Once policies are installed, individual policies are installed in the appropriate
    policy type directory; for the default targeted policy, enter `/etc/selinux/targeted/modules/active/modules/`.
    Policy files have the `.pp` suffix.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦策略被安装，单个策略将安装在适当的策略类型目录中；对于默认的targeted策略，进入`/etc/selinux/targeted/modules/active/modules/`。策略文件具有`.pp`后缀。
- en: Working with the targeted policy type
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用targeted策略类型
- en: 'The default policy type is targeted. As such, most SELinux deployments will
    work with this policy type. In the case of the targeted policy type, the primary
    attribute from the label used for enforcement is `type`. For this reason, the
    targeted policy type is often known as TE or `type` enforcement. The following
    image highlights the importance of the type attribute of a label in the targeted
    policy type:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的策略类型是targeted。因此，大多数SELinux部署将使用这种策略类型。在targeted策略类型的情况下，用于强制执行的标签的主要属性是`type`。因此，targeted策略类型通常被称为TE或`type`
    enforcement。下图强调了在targeted策略类型中标签的type属性的重要性：
- en: '![Working with the targeted policy type](img/image00309.jpeg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![使用targeted策略类型](img/image00309.jpeg)'
- en: 'Using the `seinfo` command, which is part of the `setools-console` package,
    we can display specific information about the current SELinux environment. Let''s
    take a look at the available types that we can work with. To list all types, we
    will use the following command:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`seinfo`命令，这是`setools-console`包的一部分，我们可以显示有关当前SELinux环境的特定信息。让我们看一下可以使用的类型。要列出所有类型，我们将使用以下命令：
- en: '[PRE13]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Wow, there are a lot. If we count them, we have around 4500 on RHEL 7; on RHEL
    6, there were 3500\. These two figures are just a simple illustration of how much
    the SELinux product is growing and its continued uptake, but Linux software developers.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 哇，真是太多了。如果我们数一数，RHEL 7上大约有4500个；而RHEL 6上有3500个。这两个数字只是简单地说明了SELinux产品的增长及其持续的采用，但Linux软件开发人员。
- en: 'We can also see how to import the type attribute in a label with the user attribute:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以看到如何在带有用户属性的标签中导入type属性：
- en: '[PRE14]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Here, the numbers are not so impressive; it''s just 8\. These are not Linux
    users, but SELinux users; Linux users can be mapped to SELinux users to help control
    access to resources. To display any mapping, we can use `semanage`, as follows:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，数字并不特别令人印象深刻；只是8个。这些不是Linux用户，而是SELinux用户；Linux用户可以映射到SELinux用户，以帮助控制对资源的访问。要显示任何映射，我们可以使用`semanage`，如下所示：
- en: '[PRE15]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Without any mapping being set up, we will see that the root is mapped to `unconfined_u`
    because this is the default. This setting means that all other user accounts without
    any specific mapping will be mapped to the `unconfined_u` SELinux user, which
    means that we are ignoring the user attribute in the label as it''s unconfined
    on SELinux. Similarly, let''s look at the ROLE attribute using `seinfo`:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在没有任何映射设置的情况下，我们将看到root被映射到`unconfined_u`，因为这是默认值。这个设置意味着所有没有特定映射的其他用户帐户将被映射到`unconfined_u`
    SELinux用户，这意味着我们在SELinux上忽略了标签中的用户属性，因为它是未受限的。同样，让我们使用`seinfo`查看ROLE属性：
- en: '[PRE16]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The output should indicate 14 roles; again, this is not a large number. The
    role attribute is not heavily used in the targeted policy type.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 输出应显示14个角色；再说，这并不是一个很大的数字。角色属性在targeted策略类型中并没有被广泛使用。
- en: Unconfined domains
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 未受限的域
- en: 'The `TYPE` attribute is often referred to as the `DOMAIN` when set on a process;
    remember that we can view the SELinux label of a running process using the following
    process status command:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '`TYPE`属性通常在设置到进程时被称为`DOMAIN`；记住，我们可以使用以下进程状态命令查看正在运行的进程的SELinux标签：'
- en: '[PRE17]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Many processes started in a user space will also be unconfined perhaps to the
    `TYPE` attribute set to `unconfined_t`. If processes started in the user space
    are generally unconfined, we can say that services, especially network facing
    services, will be enforced in some way and this is very much representative of
    why SELinux is here: to protect against attack from exposure to a network. It''s
    not only the `aunconfined_t` tag that is unconfined by SELinux. To display all
    unconfined types or domains, we can use `seinfo` running as root again as follows:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 许多在用户空间中启动的进程也将是未受限的，可能是`TYPE`属性设置为`unconfined_t`。如果在用户空间中启动的进程通常是未受限的，我们可以说，服务，特别是面向网络的服务，将以某种方式受到强制执行，这也是SELinux存在的一个重要原因：保护免受网络暴露带来的攻击。并非只有`aunconfined_t`标签是未受限的，SELinux也未限制其他标签。要显示所有未受限的类型或域，我们可以再次使用`seinfo`，并以root身份运行，如下所示：
- en: '[PRE18]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The `-a` option tells `seinfo` that we are searching for an attribute; this
    attribute needs to be pushed up next to the option with no additional white spaces.
    The `-x` attribute expands to show all `TYPEs` that have the attribute, rather
    than just listing the attribute itself. The output should confirm that it is mainly
    domains that will be non-network facing that are unconfined, such as `bootloader_t`.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '`-a`选项告诉`seinfo`我们正在搜索一个属性；这个属性需要紧接在选项后面，且不应有额外的空格。`-x`属性则扩展显示所有具有该属性的`TYPE`，而不仅仅是列出该属性本身。输出结果应确认，主要是那些不会面向网络的域（如`bootloader_t`）是不受限制的。'
- en: 'The following screenshot displays the start of the output from my system. In
    total, there were 86 unconfined domains; this is not bad considering that we started
    with 4500 types in all:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了我的系统输出的开始部分。总共显示了86个不受限制的域；考虑到我们一开始有4500种类型，这个数量还不错：
- en: '![Unconfined domains](img/image00310.jpeg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![Unconfined domains](img/image00310.jpeg)'
- en: When policies are enforced, the default level of access is denied; this means
    that rules must exist in the policy package in order to allow access to users,
    roles, or types. Having the default access denied ensures security if a given
    scenario is not considered; on the flip side, this also means that access needs
    to be added if your given scenario has not been considered. A level of administration
    may be required to tune the environment to your needs; however, once set up, you
    have a secure system that will continue to run reliably with a lessened exposure
    to risk.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 当策略生效时，默认的访问级别是拒绝的；这意味着必须在策略包中存在规则，才能允许用户、角色或类型访问资源。默认拒绝访问确保了安全性，防止某些场景未被考虑到；另一方面，这也意味着如果你的特定场景未被考虑，就需要添加访问权限。可能需要一定的管理操作来调整环境以满足你的需求；然而，一旦设置完成，你将拥有一个安全的系统，它将持续可靠运行，同时降低暴露于风险的可能性。
- en: 'Of course, although the default auction in a policy is to deny access to a
    resource, there are many thousands of `allow rules` supplied within these polices
    by default. Using the `sesearch` command, we can display them; sending results
    to the `wc` command can count the number of rules. The following commands illustrate
    this:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，尽管策略中的默认设置是拒绝访问资源，但这些策略中默认提供了成千上万的`允许规则`。使用`sesearch`命令，我们可以显示它们；将结果发送给`wc`命令可以统计规则的数量。以下命令演示了这一过程：
- en: '[PRE19]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'On my system, there are over 100,000 rules created by default. If we want to
    look at this in a little more detail, we can search for the `httpd_sys_content_t`
    string. There are many rules with this label, but if we look at just one, the
    easiest is to consider is the last one with the command tail. Here, we can see
    that access is granted to resources with `httpd_sys_content_t` to process with
    the `ftpd_t` label. In simple terms, the FTP server has access to your website
    content, as shown in the following command:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的系统上，默认情况下创建了超过100,000条规则。如果我们想更详细地查看这些规则，可以搜索`httpd_sys_content_t`字符串。许多规则带有这个标签，但如果我们只看其中一条，最简单的就是考虑带有命令tail的最后一条。在这里，我们可以看到，资源访问权限已授予`httpd_sys_content_t`标签的资源，以便与`ftpd_t`标签的进程交互。简单来说，FTP服务器可以访问你的网站内容，如下命令所示：
- en: '[PRE20]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Now, we have a little more understanding of the default targeted policy type,
    so let's take a look at how to use some of the tools and see SELinux at work.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们对默认的目标策略类型有了更多了解，接下来让我们看看如何使用一些工具并查看SELinux的实际工作。
- en: SELinux tools
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SELinux工具
- en: Let's take a look at SELinux tools.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看SELinux工具。
- en: chcon and restorecon
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: chcon 和 restorecon
- en: Two of the main tools that we can use to help manage SELinux are `chcon` and
    `restorecon`. The `chcon` command helps to change the SELinux context or TYPE
    of what will most often be a single or perhaps sometimes a few files that can
    be referenced easily together with some form of wildcard. The `restorecon` command
    can be used to reset a file or directory and its contents to their default SELinux
    context. These default settings for directories are stored in the `/etc/selinux/targeted/contexts/files/file-context`
    file.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用的两种主要工具来帮助管理SELinux是`chcon`和`restorecon`。`chcon`命令帮助更改SELinux上下文或类型，通常是单个文件或有时是一些可以通过某种形式的通配符轻松引用的文件。`restorecon`命令可以用来重置文件或目录及其内容为默认的SELinux上下文。这些目录的默认设置存储在`/etc/selinux/targeted/contexts/files/file-context`文件中。
- en: 'With `grep`, we can search for `httpd_sys_content_t`, whereas in the output,
    we should see the default label for files under `/var/www`. This is the directory
    were we would expect to find web server content:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`grep`，我们可以搜索`httpd_sys_content_t`，在输出中，我们应该看到`/var/www`下文件的默认标签。这是我们期望找到网络服务器内容的目录：
- en: '[PRE21]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The output of the preceding command is as follows:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令的输出如下：
- en: '[PRE22]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'We can now try to break the system by changing the SELinux context of the `index.html`
    page. We can do this with the `chcon` command as follows:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以尝试通过更改`index.html`页面的SELinux上下文来破坏系统。我们可以使用`chcon`命令如下所示：
- en: '[PRE23]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Now, if we navigate to the website using the `localhost` URL, we should have
    an access denied message of some description. This is because we have set the
    `TYPE` of the file to `user_home_t`; access is not permitted to the `httpd_t`
    context in which the web server runs. The following screenshot shows the use of
    `chcon` and the subsequent denial message:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们通过`localhost` URL访问该网站，应该会看到某种访问被拒绝的消息。这是因为我们已将文件的`TYPE`设置为`user_home_t`；在运行网络服务器的`httpd_t`上下文中不允许访问该类型。以下截图展示了`chcon`的使用和随后的拒绝消息：
- en: '![chcon and restorecon](img/image00311.jpeg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![chcon和restorecon](img/image00311.jpeg)'
- en: 'Of course, we can fix this manually by setting the type back to `httpd_sys_content_t`
    using `chcon`; however, if we are unsure of the correct context, we can run the
    `restorecon` command, as shown in the following command line:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们可以通过使用`chcon`将类型重新设置为`httpd_sys_content_t`手动修复此问题；然而，如果我们不确定正确的上下文，可以运行`restorecon`命令，如以下命令行所示：
- en: '[PRE24]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Accessing the web page should now work. Technically, we can achieve the same
    effect as achieved with `restorecon` by relabeling the complete filesystem at
    reboot by creating the `/.autorelabel` file; as you can imagine, this is a little
    overkill and will take a while. The effect of this though is to run `restorecon`
    across the complete filesystem.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 现在访问网页应该可以正常工作。从技术上讲，我们可以通过在重启时创建`/.autorelabel`文件来重新标记整个文件系统，从而实现与`restorecon`相同的效果；如你所料，这样做有些过头，并且需要一些时间。不过，这样做的效果是对整个文件系统运行`restorecon`。
- en: Boolean values
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 布尔值
- en: 'There are also simple Boolean values that we can toggle on and off as required,
    to help tune our system to work the way we need to match our environment. On the
    RHEL 7.1 system used in the book, we have 294 Boolean values that can be adjusted.
    We can display these with the simple `getsebool` command:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些简单的布尔值，我们可以根据需要开关，以帮助调优系统，使其与我们的环境匹配。在本书使用的RHEL 7.1系统中，有294个布尔值可以调整。我们可以使用简单的`getsebool`命令来显示它们：
- en: '[PRE25]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'We will drill down a little further and list those associated with the `httpd`
    process. We can see this in the following screenshot:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将进一步深入，并列出与`httpd`进程相关的那些。我们可以在以下截图中看到这一点：
- en: '![Boolean values](img/image00312.jpeg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![布尔值](img/image00312.jpeg)'
- en: To change a Boolean value, we can use the `setsebool` command which can be a
    temporary or permanent fix. The use of the `-P` option is required if we want
    the change the Boolean value to be permanent. This also will take a while because
    the active policy is written to and recompiled.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改布尔值，我们可以使用`setsebool`命令，这可以是临时的或永久的修复。如果我们希望布尔值更改为永久性的，则需要使用`-P`选项。这也需要一段时间，因为活跃的策略将被写入并重新编译。
- en: 'If we return to the earlier setting where the `index.html` page was set with
    context to user home directories, we can remedy with `setsebool`. If the situation
    was not appropriate to change the context, for example, if we need to host user
    home directories on the web server temporarily until the next boot, we can use
    the following command:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们回到之前的设置，其中`index.html`页面已设置为与用户主目录相关联的上下文，我们可以使用`setsebool`来修复。如果不适合更改上下文，例如，如果我们需要暂时将用户主目录托管在网络服务器上，直到下次启动，我们可以使用以下命令：
- en: '[PRE26]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'If we need this to be set permanently, we will use the following command:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们需要将此设置为永久性，我们将使用以下命令：
- en: '[PRE27]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The temporary setting is shown in the following screenshot. It also shows successful
    access to the web page that still has the incorrect context set:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 临时设置显示在以下截图中。它还显示了成功访问网页，尽管该网页仍然具有不正确的上下文：
- en: '![Boolean values](img/image00313.jpeg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![布尔值](img/image00313.jpeg)'
- en: Using these Booleans can go a long way in resolving issues you may have with
    SELinux.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些布尔值可以在解决与SELinux相关的问题时发挥重要作用。
- en: Troubleshooting SELinux
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SELinux故障排除
- en: Let's take a look at different ways of troubleshooting SELinux.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看不同的SELinux故障排除方法。
- en: The log file
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 日志文件
- en: 'If we were left uncertain as to the problem that was causing errors that we
    encountered before with the web server, then our troubleshooting should always
    start with log files. For SELinux, this is the `/var/log/audit/audit.log` file.
    Logging in from SELinux will be marked as **AVC** (**Access Vector Cache**). We
    can search the log file with `grep` using something similar to the following command:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们还不确定之前在遇到 web 服务器错误时问题的原因，那么我们的故障排查应始终从日志文件开始。对于 SELinux，日志文件是 `/var/log/audit/audit.log`。从
    SELinux 登录的记录会标记为 **AVC**（**访问向量缓存**）。我们可以使用 `grep` 来搜索日志文件，类似于以下命令：
- en: '[PRE28]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'However, more appropriately, there is also the `ausearch` command that we can
    use. If an error has just occurred, we can use the `recent` time start code to
    help reduce returned results. This is a shortcut for displaying errors within
    the last 10 minutes:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，更合适的做法是使用 `ausearch` 命令。如果刚刚发生了错误，我们可以使用 `recent` 时间起始代码来帮助减少返回的结果。这是一个用于显示过去
    10 分钟内错误的快捷方式：
- en: '[PRE29]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Other than this, we can supply an actual time, date, or both. In the following
    example, we will use `16:00` as the starting time to search. In the absence of
    the date, today''s date is implied as follows:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 除此之外，我们还可以提供实际的时间、日期或两者。以下示例中，我们将使用 `16:00` 作为开始时间进行搜索。如果没有提供日期，默认使用今天的日期，如下所示：
- en: '[PRE30]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Taking a look at the output from the command in the following screenshot, we
    can see that the process and resource have incompatible labels:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 通过查看下面截图中的命令输出，我们可以看到进程和资源的标签不兼容：
- en: '![The log file](img/image00314.jpeg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![日志文件](img/image00314.jpeg)'
- en: The audit2allow command
  id: totrans-153
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: audit2allow 命令
- en: 'Now, even after having checked the log file, you still may not be entirely
    clear about the cause of the problem or its possible fix. For help, you can try
    the `audit2allow` command. If used with the `-w` option, an explanation of the
    problem along with possible solutions are included in the output. We still examine
    the log, but this time we will pipe the output through to the `audit2allow` command
    as follows:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，即使在检查了日志文件之后，你仍然可能不完全清楚问题的原因或可能的修复方法。为了帮助排查，你可以尝试使用 `audit2allow` 命令。如果使用
    `-w` 选项，它会在输出中提供问题的解释以及可能的解决方案。我们仍然需要查看日志，但这次我们会将输出通过管道传递给 `audit2allow` 命令，如下所示：
- en: '[PRE31]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'The output from the test system looked like this when we had reset the original
    Boolean value:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们重置原始布尔值时，测试系统的输出如下：
- en: '![The audit2allow command](img/image00315.jpeg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![audit2allow 命令](img/image00315.jpeg)'
- en: 'We can see that the suggestion matches the Boolean setting we had previously
    shown works. If the problem was more complex than changing a Boolean value, we
    could create a new policy package using the `-M` option. Then using `semodule`,
    we would import the `.pp` file as follows:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，建议与我们之前展示的布尔值设置相符。如果问题比更改布尔值更复杂，我们可以使用 `-M` 选项创建一个新的策略包。然后使用 `semodule`
    导入 `.pp` 文件，如下所示：
- en: '[PRE32]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Permissive domains
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 宽容域
- en: We can see that there are some pretty powerful tools designed to help with our
    SELinux deployments, but if all else fails, there is another option called **Permissive
    domains**.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，有一些强大的工具设计来帮助我们部署 SELinux，但如果一切失败，还有一个叫做 **宽容域** 的选项。
- en: Rather than setting the SELinux mode to Permissive, we can turn the Permissive
    status on for just a single domain or process context. By default, permissive
    domains are enabled and these are known as built-in permissive domains. Domains
    that we add are customized domains.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 与其将 SELinux 模式设置为宽容模式，我们可以仅为单个域或进程上下文启用宽容状态。默认情况下，宽容域是启用的，这些被称为内置宽容域。我们添加的域则是自定义域。
- en: 'Although the web server is a major network facing attach vector, maybe if we
    cannot get SELinux working with `httpd`, but we do not want to risk SELinux disabled
    for the rest of the system. We can turn on the permissive behavior for `httpd_t`
    using the following command:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 web 服务器是一个主要的面向网络的攻击向量，也许如果我们无法使 SELinux 与 `httpd` 配合使用，但我们又不想冒险让整个系统禁用 SELinux。我们可以通过以下命令为
    `httpd_t` 启用宽容行为：
- en: '[PRE33]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Should we need to remove this behavior later, we can reverse it with:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们以后需要删除这个行为，我们可以使用以下命令来恢复：
- en: '[PRE34]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: In both cases, we will write to the active policy; this will take a little time.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两种情况下，我们都将写入活动策略，这需要一点时间。
- en: Summary
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learned how to manage SELinux. I certainly hope that you
    have a much fuller understanding of the mechanism involved. The aim of SELinux
    is to protect a system, especially where network-facing services are involved.
    Disabling or setting the Permissive mode for SELinux is, in general, the wrong
    approach. With this, you should now be be able to choose the correct solution.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了如何管理SELinux。我真诚地希望你对涉及的机制有了更深入的理解。SELinux的目标是保护系统，特别是在涉及面向网络的服务时。禁用SELinux或设置为Permissive模式，通常不是正确的做法。通过这一章的学习，你现在应该能够选择正确的解决方案。
- en: In the next chapter, we will look at the new firewalling mechanism included
    on RHEL 7 and the improvements made from the standard `IPtables` mechanism used
    in the past. Again, we hope that we can convince you of the benefits of `firewalld`
    and keep the service enabled.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将探讨RHEL 7中包含的新防火墙机制，以及相对于过去使用的标准`IPtables`机制所做的改进。同样，我们希望能够说服你认识到`firewalld`的优势，并保持该服务启用。
