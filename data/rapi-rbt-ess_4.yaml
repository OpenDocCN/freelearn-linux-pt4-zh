- en: Chapter 4. Avoiding Obstacles Using Sensors
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章 避免障碍物的传感器应用
- en: You've constructed your biped robot. Now, your robot can move around. But what
    if you want the robot to sense the outside world, so you don't run into things?
    In this chapter, you'll discover how to add some sensors to help avoid barriers.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经构建了双足机器人。现在，机器人可以移动了。但是如果你希望它能够感知外部世界，避免碰到物体呢？在本章中，你将学习如何添加一些传感器来帮助避免障碍物。
- en: 'Specifically, you''ll learn:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 具体而言，你将学习：
- en: How to connect Raspberry Pi to an **IR** (**infrared**) sensor
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何将 Raspberry Pi 连接到**红外**（**infrared**）传感器
- en: How to connect Raspberry Pi to a USB **sonar sensor** to detect the world
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何将 Raspberry Pi 连接到 USB **声纳传感器**以检测外部世界
- en: How to connect Raspberry Pi and its GPIO to a sonar sensor to detect the world
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何将 Raspberry Pi 和其 GPIO 连接到声纳传感器以检测外部世界
- en: Connecting Raspberry Pi to an infrared sensor
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 Raspberry Pi 连接到红外传感器
- en: Your robot can now move around, but you'll want to be able to sense a barrier
    or a target. One of the ways to do this is with an IR sensor. First, a tutorial
    on IR sensors is required. An IR sensor has both a transmitter and a sensor. The
    transmitter sends out a narrow beam of light, and the sensor receives this beam
    of light.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 你的机器人现在可以移动，但你可能希望它能够感知障碍物或目标。实现这一点的方式之一是使用红外（IR）传感器。首先，需要了解红外传感器的基础知识。红外传感器包含发射器和接收器。发射器发出一束窄光束，传感器接收这束光。
- en: 'The difference in transit ends up as an angle measurement in the sensor, as
    shown in the following figure:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 传感器中的差异最终表现为一个角度测量，如下图所示：
- en: '![Connecting Raspberry Pi to an infrared sensor](img/B04591_04_01.jpg)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![将 Raspberry Pi 连接到红外传感器](img/B04591_04_01.jpg)'
- en: The different angles give you an indication of the distance from the object.
    The sensor turns these angle measurements into a voltage that you can sense to
    determine the distance. Unfortunately, the relationship between the output of
    the sensor and the distance is not linear, so you'll need to do some calibration
    in order to predict the actual distance and its relationship to the output of
    the sensor.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的角度给出了物体距离的指示。传感器将这些角度测量转换为一个电压信号，你可以通过该信号来判断距离。不幸的是，传感器输出与距离之间的关系并不是线性的，因此你需要进行一些校准，以预测实际距离及其与传感器输出之间的关系。
- en: Note
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: IR sensors are quite accurate, certainly with a low percentage of errors; however,
    they may not work well if the area is brightly lit. The accuracy is also affected
    by the reflective nature of the material being sensed. This can be a consideration
    when deciding which sensors to use.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 红外传感器非常准确，误差率较低；但是，如果环境光线过强，它们可能工作不佳。传感器的准确性还会受到被测物体反射特性的影响。在决定使用哪种传感器时，这一点也是需要考虑的因素。
- en: 'Before you get started, you''ll need to get a sensor. One of the more popular
    ones is an inexpensive IR sensor by Sharp. It is available at many online electronics
    stores, and it comes in models that sense various distances. You''ll be using
    the **Sharp 2Y0A02** model, a unit that provides sensing to a distance of 150
    cm. Here is a picture of the sensor:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，你需要获取一个传感器。较为流行的选择是由 Sharp 提供的廉价红外传感器。它可以在许多在线电子商店购买，并且有多个型号可感应不同的距离。你将使用**Sharp
    2Y0A02**型号，这款设备可以感知最远150厘米的距离。以下是该传感器的图片：
- en: '![Connecting Raspberry Pi to an infrared sensor](img/B04591_04_02.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![将 Raspberry Pi 连接到红外传感器](img/B04591_04_02.jpg)'
- en: 'You''ll also want to make sure you also get the connector cable for the device;
    it normally comes with the device. Here is a picture of the sensor with the cable
    attached:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你还需要确保获取设备的连接电缆，通常设备会附带此电缆。以下是带有电缆的传感器图片：
- en: '![Connecting Raspberry Pi to an infrared sensor](img/B04591_04_03.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![将 Raspberry Pi 连接到红外传感器](img/B04591_04_03.jpg)'
- en: As noted in the tutorial, the voltage out of the sensor will be a voltage that
    will be an indication of the distance. However, this is an analog signal, and
    the Raspberry Pi doesn't have an analog-to-digital converter that can convert
    this analog voltage to a number that you can read in your program. You'll need
    to add an analog to digital converter to your project.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如教程中所述，传感器输出的电压将表示距离。然而，这是一个模拟信号，而 Raspberry Pi 并没有模拟到数字的转换器，无法将该模拟电压转换为可以在程序中读取的数字。因此，你需要为项目添加一个模拟到数字转换器。
- en: 'There are two choices. If you want an analog-to-digital converter that plugs
    directly into the USB interface, there is one offered by [www.phidgets.com](http://www.phidgets.com).
    This board is really quite amazing; it takes the analog signals, turns them into
    digital numbers using an analog to digital converter, and then makes them available
    so that they can be read from the USB port. The model number of this part is **1011_0
    - PhidgetInterfaceKit 2/2/2** and it is shown in the following:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种选择。如果你想要一个直接插入USB接口的模拟到数字转换器，可以访问[www.phidgets.com](http://www.phidgets.com)。这块板非常了不起；它将模拟信号转换成数字数据，并通过USB端口提供读取。这部分的型号是**1011_0
    - PhidgetInterfaceKit 2/2/2**，如下所示：
- en: '![Connecting Raspberry Pi to an infrared sensor](img/B04591_04_04.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![将树莓派连接到红外传感器](img/B04591_04_04.jpg)'
- en: 'Unfortunately, it takes a bit of programming expertise to get it up and running.
    The other choice is to use an analog-to-digital converter that connects to the
    GPIO pins of the Raspberry Pi. There is a part, the **ADC pi+** from [www.abelectronics.co.uk](http://www.abelectronics.co.uk),
    that does this. It is pictured here:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，启动并运行这个系统需要一些编程经验。另一个选择是使用一个连接到树莓派GPIO引脚的模拟到数字转换器。有一款名为**ADC pi+**的部件，来自[www.abelectronics.co.uk](http://www.abelectronics.co.uk)，它可以实现这一功能。它的图片如下：
- en: '![Connecting Raspberry Pi to an infrared sensor](img/B04591_04_05.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![将树莓派连接到红外传感器](img/B04591_04_05.jpg)'
- en: 'This device is easier to program, so this is what you''ll use in this project.
    Now, let''s connect the sensor:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这个设备更容易编程，因此你将在这个项目中使用它。现在，来连接传感器：
- en: Solder header pins to the ADC Pi+ board to connect it to the ADC, like this:![Connecting
    Raspberry Pi to an infrared sensor](img/B04591_04_06.jpg)
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将焊接针脚到ADC Pi+板上，以连接到ADC，像这样：![将树莓派连接到红外传感器](img/B04591_04_06.jpg)
- en: Now, plug the board into the Raspberry Pi B 2\. Here is a picture of the combination:![Connecting
    Raspberry Pi to an infrared sensor](img/B04591_04_07.jpg)
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，将板子插入树莓派B 2型号。以下是组合连接的图片：![将树莓派连接到红外传感器](img/B04591_04_07.jpg)
- en: 'Now, you''ll connect the IR sensor to the ADC. To connect this unit, you''ll
    connect the three pins that are available at the bottom of the sensor. Here is
    the connection list:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你将把红外传感器连接到ADC。为了连接这个模块，你需要将传感器底部的三个引脚连接起来。以下是连接清单：
- en: '| ADC-DAC Board | Sensor Pin |'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| ADC-DAC板 | 传感器引脚 |'
- en: '| --- | --- |'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| 5V | Vcc |'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| 5V | Vcc |'
- en: '| GND | Gnd |'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| GND | Gnd |'
- en: '| In1 | Vo |'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_TB
  zh: '| In1 | Vo |'
- en: 'Unfortunately, there are no labels on the unit, but here are the pins you''ll
    connect:'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 不幸的是，模块上没有标签，但你需要连接的引脚如下：
- en: '![Connecting Raspberry Pi to an infrared sensor](img/B04591_04_08.jpg)'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![将树莓派连接到红外传感器](img/B04591_04_08.jpg)'
- en: 'It''s easiest to connect to the three-wire cable that normally comes with the
    sensor. Once the pins are connected, you are ready to access the data from the
    sensor via a Python program on the Raspberry Pi. The entire system looks like
    this:'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最简单的连接方式是使用通常随传感器附带的三线电缆。一旦连接好引脚，你就可以通过树莓派上的Python程序访问传感器的数据。整个系统看起来是这样的：
- en: '![Connecting Raspberry Pi to an infrared sensor](img/B04591_04_09.jpg)'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![将树莓派连接到红外传感器](img/B04591_04_09.jpg)'
- en: 'Now, you are ready to add some code to read the IR sensor. You''ll need to
    follow these steps to talk to the ADC:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经准备好添加一些代码来读取红外传感器。你需要按照以下步骤与ADC进行通信：
- en: The first step in enabling the ADC is to enable the I2C interface. This is done
    by running `raspi-config` and selecting **8 Advanced Options** like this:![Connecting
    Raspberry Pi to an infrared sensor](img/B04591_04_10.jpg)
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用ADC的第一步是启用I2C接口。你可以通过运行`raspi-config`并选择**8 高级选项**来完成这一操作，像这样：![将树莓派连接到红外传感器](img/B04591_04_10.jpg)
- en: Once there, go to the **A7 I2C** selection to enable the I2C like this:![Connecting
    Raspberry Pi to an infrared sensor](img/B04591_04_10.jpg)
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦完成，进入**A7 I2C**选项来启用I2C，像这样：![将树莓派连接到红外传感器](img/B04591_04_10.jpg)
- en: Perform all the selections to enable the I2C interface and load the library,
    and then reboot the Raspberry Pi.
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 完成所有选项以启用I2C接口并加载库，然后重启树莓派。
- en: 'You''ll also need to edit the `/etc/modules` file and add the following two
    lines:'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你还需要编辑`/etc/modules`文件，并添加以下两行：
- en: '![Connecting Raspberry Pi to an infrared sensor](img/B04591_04_12.jpg)'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![将树莓派连接到红外传感器](img/B04591_04_12.jpg)'
- en: 'Reboot the Raspberry Pi. You can see whether the I2C is enabled by typing `sudo
    i2cdetect -y 1`, and you should see something like this:'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重启树莓派。你可以通过输入`sudo i2cdetect -y 1`来检查I2C是否已启用，你应该会看到类似这样的输出：
- en: '![Connecting Raspberry Pi to an infrared sensor](img/B04591_04_13.jpg)'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![将树莓派连接到红外传感器](img/B04591_04_13.jpg)'
- en: The I2C device, your ADC, is available at the **68** and **69** addresses.
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: I2C设备，你的ADC，位于**68**和**69**地址。
- en: Now, you can download the code. To do this, type `git clone https://github.com/abelectronicsuk/ABElectronics_Python_Libraries.git`
    from the home directory, and the Python libraries will be installed on your Raspberry
    Pi.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你可以下载代码了。为此，在主目录中输入`git clone https://github.com/abelectronicsuk/ABElectronics_Python_Libraries.git`，Python库将被安装到你的树莓派中。
- en: Go to the `./ABElecttronics_Python_Libraries/ADCPi` directory; here are the
    programs for your specific hardware. Following the instructions in the `README.md`
    file, type `sudo apt-get update`, and then type `sudo apt-get install python-smbus`.
    This will install the `smbus` library, which are required for the ADC to work.
    Also, type `sudo adduser pi i2c` to add `pi` to the group that can access i2c.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到`./ABElecttronics_Python_Libraries/ADCPi`目录；这里有你硬件的程序。按照`README.md`文件中的说明，输入`sudo
    apt-get update`，然后输入`sudo apt-get install python-smbus`。这将安装`smibus`库，这是ADC工作的必需库。同时，输入`sudo
    adduser pi i2c`将`pi`添加到可以访问i2c的组中。
- en: You'll need to edit your `.bashrc` file in your home directory, adding the following
    lines:![Connecting Raspberry Pi to an infrared sensor](img/B04591_04_14.jpg)
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要编辑家目录中的`.bashrc`文件，添加以下几行：![将树莓派连接到红外传感器](img/B04591_04_14.jpg)
- en: Adding this line will add this library to the path so that you can access the
    functionality. Reboot the Raspberry Pi.
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加此行代码将把这个库添加到路径中，以便你可以访问其功能。重启树莓派。
- en: Now, you can run one of the demo programs. Type `python demo-readvoltage.py`,
    and you should see something like this:![Connecting Raspberry Pi to an infrared
    sensor](img/B04591_04_15.jpg)
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，你可以运行其中一个演示程序。输入`python demo-readvoltage.py`，你应该会看到类似这样的内容：![将树莓派连接到红外传感器](img/B04591_04_15.jpg)
- en: 'These raw readings are great, but now you''ll want to build a program that
    takes the data from the first ADC and translates it to the distance. To do this,
    you''ll need a graph of the voltage to distance readings for your sensor. Here
    is the graph for the IR sensor in this example:'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些原始读数很不错，但现在你需要编写一个程序，获取第一个ADC的数据并将其转换为距离。为此，你需要为你的传感器绘制一个电压与距离的图表。以下是该示例中IR传感器的图表：
- en: '![Connecting Raspberry Pi to an infrared sensor](img/B04591_04_16.jpg)'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![将树莓派连接到红外传感器](img/B04591_04_16.jpg)'
- en: 'There are really two parts to the curve; the first is the distance up to about
    15 centimeters, and the second is the distance from 15 centimeters to 150 centimeters.
    It is easiest to build a simple mathematical model that ignores distances closer
    than 15 centimeters and models the distance from 15 centimeters. For more information
    on how to build this model, refer to [http://davstott.me.uk/index.php/2013/06/02/raspberry-pi-sharp-infrared/](http://davstott.me.uk/index.php/2013/06/02/raspberry-pi-sharp-infrared/).
    Here is the Python program using this model:'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 曲线实际上分为两部分；第一部分是距离约15厘米以内，第二部分是从15厘米到150厘米的距离。最简单的方法是建立一个简单的数学模型，忽略小于15厘米的距离，只对15厘米以上的距离进行建模。有关如何构建这个模型的更多信息，请参考[http://davstott.me.uk/index.php/2013/06/02/raspberry-pi-sharp-infrared/](http://davstott.me.uk/index.php/2013/06/02/raspberry-pi-sharp-infrared/)。以下是使用此模型的Python程序：
- en: '![Connecting Raspberry Pi to an infrared sensor](img/B04591_04_17.jpg)'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![将树莓派连接到红外传感器](img/B04591_04_17.jpg)'
- en: 'The only new line of code is the distance = (1.0 / (adc.read_adc_voltage(1)
    / 13.15)) - 0.35 line. It converts your voltage to distance. You can now run your
    program and you''ll see the results in centimeters, like this:'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 唯一的新代码行是`distance = (1.0 / (adc.read_adc_voltage(1) / 13.15)) - 0.35`。它将你的电压转换为距离。现在，你可以运行程序，你将看到以厘米为单位的结果，像这样：
- en: '![Connecting Raspberry Pi to an infrared sensor](img/B04591_04_18.jpg)'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![将树莓派连接到红外传感器](img/B04591_04_18.jpg)'
- en: Now, you can measure the distance to objects using your IR sensor!
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，你可以使用IR传感器测量物体的距离了！
- en: Connecting Raspberry Pi to a USB sonar sensor
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将树莓派连接到USB声纳传感器
- en: 'There is yet another way to sense the presence of objects: using a sonar sensor.
    But before you add this capability to your system, here''s a little tutorial on
    sonar sensors. This type of sensor uses ultrasonic sound to calculate the distance
    from an object. The sound wave travels out from the sensor, as illustrated in
    the following figure:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 还有另一种感应物体存在的方法：使用声纳传感器。但在将此功能添加到你的系统之前，这里有一个关于声纳传感器的小教程。这种类型的传感器使用超声波来计算与物体的距离。声波从传感器发出，如下图所示：
- en: '![Connecting Raspberry Pi to a USB sonar sensor](img/B04591_04_19.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![连接树莓派到USB声纳传感器](img/B04591_04_19.jpg)'
- en: 'The device sends out a sound wave 10 times a second. If an object is in the
    path of these waves, then the waves reflect off the object, sending waves that
    return to the sensor, as shown in the following figure:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 设备每秒发送10次声波。如果路径中有物体挡住这些波，波将反射物体，并返回传感器，如下图所示：
- en: '![Connecting Raspberry Pi to a USB sonar sensor](img/B04591_04_20.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![连接树莓派到USB声纳传感器](img/B04591_04_20.jpg)'
- en: The sensor then measures any return. It uses the time difference between when
    the sound wave was sent out and when it returned to measure the distance from
    the object.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 然后传感器测量任何返回。它使用发送声波和返回声波的时间差来测量与物体之间的距离。
- en: Note
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Sonar sensors are also quite accurate, normally with low percentage errors,
    and are not affected by the lighting or color in the environment.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 声纳传感器通常非常精确，误差率低，并且不受环境中的光照或颜色影响。
- en: 'There are several choices if you want to use a sonar sensor to sense the distance.
    The first is to use a sonar sensor that connects to the USB port. The following
    is an image of a USB sonar sensor:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想使用声纳传感器来测量距离，有几种选择。首先是使用连接到USB端口的声纳传感器。以下是USB声纳传感器的图片：
- en: '![Connecting Raspberry Pi to a USB sonar sensor](img/B04591_04_21.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![连接树莓派到USB声纳传感器](img/B04591_04_21.jpg)'
- en: This is the **USB-ProxSonar-EZ** sensor, and can be purchased directly from
    MaxBotix or on Amazon. There are several models, each with a different distance
    specification; however, they all work in the same way.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这是**USB-ProxSonar-EZ**传感器，可以直接从MaxBotix或亚马逊购买。有几种型号，每种型号具有不同的距离规格；然而，它们的工作方式都相同。
- en: 'You can also choose a sonar sensor that connects to the GPIO of the Raspberry
    Pi. Here is a picture of this sort of inexpensive sonar sensor:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以选择连接到树莓派GPIO的声纳传感器。以下是这种廉价声纳传感器的图片：
- en: '![Connecting Raspberry Pi to a USB sonar sensor](img/B04591_04_22.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![连接树莓派到USB声纳传感器](img/B04591_04_22.jpg)'
- en: 'This sensor is less expensive and easy to use; it takes a bit of processing
    power to coordinate the efforts of timing the send and receive signals, but the
    Raspberry Pi B 2 has the processing power needed. Here are the steps to set up
    this sonar sensor to sense the distance:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这种传感器价格较低且易于使用；它需要一定的处理能力来协调发送和接收信号的时间，但树莓派B 2具有所需的处理能力。以下是设置此声纳传感器以测量距离的步骤：
- en: The first step is to understand the GPIO pins of the Raspberry Pi B 2\. Here
    is a diagram of the layout of the pins:![Connecting Raspberry Pi to a USB sonar
    sensor](img/B04591_04_23.jpg)
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是了解树莓派B 2的GPIO引脚。以下是引脚布局图示：![连接树莓派到USB声纳传感器](img/B04591_04_23.jpg)
- en: In this case, you'll need to connect to the 5 volt connection of the Raspberry
    Pi B2, which is pin 2\. You'll also need to connect to the GND, which is pin 6\.
    You'll use pin 16 as an output trigger pin and pin 18 (GPIO24) as an input to
    time the echo from the sonar sensor.
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在这种情况下，你需要连接到树莓派B2的5伏连接器，即引脚2。你还需要连接到GND，即引脚6。你将使用引脚16作为输出触发引脚，并使用引脚18（GPIO24）作为输入引脚来计时来自声纳传感器的回波。
- en: Now that you know the pins you'll connect to, you can connect the sonar sensor.
    There is a problem, as you can't connect the 5 volt return from the sonar sensor
    directly to the Raspberry Pi GPIO pins; they want 3.3 volts. You'll need to build
    a voltage divider that will reduce the 5 volts to 3.3 volts. This can be done
    with two resistors, which are connected as shown in this diagram:![Connecting
    Raspberry Pi to a USB sonar sensor](img/B04591_04_24.jpg)
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你知道你要连接的引脚，可以连接声纳传感器了。有一个问题，你不能直接将声纳传感器的5伏返回连接到树莓派GPIO引脚；它们需要3.3伏。你需要建立一个电压分压器，将5伏电压降低到3.3伏。这可以通过两个电阻器来完成，连接方式如下图所示：![连接树莓派到USB声纳传感器](img/B04591_04_24.jpg)
- en: 'If you''d like more information on how the voltage divider works in this configuration,
    refer to [http://www.modmypi.com/blog/hc-sr04-ultrasonic-range-sensor-on-the-raspberry-pi](http://www.modmypi.com/blog/hc-sr04-ultrasonic-range-sensor-on-the-raspberry-pi).
    The combination of these two resistors will reduce the voltage to the desired
    levels. You may want to put all of this is in a small breadboard, as shown here:'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你想了解在这种配置中电压分压器的工作原理，请参考[http://www.modmypi.com/blog/hc-sr04-ultrasonic-range-sensor-on-the-raspberry-pi](http://www.modmypi.com/blog/hc-sr04-ultrasonic-range-sensor-on-the-raspberry-pi)。这两个电阻器的组合将电压降低到所需的水平。你可能希望将所有这些放在一个小面包板上，如下所示：
- en: '![Connecting Raspberry Pi to a USB sonar sensor](img/B04591_04_25.jpg)'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![将树莓派连接到USB声纳传感器](img/B04591_04_25.jpg)'
- en: 'Finally, connect it to the Raspberry Pi, like this:'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最后，将其连接到树莓派，如下所示：
- en: '![Connecting Raspberry Pi to a USB sonar sensor](img/B04591_04_26.jpg)'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![将树莓派连接到USB声纳传感器](img/B04591_04_26.jpg)'
- en: Now that the device is connected, you'll need a bit of code to read in the value,
    make sure it is settled (a stable measurement), and then convert it to distance.
    Here is the Python code for this program:![Connecting Raspberry Pi to a USB sonar
    sensor](img/B04591_04_27.jpg)
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在设备已连接，你需要一些代码来读取值，确保它稳定（即测量值稳定），然后将其转换为距离。以下是这段程序的Python代码：![将树莓派连接到USB声纳传感器](img/B04591_04_27.jpg)
- en: 'Now, you should be able to run the program and see a result, like this:'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，你应该能够运行程序并看到像这样的结果：
- en: '![Connecting Raspberry Pi to a USB sonar sensor](img/B04591_04_28.jpg)'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![将树莓派连接到USB声纳传感器](img/B04591_04_28.jpg)'
- en: Now that you have your sensors up and working, you can avoid or find objects
    with your biped.
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在你已经让传感器正常工作，你可以让双足机器人避开或找到物体。
- en: Summary
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: Congratulations! You can now detect and avoid walls and other barriers to your
    robot. You can also use these sensors to detect objects that you might want to
    find. In the next chapter, you'll learn how to perform path planning to move your
    robot from point A to point B and even give your robot intelligence as to what
    to do if it encounters a barrier in its path.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！现在你可以检测并避开墙壁及其他障碍物，也可以利用这些传感器来探测你可能想要找到的物体。在下一章，你将学习如何进行路径规划，将你的机器人从A点移动到B点，甚至让机器人在遇到路径上的障碍物时知道该如何应对。
