- en: Overview of Essential Advance Utilities
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 必备高级工具概览
- en: In this chapter, we will learn some advanced and essential concepts related
    to the system, such as logging, controlling system services, firewalls, and **Security
    Enhanced Linux** (**SELinux**). Logging plays a key role in debugging and troubleshooting
    system applications. A solid understanding of logging will make your daily operations
    easier to handle and will also give you a deep insight into the application's
    functioning.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习一些与系统相关的高级和基本概念，如日志记录、控制系统服务、防火墙和**安全增强Linux**（**SELinux**）。日志记录在调试和故障排除系统应用程序中起着关键作用。深入理解日志记录将使你的日常操作更加轻松，也将帮助你深入了解应用程序的功能。
- en: In this final chapter, we will learn the different logging mechanisms available
    in CentOS 7, such as journald and rsyslog. By now, you have seen how to install,
    update, and remove applications. Now, we will see how to control these applications
    and system services using the systemd and systemctl utilities. Finally, we will
    understand the basic usage of firewalld and SELinux to secure running services
    and harden the security of the system.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的最后，我们将学习CentOS 7中不同的日志机制，如journald和rsyslog。到目前为止，你已经看到了如何安装、更新和删除应用程序。现在，我们将学习如何使用systemd和systemctl工具控制这些应用程序和系统服务。最后，我们将理解如何使用firewalld和SELinux来保护正在运行的服务并加强系统的安全性。
- en: 'We will cover the following:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将涵盖以下内容：
- en: Understanding system logging
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解系统日志
- en: Working with rsyslogd and journald
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与rsyslogd和journald一起工作
- en: Understanding control of systems and services
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解系统和服务的控制
- en: Working with systemd and systemctl
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与systemd和systemctl一起工作
- en: Understanding SELinux concepts
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解SELinux概念
- en: Working with SELinux
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与SELinux一起工作
- en: Understanding firewall concepts in CentOS 7
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解CentOS 7中的防火墙概念
- en: Working with firewalld
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与firewalld一起工作
- en: Understanding system logging
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解系统日志
- en: Most application programs and the kernel write their event information in log
    files maintained at different locations. It helps in keeping track of activities
    that are taking place on the system and also forms an essential part of system
    auditing. Monitoring of log files helps in spotting any unusual activity in the
    system. Logging also helps in troubleshooting any application problems. By convention,
    Linux uses the `/var/log/` directory for storing logs in the system.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数应用程序和内核将它们的事件信息写入保存在不同位置的日志文件中。这有助于跟踪系统上发生的活动，并且也是系统审计的重要组成部分。日志文件的监控有助于发现系统中的任何异常活动。日志记录还有助于排除应用程序问题。根据惯例，Linux使用`/var/log/`目录来存储系统中的日志。
- en: 'Starting with CentOS 7, we have two logging services that exist in the system:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 从CentOS 7开始，系统中存在两种日志服务：
- en: Rsyslog service
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rsyslog服务
- en: Systemd-journald service
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Systemd-journald服务
- en: System time service should be properly configured before configuring log services,
    as time is an important component of log files.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在配置日志服务之前，应该正确配置系统时间服务，因为时间是日志文件的重要组成部分。
- en: Working with rsyslog
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与rsyslog一起工作
- en: The rsyslog service centrally collects the log messages from different applications
    running in the Linux system. It collects the logs based on their type and their
    priorities, and stores them persistently in the `/var/logfollows:/` directory.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: rsyslog服务集中收集Linux系统中不同应用程序的日志消息。它根据日志类型和优先级收集日志，并将其持久化存储在`/var/logfollows:/`目录中。
- en: 'The following table lists some important log files maintained by rsyslog, along
    with their description:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 下表列出了一些由rsyslog维护的重要日志文件及其描述：
- en: '| **Log file path** | **Description** |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| **日志文件路径** | **描述** |'
- en: '| `/var/log/messages` | Most standard log messages are stored here, except
    authentication logs, email logs, and some application debugging logs. |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| `/var/log/messages` | 大多数标准日志消息都存储在这里，除了认证日志、邮件日志和一些应用程序调试日志。 |'
- en: '| `/var/log/secure` | Authentication logs containing errors and other messages
    are stored here. |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| `/var/log/secure` | 存储认证日志，其中包含错误和其他消息。 |'
- en: '| `/var/log/maillog` | Mail server logs are stored here. |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| `/var/log/maillog` | 邮件服务器日志保存在这里。 |'
- en: '| `/var/log/boot.log` | Boot/system startup messages are logged here. |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| `/var/log/boot.log` | 启动/系统启动消息记录在这里。 |'
- en: '| `/var/log/cron` | It stores cron job (scheduler) logs. |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| `/var/log/cron` | 存储cron作业（调度器）日志。 |'
- en: '| `/var/log/wtmp` | Login activity logs are kept here. |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| `/var/log/wtmp` | 记录登录活动的日志保存在这里。 |'
- en: '| `/var/log/dmesg` | Kernel messages are stored here. |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| `/var/log/dmesg` | 内核消息保存在这里。 |'
- en: '| `/var/log/cups` | Printing service logs are stored here. |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| `/var/log/cups` | 打印服务日志保存在这里。 |'
- en: '| `/var/log/samba` | Samba service logs are kept here, not managed by rsyslog.
    The Samba service directly writes logs here. |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| `/var/log/samba` | Samba 服务日志存储在这里，不受 rsyslog 管理。Samba 服务直接在此处写入日志。 |'
- en: '| `/var/log/httpd` | This directory contains Apache web server logs, not managed
    by rsyslog. Apache directly writes logs in these files. |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| `/var/log/httpd` | 此目录包含 Apache Web 服务器日志，不受 rsyslog 管理。Apache 直接将日志写入这些文件中。
    |'
- en: '| `/var/log/audit/` | Contains the `auditd` service logs and SELinux log files.
    |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| `/var/log/audit/` | 包含 `auditd` 服务日志和 SELinux 日志文件。 |'
- en: Rsyslogd is an application in Linux systems, based on the syslog project that started
    in 1980\. It uses syslog protocol to log events in the system with certain extended
    features, such as the RELP protocol and buffered operation support. Sometimes,
    syslog is also used in the context of rsyslog in Linux.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Rsyslogd 是 Linux 系统中的一个应用程序，基于从 1980 年开始的 syslog 项目。它使用 syslog 协议在系统中记录事件，并具有某些扩展功能，例如
    RELP 协议和缓冲操作支持。有时，在 Linux 中，syslog 也用于 rsyslog 的上下文中。
- en: Configuring rsyslogd sections
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 rsyslogd 部分
- en: 'The rsyslogd service is used by most of the applications running in Linux for
    logging events. The rsyslogd service uses three main components for handling the
    log messages of various applications in the system:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: rsyslogd 服务被 Linux 中的大多数应用程序用于记录事件。rsyslogd 服务使用三个主要组件处理系统中各种应用程序的日志消息：
- en: '**Facility**: It represents the type of process'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设施**：代表进程类型'
- en: '**Priority or severity**: It represents the severity of the message'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**优先级或严重性**：代表消息的严重性'
- en: '**Destination/location**: It describes the location where the log messages
    are sent to or logged'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**目的地/位置**：描述日志消息发送或记录的位置'
- en: 'The configuration file for the rsyslogd service is stored in two locations:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: rsyslogd 服务的配置文件存储在两个位置：
- en: In the main configuration file, `/etc/rsyslog.conf`
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在主配置文件，`/etc/rsyslog.conf`
- en: In the files stored with `.conf` extensions inside the `/etc/rsyslog.d/` directory
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储在 `/etc/rsyslog.d/` 目录内带有 `.conf` 扩展名的文件
- en: 'The main configuration file, `/etc/rsyslog.conf`, contains the information
    on what is to be logged and where it should be stored. It is divided into three
    different sections displayed in capital letters, as shown:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 主配置文件，`/etc/rsyslog.conf`，包含了记录日志内容及存储位置的信息。它分为三个不同的部分，如下所示：
- en: '`#### MODULES ####`:The modules section is used to configure advanced features
    of rsyslogd.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`#### MODULES ####`：模块部分用于配置 rsyslogd 的高级功能。'
- en: '`#### GLOBAL DIRECTIVES ####`: The global directives section is used to specify
    globally configurable parameters.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`#### GLOBAL DIRECTIVES ####`：全局指令部分用于指定全局可配置的参数。'
- en: '`#### RULES ####`:It is the most important section, and contains the rules
    to specify what is to be logged and where it is to be logged. We will discuss
    this more in the *Rsyslogd* *rules* section of this chapter.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`#### RULES ####`：这是最重要的部分，包含了指定记录内容及记录位置的规则。我们将在本章的 *Rsyslogd 规则* 部分详细讨论这一点。'
- en: 'Documentation for rsyslog can be accessed from the `man` command as follows:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过 `man` 命令访问 rsyslog 的文档：
- en: '[PRE0]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Rsyslogd facilities and priorities
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Rsyslogd 设施和优先级
- en: Facilitiesrepresent the fixed list of internal system processes that produce
    the log messages.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 设施代表生成日志消息的内部系统进程的固定列表。
- en: 'The following table lists the common facilities keywords that are available
    in CentOS 7 and their descriptions:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 下表列出了 CentOS 7 中可用的常见设施关键字及其描述：
- en: '| **Facility** | **Description** |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| **设施** | **描述** |'
- en: '| `auth` or `authpriv` | It represents authentication-related subsystem messages
    such as login |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| `auth` 或 `authpriv` | 代表与身份验证相关的子系统消息，如登录 |'
- en: '| `cron` | It represents the crond service and any scheduled application messages
    |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| `cron` | 代表 `crond` 服务及任何定期应用程序消息 |'
- en: '| `daemon` | Generic name used to represent the various daemon subsystem messages
    |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| `daemon` | 通用名称，用于表示各种守护程序子系统消息 |'
- en: '| `kern` | It represents kernel messages |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| `kern` | 代表内核消息 |'
- en: '| `lpr` | It represents legacy print service messages |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| `lpr` | 代表 传统打印服务消息 |'
- en: '| `mail` | It represents all mail program messages |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| `mail` | 代表所有邮件程序消息 |'
- en: '| `mark` | It is for internal use and not to be used with any application |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| `mark` | 仅供内部使用，不应与任何应用程序一起使用 |'
- en: '| `news` | It represents the messages generated by NNTP |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| `news` | 代表由 NNTP 生成的消息 |'
- en: '| `security` | Same as `authpriv` and not used anymore |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| `security` | 与 `authpriv` 相同，不再使用 |'
- en: '| `syslog` | It represents the messages of the syslog daemon |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| `syslog` | 代表 syslog 守护程序的消息 |'
- en: '| `user` | It represents the messages generated by the user space |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| `user` | 它代表由用户空间生成的消息 |'
- en: '| `uucp` | It represents the messages generated by the UUCP subsystem |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| `uucp` | 它代表由UUCP子系统生成的消息 |'
- en: '| `local0-local7` | It represents the custom unused facilities provided by
    the system to the user for sending messages generated by user defined services
    |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| `local0-local7` | 它代表系统为用户提供的自定义未使用的设施，用于发送由用户定义的服务生成的消息 |'
- en: '| `*` | It matches all the facilities |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| `*` | 它匹配所有设施 |'
- en: Priorities represent the severity or priority of messages that are logged for
    any service. There are different priority levels that can be used to determine
    the type of event that can be logged, such as `debug`, `info`, `emerg`, `alert`, and
    so on, for the specified service.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 优先级表示记录的消息的严重性或优先级。可以使用不同的优先级级别来确定可以记录的事件类型，例如`debug`、`info`、`emerg`、`alert`等，适用于指定的服务。
- en: 'The following table lists the severity/priority levels with their description
    and assigned number for priority:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 下表列出了严重性/优先级级别及其描述和分配的优先级数字：
- en: '| **Assigned number** | **Priority** | **Severity description** |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| **分配的数字** | **优先级** | **严重性描述** |'
- en: '| 0 | `emerg` | Generates message when system is unusable |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| 0 | `emerg` | 当系统无法使用时生成消息 |'
- en: '| 1 | `alert` | Action must be taken immediately, available service is about
    to be discontinued |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| 1 | `alert` | 必须立即采取行动，可用服务即将中止 |'
- en: '| 2 | `crit` | Generates message when critical condition occurs |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| 2 | `crit` | 当发生关键条件时生成消息 |'
- en: '| 3 | `err` | Non-critical error condition |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| 3 | `err` | 非关键错误条件 |'
- en: '| 4 | `warning` | Warning condition |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| 4 | `warning` | 警告条件 |'
- en: '| 5 | `notice` | Informational message for event that needs attention to prevent
    future issues |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| 5 | `notice` | 需要注意以防止未来问题的事件的信息性消息 |'
- en: '| 6 | `info` | Generates informational messages for normal service operation
    |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| 6 | `info` | 为正常服务操作生成信息性消息 |'
- en: '| 7 | `debug` | Debugging-level messages for service operation |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| 7 | `debug` | 用于服务操作的调试级别消息 |'
- en: 'If the wild card `*`is specified in the priority field, then it represents
    all types of severity (messages). If `none` is written in the severity field,
    then it means none of the messages of the corresponding facility will be added
    in the specified log files. The `none` is used to prevent logging of same message
    in different log files, as shown in the following diagram:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在优先级字段中指定了通配符`*`，则表示所有类型的严重性（消息）。如果在严重性字段中写入`none`，则表示不会将对应设施的任何消息添加到指定的日志文件中。`none`用于防止相同的消息被记录到不同的日志文件中，如以下示意图所示：
- en: '![](img/07c7bee9-4bf6-4253-95cd-32eba971994c.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/07c7bee9-4bf6-4253-95cd-32eba971994c.png)'
- en: Rsyslogd rules
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Rsyslogd规则
- en: 'The `####RULES####` section of `/etc/rsyslog.conf` contains directives to define
    the logging of messages. The syntax of the directive used in `/etc/rsyslog.conf`
    file is as follows:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '`/etc/rsyslog.conf`文件中的`####RULES####`部分包含用于定义消息日志记录的指令。该指令在`/etc/rsyslog.conf`文件中的语法如下：'
- en: '[PRE1]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](img/02d03b21-ee66-46d8-a6cf-d307b5503013.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/02d03b21-ee66-46d8-a6cf-d307b5503013.png)'
- en: '**The following are examples that illustrate the usage of directives defined
    in the /etc/rsyslog.conf file for logging of messages:**'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**以下是说明如何使用`/etc/rsyslog.conf`文件中定义的指令来记录消息的示例：**'
- en: 'To log all information messages of the kernel, we can specify a different log
    file as follows:'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要记录内核的所有信息消息，我们可以指定一个不同的日志文件，如下所示：
- en: '[PRE2]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We create a `debug.log` file in the `/var/log/` directory to collect debugging
    priority messages from all services as shown in the following command line:'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们在`/var/log/`目录中创建一个`debug.log`文件，用于收集所有服务的调试优先级消息，如以下命令行所示：
- en: '[PRE3]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'After making the required changes in the `/etc/rsyslog.conf` file, restart
    the rsyslog service to bring changes into effect as shown in the following command
    line:'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`/etc/rsyslog.conf`文件中进行所需更改后，重启rsyslog服务以使更改生效，如以下命令行所示：
- en: '[PRE4]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: After making the preceding changes, the debugging messages will not appear in
    the `/var/log/messages` file.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行上述更改后，调试消息将不再出现在`/var/log/messages`文件中。
- en: Log file rotation
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 日志文件轮换
- en: 'Log rotation prevents the filling up of the `/var/log` directory. Old log files
    are renamed with `filename-datestamp` on rotation. The `datestamp` indicates the date
    on which it was rotated (archived) as shown in the following table:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 日志轮换可以防止`/var/log`目录填满。旧的日志文件在轮换时会被重命名为`filename-datestamp`。`datestamp`表示文件被轮换（归档）的日期，如下表所示：
- en: '| **Existing log** | **Archived log** |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| **现有日志** | **归档日志** |'
- en: '| `/var/log/messages` | `/var/log/messages-20180530` (rotated on May 30, 2018)
    |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| `/var/log/messages` | `/var/log/messages-20180530` （2018年5月30日轮换） |'
- en: '**Logrotate** is the utility that takes care of rotating the log files periodically.
    A cron job is run nightly with the script named `/etc/cron.daily/logrotate` for
    log rotation. The rotation of log files is carried out as per the configuration
    of log rotation program stored in the following two locations:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '**Logrotate** 是定期轮换日志文件的工具。每晚会运行一个名为 `/etc/cron.daily/logrotate` 的 cron 作业来执行日志轮换。日志文件的轮换按照日志轮换程序的配置进行，配置文件存储在以下两个位置：'
- en: '`/etc/logrotate.conf`'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/etc/logrotate.conf`'
- en: '`/etc/logrotate.d/*` (any file inside this directory)'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/etc/logrotate.d/*`（该目录中的任何文件）'
- en: Most log files are rotated weekly; however, the `logrotate` command rotates
    some logs faster or slower or on certain conditions, such as on reaching a certain
    size.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数日志文件是按周轮换的；然而，`logrotate` 命令会根据某些条件（例如达到一定大小）使某些日志文件轮换得更快或更慢。
- en: After rotation of logs, the log watch program discards the old archive of log
    files to conserve disk space (typically 4 weeks or after a certain number of rotations).
    A new log file is created during rotation and the service is notified. On installation
    of a new application, the application adds its log file to `logrotate` management
    by dropping its logging configuration file inside the `/etc/logrotate.d/` directory.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在日志轮换后，日志查看程序会丢弃旧的日志文件归档以节省磁盘空间（通常为4周或在达到一定轮换次数后）。轮换时会创建一个新的日志文件，并通知相关服务。在安装新应用程序时，应用程序会通过将其日志配置文件放入
    `/etc/logrotate.d/` 目录中，来将日志文件添加到 `logrotate` 管理中。
- en: 'An example of creating a custom log file is as follows:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 创建自定义日志文件的示例如下：
- en: '[PRE5]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'These are the important commands used in the `log rotation` file:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 `log rotation` 文件中使用的重要命令：
- en: '`rotate 3`: Keeps the last three versions of the file and deletes the oldest'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rotate 3`：保留文件的最后三个版本，并删除最旧的版本'
- en: '`size 2M`: Rotates the log file on reaching 2 MB in size'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`size 2M`：当日志文件达到 2MB 时进行轮换'
- en: '`monthly`: It is another alternative to size; if size has not reached 2 MB,
    then rotate the file on a monthly basis'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`monthly`：这是一个按大小的替代方法；如果文件大小未达到 2MB，则按月轮换文件'
- en: Analyzing syslog entries
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析 syslog 条目
- en: 'The system logs generated by the rsyslogd service are stored in the `/var/log/`
    directory in various files. The oldest message is kept at the top of the log and
    new log entries are appended at the bottom of the log file in a standard format,
    as shown in the following diagram:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: rsyslogd 服务生成的系统日志存储在 `/var/log/` 目录中的多个文件里。最旧的消息保留在日志顶部，而新的日志条目按标准格式附加在日志文件的底部，如下图所示：
- en: '![](img/a0fa6d55-8257-44dd-9566-63759a253adc.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a0fa6d55-8257-44dd-9566-63759a253adc.png)'
- en: Monitoring live log file traffic using the tail command
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 `tail` 命令监控实时日志文件流量
- en: 'While performing troubleshooting, it is required to view the logs being generated
    by an application when it is being run. Using the `tail` command with the `-f`
    option does this. In one Terminal, we will execute the application we want to
    troubleshoot, and in another Terminal, we will execute the `tail` command as shown
    in the following:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在故障排除过程中，需要查看运行应用程序时生成的日志。使用带有 `-f` 选项的 `tail` 命令可以实现这一点。在一个终端中，我们会执行要故障排除的应用程序，在另一个终端中执行
    `tail` 命令，如下所示：
- en: '[PRE6]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: It displays the 10 lines from the bottom of the filename specified, and keeps
    the file open to view the new lines that are being written to it. Once we are
    done viewing logs, we can close the log file by pressing *Ctrl* + *C*.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 它显示指定文件名底部的 10 行，并保持文件打开，以便查看正在写入的新增行。一旦查看完日志后，可以按 *Ctrl* + *C* 关闭日志文件。
- en: 'For example, to monitor the failed login attempts on the system, on one Terminal,
    open `/var/log/secure`, and in another Terminal, execute the `ssh` command on
    the same system as shown in the following screenshot:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要监控系统中的失败登录尝试，可以在一个终端中打开 `/var/log/secure`，在另一个终端中执行 `ssh` 命令，如下所示：
- en: '![](img/9d054892-adfc-4444-b4a0-f1d7a6968767.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9d054892-adfc-4444-b4a0-f1d7a6968767.png)'
- en: Using the logger command
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 logger 命令
- en: 'Although most applications are configured to write logs in the log file automatically,
    we can use the `logger` command to write messages to rsyslogd also. The `logger`
    command writes the log messages in the log file as per the facility and priority
    specified with the `logger` command. By default, it sends the logs to the facility
    named as user with priority named as notice (`user.notice`). The `logger` command
    can be used inside a shell script to create logs, as shown in the following examples:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管大多数应用程序已经配置为自动写入日志文件，但我们也可以使用`logger`命令将消息写入`rsyslogd`。`logger`命令根据`logger`命令中指定的设施和优先级，将日志消息写入日志文件。默认情况下，它将日志发送到名为“user”的设施，并具有名为“notice”的优先级（`user.notice`）。`logger`命令还可以在shell脚本中使用，以创建日志，如下例所示：
- en: 'If we send a log message of information priority to the `rsyslog` program,
    then it will get stored in the `/var/log/boot.log` file as shown in the following
    command line:'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果我们将信息优先级的日志消息发送到`rsyslog`程序，它将被存储在`/var/log/boot.log`文件中，如以下命令行所示：
- en: '[PRE7]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'We can send any log message to the default log file, `/var/log/messages`, by
    using `logger` command as shown in the following command line:'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们可以通过使用`logger`命令将任何日志消息发送到默认的日志文件`/var/log/messages`，如以下命令行所示：
- en: '[PRE8]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: For more information on logging, refer to the man pages of the `logger`, `tail`,
    `rsyslog.conf`, and `logrotate` commands.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多有关日志记录的信息，请参考`logger`、`tail`、`rsyslog.conf`和`logrotate`命令的手册页。
- en: Working with systemd-journald
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`systemd-journald`
- en: This daemon provides a non-persistent method of advanced log management for
    collecting and displaying messages from the kernel, boot programs, and other services
    running in CentOS 7\. The journald stores these messages in a journal maintained
    in binary format, which can be accessed using the `journalctl` command. The default
    behavior of the journal is non-persistent across reboot. It forwards the messages
    to rsyslogd for permanent central storage and processing.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 此守护进程为CentOS 7提供了一种非持久的高级日志管理方法，用于收集和显示来自内核、启动程序和其他运行中的服务的消息。`journald`以二进制格式维护这些消息，并可通过`journalctl`命令访问。默认情况下，日志是跨重启不可持久的。它将消息转发给`rsyslogd`进行永久性存储和处理。
- en: Finding events with the journalctl command
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`journalctl`命令查找事件
- en: 'In CentOS 7, the `systemd-journal` is stored in the `/run/log/journal/` directory,
    as shown in the following screenshot:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在CentOS 7中，`systemd-journal`存储在`/run/log/journal/`目录中，如下图所示：
- en: '![](img/e065ee12-3fc6-45ff-b866-bcf33f8b9070.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e065ee12-3fc6-45ff-b866-bcf33f8b9070.png)'
- en: 'When we execute the `journalctl` command as root without any options, then
    it shows the full system journal, from the oldest log entry to the latest as shown
    in the following command line:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们以root身份执行`journalctl`命令且不带任何选项时，它将显示完整的系统日志，从最旧的日志条目到最新的日志条目，如以下命令行所示：
- en: '[PRE9]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The `journalctl` command uses color coding to highlight the severity of messages,
    as shown in the following table:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '`journalctl`命令使用颜色编码来突出显示消息的严重性，如下表所示：'
- en: '| **Priority** | **Description of text highlighting used in logs** |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| **优先级** | **日志中使用的文本高亮描述** |'
- en: '| `Error`, `crit`, `alert` or `emerg` | Text is red |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| `Error`、`crit`、`alert` 或 `emerg` | 文字为红色 |'
- en: '| `Notice` or `warning` | Text is bold |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| `Notice` 或 `warning` | 文字为粗体 |'
- en: '| `Info` or `debug` | Regular text |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| `Info` 或 `debug` | 常规文本 |'
- en: 'Different options are used with the `journalctl` command to limit the searches
    of the journal to the desired output:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 使用不同的选项可以限制`journalctl`命令的日志搜索，输出到期望的结果：
- en: '`Journalctl -n`: By default, using the `-n` option with `journalctl` will display
    the last 10 log entries. We can also specify the number of log entries to be displayed
    in the output as shown in the following screenshot:'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Journalctl -n`：默认情况下，使用`-n`选项与`journalctl`一起使用时，将显示最后10条日志条目。我们还可以指定要显示的日志条目的数量，如下图所示：'
- en: '![](img/ca2fe7b1-1868-4897-97b8-4269d03a9c8e.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ca2fe7b1-1868-4897-97b8-4269d03a9c8e.png)'
- en: '`Journalctl -p`: We can filter the output of the journal by specifying the priority
    of the log entries using the `-p` option. We can specify either name or number
    of the priority level to display the log entries of the specified or higher-level
    priority, as shown in the following screenshot:'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Journalctl -p`：我们可以通过使用`-p`选项指定日志条目的优先级，来过滤日志输出。我们可以指定优先级的名称或编号，以显示指定或更高级别的日志条目，如下图所示：'
- en: '![](img/8323e099-37cd-4c35-b200-9c97c029cb5e.png)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8323e099-37cd-4c35-b200-9c97c029cb5e.png)'
- en: '`Journalctl -f`: The `-f` option is similar to the `-f` option used with the `tail`
    command; it displays the last 10 lines of the journal and keeps it open to display
    the new entries as they are written in the journal, until you press *Ctrl* + *C*
    as shown in the following screenshot:'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Journalctl -f`：`-f`选项类似于`tail`命令中的`-f`选项；它显示日志的最后10行，并保持打开状态，显示新写入日志中的条目，直到你按下*Ctrl*
    + *C*，如下面的截图所示：'
- en: '![](img/e0e227c1-2d70-48b5-bea6-8a43ead2a391.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e0e227c1-2d70-48b5-bea6-8a43ead2a391.png)'
- en: '**Limiting journalctl output to a specific time**: The `journalctl` command
    can be used to with two more options, `--since` and `--untill`, to specify a time
    range and display the log messages of that duration. The following `journalctl`
    query shows all logs recorded between `18:05:00` and `18:10:00`:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '**限制journalctl输出到特定时间**：`journalctl`命令可以使用两个选项，`--since`和`--until`，来指定时间范围，并显示该时间段内的日志消息。以下`journalctl`查询显示了`18:05:00`到`18:10:00`之间记录的所有日志：'
- en: '[PRE10]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'We can use the `journalctl` command to display today''s journal entries only
    as shown in the following command line:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`journalctl`命令仅显示今天的日志条目，如下面的命令行所示：
- en: '[PRE11]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'We can also use the `journalctl` command to display extra fields attached to
    the log entries by enabling the verbose output on the journal as shown in the
    following command line:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用`journalctl`命令通过启用日志的详细输出，显示附加到日志条目的额外字段，如下面的命令行所示：
- en: '[PRE12]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The following table lists some of the important fields of the` journalctl`
    command that are used to filter the query:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 下表列出了用于过滤查询的`journalctl`命令的一些重要字段：
- en: '| **Field name** | **Description** |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| **字段名** | **描述** |'
- en: '| `_COMM` | It filters the journal based on the name of the command |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| `_COMM` | 基于命令名称过滤日志 |'
- en: '| `_EXE` | It is used to filter the query based on the path of the executable
    for the process |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| `_EXE` | 基于进程的可执行文件路径过滤查询 |'
- en: '| `_PID` | It filters the journal based on the PID of the process |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| `_PID` | 基于进程的PID过滤日志 |'
- en: '| `_UID` | It filters the journal based on the UID of the user running the
    process |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| `_UID` | 基于运行进程的用户UID过滤日志 |'
- en: '| `_SYSTEMD_UNIT` | It filters the journal based on the systemd unit that started
    the process |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| `_SYSTEMD_UNIT` | 基于启动进程的systemd单元过滤日志 |'
- en: 'For example, for listing the journal messages that originated from a systemd
    process with PID 1 can be filtered using the following command:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，可以使用以下命令过滤出来自PID为1的systemd进程的日志消息：
- en: '[PRE13]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The `journalctl` command can also be used to list all the journal messages
    send by the `sshd` service, as shown in the following command line:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '`journalctl`命令还可以用来列出所有由`sshd`服务发送的日志消息，如下面的命令行所示：'
- en: '[PRE14]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The `journalctl` command can also be used to view the journal log messages
    since last boot as shown in the following command line:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '`journalctl`命令还可以用来查看自上次启动以来的日志消息，如下所示的命令行所示：'
- en: '[PRE15]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Configuring systemd-journald to store logs persistently
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置`systemd-journald`以持久存储日志
- en: '`systemd-journal` is stored in the `/run/log/journal` directory, which is cleared
    on system reboot. Its configuration file is `/etc/systemd/journald.conf`, which
    can be used to fine-tune journal parameters such as the amount of filesystem to
    be used for storing the journal (default value is 10%).'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '`systemd-journal`存储在`/run/log/journal`目录中，该目录在系统重启时会被清除。它的配置文件是`/etc/systemd/journald.conf`，可以用来微调日志参数，如用于存储日志的文件系统大小（默认值为10%）。'
- en: '`systemd-journal` is configured in such a way that if the `/var/log/journal/` directory exists
    in the system, then it logs journal entries in that directory instead of `/run/log/journal/`.
    The same concept is used to made `systemd-journal` storage persistent across reboot.
    The following steps are to be taken to make `systemd-journal` persistent:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '`systemd-journal`的配置方式是，如果系统中存在`/var/log/journal/`目录，则日志条目将记录在该目录中，而不是`/run/log/journal/`。同样的概念也用于使`systemd-journal`的存储在重启后保持持久。为了使`systemd-journal`持久化，需要执行以下步骤：'
- en: 'Create the `/var/log/journal/` directory as root user as shown in the following
    command line:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作为root用户创建`/var/log/journal/`目录，如下面的命令行所示：
- en: '[PRE16]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Make the owner of the directory created as root and group as `systemd-journal`
    with permissions `2755` as shown in the following command line:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将创建的目录的所有者设为root，组设为`systemd-journal`，权限设为`2755`，如下面的命令行所示：
- en: '[PRE17]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Reboot your system or send the `USR1` signal to `systemd-journald` as shown
    in the following command line:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重启系统或向`systemd-journald`发送`USR1`信号，如下面的命令行所示：
- en: '[PRE18]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Make sure `systemd-journal` is persistent after reboot by listing a new directory
    containing journal log files inside the `/var/log/journal` directory as shown
    in following command line:'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过列出一个包含日志文件的新目录，确保 `systemd-journal` 在重启后持久化，目录位于 `/var/log/journal` 目录中，如以下命令所示：
- en: '[PRE19]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Understanding how to control the system and services
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解如何控制系统和服务
- en: From a user or system administrator point of view, it is essential to understand
    how to manage various services installed on your system. A user should be able
    to enable a service at boot time and start or stop it when required.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 从用户或系统管理员的角度来看，了解如何管理系统上安装的各种服务是至关重要的。用户应该能够在启动时启用服务，并在需要时启动或停止服务。
- en: Earlier, the Linux system and services were managed by SysV init or BSD init.
    Later on, their management was further improvised by adding utilities such as
    service and chkconfig, in addition to shell scripts. More recently, starting with
    CentOS 7, system and service management is now done with systemd. Systemd has
    replaced initd as the first process of CentOS 7.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 早期，Linux 系统和服务由 SysV init 或 BSD init 管理。后来，通过添加像 service 和 chkconfig 这样的工具，结合
    shell 脚本，进一步改进了它们的管理。更近期，从 CentOS 7 开始，系统和服务的管理由 systemd 负责。systemd 取代了 CentOS
    7 中的 initd，成为第一个进程。
- en: In the next section, you will learn how to manage services running on your system.
    You will learn how to use systemd and its components, responsible for switching
    the system from the kernel space to the user space and managing system processes
    thereafter.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，你将学习如何管理系统上运行的服务。你将学习如何使用 systemd 及其组件，这些组件负责将系统从内核空间切换到用户空间，并在此后管理系统进程。
- en: Defining essential terms
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义基本术语
- en: This section we will define the essential terms related to system and services
    management.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将定义与系统和服务管理相关的基本术语。
- en: What is a daemon?
  id: totrans-177
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是守护进程？
- en: A daemon is a process that waits or runs in the background, executing several
    tasks. It listens for connections using a network socket.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 守护进程是一个等待或在后台运行的进程，执行多个任务。它通过网络套接字监听连接。
- en: What is a socket?
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是套接字？
- en: When a client connection is established, a socket is created and passed by systemd
    to a daemon or it creates a daemon for itself. In Linux, sockets are used mainly
    to establish client communication with the daemon.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 当客户端连接建立时，系统会创建一个套接字，并将其传递给守护进程，或者为自己创建一个守护进程。在 Linux 中，套接字主要用于建立客户端与守护进程之间的通信。
- en: What is systemd?
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 systemd？
- en: From CentOS 7 onward, systemd has replaced the init process as the first process
    (PID=1) that is started by the kernel when Linux boots up. It manages the system
    and services in the system for the Linux kernel by providing an interface between
    applications and the kernel. After starting systemd, it starts logging activities,
    mounting the filesystem and devices, starts other services, and finally provides
    the user with a login shell. These tasks are carried out by systemd with the help
    of different libraries and utilities such as `systemctl`, `journalctl`, `hostenamectl`,
    `localectl`, `timedatectl`, `systemd-cgls`, and so on, which it installs with
    itself. It manages the various system resources through objects known as units.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 从 CentOS 7 起，systemd 取代了 init 进程，成为内核启动时启动的第一个进程（PID=1）。它通过为应用程序和内核之间提供接口，管理
    Linux 内核中的系统和服务。启动 systemd 后，它开始记录活动、挂载文件系统和设备、启动其他服务，并最终提供用户登录的 shell。systemd
    通过不同的库和工具（如 `systemctl`、`journalctl`、`hostenamectl`、`localectl`、`timedatectl`、`systemd-cgls`
    等）来执行这些任务，并且在安装 systemd 时会一并安装这些工具。它通过称为单元（units）的对象来管理各种系统资源。
- en: What are units?
  id: totrans-183
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是单元？
- en: In systemd, units are objects that systemd knows how to manage and operate.
    They represent different system resources and they are defined using configuration
    files called unit files. These unit files are are kept in the `/usr/lib/systemd/system/`
    directory by default. Only those units whose unit files are stored in the `/lib/systemd/system`
    directory can be started or stopped during a session. These files are installed
    in the system by the application's RPM files. Units are the replacement of old
    init scripts that were used before CentOS 7.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 在 systemd 中，单元是 systemd 知道如何管理和操作的对象。它们代表不同的系统资源，并通过称为单元文件的配置文件定义。默认情况下，这些单元文件保存在
    `/usr/lib/systemd/system/` 目录下。只有那些单元文件存储在 `/lib/systemd/system` 目录下的单元，才能在会话期间启动或停止。这些文件由应用程序的
    RPM 文件安装到系统中。单元是 CentOS 7 之前使用的旧 init 脚本的替代品。
- en: What is systemctl?
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 systemctl？
- en: 'It is a replacement for the service and `chkconfig` command in CentOS 7\. The `systemctl`
    command is used to manage the different types of systemd objects (units). Systemd
    has 12 unit types, which can be listed with the command shown in the following
    screenshot:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 它是CentOS 7中`service`和`chkconfig`命令的替代品。`systemctl`命令用于管理不同类型的`systemd`对象（单元）。`systemd`有12种单元类型，可以通过以下截图中的命令列出：
- en: '![](img/20cb22de-f428-4e6d-bcaf-4cdf4f7dc5fb.png)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![](img/20cb22de-f428-4e6d-bcaf-4cdf4f7dc5fb.png)'
- en: 'The following table lists some popular units and their descriptions:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格列出了一些常见单元及其描述：
- en: '| **Unit types** | **Description** |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
  zh: '| **单元类型** | **描述** |'
- en: '| Service | These types of units have a `.service` extension and represent
    the system services. This unit is used to start daemons such as the web server.
    If no unit name is specified with `systemctl`, then the service is assumed as
    the default unit. |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
  zh: '| 服务 | 这类单元具有`.service`扩展名，表示系统服务。此单元用于启动守护进程，例如Web服务器。如果没有指定单元名称，`systemctl`默认将服务作为默认单元。
    |'
- en: '| Socket | These types of units have a `.socket` extension and represent **inter-process
    communication** (**IPC**) sockets. |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '| 套接字 | 这类单元具有`.socket`扩展名，表示**进程间通信**（**IPC**）套接字。 |'
- en: '| Path | These type of units have a `.path` extension and are used to delay
    the activation of a service until a specific filesystem change occurs. |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| 路径 | 这类单元具有`.path`扩展名，用于在特定的文件系统更改发生之前延迟激活服务。 |'
- en: '| Target | These types of units have a `.target` extension and represent a
    group of units. |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| 目标 | 这类单元具有`.target`扩展名，表示一组单元。 |'
- en: '| Slice | These types of units have a `.slice` extension and they represent
    a management unit of processes. |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| 切片 | 这类单元具有`.slice`扩展名，表示进程的管理单元。 |'
- en: Working with systemd and systemctl
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用systemd和systemctl
- en: This section describes how systemd and systemctl are organized and how important
    objects (units) are managed using systemd.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 本节介绍了systemd和systemctl是如何组织的，以及如何使用systemd管理重要的对象（单元）。
- en: Viewing states of service with systemctl
  id: totrans-197
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`systemctl`查看服务状态
- en: 'The service unit is one of the most important units of `systemd`, which is
    managed using `systemctl`. If no unit type is specified, `systemctl` shows the
    status of the service unit, if it exists. The following is the syntax to view
    any unit:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 服务单元是`systemd`中最重要的单元之一，通过`systemctl`进行管理。如果未指定单元类型，`systemctl`将显示服务单元的状态（如果存在）。查看任何单元的语法如下：
- en: '[PRE20]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Here, name is the service name and type is the unit type, such as service,
    socket, path, and so on. The example in the following screenshot illustrates the
    usage of the `systemctl` command for viewing the status of a service:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，name是服务名称，type是单元类型，例如服务、套接字、路径等。以下截图中的示例说明了如何使用`systemctl`命令查看服务状态：
- en: '![](img/0b9859fb-55b6-4c45-8d1d-94ed85b16b13.png)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0b9859fb-55b6-4c45-8d1d-94ed85b16b13.png)'
- en: 'The following table lists the various statuses of services, along with their
    descriptions:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格列出了服务的各种状态及其描述：
- en: '| **Status** | **Description** |'
  id: totrans-203
  prefs: []
  type: TYPE_TB
  zh: '| **状态** | **描述** |'
- en: '| `Loaded` | Unit configuration file is processed successfully |'
  id: totrans-204
  prefs: []
  type: TYPE_TB
  zh: '| `Loaded` | 单元配置文件已成功处理 |'
- en: '| `Active (running)` | Running with one or more active processes |'
  id: totrans-205
  prefs: []
  type: TYPE_TB
  zh: '| `Active (running)` | 正在运行并有一个或多个活动进程 |'
- en: '| `Active (exited)` | Successfully completed a one-time configuration |'
  id: totrans-206
  prefs: []
  type: TYPE_TB
  zh: '| `Active (exited)` | 成功完成了一次性的配置 |'
- en: '| `Active (waiting)` | Running and waiting for an event to take place |'
  id: totrans-207
  prefs: []
  type: TYPE_TB
  zh: '| `Active (waiting)` | 正在运行并等待事件发生 |'
- en: '| `Inactive` | Not running currently |'
  id: totrans-208
  prefs: []
  type: TYPE_TB
  zh: '| `Inactive` | 当前未运行 |'
- en: '| `Enabled` | Will get started at boot time |'
  id: totrans-209
  prefs: []
  type: TYPE_TB
  zh: '| `Enabled` | 启动时会启动 |'
- en: '| `Disabled` | Will not get started at boot time |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
  zh: '| `Disabled` | 启动时不会启动 |'
- en: '| `Static` | Cannot be enabled directly, but may be started by another enabled
    unit automatically |'
  id: totrans-211
  prefs: []
  type: TYPE_TB
  zh: '| `Static` | 不能直接启用，但可以由其他启用的单元自动启动 |'
- en: Viewing unit files with systemctl
  id: totrans-212
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`systemctl`查看单元文件
- en: As a system administrator or user, sometimes it is necessary to find out the
    current status of systemd unit files. This helps in fine-tuning of system. We
    can configure services to be in active and loaded state or in an inactive state
    after booting of system, using the `systemctl` command.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 作为系统管理员或用户，有时需要了解当前`systemd`单元文件的状态。这有助于系统的优化。我们可以使用`systemctl`命令将服务配置为在系统启动后处于活动和加载状态，或者处于非活动状态。
- en: 'The following table lists the commands used to view the unit files and their
    descriptions:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格列出了用于查看单元文件的命令及其描述：
- en: '| **Command** | **Description** |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
  zh: '| **命令** | **描述** |'
- en: '| `# systemctl` | Displays the state of all the different units that are active
    and loaded on startup |'
  id: totrans-216
  prefs: []
  type: TYPE_TB
  zh: '| `# systemctl` | 显示所有已加载并在启动时激活的单元的状态 |'
- en: '| `# systemctl --type=service` or`# systemctl list-units --type=service` |
    Displays the state of only service units that are active |'
  id: totrans-217
  prefs: []
  type: TYPE_TB
  zh: '| `# systemctl --type=service` 或 `# systemctl list-units --type=service` |
    显示所有活动服务单元的状态 |'
- en: '| `# systemctl --type=service –all` or`# systemctl list-units --type=service
    --all` | Displays the state of all service units loaded, whether active or inactive
    |'
  id: totrans-218
  prefs: []
  type: TYPE_TB
  zh: '| `# systemctl --type=service –all` 或 `# systemctl list-units --type=service
    --all` | 显示所有已加载的服务单元的状态，无论其是否活动 |'
- en: '| `# systemctl --failed --type=service` | Displays all services that failed
    |'
  id: totrans-219
  prefs: []
  type: TYPE_TB
  zh: '| `# systemctl --failed --type=service` | 显示所有失败的服务 |'
- en: '| `# systemctl is-active sshd` | Displays whether the particular service is
    currently active or not |'
  id: totrans-220
  prefs: []
  type: TYPE_TB
  zh: '| `# systemctl is-active sshd` | 显示特定服务当前是否处于活动状态 |'
- en: '| `# systemctl is-enabled sshd` | Displays whether the particular service in
    enabled to start at boot time or not |'
  id: totrans-221
  prefs: []
  type: TYPE_TB
  zh: '| `# systemctl is-enabled sshd` | 显示特定服务是否已启用在启动时自动启动 |'
- en: '| `# systemctl list-unit-files --type=service` | Displays the enabled, disabled,
    or static settings of all units of the specified type |'
  id: totrans-222
  prefs: []
  type: TYPE_TB
  zh: '| `# systemctl list-unit-files --type=service` | 显示所有指定类型单元的启用、禁用或静态设置 |'
- en: '| `# systemctl status sshd.servisystemctlce -l` | Displays detailed status
    information about the specified service |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '| `# systemctl status sshd.servisystemctlce -l` | 显示有关指定服务的详细状态信息 |'
- en: Unit dependencies and unit file structure
  id: totrans-224
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 单元依赖关系和单元文件结构
- en: 'Services are started as standalone, or sometimes as dependencies of other services.
    For example, let''s assume a socket unit is enabled, but the service unit with
    the same socket name is not, then the service will automatically get started when
    a request is made on the network socket. Similarly, the service can also be triggered
    by the path unit when a filesystem path condition is met. The following command
    is used to list the dependency tree of the specified unit:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 服务可以作为独立的单元启动，也可以作为其他服务的依赖项启动。例如，假设启用了一个套接字单元，但具有相同套接字名称的服务单元未启用，那么当网络套接字收到请求时，该服务将自动启动。类似地，当文件系统路径条件满足时，服务也可以由路径单元触发。以下命令用于列出指定单元的依赖关系树：
- en: '[PRE21]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Starting with CentOS 7, `systemd` provides a uniform interface to start unit
    files from their storage loaction. The locations of the unit file stored in the
    system are as follows:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 从CentOS 7开始，`systemd`提供了一个统一的接口，用于从它们的存储位置启动单元文件。系统中存储的单元文件位置如下：
- en: '`/usr/lib/systemd/system/`: It contains system default unit files'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/usr/lib/systemd/system/`：它包含系统默认的单元文件。'
- en: '`/etc/systemd/system`: It contains system-specific parameters to modify the
    default behavior of systemd'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/etc/systemd/system`：它包含用于修改systemd默认行为的系统特定参数。'
- en: '`/run/systemd/system/`: It contains the runtime configuration of unit files'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/run/systemd/system/`：它包含单元文件的运行时配置。'
- en: 'The structure of a unit file is shown in the following screenshot:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 单元文件的结构如下图所示：
- en: '![](img/be642904-0aaa-4b69-9f3a-62dc2d13515f.png)'
  id: totrans-232
  prefs: []
  type: TYPE_IMG
  zh: '![](img/be642904-0aaa-4b69-9f3a-62dc2d13515f.png)'
- en: 'The preceding unit file can be broken down into following three sections:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的单元文件可以分为以下三个部分：
- en: '**Unit**: This section describe the unit type and its dependencies, if any.
    It also contains the `After` statement and the `Before` statement. These statements
    define the dependencies of the unit. The `Before` statement says that this unit
    should be started before the specified unit. The `After` statement says that this
    unit should be started after starting the specified units.'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**单元**：此部分描述单元类型及其依赖关系（如果有）。它还包含`After`语句和`Before`语句。这些语句定义了单元的依赖关系。`Before`语句表示该单元应在指定单元之前启动。`After`语句表示该单元应在启动指定单元后启动。'
- en: '**Service**: This section contains a description of how to start and stop the
    service. The line beginning with the `ExecStart` parameter describes how to start
    the unit and the line beginning with the `ExecStop` parameter describes how to
    stop the unit.'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务**：此部分包含有关如何启动和停止服务的描述。以`ExecStart`参数开头的行描述如何启动单元，以`ExecStop`参数开头的行描述如何停止单元。'
- en: '**Install**: This section contains a line beginning with the `WantedBy` parameter,
    which states the target of this application. Target units are the equivalent of
    runlevels, which we had in CentOS 6 and earlier versions.'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安装**：此部分包含一行以`WantedBy`参数开头，表示该应用程序的目标。目标单元相当于CentOS 6及之前版本中的运行级别。'
- en: Managing daemons using systemctl
  id: totrans-237
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用systemctl管理守护进程
- en: 'Services can be started at boot time by creating a link to the unit files in
    the systemd configuration directory using the `systemctl` command. Earlier enabling
    of a service to start it automatically at boot time was managed using `chkconfig`.
    An example to illustrate the usage of `systemctl` command to disable or enable
    a unit file is shown in the following diagram:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过在systemd配置目录中创建指向单元文件的链接来在启动时启动服务，方法是使用`systemctl`命令。早期自动启动服务的方法是使用`chkconfig`。下面的示例展示了如何使用`systemctl`命令禁用或启用单元文件：
- en: '![](img/e8f40384-7822-44a8-bf15-d6930d7b35b2.png)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e8f40384-7822-44a8-bf15-d6930d7b35b2.png)'
- en: Masking services
  id: totrans-240
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 屏蔽服务
- en: 'To prevent conflict between similar types of services that perform a certain
    function, masking is used. For example, for a firewall, CentOS 7 has both `iptables`
    and `firewalld` services; however, it is recommended to use only one at a time.
    Hence, one of the two firewall services is masked to prevent conflict between
    the two services. Masks prevent the accidental startup of a service by creating
    a `symlink` of the service file to `/dev/null` as shown in the following screenshot:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 为了防止执行某些功能的相似服务之间发生冲突，使用了屏蔽。举例来说，CentOS 7中有`iptables`和`firewalld`这两种防火墙服务；但是，建议同时只使用其中一个。因此，屏蔽了其中一个防火墙服务，以防止两者之间的冲突。屏蔽通过创建指向`/dev/null`的服务文件`symlink`来防止服务的意外启动，如下图所示：
- en: '![](img/fad155a8-ac99-4fc7-8405-d91b54d155cb.png)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fad155a8-ac99-4fc7-8405-d91b54d155cb.png)'
- en: If a service is disabled, it will not get started automatically at boot even
    by other unit files; however, a user can still start that service manually. A
    mask service has the advantage here, as it cannot be started manually or automatically.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个服务被禁用，它将不会在启动时自动启动，即使是通过其他单元文件；然而，用户仍然可以手动启动该服务。被屏蔽的服务具有优势，因为它既无法手动启动，也无法自动启动。
- en: 'The following table lists the different `systemctl` commands used to manage
    a service:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格列出了用于管理服务的不同`systemctl`命令：
- en: '| **Command** | **Description** |'
  id: totrans-245
  prefs: []
  type: TYPE_TB
  zh: '| **命令** | **描述** |'
- en: '| `# systemctl status <unit>` | Displays detailed information of unit state
    |'
  id: totrans-246
  prefs: []
  type: TYPE_TB
  zh: '| `# systemctl status <unit>` | 显示单元状态的详细信息 |'
- en: '| `# systemctl stop <unit>` | Stops the running service |'
  id: totrans-247
  prefs: []
  type: TYPE_TB
  zh: '| `# systemctl stop <unit>` | 停止正在运行的服务 |'
- en: '| `# systemctl start <unit>` | Starts the stopped service |'
  id: totrans-248
  prefs: []
  type: TYPE_TB
  zh: '| `# systemctl start <unit>` | 启动已停止的服务 |'
- en: '| `# systemctl restart <unit>` | Restarts (stop and then start) a service |'
  id: totrans-249
  prefs: []
  type: TYPE_TB
  zh: '| `# systemctl restart <unit>` | 重启（停止然后启动）一个服务 |'
- en: '| `# systemctl reload <unit>` | Reloads configuration of a running service
    by rereading its config file |'
  id: totrans-250
  prefs: []
  type: TYPE_TB
  zh: '| `# systemctl reload <unit>` | 通过重新读取配置文件来重新加载正在运行的服务的配置 |'
- en: '| `# systemctl mask <unit>` | Completely disables a service from starting at
    boot time automatically, or manually any time |'
  id: totrans-251
  prefs: []
  type: TYPE_TB
  zh: '| `# systemctl mask <unit>` | 完全禁用服务在启动时自动启动，或在任何时候手动启动 |'
- en: '| `# systemctl unmask <unit>` | Unmasks a masked service, making it available
    for the user to enable it or start manually |'
  id: totrans-252
  prefs: []
  type: TYPE_TB
  zh: '| `# systemctl unmask <unit>` | 解屏蔽一个被屏蔽的服务，使其可以被用户启用或手动启动 |'
- en: '| `# systemctl enable <unit>` | Sets the service to start automatically at
    boot time |'
  id: totrans-253
  prefs: []
  type: TYPE_TB
  zh: '| `# systemctl enable <unit>` | 设置服务在启动时自动启动 |'
- en: '| `# systemctl disable <unit>` | Disables a service from starting automatically
    at boot time |'
  id: totrans-254
  prefs: []
  type: TYPE_TB
  zh: '| `# systemctl disable <unit>` | 禁用服务在启动时自动启动 |'
- en: '| `# systemctl poweroff` | Shuts down the system |'
  id: totrans-255
  prefs: []
  type: TYPE_TB
  zh: '| `# systemctl poweroff` | 关闭系统 |'
- en: '| `# systemctl reboot` | Restarts the system |'
  id: totrans-256
  prefs: []
  type: TYPE_TB
  zh: '| `# systemctl reboot` | 重启系统 |'
- en: Controlling the boot process using systemd
  id: totrans-257
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用systemd控制启动过程
- en: 'During the boot process, when the kernel image and initramfs image get loaded,
    initramfs starts the first process on the system, which is systemd with the process
    ID 1\. This systemd process further takes over control in the final stages of
    system booting and performs the following operations:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动过程中，当内核镜像和initramfs镜像加载时，initramfs会启动系统上的第一个进程，即process ID为1的systemd进程。这个systemd进程在系统启动的最后阶段接管控制，并执行以下操作：
- en: Reads the configuration files from the `/etc/systemd/` directory
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从`/etc/systemd/`目录读取配置文件
- en: Reads the files linked by `/etc/systemd/system/default.target`
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读取`/etc/systemd/system/default.target`链接的文件
- en: Executes the `/etc/rc.local file`
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行`/etc/rc.local`文件
- en: Systemd target units are responsible for determining and starting the services
    automatically on the system after booting up. In this section, we will learn how
    to control the execution of a set of services on startup. These services will
    collectively define the state of our system such as it is in single user mode
    or multi-user mode with networking enabled, and so on.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: Systemd 目标单元负责在系统启动后自动确定和启动服务。在本节中，我们将学习如何控制在启动时执行一组服务。这些服务将共同定义系统的状态，例如单用户模式或启用网络的多用户模式等。
- en: What are systemd targets?
  id: totrans-263
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 systemd 目标？
- en: Target units are used for grouping and ordering other units. `systemd` manages
    starting several related process at the same time with the help of target units.
    Some targets, such as `multi-user.target`, define a specific state of the system
    and can be considered as more robust and flexible equivalents of SysV runlevels.
    At the same time, other targets do not offer any additional functionality except
    grouping units to manage dependencies effectively. The target unit configuration
    files are stored in the `/usr/lib/systemd/system` directory.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 目标单元用于分组和排序其他单元。`systemd` 通过目标单元的帮助，管理同时启动多个相关进程。一些目标，如 `multi-user.target`，定义了系统的特定状态，可以视为
    SysV 运行级别的更强大和灵活的等价物。与此同时，其他目标除了有效地管理依赖关系外，并没有提供任何额外的功能。目标单元的配置文件存储在 `/usr/lib/systemd/system`
    目录下。
- en: 'The following table lists important targets, along with their equivalent runlevels
    and their descriptions:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格列出了重要的目标、它们的等效运行级别以及描述：
- en: '| **Equivalent runlevel** | **Target unit** | **Description** |'
  id: totrans-266
  prefs: []
  type: TYPE_TB
  zh: '| **等效运行级别** | **目标单元** | **描述** |'
- en: '| 0 | `poweroff.target` | Shuts down and powers off the system |'
  id: totrans-267
  prefs: []
  type: TYPE_TB
  zh: '| 0 | `poweroff.target` | 关闭并关闭系统 |'
- en: '| 1 | `rescue.target` | Sulogin prompt with basic system initialization |'
  id: totrans-268
  prefs: []
  type: TYPE_TB
  zh: '| 1 | `rescue.target` | 进入 Sulogin 提示符，并进行基本系统初始化 |'
- en: '| 2, 3, 4 | `multi-user.target` | Non-graphical multi-user text-based login
    only |'
  id: totrans-269
  prefs: []
  type: TYPE_TB
  zh: '| 2, 3, 4 | `multi-user.target` | 仅支持非图形化多用户基于文本的登录 |'
- en: '| 5 | `Graphical.target` | Graphical multi-user and text-based login |'
  id: totrans-270
  prefs: []
  type: TYPE_TB
  zh: '| 5 | `Graphical.target` | 图形多用户模式和基于文本的登录 |'
- en: '| 6 | `Reboot.target` | Shuts down and reboots system |'
  id: totrans-271
  prefs: []
  type: TYPE_TB
  zh: '| 6 | `Reboot.target` | 关闭并重启系统 |'
- en: 'Some targets are part of another target: `graphical.target` includes `multi-user.target`,
    which in its turn depends on `basic.target` and others. We can view these dependencies
    from the command line by executing the command line shown in the following screenshot:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 一些目标是另一个目标的组成部分：`graphical.target` 包含 `multi-user.target`，而 `multi-user.target`
    又依赖于 `basic.target` 等其他目标。我们可以通过执行以下截图中显示的命令行查看这些依赖关系：
- en: '![](img/3eb870ed-a995-4c28-942f-2f97c25d8b06.png)'
  id: totrans-273
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3eb870ed-a995-4c28-942f-2f97c25d8b06.png)'
- en: 'We can view the available targets that are currently loaded on the running
    system by using the following command line:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过以下命令查看当前正在运行的系统中加载的可用目标：
- en: '[PRE22]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'We can view all the targets that are installed on the system by using the following
    command line:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过以下命令查看系统上安装的所有目标：
- en: '[PRE23]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Switching your targets at runtime
  id: totrans-278
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在运行时切换目标
- en: 'In CentOS 7, an administrator can switch to different target (runlevel) at
    runtime by using the `systemctl isolate` command, which was done using the `telinit`
    command in CentOS 6\. We can only isolate to those targets that have `AllowIsolate=yes` set
    in their unit files. For example, we can switch to `multi-user.target` from `graphical.target`
    with the following command:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 在 CentOS 7 中，管理员可以通过使用 `systemctl isolate` 命令在运行时切换到不同的目标（运行级别），这一操作在 CentOS
    6 中是通过 `telinit` 命令完成的。我们只能隔离到那些在其单元文件中设置了 `AllowIsolate=yes` 的目标。例如，我们可以通过以下命令从
    `graphical.target` 切换到 `multi-user.target`：
- en: '[PRE24]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The preceding command will bring the user to runlevel 3\. To switch back to
    runlevel 5, execute the following command:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将使用户进入运行级别 3。要切换回运行级别 5，请执行以下命令：
- en: '[PRE25]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Changing the default target of the system
  id: totrans-283
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改系统的默认目标
- en: During the booting up of the system, systemd activates `default.target`, which
    is generally a symbolic link in the `/etc/systemd/system/` directory to either
    `graphical.target` or `multi-user.target`. It is equivalent to the default runlevel,
    which the system administrator used to set in the `/etc/inittab` file.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 在系统启动时，systemd 激活 `default.target`，通常它是 `/etc/systemd/system/` 目录中的一个符号链接，指向
    `graphical.target` 或 `multi-user.target`。它相当于默认的运行级别，系统管理员以前会在 `/etc/inittab`
    文件中进行设置。
- en: 'The following table lists the `systemctl` commands that are used to manage
    default targets along with their description:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格列出了用于管理默认目标的 `systemctl` 命令及其描述：
- en: '| **Command** | **Description** |'
  id: totrans-286
  prefs: []
  type: TYPE_TB
  zh: '| **命令** | **描述** |'
- en: '| `# systemctl get-default` | Views the existing default target |'
  id: totrans-287
  prefs: []
  type: TYPE_TB
  zh: '| `# systemctl get-default` | 查看当前的默认目标 |'
- en: '| `# systemctl set-default graphical.target` | Sets the default target to `graphical.target`
    (graphical shell) |'
  id: totrans-288
  prefs: []
  type: TYPE_TB
  zh: '| `# systemctl set-default graphical.target` | 将默认目标设置为 `graphical.target`（图形界面
    Shell） |'
- en: '| `# systemctl set-default multi-user.target` | Sets the default target to
    `multi-user.target` (text-based shell) |'
  id: totrans-289
  prefs: []
  type: TYPE_TB
  zh: '| `# systemctl set-default multi-user.target` | 将默认目标设置为 `multi-user.target`（基于文本的
    Shell） |'
- en: 'An example to change the default target by using the `systemctl` command is
    shown in the following screenshot:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `systemctl` 命令更改默认目标的示例如下所示：
- en: '![](img/11935dc5-4958-4cc5-b269-8ffd3372baa8.png)'
  id: totrans-291
  prefs: []
  type: TYPE_IMG
  zh: '![](img/11935dc5-4958-4cc5-b269-8ffd3372baa8.png)'
- en: Understanding SELinux concepts
  id: totrans-292
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 SELinux 概念
- en: SELinux is an additional layer of security to protect the system. The permission
    set by users manually is a kind of security control that works at the user's discretion,
    while SELinux is a mandatory access control for securing the system. Its main
    role is to protect data when a system service is compromised. SELinux consists
    of a set of security rules that determine which process can access which files,
    directories, or ports.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux 是一种额外的安全层，用于保护系统。用户手动设置的权限是一种安全控制，作用于用户的自定义操作，而 SELinux 是强制访问控制，用于保护系统安全。其主要作用是在系统服务遭到破坏时保护数据。SELinux
    由一组安全规则组成，这些规则决定了哪个进程可以访问哪些文件、目录或端口。
- en: SELinux contexts
  id: totrans-294
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SELinux 上下文
- en: When SELinux is enforced in the system, it check for rules on which process
    can access which files, directories, and ports. Every file, process, directory,
    and port has a special security label known as an SELinux context, which is a
    name used to determine whether a process can access a file, directory, or port.
    By default, the policy does not allow any interaction unless an explicit rule
    grants access.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 当 SELinux 在系统中被强制执行时，它会检查哪些进程可以访问哪些文件、目录和端口。每个文件、进程、目录和端口都有一个特殊的安全标签，称为 SELinux
    上下文，它是用来确定进程是否可以访问某个文件、目录或端口的名称。默认情况下，策略不允许任何交互，除非明确的规则授予访问权限。
- en: 'SELinux labels have different contexts: user, role, type, and sensitivity.
    The targeted policy is the default policy enabled in CentOS 7, which defines its
    rules based on the third context, which is the type context. Type context names
    generally end with `_t`.'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux 标签具有不同的上下文：用户、角色、类型和敏感性。针对性策略是 CentOS 7 中启用的默认策略，它根据第三个上下文（即类型上下文）定义规则。类型上下文的名称通常以
    `_t` 结尾。
- en: Viewing SELinux context
  id: totrans-297
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查看 SELinux 上下文
- en: Most of the Linux commands have the `-Z` option to display SELinux contexts.
    For example, `ps`, `ls`, `cp`, and `mkdir` all use the `-Z` option to display
    or set SELinux contexts of a file, directory, process, or port.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数 Linux 命令都带有 `-Z` 选项，用于显示 SELinux 上下文。例如，`ps`、`ls`、`cp` 和 `mkdir` 都使用 `-Z`
    选项来显示或设置文件、目录、进程或端口的 SELinux 上下文。
- en: '**The following are examples that illustrate the usage of -Z option with several
    commands for displaying the SELinux context:**'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '**以下是一些示例，展示了如何与多个命令一起使用 `-Z` 选项来显示 SELinux 上下文：**'
- en: 'The `ps` command can be used to view processes along with their SELinux contexts:'
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ps` 命令可用于查看进程及其 SELinux 上下文：'
- en: '[PRE26]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The `ps` command can also be used with option `-ZC`, to view the SELinux context
    of a process specified as an argument as shown in the following example:'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ps` 命令也可以与选项 `-ZC` 一起使用，以查看指定进程的 SELinux 上下文，如以下示例所示：'
- en: '[PRE27]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The `ls` command can be used with `-Z` option to view the SELinux context of
    files in a directory as shown in the following command line:'
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ls` 命令可以与 `-Z` 选项一起使用，以查看目录中文件的 SELinux 上下文，如以下命令行所示：'
- en: '[PRE28]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The `cp` command can be used with the `-A` option to preserve the SELinux context
    of a file or directory while performing the copy operation as shown in the following
    command line:'
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cp` 命令可以与 `-A` 选项一起使用，在执行复制操作时保持文件或目录的 SELinux 上下文，如以下命令行所示：'
- en: '[PRE29]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Generally, the context of the parent directory is assigned to the child, when
    we create a new file with the `vim`, `cp`, or `touch` command.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，在我们使用 `vim`、`cp` 或 `touch` 命令创建新文件时，子目录会被分配与父目录相同的上下文。
- en: 'To get a clearer and deeper insight into SELinux concepts, let''s consider
    the workings of an Apache web server in the absence and presence of SELinux controls:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更清楚和深入地理解 SELinux 的概念，我们可以考虑在没有 SELinux 控制和启用 SELinux 控制下 Apache Web 服务器的工作方式：
- en: '**In the absence of SELinux**: In this case, the web server is running on port
    `80`, which is opened in the firewall to allow access for service web pages. Let''s
    assume the attacker has compromised the Apache service due to a vulnerability
    in it. After compromising it, the attacker will gain access to the document root
    with the permissions of the Apache user and Apache group. Hence, an attacker can
    create and write files in the `/var/www/html/`, `/tmp`, and `/var/tmp` directories.'
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在没有 SELinux 的情况下**：在这种情况下，网页服务器运行在端口 `80` 上，该端口已在防火墙中打开以允许访问服务网页。假设攻击者通过
    Apache 服务中的漏洞入侵了服务器。在入侵后，攻击者将获得以 Apache 用户和 Apache 组权限访问文档根目录的权限。因此，攻击者可以在`/var/www/html/`、`/tmp`
    和 `/var/tmp` 目录中创建和写入文件。'
- en: '**In the presence of SELinux enforcing mode**: In this case, SELinux checks
    for the rules given in the targeted policy, which are based on type context. The
    SELinux context type for Apache web server process is `httpd_t` and SELinux context
    type of files and directories in `/var/www/html` is `httpd_sys_content_t`**.**
    The SELinux context type of files and directories in `/tmp` and `/var/tmp` is
    `tmp_t`in enforcing mode.'
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在启用 SELinux 强制模式的情况下**：在这种情况下，SELinux 会检查目标策略中给出的规则，这些规则基于类型上下文。Apache 网页服务器进程的
    SELinux 上下文类型为 `httpd_t`，`/var/www/html` 中的文件和目录的 SELinux 上下文类型为 `httpd_sys_content_t`**。**
    `/tmp` 和 `/var/tmp` 目录中的文件和目录在强制模式下的 SELinux 上下文类型为 `tmp_t`。'
- en: 'The targeted policy rule permits the process running as `httpd_t` to access
    files and directories with the context `httpd_sys_content_t`, so access to files
    or directories in `/tmp/` and `/var/tmp/` is not permitted. Thus, even if a malicious
    user compromises the web server, they cannot create or write a file in the `/tmp/`
    or `/var/tmp` directories. The damage caused by the user will remain restricted
    to the `/var/www/html` folder as shown in the following diagram:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 目标策略规则允许作为 `httpd_t` 运行的进程访问具有 `httpd_sys_content_t` 上下文的文件和目录，因此不允许访问 `/tmp/`
    和 `/var/tmp/` 中的文件或目录。因此，即使恶意用户入侵了网页服务器，他们也无法在 `/tmp/` 或 `/var/tmp` 目录中创建或写入文件。用户造成的损害将仅限于
    ` /var/www/html` 文件夹，如下图所示：
- en: '![](img/35807258-cc5d-48b5-bb38-8e098a93ba4f.png)'
  id: totrans-313
  prefs: []
  type: TYPE_IMG
  zh: '![](img/35807258-cc5d-48b5-bb38-8e098a93ba4f.png)'
- en: Working with SELinux
  id: totrans-314
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 SELinux
- en: This section deals with various commands used to manage the SELinux context
    and enforced policies applied on files, directories, processes, and ports.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 本节介绍了用于管理 SELinux 上下文和应用于文件、目录、进程和端口的强制策略的各种命令。
- en: Changing SELinux modes
  id: totrans-316
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改 SELinux 模式
- en: 'SELinux has three modes of operation, mentioned in the following table:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux 有三种操作模式，如下表所示：
- en: '| **SELinux mode** | **Description** |'
  id: totrans-318
  prefs: []
  type: TYPE_TB
  zh: '| **SELinux 模式** | **描述** |'
- en: '| Enforcing | In this mode, rules are available and applied. SELinux logs the
    activities and protects the system. |'
  id: totrans-319
  prefs: []
  type: TYPE_TB
  zh: '| 强制 | 在此模式下，规则可用且已应用。SELinux 记录活动并保护系统。|'
- en: '| Permissive | In this mode, rules are available but not applied. This mode
    is mainly used for troubleshooting. This mode is used to temporarily allow access
    to content that SELinux was restricting in enforcing mode. In this mode, SELinux
    logs the denied actions. System reboot is not required to switch from enforcing
    to permissive mode and vice versa. |'
  id: totrans-320
  prefs: []
  type: TYPE_TB
  zh: '| 宽容 | 在此模式下，规则可用但不应用。此模式主要用于故障排除。此模式用于临时允许访问 SELinux 在强制模式下限制的内容。在此模式下，SELinux
    记录被拒绝的操作。无需重新启动系统即可从强制模式切换到宽容模式，反之亦然。|'
- en: '| Disabled | In this mode, rules are not available. It completely disables
    SELinux. A system reboot is required to disable or switch from enforcing or permissive
    mode to disabled mode, as it completely relabels the files. |'
  id: totrans-321
  prefs: []
  type: TYPE_TB
  zh: '| 禁用 | 在此模式下，规则不可用。它完全禁用 SELinux。为了禁用或从强制模式或宽容模式切换到禁用模式，系统需要重新启动，因为它会完全重新标记文件。|'
- en: Using setenforce for runtime changes
  id: totrans-322
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 setenforce 进行运行时更改
- en: We can change the SELinux modes from enforcing to permissive and vice versa
    during runtime by using the `setenforce` command. Before and after changing the
    SELinux mode, we must ensure the current mode by using the `getenforce` command.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过使用 `setenforce` 命令在运行时将 SELinux 模式从强制模式更改为宽容模式，反之亦然。在更改 SELinux 模式之前和之后，我们必须使用
    `getenforce` 命令确保当前模式。
- en: '**The following are examples that illustrate the usage of the setenforce and
    getenforce commands:**'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '**以下是说明 `setenforce` 和 `getenforce` 命令使用的示例：**'
- en: 'To display the current SELinux mode, use the following command:'
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要显示当前的 SELinux 模式，请使用以下命令：
- en: '[PRE30]'
  id: totrans-326
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'To change the current SELinux mode from enforcing to permissive, use either
    of the following commands:'
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要将当前 SELinux 模式从强制模式更改为宽容模式，请使用以下命令之一：
- en: '[PRE31]'
  id: totrans-328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'To change the current SELinux mode from permissive to enforcing, use either
    of the following commands:'
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要将当前SELinux模式从宽松模式切换为强制模式，可以使用以下任一命令：
- en: '[PRE32]'
  id: totrans-330
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'To view detailed SELinux information, use the following command:'
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要查看详细的SELinux信息，请使用以下命令：
- en: '[PRE33]'
  id: totrans-332
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Another way to temporarily change the SELinux mode is by passing a parameter
    to the kernel at boot time. Passing a kernel argument of `enforcing=0` will boot
    the system in permissive mode for that instance and `selinux=1` will boot the
    system in enforcing mode.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 临时更改SELinux模式的另一种方法是在启动时向内核传递一个参数。传递`enforcing=0`的内核参数将使系统在该实例中以宽松模式启动，而`selinux=1`将使系统以强制模式启动。
- en: Setting default modes of SELinux
  id: totrans-334
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置SELinux的默认模式
- en: 'The configuration file of SELinux is `/etc/selinux/config`. It determines the
    mode and policy of SELinux at boot time. We can modify the `/etc/selinux/config`
    file and set the `SELINUX=permissive` parameter to change the default mode of
    SELinux, as shown in the following diagram:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux的配置文件是`/etc/selinux/config`。它决定了SELinux在启动时的模式和策略。我们可以修改`/etc/selinux/config`文件，将`SELINUX=permissive`参数设置为改变SELinux的默认模式，如下图所示：
- en: '![](img/b6ca328a-276e-4e4a-b43c-74542b11ce5e.png)'
  id: totrans-336
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6ca328a-276e-4e4a-b43c-74542b11ce5e.png)'
- en: In previous releases of CentOS, the SELinux configuration file was stored at
    `/etc/sysconfig/selinux`. Now, in CentOS 7, this file is a `symlink` of `/etc/selinux/confg`.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 在CentOS的早期版本中，SELinux配置文件存储在`/etc/sysconfig/selinux`中。现在，在CentOS 7中，该文件是`/etc/selinux/config`的符号链接（symlink）。
- en: If any kernel argument of `enforcing=0` for permissive mode or `selinux=0` for
    disabling SELinux is passed at boot, then it will override the current configuration
    set in `/etc/selinux/config`.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在启动时传递了`enforcing=0`（用于宽松模式）或`selinux=0`（用于禁用SELinux）的内核参数，那么它将覆盖`/etc/selinux/config`中设置的当前配置。
- en: Modifying file context
  id: totrans-339
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 修改文件上下文
- en: As mentioned earlier, generally, the parent directory SELinux context is assigned
    to the newly created file, if it is created using the `vim`, `cp`, or `touch` command.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，通常情况下，父目录的SELinux上下文会被分配给新创建的文件，前提是该文件是通过`vim`、`cp`或`touch`命令创建的。
- en: If a file is moved using the `mv` command, or copied using the `cp -a` command,
    the original SELinux context will remain unchanged.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 如果文件使用`mv`命令移动，或使用`cp -a`命令复制，则原始的SELinux上下文将保持不变。
- en: Often, we need to modify the file context as per the destination directory,
    so that a process can access the file object when required. In the following sections,
    we discuss the different utilities that can be used to achieve this.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，我们需要根据目标目录修改文件上下文，以便在需要时进程可以访问文件对象。在接下来的章节中，我们将讨论可以用来实现这一目标的不同工具。
- en: Using restorecon for restoring the default context
  id: totrans-343
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`restorecon`恢复默认上下文
- en: Using the `restorecon` command is the most popular and preferred way of modifying
    the SELinux context of a file or directory. As is visible from the name of the `restorecon`
    command, it is used to restore the default context of a file or directory by reading
    the default rules set in the SELinux policy. If the wrong context is applied,
    `restorecon` automatically corrects it from the policy of the filesystem.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`restorecon`命令是修改文件或目录SELinux上下文的最常用且首选的方法。顾名思义，`restorecon`命令用于通过读取SELinux策略中设置的默认规则来恢复文件或目录的默认上下文。如果应用了错误的上下文，`restorecon`会根据文件系统的策略自动修正。
- en: 'In the following example, we simulate a problem scenario, in which a file has
    incorrect syntax and we correct it using the `restorecon` command:'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，我们模拟一个问题场景，其中一个文件具有不正确的语法，并使用`restorecon`命令进行修正：
- en: '![](img/050bd30d-9268-49b6-bd13-0d28dada3106.png)'
  id: totrans-346
  prefs: []
  type: TYPE_IMG
  zh: '![](img/050bd30d-9268-49b6-bd13-0d28dada3106.png)'
- en: The `restorecon` command is a part of the `policycoreutil` package, so in order
    to use this command, this package should be installed on the system.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: '`restorecon`命令是`policycoreutil`包的一部分，因此要使用此命令，必须在系统上安装该包。'
- en: Using chon for context management
  id: totrans-348
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`chon`进行上下文管理
- en: The `chcon` command can also be used with the `_t` option to change the context
    of the file. This method of modifying the context of the file is not recommended,
    as errors can happen while using it. The `chcon` command, when used, writes the
    new context to the filesystem, but the policy remains unchanged. Hence, changes
    made using this command get overwritten on relabeling the SELinux context on the filesystem.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: '`chcon`命令也可以与`_t`选项一起使用来更改文件的上下文。这种修改文件上下文的方法不推荐使用，因为使用时可能会发生错误。`chcon`命令在使用时会将新上下文写入文件系统，但策略本身不会改变。因此，使用此命令所做的更改将在重新标记文件系统上的SELinux上下文时被覆盖。'
- en: 'An example of `chcon` command usage is shown in the following diagram:'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: '`chcon` 命令的使用示例如下图所示：'
- en: '![](img/cffee1d0-5d92-47b7-bf04-bdbeea07255f.png)'
  id: totrans-351
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cffee1d0-5d92-47b7-bf04-bdbeea07255f.png)'
- en: Using semanage for context management
  id: totrans-352
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 `semanage` 进行上下文管理
- en: The `semanage` command writes the new context to the SELinux policy, which is
    used to apply the file context at the relabeling of the file labels or while setting
    the default file context using `restorecon`. It uses an extended regular expression
    to specify the path and filenames for applying those rules (new file context).
    The most commonly used extended regular expression with `semanage fcontext` is
    `(/.*)?`. This expression matches the directory listed before the expression and
    everything in that directory recursively.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: '`semanage` 命令将新上下文写入 SELinux 策略，用于在文件标签重新标记或通过 `restorecon` 设置默认文件上下文时应用文件上下文。它使用扩展正则表达式来指定路径和文件名，以应用这些规则（新文件上下文）。`semanage
    fcontext` 最常用的扩展正则表达式是 `(/.*)?`。该表达式匹配表达式前列出的目录及该目录下的所有内容（递归匹配）。'
- en: 'An example of `semanage` command usage is shown in the following diagram:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: '`semanage` 命令使用示例如下图所示：'
- en: '![](img/43e888d3-696f-4e23-90dc-93becf4b59fe.png)'
  id: totrans-355
  prefs: []
  type: TYPE_IMG
  zh: '![](img/43e888d3-696f-4e23-90dc-93becf4b59fe.png)'
- en: The `semange` command is a part of the `policycoreutil-python` package. In order
    to use the `semanage` command, make sure this package is installed in the system.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: '`semanage` 命令是 `policycoreutil-python` 包的一部分。要使用 `semanage` 命令，请确保此软件包已安装在系统中。'
- en: Modifying port context
  id: totrans-357
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 修改端口上下文
- en: 'SELinux does much more than just restricting the access of processes to files
    based on SELinux labels. It can also control the network traffic by restricting
    access to unauthorized ports for a service. By default, the SELinux policy allows
    the `ssh` service to access port, `22`/TCP . In the following example, we allow
    `ssh` to run on another port `2525`/TCP, in addition to its default port, as shown
    in the following steps:'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux 不仅仅是基于 SELinux 标签限制进程对文件的访问。它还可以通过限制服务访问未经授权的端口来控制网络流量。默认情况下，SELinux
    策略允许 `ssh` 服务访问端口 `22`/TCP。在以下示例中，我们允许 `ssh` 在除默认端口外的另一个端口 `2525`/TCP 上运行，如下所示：
- en: 'The `semanage` command can be used with the `port` sub-command to list the
    current port assigned to a service as shown in the following screenshot:'
  id: totrans-359
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`semanage` 命令可与 `port` 子命令一起使用，列出分配给服务的当前端口，如下图所示：'
- en: '![](img/e12d5039-89dd-49c8-b19d-71e6aece8808.png)'
  id: totrans-360
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e12d5039-89dd-49c8-b19d-71e6aece8808.png)'
- en: 'We can also use the `semanage` command for granting access to any custom port
    for a particular service. In the following screenshot, the `semanage` command
    is used to add the selected port to the access list of a particular service:'
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们还可以使用 `semanage` 命令为特定服务授予对任何自定义端口的访问权限。在以下截图中，`semanage` 命令被用来将选定的端口添加到特定服务的访问列表中：
- en: '![](img/ef47cc4b-d00a-41dc-a45b-4c8aedf0225c.png)'
  id: totrans-362
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ef47cc4b-d00a-41dc-a45b-4c8aedf0225c.png)'
- en: 'The `semanage` command can also be used to remove an association of a port
    to a particular service as shown in the following screenshot:'
  id: totrans-363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`semanage` 命令还可以用来移除端口与特定服务的关联，如以下截图所示：'
- en: '![](img/6b06f18a-b18e-4e41-9b8e-7ca0b0998741.png)'
  id: totrans-364
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6b06f18a-b18e-4e41-9b8e-7ca0b0998741.png)'
- en: Managing SELinux Booleans
  id: totrans-365
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理 SELinux 布尔值
- en: SELinux Booleans are switches that contains a set of rules to make a selective
    adjustment in behavior to an SELinux policy. SELinux Booleans provide an easy
    interface to change the behavior of an SELinux policy rule.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux 布尔值是开关，包含一组规则，用于选择性地调整 SELinux 策略的行为。SELinux 布尔值提供了一个简便的接口来改变 SELinux
    策略规则的行为。
- en: '**The following are examples that illustrate the usage of the getsebool and
    setsebool commands for managing SELinux Booleans:**'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: '**以下是说明如何使用 getsebool 和 setsebool 命令管理 SELinux 布尔值的示例：**'
- en: 'The `getsebool` command can be used with the `-a` option to display the list
    of all SELinux Booleans and their current values as shown in the following command
    line. The output of this command is passed to a grep filter to narrow down the
    results:'
  id: totrans-368
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getsebool` 命令可与 `-a` 选项一起使用，显示所有 SELinux 布尔值及其当前值，如以下命令行所示。该命令的输出将传递给 `grep`
    过滤器，以缩小结果范围：'
- en: '[PRE34]'
  id: totrans-369
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'The output of the `getsebool -a` command can be filtered down using `grep`
    as shown in the following command line:'
  id: totrans-370
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getsebool -a` 命令的输出可以通过 `grep` 进行过滤，如以下命令行所示：'
- en: '[PRE35]'
  id: totrans-371
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The `setsebool` command can be used to modify (switch on or off) the value
    of a SELinux Boolean at runtime as shown in following command line:'
  id: totrans-372
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`setsebool` 命令可用于在运行时修改（开启或关闭）SELinux 布尔值，如以下命令行所示：'
- en: '[PRE36]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Modify runtime value as well as the default values of the SELinux Boolean simultaneously
    by using the `setsebool` command with the `-P` option as shown in the following
    command line:'
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`setsebool`命令并加上`-P`选项，修改SELinux布尔值的运行时值和默认值，如下命令所示：
- en: '[PRE37]'
  id: totrans-375
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Managing SELinux troubleshooting
  id: totrans-376
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理SELinux故障排除
- en: SELinux provides an essential layer of security beyond the discretionary access
    control set by the user. It prevents any unauthorized attempt to access a resource
    such as a file by a running process. Here, the process that attempt to access
    a resource could be a genuine process or it could be a compromised process. Disabling
    SELinux is not considered good practice. Sometimes, when a binary or application
    is installed from a third party, it does not contain any appropriate SELinux context,
    which may lead to restrictions in running that service properly. In those circumstances,
    SELinux is run in permissive mode and new rules are created based on the denial
    of service messages captured in log files. In most cases of SELinux troubleshooting,
    it has been observed that access control restrictions are applied by SELinux due
    to incorrect type context on a file. This issue can be easily resolved using the `restorecon` command,
    which sets the default context on files from SELinux rules given in a policy.
    Using this method, we can keep our SELinux in enforcing mode and the security
    of our systems intact.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux提供了一个额外的安全层，超越了用户设置的自由访问控制。它防止任何未授权的进程尝试访问资源，如文件。这里，尝试访问资源的进程可能是一个合法进程，也可能是一个已被攻陷的进程。禁用SELinux并不被认为是良好的做法。有时，当从第三方安装二进制文件或应用程序时，它们可能没有适当的SELinux上下文，这可能会导致该服务无法正常运行。在这种情况下，SELinux会以宽松模式运行，并根据日志文件中捕获到的拒绝服务信息创建新规则。在大多数SELinux故障排除的案例中，观察到SELinux由于文件上的错误类型上下文而应用了访问控制限制。这个问题可以通过使用`restorecon`命令轻松解决，该命令将根据策略中的SELinux规则设置文件的默认上下文。通过这种方法，我们可以保持SELinux在强制模式下运行，并确保系统的安全性。
- en: 'Modifying the mode of SELinux Booleans by turning their values on and off is
    also used sometimes to relax or harden the SELinux controls for running a service.
    For making an appropriate change in SELinux rules or policies, the primary requirement
    is to understand the problem correctly. In this, the monitoring of SELinux violations
    by going through logs plays an important role. For logging SELinux messages to
    `/var/log/messages` and `/var/log/audit/audit.log` in an easily understandable
    format, the `setroubleshoot-server` package should be installed on the system
    with the following command:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 通过打开和关闭SELinux布尔值来修改SELinux的模式，有时也用于放宽或加强服务运行的SELinux控制。为了在SELinux规则或策略中做出适当的更改，首要要求是正确理解问题。在这方面，通过查看日志来监控SELinux违规起着重要作用。为了将SELinux消息记录到`/var/log/messages`和`/var/log/audit/audit.log`中，并以易于理解的格式显示，系统应安装`setroubleshoot-server`包，可以通过以下命令实现：
- en: '[PRE38]'
  id: totrans-379
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Using sealert for troubleshooting
  id: totrans-380
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用sealert进行故障排除
- en: Each SELinux violation is assigned a **unique** **identifier** (**UUID**). This
    UUID is used with the `sealert` command to produce a summary of a report for a
    specific incident.
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 每个SELinux违规事件都会分配一个**唯一**的**标识符**（**UUID**）。此UUID与`sealert`命令一起使用，用于生成特定事件的报告摘要。
- en: 'For example, let''s create a file in root''s home directory and move this file
    into `/var/www/html/`. Now, try to access that file through the web browser or
    from the command line using `curl` as shown in the following diagram:'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们在root用户的主目录中创建一个文件，然后将该文件移动到`/var/www/html/`目录。现在，尝试通过网页浏览器或使用`curl`命令行工具访问该文件，如下图所示：
- en: '![](img/8f16bb7d-acef-41bb-bbc5-23312d367c8b.png)'
  id: totrans-383
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8f16bb7d-acef-41bb-bbc5-23312d367c8b.png)'
- en: 'The error report of the SELinux violation can be viewed now, using the UUID
    and `sealert` command, as shown in the following screenshot:'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，可以使用UUID和`sealert`命令查看SELinux违规的错误报告，如下图所示：
- en: '![](img/82906200-6c23-483f-a6c0-49ba61183f76.png)'
  id: totrans-385
  prefs: []
  type: TYPE_IMG
  zh: '![](img/82906200-6c23-483f-a6c0-49ba61183f76.png)'
- en: 'On applying the suggestions of the SELinux violation given in the `sealert`
    report, it will remove the error and allow access to the file using the `curl` command
    as shown in the following screenshot:'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用`sealert`报告中给出的SELinux违规建议后，错误将被修复，并允许使用`curl`命令访问文件，如下截图所示：
- en: '![](img/3e16bbda-1112-4f07-bf12-b40e9ad60dbd.png)'
  id: totrans-387
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3e16bbda-1112-4f07-bf12-b40e9ad60dbd.png)'
- en: Understanding firewall concepts in CentOS 7
  id: totrans-388
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解CentOS 7中的防火墙概念
- en: Operating system security generally follows a defense in depth model, where
    security is implemented at different layers in the system. Starting from policies
    and procedure, physical controls, network perimeter security, host security, application
    security, and so on, several elements are secured to harden the security of a
    system. In this, a firewall helps in securing the system, as well as applications,
    by limiting access to the system. Firewall rules filter packets based on specific
    criteria, such as IP addresses, port and protocol, and so on.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 操作系统安全通常遵循深度防御模型，其中安全性在系统的不同层级上实现。从政策和程序、物理控制、网络边界安全、主机安全、应用程序安全等多个元素来加固系统安全。在此过程中，防火墙通过限制对系统的访问，帮助保护系统及应用程序。防火墙规则根据特定标准过滤数据包，如IP地址、端口和协议等。
- en: In Linux, firewall rules are managed by the network filtering subsystem available
    in the kernel and known as **netfilter.** The netfilter framework enables the
    system to inspect, modify, drop, or reject any incoming, outgoing, or forwarded
    network packet programmatically.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux中，防火墙规则由内核中可用的网络过滤子系统（称为**netfilter**）进行管理。netfilter框架使系统能够以编程方式检查、修改、丢弃或拒绝任何进入、出去或转发的网络数据包。
- en: The `iptables` command is the most popular tool used to interact with netfilter
    and manage the firewall. The `iptables` command only manages the IPv4 rules in
    the firewall. For management of IPv6 rules, the `ip6tables` command is used, and
    for software bridges, the `ebtables` utility is used. However, managing the firewall
    using the `iptables` utility is not user friendly and requires a good understanding
    of both the firewall and `iptables` command. Thus, to overcome the complexity
    of `iptables` and incorporate some advanced features, a new utility, `firewalld`, was
    designed.
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: '`iptables`命令是与netfilter交互并管理防火墙的最常用工具。`iptables`命令仅管理防火墙中的IPv4规则。对于IPv6规则的管理，使用`ip6tables`命令；对于软件桥接，使用`ebtables`工具。然而，使用`iptables`工具管理防火墙并不友好，需要对防火墙和`iptables`命令有很好的理解。因此，为了克服`iptables`的复杂性并引入一些高级功能，设计了一个新工具`firewalld`。'
- en: Firewalld concepts
  id: totrans-392
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: firewalld概念
- en: 'In CentOS 7, a new utility called **firewalld** has been introduced to interact
    with netfilter. It can be used to configure and monitor the firewall rules for
    IPv4, IPv6, and for software bridges. Furthermore, applications can interact with
    `firewalld` to add or change firewall rules, such as a requesting for a port opening
    with the help of the D-bus messaging system. firewalld supports both runtime configuration
    and persistence configuration. It is installed by default in the CentOS Base installation,
    but if it is not available, then user can install it is using the following command
    lines:'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 在CentOS 7中，引入了一个名为**firewalld**的新工具，用于与netfilter交互。它可用于配置和监控IPv4、IPv6以及软件桥接的防火墙规则。此外，应用程序可以通过`firewalld`与防火墙规则交互，例如请求通过D-bus消息系统打开端口。firewalld支持运行时配置和持久性配置。在CentOS
    Base安装中默认安装，但如果没有安装，用户可以使用以下命令行进行安装：
- en: '[PRE39]'
  id: totrans-394
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: firewalld is not compatible with the `iptables` service, so it is strongly recommended
    to not use them simultaneously on the same system. Either use `firewalld` and
    disable `iptables` (`iptables`, `ip6tables`, and `ebtables`), or use `iptables`
    and disable `firewalld`.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: firewalld与`iptables`服务不兼容，因此强烈建议不要在同一系统上同时使用它们。可以选择使用`firewalld`并禁用`iptables`（`iptables`、`ip6tables`和`ebtables`），或使用`iptables`并禁用`firewalld`。
- en: Firewalld zones
  id: totrans-396
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: firewalld区域
- en: 'The firewalld segregates incoming traffic into zones. Each zone is a collection
    of rules. To select which zone is to be used for an incoming connection, firewalld
    uses the following three rules to match in the given order:'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: firewalld将进入流量划分为不同的区域。每个区域是一组规则的集合。为了选择使用哪个区域来处理进入连接，firewalld按照以下三个规则按给定顺序进行匹配：
- en: '**The source address** on the incoming packet is matched with the source address
    rule configured for the zone. If the source address matches, the packet is routed
    through that zone.'
  id: totrans-398
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**进入数据包的源地址**与为该区域配置的源地址规则进行匹配。如果源地址匹配，则数据包通过该区域路由。'
- en: If the source address does not match, then the **incoming interface** for a
    packet is matched with the interface set up for the zone and that zone is used.
  id: totrans-399
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果源地址不匹配，则数据包的**进入接口**将与为该区域设置的接口进行匹配，并使用该区域。
- en: 'If neither the incoming interface of the packet nor the source address of a
    packet matches, then the rules given in the **default zone** are applied on that
    packet. The default zone is one of the other zones defined by the system or user.
    By default, the public zone is set as the default zone. The example of `firewall-cmd`
    to list the available zones and default zone is shown in the following screenshot:'
  id: totrans-400
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果数据包的传入接口或数据包的源地址都不匹配，则会应用**默认区域**中给定的规则。默认区域是系统或用户定义的其他区域之一。默认情况下，公共区域被设置为默认区域。以下截图展示了使用`firewall-cmd`列出可用区域和默认区域的示例：
- en: '![](img/b0ac9f56-60a9-4da7-82aa-6f91c115f2d6.png)'
  id: totrans-401
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b0ac9f56-60a9-4da7-82aa-6f91c115f2d6.png)'
- en: 'The following table lists the predefined zones available in `firewalld` and
    their descriptions:'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格列出了`firewalld`中可用的预定义区域及其描述：
- en: '| **Zone** | **Description** |'
  id: totrans-403
  prefs: []
  type: TYPE_TB
  zh: '| **区域** | **描述** |'
- en: '| `trusted` | Allows all incoming traffic. |'
  id: totrans-404
  prefs: []
  type: TYPE_TB
  zh: '| `trusted` | 允许所有传入流量。 |'
- en: '| `home` | This zone is used for home networks. In this zone, incoming traffic
    is rejected unless it is related to outgoing traffic or it matches the predefined
    services of zone, such as `ssh`, `mdns`, `ipp-client`, `samba-client`, or `dhcpv6-client`.
    |'
  id: totrans-405
  prefs: []
  type: TYPE_TB
  zh: '| `home` | 此区域用于家庭网络。在此区域，所有传入流量都会被拒绝，除非与传出流量相关，或与该区域的预定义服务匹配，例如`ssh`、`mdns`、`ipp-client`、`samba-client`或`dhcpv6-client`。
    |'
- en: '| `internal` | This zone has the same rules as defined in the home zone. It
    is generally used for internal networks. |'
  id: totrans-406
  prefs: []
  type: TYPE_TB
  zh: '| `internal` | 此区域的规则与家庭区域定义的规则相同。通常用于内部网络。 |'
- en: '| `work` | In this zone, all incoming traffic is rejected, unless it is related
    to outgoing traffic or it matches some predefined services of the zone, such as,
    `ssh`, `mdns`, `ipp-client`, or `dhcpv6-client`: |'
  id: totrans-407
  prefs: []
  type: TYPE_TB
  zh: '| `work` | 在此区域，所有传入流量都会被拒绝，除非与传出流量相关，或与该区域的某些预定义服务匹配，例如`ssh`、`mdns`、`ipp-client`或`dhcpv6-client`：
    |'
- en: '| `public` | In this zone, all incoming traffic is rejected, unless it is related
    to outgoing traffic or it matches some predefined services of the zone, such as `ssh`
    or `dhcpv6-client`. |'
  id: totrans-408
  prefs: []
  type: TYPE_TB
  zh: '| `public` | 在此区域，所有传入流量都会被拒绝，除非与传出流量相关，或与该区域的某些预定义服务匹配，例如`ssh`或`dhcpv6-client`。
    |'
- en: '| `external` | In this zone, all incoming traffic is rejected, unless it is
    related to outgoing traffic or it matches some predefined services of zone, such
    as `ssh`. Outgoing IPv4 traffic forwarded from this zone is masqueraded (NAT)
    to make it originate from the outgoing network interface. |'
  id: totrans-409
  prefs: []
  type: TYPE_TB
  zh: '| `external` | 在此区域，所有传入流量都会被拒绝，除非与传出流量相关，或与该区域的某些预定义服务匹配，例如`ssh`。从该区域转发的传出IPv4流量会进行伪装（NAT），使其看起来来自于传出的网络接口。
    |'
- en: '| `dmz` | `dmz` is the demilitarized zone. Only selected incoming connections
    with limited access to the internal network are allowed. All other traffic is
    rejected. |'
  id: totrans-410
  prefs: []
  type: TYPE_TB
  zh: '| `dmz` | `dmz`是非军事区。只允许选择性的传入连接，这些连接对内部网络的访问受到限制。所有其他流量都会被拒绝。 |'
- en: '| `block` | Reject all incoming traffic with an `icmp-host-prohibited` message.
    Only incoming traffic related to connections originating from the outgoing traffic
    of the system is allowed. |'
  id: totrans-411
  prefs: []
  type: TYPE_TB
  zh: '| `block` | 拒绝所有传入流量，并发送`icmp-host-prohibited`消息。只允许与系统传出流量相关的连接的传入流量。 |'
- en: '| `drop` | In this zone, all incoming traffic is dropped (without any ICMP
    errors) unless it is related to outgoing traffic. |'
  id: totrans-412
  prefs: []
  type: TYPE_TB
  zh: '| `drop` | 在此区域，所有传入流量都会被丢弃（没有任何ICMP错误），除非与传出流量相关。 |'
- en: Firewalld services
  id: totrans-413
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Firewalld 服务
- en: 'The other main component of firewalld is services. There are certain default
    services that are used to allow or deny access to traffic on specific ports, for
    a particular network service in the firewall. Each service has got a configuration
    file that describes its requirements, such as what TCP or UDP ports are required
    for service operation. Users can list all the available services in firewalld
    with the command shown in the following screenshot:'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: firewalld的另一个主要组成部分是服务。某些默认服务用于允许或拒绝特定端口上网络服务的流量访问。每个服务都有一个配置文件，描述其要求，例如服务操作所需的TCP或UDP端口。用户可以使用以下截图所示的命令列出firewalld中所有可用的服务：
- en: '![](img/35287e48-5931-432c-bc54-8bce532880b3.png)'
  id: totrans-415
  prefs: []
  type: TYPE_IMG
  zh: '![](img/35287e48-5931-432c-bc54-8bce532880b3.png)'
- en: For the secure configuration of firewalld, each service should be allowed access
    in the correct zone.
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 对于firewalld的安全配置，应该在正确的区域中允许每个服务的访问。
- en: 'The services configuration file is stored in the following two directories:'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 服务配置文件存储在以下两个目录中：
- en: '`/usr/lib/firewalld/services`'
  id: totrans-418
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/usr/lib/firewalld/services`'
- en: '`/etc/firewalld/services`'
  id: totrans-419
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/etc/firewalld/services`'
- en: 'These services files are configured in XML format. An example of the `ftp.xml`
    file is shown in the following screenshot:'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 这些服务文件以 XML 格式配置。以下截图显示了 `ftp.xml` 文件的示例：
- en: '![](img/e707c6af-6c80-40bd-8733-5e5c2ae33d2f.png)'
  id: totrans-421
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e707c6af-6c80-40bd-8733-5e5c2ae33d2f.png)'
- en: Managing firewalld
  id: totrans-422
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理 firewalld
- en: Firewalld can be managed in the following two ways.
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: Firewalld 可以通过以下两种方式进行管理。
- en: Using the firewalld-cmd command-line tool
  id: totrans-424
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 firewalld-cmd 命令行工具
- en: This is the most common method of managing firewalld configurations (both running
    as well as permanent). In this section, we have described the management of firewalld
    with this tool. It can perform all the jobs that are performed using the firewalld-config GUI
    tool. This tool is a part of the `firewalld` package.
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 这是管理 firewalld 配置（无论是运行中的还是永久性的）最常用的方法。在本节中，我们描述了使用此工具管理 firewalld 的方法。它可以执行使用
    firewalld-config GUI 工具执行的所有操作。此工具是 `firewalld` 包的一部分。
- en: Using the firewalld-config graphical tool
  id: totrans-426
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 firewalld-config 图形工具
- en: Firewall-config is a graphical tool that is used to modify and view the running
    (in-memory) configuration of firewalld, as well as permanent (on hard disk) configuration.
    This tool is a part of the firewall-config package. It is invoked from the command
    line by typing `firewall-config`.
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: Firewall-config 是一个图形工具，用于修改和查看 firewalld 的运行（内存中）配置以及永久（硬盘上）配置。此工具是 firewall-config
    包的一部分。通过在命令行输入 `firewall-config` 来启动该工具。
- en: 'The configuration files of firewalld are stored inside the `/etc/firewalld/`
    directory. Firewalld supports two types of configurations:'
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: firewalld 的配置文件存储在 `/etc/firewalld/` 目录下。Firewalld 支持两种类型的配置：
- en: '**Runtime or in-memory configurations**:The in-memory configurations of firewalld
    are lost on reloading firewalld or after rebooting of system.'
  id: totrans-429
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**运行时或内存中的配置**：firewalld 的内存配置会在重新加载 firewalld 或系统重启后丢失。'
- en: '**Permanent or on-disk configurations**: This configuration remains after reboot
    and is applied on reloading firewalld.'
  id: totrans-430
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**永久或磁盘配置**：该配置在重启后仍然有效，并在重新加载 firewalld 时应用。'
- en: Working with firewalld
  id: totrans-431
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 firewalld
- en: Before starting firewalld, we need to ensure that `iptables`, `ip6tables`, and
    `ebtables` are not running, as they conflict with firewalld.
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动 firewalld 之前，我们需要确保 `iptables`、`ip6tables` 和 `ebtables` 未运行，因为它们与 firewalld
    冲突。
- en: '**The following are examples that illustrate the usage of firewalld-cmd command:**'
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: '**以下是说明 firewalld-cmd 命令用法的示例：**'
- en: 'Stop the conflicting service of `iptables`, `ip6tables`, and `ebtables` using
    the following command:'
  id: totrans-434
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令停止与 `iptables`、`ip6tables` 和 `ebtables` 冲突的服务：
- en: '[PRE40]'
  id: totrans-435
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'The following command is used to `start` and enable `firewalld` in CentOS 7:'
  id: totrans-436
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下命令用于在 CentOS 7 中 `启动` 和启用 `firewalld`：
- en: '[PRE41]'
  id: totrans-437
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Now, the first step in configuring `firewalld` should be to check the existing
    zones and services that are configured by default and the zones and services that
    the user has not configured:'
  id: totrans-438
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，配置 `firewalld` 的第一步应该是检查默认配置的现有区域和服务，以及用户未配置的区域和服务：
- en: 'List all the zones in `firewalld` by using the following command line:'
  id: totrans-439
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用以下命令行列出 `firewalld` 中的所有区域：
- en: '[PRE42]'
  id: totrans-440
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'List only active zones of `firewalld` by using the following command line:'
  id: totrans-441
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用以下命令行仅列出 `firewalld` 的活动区域：
- en: '[PRE43]'
  id: totrans-442
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'List the current default zone by using the following command line:'
  id: totrans-443
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用以下命令行列出当前的默认区域：
- en: '[PRE44]'
  id: totrans-444
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'List the services available for configuration with `firewalld` by using the
    following command line:'
  id: totrans-445
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用以下命令行列出可与 `firewalld` 配置的服务：
- en: '[PRE45]'
  id: totrans-446
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'After making any changes in the `firewalld` configuration, it is mandatory
    to reload it to bring the applied changes into effect. By default, all changes
    made are runtime changes only. We can make them permanent by using the `--`permanent
    option. It will preserve the configuration changes across reboot. Now, let''s
    change the default zone using the `firewalld-cmd` command as follows:'
  id: totrans-447
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在对 `firewalld` 配置进行任何更改后，必须重新加载它以使更改生效。默认情况下，所有更改仅为运行时更改。我们可以使用 `--permanent`
    选项将其设置为永久配置，这样配置在重启后也会保留。现在，让我们通过以下 `firewalld-cmd` 命令更改默认区域：
- en: '[PRE46]'
  id: totrans-448
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'After updating the default zone, we should confirm the setting of the current
    default zone by using the following command line:'
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 更新默认区域后，我们应该使用以下命令行确认当前默认区域的设置：
- en: '[PRE47]'
  id: totrans-450
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Now, let''s add a port to the public zone using `firewall-cmd` permanently
    by using the following command line:'
  id: totrans-451
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们通过以下命令行使用 `firewall-cmd` 将端口永久添加到公共区域：
- en: '[PRE48]'
  id: totrans-452
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'In the preceding command, if we don''t add the `--permanent` option, then changes
    will get lost after reloading the `firewalld` configuration. We can reload the
    `firewalld` configuration by using the following command line:'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述命令中，如果我们没有添加`--permanent`选项，那么更改将在重新加载`firewalld`配置后丢失。我们可以通过以下命令行重新加载`firewalld`配置：
- en: '[PRE49]'
  id: totrans-454
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Now, see the status of recently added TCP port `80` in `firewalld`:'
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，查看在`firewalld`中最近添加的TCP端口`80`的状态：
- en: '[PRE50]'
  id: totrans-456
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'We can also use the `firewall-cmd` command to view the complete configuration
    for a zone. In the following example, we list the complete configuration of the
    internal zone:'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用`firewall-cmd`命令查看区域的完整配置。在以下示例中，我们列出了内部区域的完整配置：
- en: '[PRE51]'
  id: totrans-458
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'In the following example, we use the `firewall-cmd` command to remove TCP port
    `80` from the internal zone as shown in the following command line:'
  id: totrans-459
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在以下示例中，我们使用`firewall-cmd`命令将TCP端口`80`从内部区域中移除，如以下命令行所示：
- en: '[PRE52]'
  id: totrans-460
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Add a service to a zone in `firewalld`. The following example shows how to
    add an `ftp` service in the `firewalld` internal zone:'
  id: totrans-461
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向`firewalld`中的一个区域添加服务。以下示例展示了如何将`ftp`服务添加到`firewalld`的内部区域：
- en: '[PRE53]'
  id: totrans-462
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'List the services in a zone by using the following command line:'
  id: totrans-463
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令行列出一个区域中的服务：
- en: '[PRE54]'
  id: totrans-464
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Remove a service from a zone in `firewalld` by using the following command
    line:'
  id: totrans-465
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令行从`firewalld`中的一个区域移除服务：
- en: '[PRE55]'
  id: totrans-466
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'The user can drop all incoming and outgoing packets of an active connection
    when there is a breach in the network by using the panic options of `firewall-cmd`
    as shown in the following command line:'
  id: totrans-467
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户可以在网络发生泄露时，通过使用`firewall-cmd`的panic选项来丢弃活动连接的所有进出数据包，如以下命令行所示：
- en: '[PRE56]'
  id: totrans-468
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'On execution of the preceding command, any ping, `ssh`, or web-related activity
    on the system will be blocked. To turn off this feature, execute the following
    command:'
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 执行上述命令后，系统上的任何ping、`ssh`或与Web相关的活动将被阻止。要关闭此功能，请执行以下命令：
- en: '[PRE57]'
  id: totrans-470
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: Besides the `firewall-cmd` configuration rules that we have discussed in this
    section, firewalld has two more options for adding firewall rules, direct rules
    and rich rules.
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: 除了我们在本节中讨论的`firewall-cmd`配置规则外，firewalld还有两种添加防火墙规则的方式，即直接规则和丰富规则。
- en: Summary
  id: totrans-472
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we began by learning what the different types of logging in
    the Linux system are, and how to use them effectively for debugging and troubleshooting
    Linux systems. Then, we learned about managing system services to optimize system
    performance. This was followed by understanding SELinux concepts to harden the
    security of applications and the system. Finally, we looked at how to filter the
    incoming and outgoing packets in the system using the firewalld framework.
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们首先学习了Linux系统中的不同类型的日志记录，以及如何有效地使用它们进行调试和故障排除。接着，我们学习了如何管理系统服务以优化系统性能。随后，我们理解了SELinux的概念，以加固应用程序和系统的安全性。最后，我们学习了如何使用`firewalld`框架过滤系统中的进出数据包。
- en: Linux is all about learning by doing. If you have practiced the commands given
    in each chapter, together with the theoretical part, you will feel more comfortable
    while working on Linux. This book is written for novice Linux users, yet a seasoned
    Linux user will also have something to take away from each chapter. With this,
    our fascinating journey of kick-starting Linux with the CentOS 7 operating system
    comes to an end. If you have any queries, I would like to hear it from you. You
    can reach me at `shiwangkalkhanda@outlook.com`.
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: Linux的核心理念是通过实践学习。如果你在每一章节中都练习了所给的命令，并结合理论部分，你会在使用Linux时感到更加得心应手。本书是为初学者编写的，但即使是经验丰富的Linux用户，也能从每一章中学到一些东西。至此，我们关于使用CentOS
    7操作系统启动Linux的精彩旅程也画上了句号。如果你有任何问题，欢迎向我咨询。你可以通过`shiwangkalkhanda@outlook.com`与我联系。
