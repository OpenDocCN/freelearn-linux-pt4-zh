- en: Chapter 9. Deploying the Apache HTTPD Server
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 9 章：部署 Apache HTTPD 服务器
- en: The **Hypertext Transfer Protocol** (**HTTP**) server will be commonly referred
    to as a web server. As the name suggests, this is a network service that provides
    content to a client, typically a web browser, on the Internet. This typically
    means delivery of web pages, but any other documents can be served, such as images,
    sound, video, and even ISO files for RHEL.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**超文本传输协议**（**HTTP**）服务器通常被称为 Web 服务器。顾名思义，这是一个为客户端（通常是互联网中的 Web 浏览器）提供内容的网络服务。这通常意味着提供网页，但也可以提供其他文档，如图像、声音、视频，甚至是
    RHEL 的 ISO 文件。'
- en: The web server packaged on RHEL 7 is the Apache `httpd` service. This is the
    most common web server found on the Internet and developed by the Apache Software
    Foundation. RHEL has updated `httpd` to version 2.4, replacing the 2.2 release
    that has been in use in previous editions of RHEL.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在 RHEL 7 上打包的 Web 服务器是 Apache `httpd` 服务。这是互联网上最常见的 Web 服务器，由 Apache 软件基金会开发。RHEL
    已将 `httpd` 更新到 2.4 版本，取代了之前版本 RHEL 中使用的 2.2 版本。
- en: 'In this chapter we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Configuring the `httpd` service
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置 `httpd` 服务
- en: Controlling the `httpd` service
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 控制 `httpd` 服务
- en: Adding server modules
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加服务器模块
- en: Using virtual hosts
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用虚拟主机
- en: Configuring the httpd service
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 `httpd` 服务
- en: The Apache `httpd` web server can serve pages to clients on the Internet or
    locally on our internal intranet, so don't feel that you will have to necessarily
    ramp up security if you are deploying a web server. Of course, if the website
    is to be facing the Internet, additional security and isolation of this service
    may be required. However, we are working in a lab environment and will focus more
    on the configuration of the web server.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Apache `httpd` Web 服务器可以将页面提供给互联网上的客户端或我们内部局域网中的客户端，因此不要觉得部署 Web 服务器时一定需要加强安全性。当然，如果网站面向互联网，可能需要额外的安全性和隔离服务。然而，我们正在实验室环境中工作，将更多关注
    Web 服务器的配置。
- en: Installing Apache 2.4
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Apache 2.4
- en: 'The required packages are unlikely to be installed by default, so we will need
    to at least add the `httpd` package. Additionally, you may like to add the documentation.
    Consider only adding the documentation to a development server; I would not recommend
    adding it to a production server. We will add both packages to a server as follows:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下可能没有安装所需的包，因此我们至少需要添加 `httpd` 包。此外，你可能还想添加文档。考虑仅在开发服务器上添加文档；我不建议在生产服务器上添加文档。我们将按以下方式将两个包添加到服务器：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Even at this stage, with so little effort added, we can start our service and
    browser to the web server using the following commands:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 即使在这个阶段，添加这么少的工作量，我们也可以通过以下命令启动服务并使用浏览器访问 Web 服务器：
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'If we have a graphic environment, we can use Firefox from our local system
    to browse the localhost. We will be rewarded with a welcome page similar to the
    following screenshot:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们有图形环境，可以从本地系统使用 Firefox 浏览器访问本地主机。我们将看到一个类似于以下截图的欢迎页面：
- en: '![Installing Apache 2.4](img/image00299.jpeg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![Installing Apache 2.4](img/image00299.jpeg)'
- en: Although I would like to think that my work here is done; somehow, I feel that
    you may just want a little more guidance.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我希望认为我的工作已经完成；但不知为何，我感觉你可能还需要一点额外的指导。
- en: The configuration
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置
- en: 'The configuration base for the `httpd` service on RHEL 7 is the `/etc/httpd`
    directory. With the `tree` command, we can effectively illustrate the configuration
    hierarchy or service. The single configuration required here is `httpd.conf`,
    but Red Hat is taking a much more modular approach and now includes many sub-configurations
    to the main file. The following screenshot from the output of the tree shows all
    files in place after the default installation:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在 RHEL 7 上，`httpd` 服务的配置基础是 `/etc/httpd` 目录。通过 `tree` 命令，我们可以有效地展示配置层次或服务。这里需要的唯一配置是
    `httpd.conf`，但是 Red Hat 采用了更加模块化的方法，现在包括许多子配置文件到主文件中。以下是 `tree` 输出的截图，显示了默认安装后所有文件的位置：
- en: '![The configuration](img/image00300.jpeg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![The configuration](img/image00300.jpeg)'
- en: Tip
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: If the preceding tree is not installed, it can be installed using `sudo yum
    install tree`.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果前述的 `tree` 没有安装，可以通过 `sudo yum install tree` 安装。
- en: 'The `tree` command has been run from the `/etc/httpd` directory. We can see
    the `/etc/httpd/conf/httpd.conf` file, which is the main configuration file. This
    includes other files from `/etc/httpd/conf.d` and `/etc/httpd/conf.modules.d`.
    Also, there are three symbolically linked directories:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经从`/etc/httpd`目录运行了`tree`命令。我们可以看到`/etc/httpd/conf/httpd.conf`文件，这是主配置文件。它包括来自`/etc/httpd/conf.d`和`/etc/httpd/conf.modules.d`的其他文件。此外，还有三个符号链接的目录：
- en: '`logs`'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`logs`'
- en: '`modules`'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`modules`'
- en: '`run`'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`run`'
- en: The content of a page that we see when we browse through a site comes from the
    configuration in `/etc/httpd/conf.d/welcome.conf`. When no actual website content
    exists, the default welcome page is generated.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在浏览网站时看到的页面内容来自于`/etc/httpd/conf.d/welcome.conf`中的配置。当没有实际网站内容时，会生成默认的欢迎页面。
- en: With the inclusion of the `userdir.conf` and `autoindex.conf` files, the separate
    modules configuration is very different from the `httpd` configuration on RHEL
    6, where these were all part of the main `httpd.conf` file.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 随着`userdir.conf`和`autoindex.conf`文件的引入，独立模块配置与 RHEL 6 中的`httpd`配置有很大不同，后者将这些文件都包含在主`httpd.conf`文件中。
- en: 'We have already mentioned that the configuration root of the web server is
    the `/etc/httpd` directory. The configuration for this is in the `/etc/httpd/conf/httpd.conf`
    file. Some of the key directives from this file are as follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经提到过，Web 服务器的配置根目录是`/etc/httpd`目录。相关配置文件位于`/etc/httpd/conf/httpd.conf`中。该文件中的一些关键指令如下：
- en: '`ServerRoot`: `/etc/httpd`'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ServerRoot`：`/etc/httpd`'
- en: '`DocumentRoot`: `/var/www/html`'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DocumentRoot`：`/var/www/html`'
- en: '`DirectoryIndex`: `index.html`'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DirectoryIndex`：`index.html`'
- en: 'The `ServerRoot` directive, as we have seen is where we can locate configurations,
    logs, and modules for the web server. The `DocumentRoot` directive represents
    where the web content can be found, whereas the `DirectoryIndex` HTML page is
    the default page or pages to search for. Using `echo`, we can simply create our
    own content as follows. We run the following command as root and create a very
    basic welcome page:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`ServerRoot`指令，正如我们所看到的，它是我们可以找到 Web 服务器配置、日志和模块的位置。`DocumentRoot`指令表示可以找到
    Web 内容的位置，而`DirectoryIndex` HTML 页面是默认的查找页面。通过使用`echo`，我们可以简单地创建我们自己的内容，如下所示。我们以
    root 用户身份运行以下命令，创建一个非常基础的欢迎页面：'
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The use of single quotes allow tags to be passed as literals.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 使用单引号允许将标签作为字面值传递。
- en: 'We can view a page directly; as we have not changed any configuration, there
    is no need to reload a service. The page should now appear similar to the following
    screenshot:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以直接查看页面；由于我们没有更改任何配置，因此无需重新加载服务。此时页面应类似于以下截图所示：
- en: '![The configuration](img/image00301.jpeg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![配置](img/image00301.jpeg)'
- en: 'We can access this site locally or remotely using the hostname or IP address.
    We can access the same page using `http://192.168.0.69`, (or which ever IP Address
    is assigned to your host interface). To access a page remotely, the firewall will
    need to include `http` and `https` in its `firewalld` rules:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过主机名或 IP 地址在本地或远程访问此站点。我们可以使用`http://192.168.0.69`（或分配给主机接口的任何 IP 地址）访问相同的页面。要远程访问页面，防火墙需要在其`firewalld`规则中包括`http`和`https`：
- en: 'In the following code, we open the HTTP port of port `80` and the HTTPS port
    of `443`. These are protocols and default ports used to access web servers:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下代码中，我们打开了`80`端口的 HTTP 端口和`443`端口的 HTTPS 端口。这些是用于访问 Web 服务器的协议和默认端口：
- en: '[PRE3]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: As an administrator of the web server, we are not necessarily going to be the
    developer on the web content, but we can show that the web server is working with
    the configuration.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 作为 Web 服务器的管理员，我们不一定是网站内容的开发者，但我们可以证明 Web 服务器在配置后正常工作。
- en: Configuring the DocumentRoot directory
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置 `DocumentRoot` 目录
- en: 'The `DocumentRoot` directory should be readable by the `httpd` service. The
    account used by a service is listed in the `httpd.conf`. Default accounts that
    are used with corresponding directives are shown in the following commands:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`DocumentRoot`目录应该对`httpd`服务可读。服务使用的帐户列在`httpd.conf`中。与相应指令一起使用的默认帐户如下所示：'
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In an ideal world, the permissions on the `/var/www/html` directory would be
    `2750` in an octal notation or `rwx r_s _` in a symbolic notation. Setting up
    a group special bit on a directory ensures that all new content in a directory
    will be owned by the group owner of the directory. In this way, we do not have
    to grant any permission to others; as long as the directory is owned by the `apache`
    group, files will be accessible to that group.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在理想情况下，`/var/www/html`目录的权限应为八进制表示的`2750`或符号表示的`rwx r_s _`。为目录设置组特殊位确保该目录中新创建的所有内容将由目录的组所有者拥有。通过这种方式，我们无需授予其他用户任何权限；只要目录归`apache`组所有，文件就会对该组可访问。
- en: 'Firstly, we will set up the group ownership for this directory. We will use
    the `-R` option as we have already created the `index` page after this directory,
    as shown in the following command:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将为这个目录设置组所有权。由于我们已经在该目录之后创建了`index`页面，因此我们将使用`-R`选项，如以下命令所示：
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now, we will set up the group special bit on the directory; this ensures all
    new files and directories created in this structure will be owned by the `apache`
    group:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将为该目录设置组特殊位；这确保了在该结构中创建的所有新文件和目录都将归`apache`组所有：
- en: '[PRE6]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Finally, we will remove permissions granted to others, helping secure the content
    as follows:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将移除授予其他用户的权限，从而帮助保护内容，具体如下：
- en: '[PRE7]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Although this is not entirely necessary, configuring this at the outset can
    save work later when perhaps better security is required. With the `httpd.conf`,
    we also have a directory block that configures the access and options for the
    `DocumentRoot`. The following screenshot shows the directory block associated
    with the `DocumentRoot` directory:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这并非绝对必要，但在一开始配置这个选项可以为以后可能需要更高安全性的情况节省工作。在`httpd.conf`中，我们还有一个目录块，用来配置`DocumentRoot`的访问和选项。以下截图显示了与`DocumentRoot`目录相关的目录块：
- en: '![Configuring the DocumentRoot directory](img/image00302.jpeg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![配置DocumentRoot目录](img/image00302.jpeg)'
- en: 'The `Directory` block appears similar to an XML-based data. This uses an opening
    tag and sets the target directory therein. This block is closed with the `</Directory>`
    tag:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '`Directory`块类似于基于XML的数据。它使用一个开始标签并在其中设置目标目录。该块以`</Directory>`标签结束：'
- en: '[PRE8]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The `Indexes` option allows the creation of an index page. This option lists
    the contents of a directory if the name of a page is not included in the URL accessed
    by a client and no `index.html` exists. This is perhaps great for a downloads
    directory, alleviating the need for you to create a page linking it to all the
    available downloads; however, at `DocumentRoot`, we probably do not want this
    setting because it may pose a security risk.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '`Indexes`选项允许创建索引页面。如果客户端访问的URL中没有包含页面名称，并且没有`index.html`，该选项会列出目录的内容。这对下载目录可能非常有用，避免了你需要创建一个页面来链接所有可用的下载内容；然而，在`DocumentRoot`中，我们可能不希望启用这个设置，因为它可能会带来安全风险。'
- en: The `FollowSymLinks` option is probably self-explanatory, which allows you to
    follow the path of symbolic links. Symbolic links are pointers to other files
    and directories in a filesystem.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`FollowSymLinks`选项可能不言自明，它允许你跟踪符号链接的路径。符号链接是指向文件系统中其他文件和目录的指针。'
- en: 'The `AllowOverride` directive specifies settings that can be used from the
    user control `.htaccess` file. It may be the case with virtual hosts that the
    administrator does not have access to the web server''s configuration file because
    they are just renting space on the web server. They can effect configurations
    by uploading an `.htaccess` file to the root of the directory to which the `Directory`
    block pertains. As the main server administrator, you can control the settings
    that can be read; here, we allow no settings to be read even if the `.htaccess`
    file is present:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '`AllowOverride`指令指定可以通过用户控制的`.htaccess`文件使用的设置。对于虚拟主机来说，管理员可能无法访问Web服务器的配置文件，因为他们只是租用服务器空间。他们可以通过将`.htaccess`文件上传到与`Directory`块相关的目录根目录来实现配置。作为主服务器管理员，你可以控制可以读取的设置；在这里，我们不允许即使`.htaccess`文件存在也读取任何设置：'
- en: '[PRE9]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The final setting here is new to Apache 2.4 and replaces the `Allow from /
    Deny from` directive in Apache 2.2 and earlier versions:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的最终设置是Apache 2.4中的新功能，它取代了Apache 2.2及更早版本中的`Allow from / Deny from`指令：
- en: '[PRE10]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The default setting is equivalent to the `Allow from all` setting in Apache
    2.2.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 默认设置相当于Apache 2.2中的`Allow from all`设置。
- en: 'If required, you can adjust the host access with a configuration similar to
    the following commands:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要，你可以使用类似于以下命令的配置来调整主机访问：
- en: '[PRE11]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The preceding access control will only allow access to the localhost and the
    `192.168.0` network to the associated `Directory` block.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的访问控制只允许 localhost 和 `192.168.0` 网络访问相关的 `Directory` 块。
- en: 'We will change the configuration setting by editing the `/etc/httpd/conf/httpd.conf`
    file. Once we locate the correct `Directory` block for `/var/www/html`, we will
    remove the `Index` option and leave it as follows:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过编辑 `/etc/httpd/conf/httpd.conf` 文件来更改配置设置。一旦我们找到 `/var/www/html` 的正确 `Directory`
    块，就可以移除 `Index` 选项并将其保留如下：
- en: '[PRE12]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: These changes should be saved, but we need to look at how we can check our settings
    before attempting to restart the server.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这些更改应该被保存，但我们需要查看在尝试重启服务器之前，如何检查我们的设置。
- en: Controlling the Apache web service
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 控制 Apache 网络服务
- en: 'When we are ready to test the changes made, we can perform a pre-flight check
    with the following command:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们准备好测试所做的更改时，可以使用以下命令进行预飞行检查：
- en: '[PRE13]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'You may receive an error message reporting that the hostname could not be resolved.
    This is a warning and is okay for the moment. The warning is shown in the following
    screenshot:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会收到一个错误信息，报告无法解析主机名。这是一个警告，目前没有问题。警告信息如下截图所示：
- en: '![Controlling the Apache web service](img/image00303.jpeg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![Controlling the Apache web service](img/image00303.jpeg)'
- en: 'The `Syntax Ok` message at the end is what we want to see; with this, we know
    that we can restart the web server. Issuing a `reload` command to the service
    will force a graceful restart; wait for the active connections to complete before
    the restart is initiated:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 末尾的 `Syntax Ok` 消息是我们希望看到的；有了这个信息，我们就知道可以重启 web 服务器了。向服务发出 `reload` 命令将强制进行优雅重启；在启动重启之前，等待活跃连接完成：
- en: '[PRE14]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The effect of the change is limited because we have allowed the local network
    access and the localhost. Removing the `indexes` option has no effect while the
    `index.html` page is present. If we remove the `index.html` page, we will receive
    access forbidden messages because the system will not generate the page. This
    is important to set because it removes the ability of hackers to be able to retrieve
    directory listings of our web server.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 更改的影响是有限的，因为我们已经允许了本地网络和本地主机的访问。移除 `indexes` 选项没有效果，前提是 `index.html` 页面存在。如果我们移除
    `index.html` 页面，将会收到访问被禁止的消息，因为系统将无法生成该页面。这一点很重要，因为它阻止了黑客能够获取我们网站服务器的目录列表。
- en: Setting up the server name
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置服务器名称
- en: 'We also need to tidy up the warning about our server''s name. This is controlled
    using the `ServerName` directive in the `httpd.conf`. Adding the `ServerName`
    directive at the top of the file will resolve the issue:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要整理一下关于服务器名称的警告。这个问题是通过在 `httpd.conf` 文件中使用 `ServerName` 指令来控制的。在文件的顶部添加
    `ServerName` 指令将解决该问题：
- en: '[PRE15]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'To completely restart the service, we will use the following command:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 要完全重启服务，我们将使用以下命令：
- en: '[PRE16]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Setting up a custom error page
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置自定义错误页面
- en: If we try to access a page on the server that does not exist, the viewer will
    get a standard `page not found` message. We can make the process a little more
    controlled and user-friendly by adding our own custom pages.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们尝试访问服务器上不存在的页面，浏览器将显示一个标准的 `页面未找到` 信息。我们可以通过添加自己的自定义页面来让这个过程更加可控和用户友好。
- en: 'Within the global section of the `httpd.conf`, we can add the following directive
    to handle the `404 Page Not Found` message. This global section can affect all
    directory blocks, but we can add the following directive just to a single directory
    block if required. Adding the code document for a 404 error will just affect that
    particular error, but we can add other codes as and when required:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `httpd.conf` 的全局部分，我们可以添加以下指令来处理 `404 页面未找到` 错误。这个全局部分可以影响所有的目录块，但如果需要，我们也可以仅对单个目录块添加该指令。为
    404 错误添加代码只会影响该特定错误，但我们也可以根据需要添加其他代码：
- en: '[PRE17]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'We can reload the server using the following command:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用以下命令重新加载服务器：
- en: '[PRE18]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Now, when an incorrect page is accessed, the viewer will be shown the custom
    error page we have created: `404.html`. This page should be created in the `DocumentRoot`
    because we have used the `/404.html` syntax. If we have many custom pages, we
    will most likely create an `error` directory in `DocumentRoot` and then reference
    the page as `/error/404.html`.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当访问错误的页面时，观看者将会看到我们创建的自定义错误页面：`404.html`。此页面应创建在`DocumentRoot`中，因为我们使用了`/404.html`语法。如果我们有许多自定义页面，我们很可能会在`DocumentRoot`中创建一个`error`目录，然后将页面引用为`/error/404.html`。
- en: Loading modules
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加载模块
- en: Red Hat has moved away from loading modules in the standard `httpd.conf` file.
    In the previous release of Red Hat (version 6), the configuration file would have
    been littered with many `LoadModule` directives.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: Red Hat已经摆脱了在标准的`httpd.conf`文件中加载模块的方式。在之前的Red Hat版本（版本6）中，配置文件可能会被许多`LoadModule`指令所填满。
- en: These modules are now loaded via the configuration files in `/etc/httpd/conf.modules.d/`.
    In this way, the main configuration file is less cluttered and it's easier to
    drop additional configuration files as and when required.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这些模块现在通过配置文件在`/etc/httpd/conf.modules.d/`中加载。这样，主配置文件变得不那么混乱，可以根据需要轻松添加额外的配置文件。
- en: 'To view the currently loaded modules from Command Prompt, use the following
    command:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看从命令提示符中当前加载的模块，请使用以下命令：
- en: '[PRE19]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'We can see that we have many modules loaded. We can pipe the output to the
    `wc` command to count the lines. Using the RHEL 7.1 demonstration system, the
    output is `82`:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到我们加载了许多模块。我们可以将输出导入`wc`命令来计算行数。使用RHEL 7.1演示系统，输出为`82`：
- en: '[PRE20]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'With the original output, we should be able to see that the `userdir_module`
    is loaded. If we do not need to support user home directories on the web server,
    we do not need this module. To load this module, the `LoadModule` directive referencing
    this Apache module is set in the `/etc/httpd/conf.modules.d/00-base.conf` file.
    To ensure that it is not loaded on future restarts of the web server, comment
    the line that reads as follows:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 通过原始输出，我们应该能够看到`userdir_module`已加载。如果我们不需要在Web服务器上支持用户主目录，我们就不需要这个模块。要加载此模块，将引用此Apache模块的`LoadModule`指令设置在`/etc/httpd/conf.modules.d/00-base.conf`文件中。为确保在将来重新启动Web服务器时不加载它，请注释掉如下行：
- en: '[PRE21]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: With the line now commented, you will need to restart the web server, but when
    you check the loaded modules, you should be able to verify that the `userdir_module`
    is not loaded.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在注释掉该行后，您需要重新启动Web服务器，但在检查加载的模块时，应能够验证`userdir_module`未加载。
- en: Virtual servers
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 虚拟服务器
- en: 'Apache has the capability to support multiple sites from the same server instance.
    This gives great flexibility, and at the same time, ease of management. This flexibility
    is known as virtual hosting. There are three basic ways of running virtual hosting
    with Apache:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: Apache有能力从同一服务器实例支持多个站点。这提供了很大的灵活性，同时也便于管理。这种灵活性称为虚拟主机。在Apache中有三种基本的虚拟主机运行方式：
- en: '| **Name-based** | This uses different names for each site and a common IP
    address, probably the most popular form of virtual hosting |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| **基于名称** | 这为每个站点使用不同的名称和一个公共IP地址，可能是最流行的虚拟主机形式之一 |'
- en: '| **IP-based** | This uses a different IP address for each site |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| **基于IP** | 这使用不同的IP地址为每个站点服务 |'
- en: '| **Port-based** | This uses individual port numbers for each site |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| **基于端口** | 这使用各自的端口号为每个站点服务 |'
- en: We will look at all three of the methods and configurations within the `httpd.conf`
    required to implement each method.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将查看实施每种方法所需的所有三种方法和`httpd.conf`中的配置。
- en: Name-based
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于名称
- en: 'Name-based virtual hosting has been made possible with the introduction of
    HTTP protocol version 1.1, also known as HTTP/1.1\. When a browser is only capable
    of HTTP/1.0, a protocol tries to load a web page; it goes through the following
    steps:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 基于名称的虚拟主机是通过引入HTTP协议版本1.1（也称为HTTP/1.1）变得可能的。当浏览器只能支持HTTP/1.0时，协议尝试加载网页，经历以下步骤：
- en: Resolves `theurbanpinguin.org` hostname to an IP address.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`theurbanpinguin.org`主机名解析为一个IP地址。
- en: Connects to the resolved IP address over TCP protocol and port `80`.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过TCP协议和端口`80`连接到解析后的IP地址。
- en: Requests `/index.html` page.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请求`/index.html`页面。
- en: Therefore, only one website (defined by its domain name) can be hosted at any
    given IP address. If you direct another domain name—such as `theboldeagle.net`—to
    the same IP address, a user navigating to a URL will see exactly the same as the
    user navigating to URL because the web server cannot distinguish between these
    two requests.
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 因此，在任何给定的 IP 地址上，只能托管一个网站（由其域名定义）。如果将另一个域名—例如 `theboldeagle.net`—指向同一个 IP 地址，那么用户访问
    URL 时将看到与访问另一个 URL 完全相同的内容，因为 Web 服务器无法区分这两个请求。
- en: 'When the HTTP/1.1 protocol and the HTTP/1.1 capable browser sends a domain
    name to the web server along with the document path, this is how the next step
    (step 3) looks:'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当 HTTP/1.1 协议和支持 HTTP/1.1 的浏览器将域名和文档路径发送给 Web 服务器时，下一步（第 3 步）如下所示：
- en: Request `/index.html` page from `theurbanpinguin.org` server.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 `theurbanpinguin.org` 服务器请求 `/index.html` 页面。
- en: It's now possible to host two or more different sites on the same IP address
    because the web server can distinguish between different domain names, as domain
    names now form a part of the HTTP request.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 现在可以在同一个 IP 地址上托管两个或更多不同的网站，因为 Web 服务器可以区分不同的域名，因为域名现在是 HTTP 请求的一部分。
- en: All contemporary web browsers support HTTP/1.1\. There are two aspects to name-based
    virtual hosting, which we will now look at.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 所有现代 Web 浏览器都支持 HTTP/1.1。基于名称的虚拟主机有两个方面，我们现在来看看。
- en: The name resolution
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 域名解析
- en: All the names for a site need to be mapped to the same IP address either via
    DNS or a localhost file. If any of the names are used in the system, the returned
    IP address will always be the same. The redirection of the incoming request to
    the correct location in the filesystem is handled by the `httpd` service and the
    incoming `http` header.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 网站的所有名称需要通过 DNS 或本地主机文件映射到同一个 IP 地址。如果系统中使用了其中任何一个名称，返回的 IP 地址将始终相同。请求被重定向到文件系统中的正确位置，由
    `httpd` 服务和传入的 `http` 头处理。
- en: The Apache configuration
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Apache 配置
- en: 'The key to name-based virtual hosting lies in the `httpd.conf` file in a block
    directive:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 基于名称的虚拟主机的关键在于 `httpd.conf` 文件中的配置块指令：
- en: '[PRE22]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Almost any Apache entry is valid here including the `ErrorDocument` directive
    that we saw earlier. We have included the most typical entries in the following
    example:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎所有 Apache 条目都可以在这里使用，包括我们之前看到的 `ErrorDocument` 指令。我们在下面的示例中包含了最典型的条目：
- en: '[PRE23]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Using the preceding example, we will be directed to the web pages in `/var/www/packt/html`,
    if we use the URL of [https://www.packtpub.com/](https://www.packtpub.com/) while
    accessing the server's IP address.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 使用前面的示例，如果我们在访问服务器的 IP 地址时使用 [https://www.packtpub.com/](https://www.packtpub.com/)
    的 URL，我们将被定向到 `/var/www/packt/html` 中的网页。
- en: 'In order for Apache to find the correct entries for virtual hosts, we must
    tell it which IP address they are aliases for. However, it''s not enough to define
    a virtual host using the previous block because Apache does not allow name-based
    virtual hosting by default. To make name-based virtual hosts work, this is done
    using the `NameVirtualHost` directive, which needs to be included in the `httpd.conf`
    file. This directive must be in the main server section:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让 Apache 找到正确的虚拟主机条目，我们必须告诉它这些虚拟主机对应的 IP 地址。不过，仅仅使用之前的配置块定义虚拟主机是不够的，因为 Apache
    默认不允许基于名称的虚拟主机。为了让基于名称的虚拟主机工作，我们需要使用 `NameVirtualHost` 指令，并将其包含在 `httpd.conf`
    文件中。该指令必须位于主服务器部分：
- en: '[PRE24]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: IP-based
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于 IP
- en: 'The IP addresses used must be bound to the main RHEL server. Within the Apache
    `httpd.conf`, we again use the `VirtualHost` block, but we do not need to set
    the `NameVirtualHost` directive. Instead of specifying `*:80` as IP and port selectors
    of `VirtualHost` block, we will use a real IP address that the Apache server listens
    to, that is, IP address assigned to one of the interfaces of the machine that
    the Apache server is running on. The following commands show a possible configuration
    we can add to the main `httpd.conf`:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 使用的 IP 地址必须绑定到主 RHEL 服务器上。在 Apache 的 `httpd.conf` 中，我们再次使用 `VirtualHost` 配置块，但不需要设置
    `NameVirtualHost` 指令。我们将不再使用 `*:80` 作为 `VirtualHost` 配置块的 IP 和端口选择符，而是使用 Apache
    服务器监听的真实 IP 地址，即分配给 Apache 服务器所在机器某个接口的 IP 地址。以下命令显示了可以添加到主 `httpd.conf` 文件中的可能配置：
- en: '[PRE25]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Apache listens for incoming connections on all interfaces of the machine by
    default, so it should be enough just to specify an IP address of one of the interfaces
    in the `<VirtualHost>` opening directive. However, to be doubly sure that Apache
    listens to the right interface, the following command should be included in the
    main section of the `httpd.conf` file.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Apache会监听机器上所有接口的传入连接，因此只需要在`<VirtualHost>`开头指令中指定一个接口的IP地址就足够了。然而，为了确保Apache监听到正确的接口，应该在`httpd.conf`文件的主配置部分中包含以下命令：
- en: '[PRE26]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Using the previous example, when we access the host with the IP address `192.168.0.221`,
    we will be redirected to web pages in `/var/www/example/html`.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 使用前面的示例，当我们通过IP地址`192.168.0.221`访问主机时，会被重定向到`/var/www/example/html`中的网页。
- en: Port-based
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于端口
- en: 'There is only one aspect to port-based virtual hosting: the Apache configuration
    with the main `httpd.conf`. An example is as follows:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 端口基础的虚拟主机仅涉及一个方面：使用主配置文件`httpd.conf`进行的Apache配置。以下是一个示例：
- en: '[PRE27]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Using the previous example, when we access the port `7070` on the Apache host
    with the IP address of `192.168.0.220`, we will be redirected to web pages in
    `/var/www/example/html`.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 使用前面的示例，当我们通过IP地址为`192.168.0.220`的Apache主机访问端口`7070`时，会被重定向到`/var/www/example/html`中的网页。
- en: Within all `VirtualHost` blocks, we can expect a `Directory` block in addition
    to the code we have shown so far. In this way, options and access control lists
    can be correctly set for each virtual host.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有`VirtualHost`块中，除了我们迄今为止展示的代码之外，还可以预期会有一个`Directory`块。通过这种方式，可以为每个虚拟主机正确设置选项和访问控制列表。
- en: Automating virtual hosts
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动化虚拟主机
- en: 'If we create a template file for a virtual host, we can easily drop new virtual
    hosts using a script. First, we need a template file that is similar to the following
    commands:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们为虚拟主机创建一个模板文件，就可以通过脚本轻松地添加新的虚拟主机。首先，我们需要一个类似以下命令的模板文件：
- en: '[PRE28]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'If this file is saved as `/etc/httpd/conf.d/template`, it will not be used
    as a configuration as it does not end in `.conf`. We can use it as a template
    with a script similar to the following commands:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 如果该文件保存为`/etc/httpd/conf.d/template`，由于文件名未以`.conf`结尾，它将不会被用作配置文件。我们可以使用它作为模板，并通过类似以下命令的脚本来使用它：
- en: '[PRE29]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'If the script is called `/root/vhost.sh`, we can run it as follows:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 如果脚本名为`/root/vhost.sh`，我们可以通过以下方式运行它：
- en: '[PRE30]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: The preceding script will create a new configuration and replace `dummy-host.example.com`
    with `www.example.com`.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的脚本将创建一个新的配置，并将`dummy-host.example.com`替换为`www.example.com`。
- en: Summary
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter introduced you to the Apache HTTPD service that runs on RHEL 7.1\.
    We looked at the `ServerRoot` being `/etc/httpd` and the `DocumentRoot` being
    `/var/www/html`. With the basics in place, you learned how to configure a server
    with custom error pages and virtual hosts.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了在RHEL 7.1上运行的Apache HTTPD服务。我们查看了`ServerRoot`为`/etc/httpd`，`DocumentRoot`为`/var/www/html`。在掌握基础知识后，你学会了如何配置一个带有自定义错误页面和虚拟主机的服务器。
- en: In the next chapter, we will look at SELinux in detail and try to leave you
    with the idea that you can implement SELinux without affecting your service delivery
    in a negative way. In fact, the word negative is far from the truth. SELinux will
    deliver you a secure and robust platform so that you can deploy public-facing
    services without any fear of compromise, adding **Mandatory Access Controls**
    (**MAC**) to the existing, but weaker **DAC** (**Discretionary Access Controls**).
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将详细介绍SELinux，并试图让你明白，使用SELinux时，不会对服务交付产生负面影响。实际上，“负面”这个词完全不准确。SELinux将为你提供一个安全而稳健的平台，让你可以无惧安全威胁地部署面向公众的服务，并为现有的、较弱的**DAC**（**Discretionary
    Access Controls**）添加**强制访问控制**（**MAC**）。
