- en: Deploying KVM Instances with OpenStack
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 OpenStack 部署 KVM 实例
- en: 'In this chapter, we are going to cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Preparing the host for the OpenStack deployment
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为 OpenStack 部署准备主机
- en: Installing and configuring the OpenStack Keystone identity service
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装和配置 OpenStack Keystone 身份认证服务
- en: Installing and configuring the OpenStack Glance image service
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装和配置 OpenStack Glance 镜像服务
- en: Installing and configuring the OpenStack Nova compute service
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装和配置 OpenStack Nova 计算服务
- en: Installing and configuring the OpenStack Neutron networking service
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装和配置 OpenStack Neutron 网络服务
- en: Building and inspecting KVM instances with OpenStack
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 OpenStack 构建和检查 KVM 实例
- en: Stopping KVM instances with OpenStack
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 停止 OpenStack 中的 KVM 实例
- en: Terminating KVM instances with OpenStack
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 终止 OpenStack 中的 KVM 实例
- en: Introduction
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: OpenStack is a cloud operating system that simplifies the deployment and management
    of virtual machines or containers in a scalable and highly available way. It operates
    on pools of compute resources (physical or virtual servers) and provides an intelligent
    scheduling mechanism to select appropriate hosts, and to build or migrate VMs.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: OpenStack 是一个云操作系统，它简化了虚拟机或容器的部署和管理，以可扩展且高可用的方式进行操作。它在计算资源池（物理或虚拟服务器）上运行，并提供智能调度机制，选择合适的主机来构建或迁移虚拟机。
- en: OpenStack allows an easier management of virtual images and provides a centralized
    way of creating and managing software-defined networks. It integrates well with
    a variety of external and internal projects in order to deliver user and service
    authentication. OpenStack modular design allows adding and removing services as
    needed where a minimal production deployment may consist of as few as two projects
    an image and compute service.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: OpenStack 允许更轻松地管理虚拟镜像，并提供集中式的创建和管理软件定义网络的方式。它与各种外部和内部项目集成，以提供用户和服务认证。OpenStack
    的模块化设计允许根据需要添加和移除服务，在最小化的生产环境部署中，可能仅由两个项目（镜像服务和计算服务）组成。
- en: 'The following diagram shows the ever-growing list of OpenStack projects and
    the interaction between them:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表显示了不断增长的 OpenStack 项目列表及其之间的相互作用：
- en: '![](img/00012.jpeg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00012.jpeg)'
- en: The OpenStack components and how they interact with each other
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: OpenStack 组件及其相互作用
- en: In this chapter, we are going to create a simple OpenStack deployment on two
    compute nodes using the Keystone, Glance, Nova, and Neutron projects from the
    Newton release of OpenStack, on an Ubuntu Xenial 16.04 server.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用 OpenStack Newton 版本中的 Keystone、Glance、Nova 和 Neutron 项目，在 Ubuntu
    Xenial 16.04 服务器上创建一个简单的 OpenStack 部署，使用两台计算节点。
- en: For more information on the OpenStack project, please visit [https://www.openstack.org/software/](https://www.openstack.org/software/).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 获取有关 OpenStack 项目的更多信息，请访问 [https://www.openstack.org/software/](https://www.openstack.org/software/)。
- en: Preparing the host for the OpenStack deployment
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为 OpenStack 部署准备主机
- en: In this recipe, we are going to install the infrastructure components that OpenStack
    depends on, such as the database server, the message queue, and the caching service.
    The projects that we are going to use throughout this chapter depend on these services
    for communication and persistent storage.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在本指南中，我们将安装 OpenStack 所依赖的基础设施组件，如数据库服务器、消息队列和缓存服务。我们将在本章中使用的项目依赖这些服务进行通信和持久化存储。
- en: Getting ready
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'For this recipe, we are going to need the following components:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 本指南中，我们将需要以下组件：
- en: An Ubuntu server with great virtualization capabilities
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一台具有强大虚拟化能力的 Ubuntu 服务器
- en: Access to the internet for package installation
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要访问互联网以安装软件包
- en: How to do it...
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作…
- en: In order to keep the deployment simple and focus on the provisioning aspect
    of OpenStack, we are going to use a single physical server to host all services.
    In production environments, it is a common approach to separate each service onto
    their own set of servers, for scalability and high availability. By following
    the steps outlined in this chapter, you should be able to deploy all services
    on multiple hosts, by replacing the IP addresses and hostnames in the configuration
    files, as needed.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简化部署并专注于 OpenStack 的配置方面，我们将使用一台物理服务器来托管所有服务。在生产环境中，通常会将每个服务分配到各自的服务器集群上，以实现可扩展性和高可用性。通过本章中概述的步骤，你应该能够在多台主机上部署所有服务，只需根据需要替换配置文件中的
    IP 地址和主机名。
- en: 'Update the host and install the package repository for the Newton release:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新主机并安装 Newton 版本的软件包仓库：
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Install the MariaDB database server:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 MariaDB 数据库服务器：
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Replace the IP address of the network interface the database server binds to,
    as per your host.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你的主机，替换数据库服务器绑定的网络接口的 IP 地址。
- en: 'Restart the service and secure the installation:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重启服务并确保安装安全：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: For simplicity, we are going to use `lxcpassword` as a password for all services
    throughout the chapter.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简便起见，我们将在本章中使用 `lxcpassword` 作为所有服务的密码。
- en: 'Install the RabbitMQ messaging service, create a new user, password, and set
    permissions:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 RabbitMQ 消息服务，创建一个新用户、密码并设置权限：
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Install and configure the `memcached` service:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装并配置 `memcached` 服务：
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: How it works...
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: OpenStack uses a SQL database, such as Mysql/MariaDB/Percona, to store information
    about its services. In the following recipes, we are going to create databases
    for the Keystone, Glance, Nova, and Neutron projects. We install and configure
    MariaDB in steps 1 through 3.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: OpenStack 使用 SQL 数据库，如 Mysql/MariaDB/Percona，来存储关于其服务的信息。在接下来的教程中，我们将为 Keystone、Glance、Nova
    和 Neutron 项目创建数据库。我们在第 1 到第 3 步安装和配置 MariaDB。
- en: The messaging queue we install and configure in step 4 provides a centralized
    way for the services to communicate with each other by producing and consuming
    messages. OpenStack supports a few different message bus implementations, such
    as RabbitMQ, Qpid, and ZeroMQ.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在第 4 步安装并配置的消息队列提供了一种集中方式，让各个服务通过生成和消费消息来相互通信。OpenStack 支持几种不同的消息总线实现，如 RabbitMQ、Qpid
    和 ZeroMQ。
- en: The identity service Keystone caches authentication tokens using the `memcached`
    daemon. We install and configure it in step 5.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 身份服务 Keystone 使用 `memcached` 守护进程缓存认证令牌。我们将在第 5 步安装并配置它。
- en: Installing and configuring the OpenStack Keystone identity service
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和配置 OpenStack Keystone 身份服务
- en: The identity service provided by the Keystone project is a centralized point
    in order to manage authentication and authorization, used by other OpenStack components,
    such as Nova compute and the image service Glance. Keystone also keeps a catalog
    of services and the endpoints they provide that the user can locate by sending
    queries to it.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Keystone 项目提供的身份服务是一个集中点，用于管理认证和授权，其他 OpenStack 组件，如 Nova 计算和镜像服务 Glance，都会使用它。Keystone
    还维护着一个服务目录，用户可以通过查询定位服务和它们提供的端点。
- en: In this recipe, we are going to install and configure Keystone, create two projects
    (a unit of ownership) for our services and assign users and roles to those projects.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们将安装并配置 Keystone，创建两个项目（服务的所有权单元），并将用户和角色分配给这些项目。
- en: Getting ready
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'For this recipe, we are going to need the following:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个教程，我们将需要以下内容：
- en: An Ubuntu Server with Great virtualization capabilities
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一台具有卓越虚拟化能力的 Ubuntu 服务器
- en: Access to the Internet for package installation
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问互联网以安装软件包
- en: A database server, a message queue, and `memcached` installed and configured,
    as described in the *Preparing the host for the OpenStack deployment* recipe
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如 *为 OpenStack 部署准备主机* 中所述，安装并配置数据库服务器、消息队列和 `memcached`。
- en: How to do it...
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'To install, configure, create new projects, user roles, and credentials, perform
    the following steps in the order presented here:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 为了安装、配置、创建新项目、用户角色和凭据，请按照这里提供的步骤顺序执行：
- en: 'Create the keystone database and grant permissions to the keystone user:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 keystone 数据库并授予 keystone 用户权限：
- en: '[PRE5]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Install the identity service Keystone from the repository we configured earlier:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从我们之前配置的仓库中安装身份服务 Keystone：
- en: '[PRE6]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Create the following minimal Keystone configuration:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建以下最小化的 Keystone 配置：
- en: '[PRE7]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Populate the Keystone database:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填充 Keystone 数据库：
- en: '[PRE8]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Initialize the Fernet key repositories:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 初始化 Fernet 密钥存储库：
- en: '[PRE9]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Bootstrap the Keystone service:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 Keystone 服务：
- en: '[PRE10]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Add the following stanza in Apache and restart the service:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Apache 中添加以下配置，并重启服务：
- en: '[PRE11]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Delete the default SQLite database that Keystone is packaged with:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除与 Keystone 一起打包的默认 SQLite 数据库：
- en: '[PRE12]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Create an administrative account by defining the following environment variables:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过定义以下环境变量来创建一个管理员帐户：
- en: '[PRE13]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Create a project in Keystone for the services to use and list it:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Keystone 中为服务创建一个项目并列出它：
- en: '[PRE14]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Create an unprivileged project and a user that will be used by regular clients instead
    of the OpenStack services:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个无特权的项目和一个用户，这个用户将被常规客户端使用，而不是 OpenStack 服务：
- en: '[PRE15]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Create a user role and associate it with the KVM project and user:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个用户角色并将其与 KVM 项目和用户关联：
- en: '[PRE16]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Configure the **Web Service Gateway Interface** (**WSGI**) middleware pipeline
    for Keystone:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置 **Web 服务网关接口** (**WSGI**) 中间件管道以供 Keystone 使用：
- en: '[PRE17]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Request a token for the admin and KVM users:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为管理员和 KVM 用户请求令牌：
- en: '[PRE18]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Create the files that will contain the admin and user credentials:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建包含管理员和用户凭证的文件：
- en: '[PRE19]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Source the admin credentials file:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 源代码管理员凭证文件：
- en: '[PRE20]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Request an authentication token for the admin user:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为管理员用户请求认证令牌：
- en: '[PRE21]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: How it works...
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: We start by creating the Keystone database in MariaDB with the necessary user
    permissions in step 1\. In step 2, we install the Keystone package.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先在步骤 1 中在 MariaDB 中创建 Keystone 数据库，并授予必要的用户权限。在步骤 2 中，我们安装 Keystone 包。
- en: In step 3, we create the configuration file for the service. As you can see
    from the output, most of the options have been omitted, and default ones are assumed.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤 3 中，我们为服务创建配置文件。正如从输出中看到的，大多数选项已被省略，假定使用默认值。
- en: In step 4, we run a script that populates the Keystone database by creating
    the database schema.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤 4 中，我们运行一个脚本，通过创建数据库架构来填充 Keystone 数据库。
- en: Keystone uses tokens to authenticate and authorize users and services. There
    are different token formats available for use, such as UUID, PKI, and Fernet tokens.
    For this deployment, we are going to use the Fernet tokens. The Fernet tokens
    do not need to be persisted in a backend store. In step 5, we initialize the Fernet
    key repository.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: Keystone 使用令牌来认证和授权用户及服务。可用的令牌格式包括 UUID、PKI 和 Fernet 令牌。对于本次部署，我们将使用 Fernet
    令牌。Fernet 令牌不需要在后端存储中持久化。在步骤 5 中，我们初始化 Fernet 密钥库。
- en: For more information on the available identity tokens, refer to [http://docs.openstack.org/admin-guide/identity-tokens.html](http://docs.openstack.org/admin-guide/identity-tokens.html).
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 有关可用身份令牌的更多信息，请参考 [http://docs.openstack.org/admin-guide/identity-tokens.html](http://docs.openstack.org/admin-guide/identity-tokens.html)。
- en: In step 6, we bootstrap Keystone and update the Apache configuration in step
    7 and perform some cleanup in step 8.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤 6 中，我们引导 Keystone，并在步骤 7 中更新 Apache 配置，在步骤 8 中进行一些清理。
- en: In step 9, we export a list of environment variables containing the Keystone
    user, password, and endpoint.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤 9 中，我们导出一个包含 Keystone 用户、密码和端点的环境变量列表。
- en: In step 10, we create our first project in Keystone that will be used by the
    rest of the services. Projects represent a unit of ownership, where all resources
    are owned by a project. In steps 11 and 12, we create an unprivileged project
    and associated user.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤 10 中，我们在 Keystone 中创建第一个项目，其他服务将使用该项目。项目代表所有权单元，其中所有资源都属于该项目。在步骤 11 和 12
    中，我们创建一个无特权的项目及相关用户。
- en: In step 13, we configure the WSGI middleware pipeline for Keystone.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤 13 中，我们为 Keystone 配置 WSGI 中间件管道。
- en: In step 14, we request and obtain tokens for the admin and KVM users, and in
    step 15, we create two environment variable files that we can source when we need
    to switch between users.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤 14 中，我们为管理员和 KVM 用户请求并获取令牌，在步骤 15 中，我们创建两个环境变量文件，以便在需要在用户之间切换时使用。
- en: In steps 16 and 17, we source the admin credentials and project endpoint and
    obtain an authorization token.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤 16 和 17 中，我们源管理员凭证和项目端点，并获得授权令牌。
- en: Installing and configuring the OpenStack Glance image service
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和配置 OpenStack Glance 镜像服务
- en: The Glance image service provides an API that we can use to discover, register,
    and obtain images for virtual machines. When we later use Nova compute to build
    a new KVM instance, the Nova service will send a request to Glance to obtain the
    requested image type.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: Glance 镜像服务提供一个 API，供我们用于发现、注册和获取虚拟机镜像。稍后当我们使用 Nova 计算来构建新的 KVM 实例时，Nova 服务会向
    Glance 发送请求以获取所需的镜像类型。
- en: In this recipe, we are going to install Glance and register a new Ubuntu image.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将安装 Glance 并注册一个新的 Ubuntu 镜像。
- en: Getting ready
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'For this recipe, we are going to need the following things:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本教程，我们将需要以下内容：
- en: An Ubuntu server with great virtualization capabilities
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配备优秀虚拟化能力的 Ubuntu 服务器
- en: Access to the internet for package installation
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有安装包的网络访问权限
- en: A database server, a message queue, and `memcached` installed and configured,
    as described in the *Preparing the host for the OpenStack deployment* recipe
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装和配置好的数据库服务器、消息队列和 `memcached`，如在 *为 OpenStack 部署准备主机* 教程中所述。
- en: The Keystone service we deployed in the *Installing and configuring the OpenStack
    Keystone identity service* recipe
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们在 *安装和配置 OpenStack Keystone 身份服务* 教程中部署的 Keystone 服务
- en: How to do it...
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'To install, configure, and register an image with Glance, follow the steps
    outlined here:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装、配置并在 Glance 注册图像，请按照以下步骤操作：
- en: 'Create the Glance database and user:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 Glance 数据库和用户：
- en: '[PRE22]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Create the Glance user and add it to the admin role:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 Glance 用户并将其添加到管理员角色：
- en: '[PRE23]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Create the Glance service definition:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 Glance 服务定义：
- en: '[PRE24]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Create the Glance API endpoints in Keystone:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Keystone 中创建 Glance API 端点：
- en: '[PRE25]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Install the Glance service:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 Glance 服务：
- en: '[PRE26]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Configure the service:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置服务：
- en: '[PRE27]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Populate the Glance database:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填充 Glance 数据库：
- en: '[PRE28]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Start the Glance service daemons:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 Glance 服务守护进程：
- en: '[PRE29]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Download a QCOW2 image for the Ubuntu distribution:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载 Ubuntu 发行版的 QCOW2 图像：
- en: '[PRE30]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Add the image to the Glance service:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将图像添加到 Glance 服务：
- en: '[PRE31]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'List the available images and their location on the filesystem:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列出可用图像及其在文件系统上的位置：
- en: '[PRE32]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: How it works...
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: We start by creating the Glance database in MariaDB in step 1.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先在第 1 步中在 MariaDB 中创建 Glance 数据库。
- en: In steps 2 and 3, we create the user, role, and service for the Glance project.
    In step 4, we define the Glance API service endpoints in Keystone. The Nova service
    and the OpenStack tool can use these endpoints to query Glance for available images.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在第 2 步和第 3 步中，我们为 Glance 项目创建用户、角色和服务。在第 4 步中，我们在 Keystone 中定义 Glance API 服务端点。Nova
    服务和 OpenStack 工具可以使用这些端点查询 Glance 可用的图像。
- en: In step 5, we install the Glance package and create a minimal configuration
    file in step 6.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在第 5 步中，我们安装 Glance 包，并在第 6 步中创建一个最小配置文件。
- en: We then create the database schemas in step 7, by executing the `glance-manage` Python script
    and restart the Glance service in step 8.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们在第 7 步中创建数据库模式，通过执行 `glance-manage` Python 脚本并在第 8 步中重启 Glance 服务。
- en: In step 9, we download a QCOW2 Ubuntu image and add it to the glance registry
    in step 10.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在第 9 步中，我们下载一个 QCOW2 Ubuntu 图像，并在第 10 步中将其添加到 Glance 注册表。
- en: Finally, in step 11, we list the newly added image and examine it on the host
    filesystem.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在步骤 11 中，我们列出新添加的图像并在主机文件系统上查看它。
- en: Installing and configuring the OpenStack Nova compute service
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和配置 OpenStack Nova 计算服务
- en: The OpenStack Compute service, code named Nova, manages a pool of compute resources
     and the virtual machines running on them. Nova is a suite of services to create
    and manage the lifecycle of virtual machines. We will use Nova to create, examine,
    stop, delete, and migrate KVM instances.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: OpenStack 计算服务，代号 Nova，管理计算资源池及其上运行的虚拟机。Nova 是一组服务，用于创建和管理虚拟机的生命周期。我们将使用 Nova
    创建、检查、停止、删除和迁移 KVM 实例。
- en: 'For more information on the various Nova services, refer to: [http://docs.openstack.org/developer/nova/](http://docs.openstack.org/developer/nova/).'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 获取有关各种 Nova 服务的更多信息，请参考：[http://docs.openstack.org/developer/nova/](http://docs.openstack.org/developer/nova/)。
- en: 'In this recipe, we are going to install and configure the following Nova components:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将安装和配置以下 Nova 组件：
- en: '`nova-api`: This is the service that accepts and responds to user requests
    through a RESTful API. We will use it when creating, running, stopping, and migrating
    KVM instances.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nova-api`：这是通过 RESTful API 接受并响应用户请求的服务。我们将在创建、运行、停止和迁移 KVM 实例时使用它。'
- en: '`nova-scheduler`: This is the service that makes decisions on where to provision
    instance, based on filters, such as available memory, disk, and CPU resources.'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nova-scheduler`：这是根据过滤器（如可用内存、磁盘和 CPU 资源）决定在哪里配置实例的服务。'
- en: '`nova-compute`: This is the service that runs on the compute hosts and is responsible
    for managing the lifecycle of the KVM instance, from provisioning to deletion.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nova-compute`：这是在计算主机上运行的服务，负责管理 KVM 实例的生命周期，从配置到删除。'
- en: '`nova-conductor`: This is the service that sits between the Nova database we
    created earlier and the `nova-compute` service.'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nova-conductor`：这是位于我们之前创建的 Nova 数据库和 `nova-compute` 服务之间的服务。'
- en: '`nova-consoleauth`: This is the service that authorizes tokens for users that
    want to use various consoles to connect to the virtual machines.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nova-consoleauth`：这是授权用户使用各种控制台连接虚拟机的服务。'
- en: '`nova-novncproxy`: This is the service that grants access to instances running
    VNC.'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nova-novncproxy`：这是提供访问运行 VNC 实例的服务。'
- en: Getting ready
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'For this recipe, we are going to need:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本教程，我们需要：
- en: An Ubuntu server with great virtualization capabilities
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一台具有强大虚拟化能力的 Ubuntu 服务器
- en: Access to the internet for package installation
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装软件包时需要访问互联网
- en: A database server, a message queue, and `memcached` installed and configured,
    as described in the *Preparing the host for the OpenStack deployment* recipe
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按照*为OpenStack部署准备主机*中的说明，安装并配置数据库服务器、消息队列和`memcached`。
- en: The Keystone service we deployed in the *Installing and configuring the OpenStack
    Keystone identity service* recipe
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们在*安装和配置OpenStack Keystone身份服务*中部署的Keystone服务。
- en: The Glance service we deployed in the *Installing and configuring the OpenStack
    Glance image service* recipe
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们在*安装和配置OpenStack Glance镜像服务*中部署的Glance服务。
- en: How to do it...
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'To install and configure the Nova services outlined earlier, perform the following
    steps:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装和配置之前提到的Nova服务，请执行以下步骤：
- en: 'Create the Nova database and user in MariaDB:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在MariaDB中创建Nova数据库和用户：
- en: '[PRE33]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Create the Nova user and add it to the admin role in the Identity service:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建Nova用户，并将其添加到身份服务中的管理员角色：
- en: '[PRE34]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Create the Nova service and endpoints:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建Nova服务和端点：
- en: '[PRE35]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Install the Nova packages that will provide the API, the conductor, the console,
    and the scheduler services:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装Nova软件包，它将提供API、指挥器、控制台和调度程序服务：
- en: '[PRE36]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Create the Nova configuration file:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建Nova配置文件：
- en: '[PRE37]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Create the database tables:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建数据库表：
- en: '[PRE38]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Start the Nova services:'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Nova服务：
- en: '[PRE39]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Install the `nova-compute` service, which will provision KVM instances:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装`nova-compute`服务，它将配置KVM实例：
- en: '[PRE40]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Update the Nova configuration file, as follows:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按如下方式更新Nova配置文件：
- en: '[PRE41]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Specify the virtualization driver to be used:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指定要使用的虚拟化驱动程序：
- en: '[PRE42]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Restart the `nova-compute` service and list the available services:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重启`nova-compute`服务并列出可用服务：
- en: '[PRE43]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: How it works...
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In steps 1 and 2, we create the Nova database and user in MariaDB. In step 3,
    we create the service and endpoints that we can use to send API calls to.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤1和2中，我们在MariaDB中创建了Nova数据库和用户。在步骤3中，我们创建了可以用来发送API调用的服务和端点。
- en: In steps 4 and 5, we install the packages for the Nova services and proceed
    to create a simple configuration file.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤4和5中，我们安装了Nova服务的软件包并创建了一个简单的配置文件。
- en: We create the database table schemas in step 6 and start the Nova services in
    step 7.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤6中，我们创建了数据库表模式，并在步骤7中启动了Nova服务。
- en: For this example deployment, we are using a single node to run all of the OpenStack
    services we are interested in. However, you can use a second node just for the
    `nova-compute` service that will provision the KVM virtual machines. We install
    the `nova-compute` service in step 8, update the configuration file, and examine
    the `nova-compute` service external configuration in steps 9 and 10.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个示例部署，我们使用单个节点来运行所有感兴趣的OpenStack服务。不过，您也可以使用第二个节点专门运行`nova-compute`服务来配置KVM虚拟机。在步骤8中，我们安装`nova-compute`服务，更新配置文件，并在步骤9和10中检查`nova-compute`服务的外部配置。
- en: We finish the recipe by making sure that all Nova services have been configured
    and running in step 11.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过确保所有Nova服务都已配置并在步骤11中运行来完成此任务。
- en: Installing and configuring the OpenStack Neutron networking service
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和配置OpenStack Neutron网络服务
- en: The OpenStack Neutron project provides networking as a service to manage the
    networking between virtual instances. It is responsible for setting up virtual
    interfaces, configuring a software bridge, creating routes, and managing IP addressing.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: OpenStack Neutron项目提供网络服务来管理虚拟实例之间的网络连接。它负责设置虚拟接口、配置软件桥接、创建路由和管理IP地址。
- en: For more information on the various Neutron services, refer to [https://docs.openstack.org/security-guide/networking/architecture.html](https://docs.openstack.org/security-guide/networking/architecture.html).
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 有关各种Neutron服务的更多信息，请参阅[https://docs.openstack.org/security-guide/networking/architecture.html](https://docs.openstack.org/security-guide/networking/architecture.html)。
- en: 'In this recipe, we are going to install and configure the following Neutron
    components:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们将安装和配置以下Neutron组件：
- en: '`neutron-server`: This is the service that provides API to dynamically request
    and configure virtual networks'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`neutron-server`：这是提供API的服务，用于动态请求和配置虚拟网络。'
- en: '`neutron-plugin-ml2`: This is the framework that enables the use of various
    network technologies, such as the Linux Bridge, Open vSwitch, GRE, and VXLAN,
    that we saw in earlier chapters'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`neutron-plugin-ml2`：这是一个框架，使得可以使用各种网络技术，例如我们在前面章节中看到的Linux Bridge、Open vSwitch、GRE和VXLAN。'
- en: '`neutron-linuxbridge-agent`: This is the service that provides the Linux bridge
    plugin agent'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`neutron-linuxbridge-agent`：这是提供Linux Bridge插件代理的服务。'
- en: '`neutron-l3-agent`: This is the daemon that performs forwarding and NAT functionality
    between software-defined networks, by creating virtual routers'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`neutron-l3-agent`：这是执行软件定义网络之间转发和 NAT 功能的守护进程，通过创建虚拟路由器实现。'
- en: '`neutron-dhcp-agent`: This is the service that controls the DHCP daemon, which
    assigns IP addresses to the instances running on the compute nodes'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`neutron-dhcp-agent`：此服务控制 DHCP 守护进程，负责为计算节点上运行的实例分配 IP 地址'
- en: '`neutron-metadata-agent`: This is the service that passes instance metadata
    to Neutron'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`neutron-metadata-agent`：此服务将实例元数据传递给 Neutron'
- en: In earlier recipes, we configured and used the Linux bridge and Open vSwitch
    manually and later delegated the management of the networking to libvirt. OpenStack
    Neutron integrates with libvirt and automates this process even further by exposing
    API calls that other services like Nova can utilize.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在早期的食谱中，我们手动配置并使用了 Linux 桥接和 Open vSwitch，之后将网络管理委托给了 libvirt。OpenStack Neutron
    与 libvirt 集成，并通过暴露 API 调用进一步自动化此过程，其他服务如 Nova 可利用这些 API。
- en: Getting ready
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'For this recipe, we are going to need:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此食谱，我们需要：
- en: An Ubuntu server with great virtualization capabilities
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一台具有强大虚拟化能力的 Ubuntu 服务器
- en: Access to the internet for package installation
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取互联网访问以进行软件包安装
- en: A database server, a message queue, and `memcached` installed and configured,
    as described in the *Preparing the host for the OpenStack deployment* recipe
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如*为 OpenStack 部署准备主机*食谱中所述，安装并配置了数据库服务器、消息队列和`memcached`：
- en: The Keystone service we deployed in the *Installing and configuring the OpenStack
    Keystone identity service* recipe
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们在*安装和配置 OpenStack Keystone 身份服务*食谱中部署的 Keystone 服务
- en: The Nova services we configured in the *Installing and configuring the OpenStack
    Nova compute service* recipe
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们在*安装和配置 OpenStack Nova 计算服务*食谱中配置的 Nova 服务
- en: How to do it...
  id: totrans-203
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To install, configure, and create a network managed by Neutron, execute the
    following steps:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装、配置并创建一个由 Neutron 管理的网络，请执行以下步骤：
- en: 'Create the Neutron database:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 Neutron 数据库：
- en: '[PRE44]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Create the Neutron user and add it to the admin role in Keystone:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 Neutron 用户并将其添加到 Keystone 中的管理员角色：
- en: '[PRE45]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Create the Neutron service and endpoints:'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 Neutron 服务和端点：
- en: '[PRE46]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Install the Neutron packages:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 Neutron 包：
- en: '[PRE47]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Create the Neutron configuration file:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 Neutron 配置文件：
- en: '[PRE48]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Define the network type and extensions that we are going to use with Neutron:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义我们将与 Neutron 一起使用的网络类型和扩展：
- en: '[PRE49]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Define the interface that will be added to the software bridge and the IP the
    bridge will be bound to, replacing the IP address and interface name (`eth1` in
    this example) as needed:'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义将添加到软件桥接器中的接口，以及桥接器将绑定的 IP 地址，根据需要替换 IP 地址和接口名称（此示例中为 `eth1`）：
- en: '[PRE50]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Configure the Layer 3 agent as follows:'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按如下方式配置 Layer 3 代理：
- en: '[PRE51]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Configure the DHCP agent:'
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置 DHCP 代理：
- en: '[PRE52]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Create a configuration for the metadata agent:'
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为元数据代理创建配置：
- en: '[PRE53]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Update the configuration file for the Nova services to include Neutron. A completely
    minimal working example follows to look as the following:'
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新 Nova 服务的配置文件，以包含 Neutron。以下是一个完全简化的工作示例：
- en: '[PRE54]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Populate the Neutron databases:'
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填充 Neutron 数据库：
- en: '[PRE55]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Restart all Neutron services and Nova:'
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重启所有 Neutron 服务和 Nova：
- en: '[PRE56]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Verify that the Neutron services have been registered:'
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证 Neutron 服务是否已注册：
- en: '[PRE57]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Create a new network:'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新网络：
- en: '[PRE58]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Define the DNS server, the default gateway, and the subnet range that will
    be assigned to the guests:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义 DNS 服务器、默认网关和将分配给客户机的子网范围：
- en: '[PRE59]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Update the subnet information in Neutron:'
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新 Neutron 中的子网信息：
- en: '[PRE60]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Create a new software router:'
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的软件路由器：
- en: '[PRE61]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'As the admin user, add the subnet we created earlier to the router as an interface:'
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作为管理员用户，将我们之前创建的子网添加为路由器的接口：
- en: '[PRE62]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'List the network namespaces that Neutron created:'
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列出 Neutron 创建的网络命名空间：
- en: '[PRE63]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'List the ports on the software router:'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列出软件路由器上的端口：
- en: '[PRE64]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'List the Neutron networks and ensure that the one we created earlier is present:'
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列出 Neutron 网络，并确保我们之前创建的网络已存在：
- en: '[PRE65]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: How it works...
  id: totrans-249
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: We start this recipe by creating a new database for Neutron in step 1\. We then
    proceed to create the user for the Neutron service  and add it to the admin role
    for the service. In steps 2 and 3, we define the service endpoints that will be
    exposed for Nova to use. In steps 4 and 5, we install the Neutron packages and
    create a basic configuration file. In step 6, we select the VXLAN type of networking
    for this example deployment. In steps 7, 8, 9, and 10, we configure the bridge
    agent, the layer 3 agent, the DHCP agent, and the metadata agent.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过在第 1 步中为 Neutron 创建一个新的数据库开始本教程。接着，我们创建 Neutron 服务的用户并将其添加到服务的管理员角色。在第 2
    步和第 3 步中，我们定义将供 Nova 使用的服务端点。在第 4 步和第 5 步中，我们安装 Neutron 软件包并创建一个基础配置文件。在第 6 步中，我们选择
    VXLAN 类型的网络用于本例部署。在第 7 步至第 10 步中，我们配置桥接代理、3 层代理、DHCP 代理和元数据代理。
- en: In step 11, we update the Nova configuration file to contain a section about
    the Neutron service. In step 12, we create the database schema and restart all
    Neutron services in step 13, including `nova-api` and `nova-compute`.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 在第 11 步中，我们更新 Nova 配置文件，添加关于 Neutron 服务的部分。在第 12 步中，我们创建数据库模式，并在第 13 步中重启所有
    Neutron 服务，包括 `nova-api` 和 `nova-compute`。
- en: In step 14, we verify that the Neutron services have been registered and proceed
    to create a new network in step 15.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 在第 14 步，我们验证 Neutron 服务是否已注册，并继续在第 15 步创建一个新网络。
- en: In step 18, we define a new software router. We add the subnet we created earlier
    to it in step 19, then verify the new route configuration in step 21.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 在第 18 步，我们定义一个新的软件路由器。在第 19 步中，我们将之前创建的子网添加到路由器中，然后在第 21 步中验证新的路由配置。
- en: The last step 22 ensures that the network we defined earlier is active.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 第 22 步确保我们之前定义的网络是活动的。
- en: Building and inspecting KVM instances with OpenStack
  id: totrans-255
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 OpenStack 构建和检查 KVM 实例
- en: 'In this recipe, we are going to build our first KVM instance using the OpenStack
    infrastructure we put in place in the previous recipes. Building a new KVM instance
    consists of the following steps:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将使用之前部署的 OpenStack 基础设施构建我们的第一个 KVM 实例。构建新 KVM 实例包括以下步骤：
- en: We send an API call to the `nova-api` service.
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们向 `nova-api` 服务发送 API 请求。
- en: The `nova-api` service requests a target compute host from the nova-scheduler
    service.
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`nova-api` 服务向 nova-scheduler 服务请求目标计算主机。'
- en: '`nova-scheduler` picks an available compute host, based on the configured filters,
    such as available memory, disk, and CPU utilization.'
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`nova-scheduler` 根据配置的过滤器（如可用内存、磁盘和 CPU 使用情况）选择一个可用的计算主机。'
- en: Once the `nova-scheduler` selects an appropriate host, the `nova-compute` service
    on the selected host, requests the image from the Glance repository, if not already
    cached locally. Once the image is on the new server, `nova-compute` builds the
    new KVM instance.
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦 `nova-scheduler` 选择了一个合适的主机，选定主机上的 `nova-compute` 服务会向 Glance 仓库请求镜像（如果镜像尚未缓存）。镜像传输到新服务器后，`nova-compute`
    会构建新的 KVM 实例。
- en: Getting ready
  id: totrans-261
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'For this recipe, we are going to need the following things:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本教程，我们需要以下内容：
- en: A database server, a message queue, and `memcached` installed and configured,
    as described in the *Preparing the host for the OpenStack deployment* recipe.
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库服务器、消息队列和 `memcached` 已安装并配置，具体内容请参见 *为 OpenStack 部署准备主机* 章节。
- en: The Glance service with an available image. For more information on how to deploy
    Glance and add a new image, refer to the *Installing and configuring the OpenStack
    Glance image service* recipe.
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Glance 服务和可用镜像。有关如何部署 Glance 并添加新镜像的信息，请参见 *安装和配置 OpenStack Glance 镜像服务* 章节。
- en: The Keystone service we deployed in the *Installing and configuring the OpenStack
    Keystone identity service* recipe.
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们在 *安装和配置 OpenStack Keystone 身份服务* 章节中部署的 Keystone 服务。
- en: The Nova services we configured in the *Installing and configuring the OpenStack
    Nova compute service* recipe.
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 *安装和配置 OpenStack Nova 计算服务* 章节中配置的 Nova 服务。
- en: The Neutron service that was deployed in the *Installing and configuring the
    OpenStack Neutron networking service* recipe.
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 *安装和配置 OpenStack Neutron 网络服务* 章节中部署的 Neutron 服务。
- en: How to do it...
  id: totrans-268
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To build a new KVM instance using the OpenStack **command-line interface**
    (**CLI**), perform the following steps:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 OpenStack **命令行接口** (**CLI**) 构建一个新的 KVM 实例，请执行以下步骤：
- en: 'Ensure that we have an available Glance image to use:'
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保我们有一个可用的 Glance 镜像：
- en: '[PRE66]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'Create a new instance flavor type:'
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的实例类型：
- en: '[PRE67]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'Create a new SSH key-pair:'
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的 SSH 密钥对：
- en: '[PRE68]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'Define the security group rules that allow SSH and ICMP access:'
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义允许 SSH 和 ICMP 访问的安全组规则：
- en: '[PRE69]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'List the available networks, we defined earlier:'
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列出之前定义的可用网络：
- en: '[PRE70]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'Build a new KVM instance and list its status:'
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的 KVM 实例并列出其状态：
- en: '[PRE71]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'Ensure that the container was started successfully:'
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保容器已成功启动：
- en: '[PRE72]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'Inspect the KVM instance:'
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查 KVM 实例：
- en: '[PRE73]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: How it works...
  id: totrans-286
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: We start the recipe by ensuring that we have an available Glance image to choose
    from. We list all available images in Glance in step 1. In step 2, we create a
    new instance flavor; we specify the allocated CPU, memory, and disk resources for
    the new instance type. In step 3, although it is not mandatory, we create a new
    SSH key pair that can later be used to SSH to the new instance. In step 4, we
    create two new security group rules that allow SSH and ICMP traffic. This is handy
    if we would like to ping and SSH to the new instance. Before we build the instance,
    we need to list the available networks in Neutron, which the guest will be part
    of; we do this in step 5.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过确保有可用的 Glance 镜像可以选择来开始本食谱。在第 1 步中，我们列出了 Glance 中所有可用的镜像。在第 2 步中，我们创建了一个新的实例规格；我们为新的实例类型指定了分配的
    CPU、内存和磁盘资源。在第 3 步中，虽然不是强制性的，但我们创建了一个新的 SSH 密钥对，稍后可以用来 SSH 登录到新实例。在第 4 步中，我们创建了两个新的安全组规则，允许
    SSH 和 ICMP 流量。如果我们希望能够 ping 和 SSH 到新实例，这将非常方便。在创建实例之前，我们需要列出 Neutron 中的可用网络，这些网络将成为客户机的一部分；我们在第
    5 步中完成了这一步。
- en: With all of the earlier prerequisites in place, we build a new KVM instance
    in step 6, by specifying the instance flavor, the Glance image, the network, the
    security group, and the SSH key. We then proceed to list the status of the instance.
    Notice how the task state shows as scheduling, meaning that the `nova-scheduler`
    is selecting a host to provision the instance on and the status is BUILD. Since
    we are only using a single host for this example deployment, the instance is going
    to be provisioned on the same compute server. From the output of the build command,
    we can also see the IP address that was assigned to the new instance.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有先前的先决条件都已就绪后，我们在第 6 步中创建了一个新的 KVM 实例，指定了实例规格、Glance 镜像、网络、安全组和 SSH 密钥。然后，我们继续列出该实例的状态。注意，任务状态显示为
    scheduling，这意味着 `nova-scheduler` 正在选择一个主机来部署该实例，状态是 BUILD。由于我们在这个示例部署中只使用一个主机，实例将在同一计算服务器上部署。从构建命令的输出中，我们还可以看到分配给新实例的
    IP 地址。
- en: In step 7, we can see that the new instance was successfully provisioned, its
    status now shows as ACTIVE and a new QEMU process has been started.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 在第 7 步中，我们可以看到新的实例已成功创建，其状态现在显示为 ACTIVE，且已启动新的 QEMU 进程。
- en: Finally, in step 8, we examine the running instance; note that the power state
    field now shows Running and the status field displays active.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在第 8 步中，我们检查正在运行的实例；请注意，电源状态字段现在显示为 Running，状态字段显示为 active。
- en: Stopping KVM instances with OpenStack
  id: totrans-291
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 OpenStack 停止 KVM 实例
- en: In this short recipe, we are going to stop a running KVM instance, we provisioned
    in the last recipe, using the familiar `openstack` command syntax.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个简短的食谱中，我们将使用熟悉的 `openstack` 命令语法停止上一个食谱中我们创建的正在运行的 KVM 实例。
- en: Getting ready
  id: totrans-293
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'For this recipe, we are going to need the following:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个食谱，我们需要以下内容：
- en: A database server, a message queue, and `memcached` installed and configured,
    as described in the *Preparing the host for the OpenStack deployment* recipe.
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个已安装并配置的数据库服务器、消息队列和 `memcached`，如 *为 OpenStack 部署准备主机* 食谱中所述。
- en: The Glance service with an available image. For more information on how to deploy
    Glance and add a new image, refer to the *Installing and configuring the OpenStack
    Glance image service* recipe.
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个可用镜像的 Glance 服务。有关如何部署 Glance 并添加新镜像的信息，请参阅 *安装和配置 OpenStack Glance 镜像服务*
    食谱。
- en: The Keystone service we deployed in the *Installing and configuring the OpenStack
    Keystone identity service* recipe.
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们在 *安装和配置 OpenStack Keystone 身份服务* 食谱中部署的 Keystone 服务。
- en: The Nova services we configured in the *Installing and configuring the OpenStack
    Nova compute service* recipe.
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们在 *安装和配置 OpenStack Nova 计算服务* 食谱中配置的 Nova 服务。
- en: The Neutron service that was deployed in the *Installing and configuring the
    OpenStack Neutron networking service* recipe.
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们在 *安装和配置 OpenStack Neutron 网络服务* 食谱中部署的 Neutron 服务。
- en: A running KVM instance, provisioned with OpenStack.
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个由 OpenStack 部署的正在运行的 KVM 实例。
- en: How to do it...
  id: totrans-301
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'To stop a running KVM guest using OpenStack, perform the following simple steps:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 OpenStack 停止正在运行的 KVM 客户机，请执行以下简单步骤：
- en: 'List the provisioned OpenStack instances:'
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列出已部署的 OpenStack 实例：
- en: '[PRE74]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'Stop the instance:'
  id: totrans-305
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 停止实例：
- en: '[PRE75]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'List the KVM guests using libvirt:'
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 libvirt 列出 KVM 客户机：
- en: '[PRE76]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'Ensure that the QEMU process for the instance has terminated:'
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保实例的QEMU进程已终止：
- en: '[PRE77]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'Check the status of the KVM guest:'
  id: totrans-311
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查KVM来宾的状态：
- en: '[PRE78]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: How it works...
  id: totrans-313
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'We start by listing the available KVM instances, provisioned with OpenStack
    in step 1\. In step 2, we stop the instance by specifying its name. Please note
    that we can also use the instance ID to stop it. Since OpenStack uses the libvirt
    to manage the lifecycle of the KVM instances, in step 3, we see that the instance
    has been indeed destroyed. In step 4, we ensure that the QEMU process for the
    guest has also been terminated. In the last step, we can see that the instance
    state is now SHUTOFF instead of ACTIVE. Instances in this state can be started
    again by executing the following command:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从第1步开始，列出由OpenStack配置的可用KVM实例。在第2步中，我们通过指定实例的名称来停止实例。请注意，我们也可以使用实例ID来停止它。由于OpenStack使用libvirt管理KVM实例的生命周期，在第3步中，我们看到该实例确实已经被销毁。在第4步中，我们确保该实例的QEMU进程也已经终止。在最后一步，我们可以看到实例的状态现在是SHUTOFF，而不是ACTIVE。处于此状态的实例可以通过执行以下命令重新启动：
- en: '[PRE79]'
  id: totrans-315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: Terminating KVM instances with OpenStack
  id: totrans-316
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用OpenStack终止KVM实例
- en: In this recipe, we are going to terminate a KVM instance provisioned with OpenStack.
    Terminating the instance will undefine it through libvirt, release the allocated
    CPU memory and disk resources back to the pool of available resource, for the
    compute host, and mark its IP address as available in the Neutron database.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将终止一个由OpenStack配置的KVM实例。终止实例会通过libvirt将其取消定义，释放分配的CPU、内存和磁盘资源回到可用资源池，并将其IP地址在Neutron数据库中标记为可用。
- en: Getting ready
  id: totrans-318
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'For this recipe, we are going to need the following:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个食谱，我们需要以下内容：
- en: A database server, a message queue, and `memcached` installed and configured,
    as described in the *Preparing the host for the OpenStack deployment* recipe.
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已安装并配置数据库服务器、消息队列和`memcached`，如*为OpenStack部署准备主机*食谱中所述。
- en: The Glance service with an available image. For more information on how to deploy
    Glance and add a new image, refer to the *Installing and configuring the OpenStack
    Glance image service* recipe.
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可用镜像的Glance服务。有关如何部署Glance并添加新镜像的更多信息，请参考*安装和配置OpenStack Glance镜像服务*食谱。
- en: The Keystone service we deployed in the *Installing and configuring the OpenStack
    Keystone identity service* recipe.
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们在*安装和配置OpenStack Keystone身份服务*食谱中部署的Keystone服务。
- en: The Nova services we configured in the *Installing and configuring the OpenStack
    Nova compute service* recipe.
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们在*安装和配置OpenStack Nova计算服务*食谱中配置的Nova服务。
- en: The Neutron service that was deployed in the *Installing and configuring the
    OpenStack Neutron networking service* recipe.
  id: totrans-324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在*安装和配置OpenStack Neutron网络服务*食谱中部署的Neutron服务。
- en: A running KVM instance, provisioned with OpenStack.
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个正在运行的KVM实例，由OpenStack配置。
- en: How to do it...
  id: totrans-326
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To terminate a running instance, perform the following steps:'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 要终止一个正在运行的实例，请执行以下步骤：
- en: 'Obtain the name or ID of the instance to be terminated:'
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取要终止的实例的名称或ID：
- en: '[PRE80]'
  id: totrans-329
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: 'Delete the instance by providing the name:'
  id: totrans-330
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过提供名称删除实例：
- en: '[PRE81]'
  id: totrans-331
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'Ensure that the instance was undefined:'
  id: totrans-332
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保实例已被取消定义：
- en: '[PRE82]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'Examine the `nova-api`, `neutron-server`, and `nova-compute` logs:'
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查`nova-api`、`neutron-server`和`nova-compute`的日志：
- en: '[PRE83]'
  id: totrans-335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: How it works...
  id: totrans-336
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: We begin by listing all instances that Nova knows about in step 1, noting the
    name of the instance we would like to delete.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 在第1步中，我们通过列出Nova所知道的所有实例，并记录下我们想要删除的实例的名称。
- en: In step 2, we delete the instance by specifying its name. Note that we can also
    use its ID instead. In step 3, we confirm that the instance has been undefined
    by libvirt and is no longer available in OpenStack.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 在第2步中，我们通过指定实例的名称来删除该实例。请注意，我们也可以使用实例的ID来删除。在第3步中，我们确认该实例已被libvirt取消定义，并且在OpenStack中不再可用。
- en: In step 4, we can see the API calls that were sent to the `nova-api`, `neutron-server`,
    and `nova-compute` services and the action that those services took.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 在第4步中，我们可以看到发送到`nova-api`、`neutron-server`和`nova-compute`服务的API调用及其采取的操作。
