- en: Chapter 5. Installing Software on Raspbian
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The primary purpose of an operating system is to provide a consistent software
    platform, regardless of the underlying hardware. Once the operating system is
    installed, it can be expanded with many other software packages.
  prefs: []
  type: TYPE_NORMAL
- en: Raspbian is a good example of a Linux-based operating system. As Raspbian is
    based on Debian, it has access to its huge software repository. Raspbian initially
    had access to over 35,000 different software packages in the Debian repositories,
    but this number keeps growing.
  prefs: []
  type: TYPE_NORMAL
- en: Debian Wheezy, on which Raspbian is based, doesn't officially support the older
    ARMV6 CPU in the Raspberry Pi. During initial development of Raspbian in 2012,
    the developers spent a huge amount of time recompiling the vast collection of
    software in the Debian repositories for the ARMv6K architecture to get maximum
    performance out of the Raspberry Pi.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter runs through several different methods of installing software on
    your Raspberry Pi.
  prefs: []
  type: TYPE_NORMAL
- en: Package management in Linux
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are many different tools available to manage software on a Linux distribution.
    Some of these include the APT and RPM package managers.
  prefs: []
  type: TYPE_NORMAL
- en: Raspbian uses the Advanced Packaging Tool, also known as the APT. The APT handles
    the dependencies of any package. Installation and removal of software packages
    are handled by an application called dpkg. It is the recommended way to install
    any software on your Raspberry Pi. Every part of Raspbian is bundled into a package.
  prefs: []
  type: TYPE_NORMAL
- en: The APT can automatically download the software that you want to install from
    repositories that are preconfigured. A repository is a collection of precompiled
    software that can be installed. These repositories are automatically selected,
    based on your location, to maximize download speed. It also automatically handles
    updates of all the software packages that are installed on your Raspberry Pi.
    The APT was first released in 1998 and is often hailed as one of Debian's best
    features.
  prefs: []
  type: TYPE_NORMAL
- en: Methods of installing software
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are several different ways to install software on your Raspberry Pi.
    These include:'
  prefs: []
  type: TYPE_NORMAL
- en: apt-get
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GUI Package Manager
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Aptitude
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Raspberry Pi Store
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The source
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All of these methods, with the exception of installing from source code, use
    APT and dpkg to install the software package.
  prefs: []
  type: TYPE_NORMAL
- en: dpkg
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: dpkg is a software application at the center of Raspbian's software package
    management system. It is a software tool that actually installs a software package
    from a `.deb` file.
  prefs: []
  type: TYPE_NORMAL
- en: 'A `.deb` file contains three different parts:'
  prefs: []
  type: TYPE_NORMAL
- en: A Debian-binary file that contains the version of dpkg needed to install the
    package
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A control archive that has all the information needed to install the package
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A data archive that contains the actual software itself
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dpkg reads the `.deb` file and determines whether all of the required software
    is installed. If the required software isn't installed, it will let you know what
    the required software is.
  prefs: []
  type: TYPE_NORMAL
- en: APT
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The APT is a frontend tool that makes using dpkg a lot easier. It is preconfigured
    with several repositories that contain every official package that is available
    to be installed on your Raspberry Pi.
  prefs: []
  type: TYPE_NORMAL
- en: These repositories are split into several different archives or groups, depending
    on what software packages are contained in each. It is also extremely easy to
    add other third-party repositories.
  prefs: []
  type: TYPE_NORMAL
- en: The main archive
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `main` archive contains all of the software that makes up the Raspbian distribution.
    If the package is not in the archive, it is not considered a part of the Raspbian
    distribution. No packages in this archive require any software that is outside
    it. The Debian project requires that all packages in this archive should be free
    and can be distributed, modified, and shared freely. The software in this archive
    is supported by the Debian project.
  prefs: []
  type: TYPE_NORMAL
- en: The contrib archive
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Any package that requires other packages that aren't part of the `main` archive
    is included in the `contrib` archive. The `contrib` archive may also contain wrapper
    packages and other pieces of free software that work with non-free software.
  prefs: []
  type: TYPE_NORMAL
- en: The non-free archive
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Any other software that does not comply with the Debian project's guidelines
    for free software is included in the `non-free` archive. Other pieces of software
    that have problems that may affect their free distribution are included in the
    archive as well.
  prefs: []
  type: TYPE_NORMAL
- en: Package verification
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The official Raspbian repositories are signed with a digital signature to ensure
    that the package does not get corrupted when it is downloaded. This is achieved
    using public key encryption and a digital certificate to prove that the packages
    in the repository are from who they say they are.
  prefs: []
  type: TYPE_NORMAL
- en: Using the console
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The most common way to install software on your Raspberry Pi is by using `apt-get`.
    It is a very powerful command-line application.
  prefs: []
  type: TYPE_NORMAL
- en: To run `apt-get`, you need to use the command shell. The command shell is available
    for you through an application that is installed in Raspbian by default. The application
    is called LXTerminal.
  prefs: []
  type: TYPE_NORMAL
- en: You can launch LXTerminal by double-clicking on its icon on the desktop.
  prefs: []
  type: TYPE_NORMAL
- en: '![Using the console](img/2192OS_05_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: LXTerminal
  prefs: []
  type: TYPE_NORMAL
- en: LXTerminal allows you to run commands using the bash command shell (and other
    command shells if desired). You will learn more about the bash shell in [Chapter
    6](ch06.html "Chapter 6. The Console"), *The Console*.
  prefs: []
  type: TYPE_NORMAL
- en: Generally, each command you run fits in one line. When you have finished typing
    a command, simply press *Enter* to run it. The output of the program will be displayed
    in the following lines. If you want to rerun or modify a command that you have
    just typed, simply press the up arrow key on your keyboard and you will see the
    previous command displayed again. You will then be able to edit and rerun it by
    pressing *Enter* again.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Don't forget that Linux is case sensitive, so the `Apt-get` command won't work
    but `apt-get` will!
  prefs: []
  type: TYPE_NORMAL
- en: 'Linux is an inherently secure operating system. Most of the commands in this
    chapter require administrator permissions. It is really easy to see whether you
    need root permissions. If they are required, you will see the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'To run a command as the system administrator, simply add it to the beginning
    of any command that you need to run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Depending on whether you have set a password or not, you may be asked to enter
    your password. Running `apt-get` is really simple just type `apt-get` and press
    *Enter*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The `apt-get` command will respond with a heap of information about the different
    options that are available. The options that we are interested in are:'
  prefs: []
  type: TYPE_NORMAL
- en: '`apt-get update`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`apt-get install`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`apt-get remove`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: apt-get update
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The first thing that we want to do is ensure that Raspbian knows what the latest
    versions of software are. The `apt-get update` command automatically connects
    to the Raspbian repository and downloads the latest list of packages.
  prefs: []
  type: TYPE_NORMAL
- en: It is recommended that before installing any software, you run the `apt-get
    update` command if you haven't done so recently.
  prefs: []
  type: TYPE_NORMAL
- en: apt-get install
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The real power of the apt packaging system becomes apparent when you run the
    `install` command. To actually install the software package on your Raspberry
    Pi, you need to run `apt-get install` followed by the name of the software package.
  prefs: []
  type: TYPE_NORMAL
- en: 'Consider the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: This command will install the Apache2 web server. This is one of the most popular
    web servers in the world, with a 59% market share at the time of writing this
    book. Apache2 is extremely powerful but can be quite resource heavy depending
    on its configuration.
  prefs: []
  type: TYPE_NORMAL
- en: 'You will see something similar in your console to what is shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![apt-get install](img/2192OS_05_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Installing Apache2 using apt-get install
  prefs: []
  type: TYPE_NORMAL
- en: The `apt-get` command will automatically connect to the Internet and download
    the `Apache2` package and all the packages that Apache2 needs to operate. You
    may be asked to confirm that you want to continue installing the software. Simply
    press the *Y* key and then *Enter*. After the package is installed and configured,
    your new software is ready to go!
  prefs: []
  type: TYPE_NORMAL
- en: There are many packages that are available to extend the function of Apache2\.
    These packages won't be installed by default. If you need to install these extras,
    they will need to be installed manually.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are some packages that you are able to install, called metapackages.
    These packages represent a collection of packages that add a particular function
    to your Raspberry Pi. An example of this is as follows: if you used a distribution
    based on Raspbian that didn''t include a graphical user interface, you could install
    this interface in one go by installing a metapackage. These packages behave as
    normal packages but are actually collections of several different packages behind
    the scenes. You are also able to use the * wildcard to represent multiple characters.
    To install all the available php packages, you could run this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: apt-get remove
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Sometimes, you will want to remove some software packages that have been installed
    and are no longer required. Removing a package is as easy as installing it. You
    simply use the `apt-get remove` command.
  prefs: []
  type: TYPE_NORMAL
- en: 'Run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'You should get an output similar to this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![apt-get remove](img/2192OS_05_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Removing Apache2 using apt-get remove
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For a bit of fun, try running `apt-get moo`!
  prefs: []
  type: TYPE_NORMAL
- en: Searching for packages
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are so many packages available to install using `apt-get` that it can
    be difficult to find the package that you want to install. Fortunately, it is
    really easy to search for the packages that are available to be installed. To
    do this, you use the `apt-cache search` tool.
  prefs: []
  type: TYPE_NORMAL
- en: 'Following on from our example of using the `Apache2` package, you are able
    to see other extensions to the `Apache2` package by running this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: The `apt-cache search` tool will list all the packages that mention `Apache2`
    in their description or require `Apache2`.
  prefs: []
  type: TYPE_NORMAL
- en: Synaptic GUI Package Manager
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are many different ways in which you can install software on your Raspberry
    Pi. Using `apt-get` is one way. Another way is by using a GUI tool such as the
    **Synaptic Package Manager.** Unfortunately, it isn't installed in Raspbian by
    default, but it is easily installed using `apt-get`.
  prefs: []
  type: TYPE_NORMAL
- en: 'To install synaptic, run the following command in LXTerminal:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Synaptic will take a few minutes to install on your Raspberry Pi as it is a
    reasonably large application. You will find the **Synaptic Package Manager** in
    the **Other** submenu in the main menu.
  prefs: []
  type: TYPE_NORMAL
- en: '![Synaptic GUI Package Manager](img/2192OS_05_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The Synaptic Package Manager
  prefs: []
  type: TYPE_NORMAL
- en: Searching and installing packages in Synaptic
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can search for packages in Synaptic using the search button:'
  prefs: []
  type: TYPE_NORMAL
- en: Simply click on the **Search** button and enter the package that you are looking
    for.![Searching and installing packages in Synaptic](img/2192OS_05_05.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Searching for a package
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: After clicking on **Search**, you will be shown all the packages that meet the
    search criteria. Simply check the packages that you want to install and select
    **Mark for Installation**. You can select as many packages as you want.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Packages are also organized by category on the left-hand side. This is a really
    easy way to try and find the software packages you are looking for.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Searching and installing packages in Synaptic](img/2192OS_05_06.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Selecting a package
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: When you click on **Apply**, Synaptic will ask you to confirm that you want
    to install the packages that you have selected. After you click on **Apply**,
    the packages will be installed.![Searching and installing packages in Synaptic](img/2192OS_05_07.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The package installation may take several minutes, depending on what packages
    you are installing. The progress of the installation can be tracked by selecting
    **Details**.![Searching and installing packages in Synaptic](img/2192OS_05_08.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Synaptic installing the Apache2 web server
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Uninstalling packages using Synaptic
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Uninstalling packages using Synaptic is very similar to installing packages:'
  prefs: []
  type: TYPE_NORMAL
- en: If you are trying to uninstall a package that you previously installed, you
    need to search for it. You can also see any packages that are installed by selecting
    the **Status** filter on the left. This will let you see all the packages that
    have been installed in a list. Over 850 packages are installed in the default
    Raspbian distribution, so it is quicker to search for them.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once you have found the package that you want to uninstall, simply click on
    the checkbox and select `Mark for Removal`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When you have finished selecting packages for removal, click on **Apply**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Uninstalling packages using Synaptic](img/2192OS_05_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Removing a package using Synaptic
  prefs: []
  type: TYPE_NORMAL
- en: The Pi Store
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**The Pi Store** is another tool that you can use to install software on your
    Raspberry Pi. The Raspberry Pi Store is installed by default in Raspbian and can
    be opened using the **Pi Store** icon on the desktop. **The Pi Store** groups
    together most of the best pieces of software that are available to be installed
    on your Raspberry Pi in one place.'
  prefs: []
  type: TYPE_NORMAL
- en: '![The Pi Store](img/2192OS_05_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The Pi Store
  prefs: []
  type: TYPE_NORMAL
- en: '**The Pi Store** is the only piece of software installed on your Raspberry
    Pi that actually sells commercial software and other content. To be able to purchase
    non-free software from the Pi Store, you need to register and provide a payment
    method such as a credit card.'
  prefs: []
  type: TYPE_NORMAL
- en: '**The Pi Store** is really easy to use:'
  prefs: []
  type: TYPE_NORMAL
- en: Simply find the software that you want to install, and click on **Buy Now**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Log in with your account, and away you go!
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**The Pi Store** automatically handles all updates to any software that you
    have purchased.'
  prefs: []
  type: TYPE_NORMAL
- en: Installing software from source
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: All software programs are built from different files. These files are called
    source code and are written in programming languages. The most common programming
    languages that are used on Linux are C and C++.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are all sorts of reasons that you may want to download and install a
    piece of software that is distributed as source code. Some of these are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: The software isn't available in the Raspbian repositories.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The latest version of the software isn't in the Raspbian repositories.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The features in the software aren't available in the packages in the Raspbian
    repositories.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'There are a several disadvantages to installing software from source, such
    as these:'
  prefs: []
  type: TYPE_NORMAL
- en: Updates aren't automatically installed for any software packages that are installed
    from source.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Additional software is required to compile and install the software. Generally
    this is the `build-essential` metapackage.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It can take a long time to compile and install software depending on its complexity.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If you find a software package that you want to download and install on your
    Raspberry Pi, the first thing you need to do is make sure that you have all the
    required tools to build the application:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The most common tools can be installed after you have installed the `build-essential`
    package:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: This will install all the software tools you need to use to compile most C and
    C++ applications, including the make application and the gcc and g++ compilers.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Now you need to download the application that you want to install. In this example,
    we will use the Apache2 web server. You can download Apache2 from [http://apache.mirror.serversaustralia.com.au//httpd/httpd-2.4.10.tar.bz2](http://apache.mirror.serversaustralia.com.au//httpd/httpd-2.4.10.tar.bz2).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You can download the source code using a web browser. Another easy way to download
    the code is to use the wget application. It automatically downloads a file and
    stores it in your Raspberry Pi:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Once you source code has been downloaded on your Raspberry Pi, you need to extract
    the software from the archive. An archive is just a file that contains many other
    files that have been shrunk to make them easier to distribute.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'To extract a `.tar.bz2` archive such as the Apache2 application, run the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The exact command will vary depending on the software that you are trying to
    install, but will generally be very similar to the command you just used.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: These commands will unpack all the files in the `Apache2` archive and put them
    into a folder that contains the entire `Apache2` source.
  prefs: []
  type: TYPE_NORMAL
- en: Almost all software packages that you download contain a file inside them, called
    `README.md`. This file generally contains instructions that you need to follow
    to install and build the software.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is the normal process you need to follow to build a software package:'
  prefs: []
  type: TYPE_NORMAL
- en: '`./configure`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`make`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`make install`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These commands perform lot of processes. Let's start with `./configure`. The
    `./configure` command is a script that generates the `MakeFile` file used by `make`
    to compile the software. This `MakeFile` file is customized to suit your Raspberry
    Pi. It will also let you know whether there are any other dependencies that you
    need to install to be able to build the software.
  prefs: []
  type: TYPE_NORMAL
- en: The `make` command is the command that actually compiles the software from the
    source code into an application that you can run on your Raspberry Pi. This compilation
    process will show lots of information as it progresses, and the process may take
    quite a long time. The Linux kernel can take well over half an hour to compile,so
    it is probably best to go and grab a cup of coffee!
  prefs: []
  type: TYPE_NORMAL
- en: After the applications have been compiled, you need to install them. Fortunately,
    most applications include an installation script that does this for you. Simply
    run `make install`!
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Just remember that these instructions are generic and that some software packages
    may need to be installed differently.
  prefs: []
  type: TYPE_NORMAL
- en: Installing updates
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Raspbian is constantly under development, and updates that have fixes, new features,
    and security improvements are continually being released. It is highly recommended
    that you install all the updates that are available. There are many ways to do
    this, including using `apt get` and Synaptic.
  prefs: []
  type: TYPE_NORMAL
- en: Installing updates using apt-get
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `apt-get` command can be used to update the software in your Raspberry
    Pi. The first thing you need to do is ask `apt-get` to get the list of all pieces
    of software that are available for installation on your Raspberry Pi:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'This command may take a few minutes depending on your internet connection.
    To perform upgrades of the packages, you need to run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: This command will download and install all the latest packages from the Raspbian
    repositories on your Raspberry Pi. You will then be fully up to date!
  prefs: []
  type: TYPE_NORMAL
- en: Installing updates using Synaptic
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Updates can also be installed using the **Synaptic Package Manager**:'
  prefs: []
  type: TYPE_NORMAL
- en: This can be done by selecting the **Refresh** button.![Installing updates using
    Synaptic](img/2192OS_05_11.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Refreshing available packages using Synaptic
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Once the package list has been refreshed, click on **Mark All Upgrades**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will be asked to confirm the packages you are upgrading. Simply select **Mark**
    and then click on **Apply**, then all of the software on your Raspberry Pi will
    be up to date.![Installing updates using Synaptic](img/2192OS_05_12.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Selecting packages to be upgraded
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Other software that you can install
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There is only this much software that can be installed on the default Raspbian
    installation. Most pieces of software included in Raspbian are aimed at the educational
    market. Because of this, there isn't much productivity software preinstalled on
    your Raspberry Pi. Fortunately, this is easy to fix!
  prefs: []
  type: TYPE_NORMAL
- en: LibreOffice
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: LibreOffice is a free, complete office suite that contains many of the features
    that are also found in Microsoft Office. It consists of many applications, and
    is available for installation through the Raspberry Pi Store.
  prefs: []
  type: TYPE_NORMAL
- en: '![LibreOffice](img/2192OS_05_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'A few of these applications are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Icon | Name | Description |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| ![LibreOffice](img/2192OS_05_14.jpg) | Writer | Writer is a complete word
    processor with features similar to Microsoft word. |'
  prefs: []
  type: TYPE_TB
- en: '| ![LibreOffice](img/2192OS_05_15.jpg) | Calc | Calc is a spreadsheet application
    with many features, including graphs. |'
  prefs: []
  type: TYPE_TB
- en: '| ![LibreOffice](img/2192OS_05_16.jpg) | Impress | Impress is an application
    designed to create presentations. |'
  prefs: []
  type: TYPE_TB
- en: '| ![LibreOffice](img/2192OS_05_17.jpg) | Base | Base is a database application
    similar to Microsoft Access, and it lets you create simple database applications
    |'
  prefs: []
  type: TYPE_TB
- en: There are many other applications included in LibreOffice that aren't mentioned
    here. The best way to see all the features is to download LibreOffice and give
    it a go! You can find more information at [www.libreoffice.org](http://www.libreoffice.org).
  prefs: []
  type: TYPE_NORMAL
- en: IceDove e-mail client
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Another important productivity tool for the Raspberry Pi is the IceDove e-mail
    client. IceDove is the popular Thunderbird e-mail client that has been rebranded
    by Debian due to copyright issues with the Thunderbird and Firefox logos.
  prefs: []
  type: TYPE_NORMAL
- en: '![IceDove e-mail client](img/2192OS_05_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: IceDove
  prefs: []
  type: TYPE_NORMAL
- en: 'IceDove is an excellent e-mail client and is highly recommended. You can install
    IceDove by running this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: IceWeasel
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Another excellent application is the IceWeasel web browser.
  prefs: []
  type: TYPE_NORMAL
- en: '![IceWeasel](img/2192OS_05_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: IceWeasel
  prefs: []
  type: TYPE_NORMAL
- en: IceWeasel is a rebranded version of Firefox, and it supports all the features
    that you have come to expect from a modern web browser.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can install IceWeasel by running the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you learned several ways to install software packages on your
    Raspberry Pi, and some of the tools that you can use to do this. Thanks to the
    huge Debian repositories and the open source nature of Linux-based operating systems
    such as Raspbian, there is so much variety in software available for the Raspberry
    Pi. Now that you know how to install software on this device, you simply need
    to start looking for what you are after.
  prefs: []
  type: TYPE_NORMAL
