- en: Chapter 3. Getting Started with Mesos
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章：入门 Mesos
- en: This chapter covers how to manually set up and run a Mesos cluster on the public
    cloud (AWS, GCE, and Azure) as well as on a private datacenter (on the premises),
    and it also discusses the various debugging methods and explores how to troubleshoot
    the Mesos setup in detail.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍如何在公共云（AWS、GCE 和 Azure）以及私有数据中心（本地）上手动设置并运行 Mesos 集群，还讨论了各种调试方法，并详细探讨了如何排查
    Mesos 设置中的问题。
- en: 'In this chapter, we will explore the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨以下主题：
- en: How to launch instances (virtual machines) on public cloud platforms, such as
    AWS, GCE, and Azure, and we will cover setting up Mesos on top of this
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在公共云平台（如 AWS、GCE 和 Azure）上启动实例（虚拟机），我们还将介绍如何在其上设置 Mesos。
- en: How to install a Mesos cluster on a private datacenter
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在私有数据中心安装 Mesos 集群
- en: How to troubleshoot and debug commonly encountered issues faced during the setup
    process
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何排查和调试在设置过程中常见的问题
- en: Virtual Machine (VM) instances
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 虚拟机（VM）实例
- en: An instance is a **virtual machine (VM)**, which is hosted on a cloud provider's
    infrastructure. Instances can run Linux and Windows Server images that are provided
    by your cloud provider or any customized versions of the same. You can also build
    and run images of other operating systems. Most cloud providers, such as **Google
    Compute Engine (GCE)**, **Amazon Web Services** (**AWS**), **Microsoft Azure**,
    and so on, also let you specify the machine properties of your instances, such
    as the amount of RAM and number of CPUs required, which are based on the type
    of machine that you use. In the following section, we'll take a look at how to
    set up Mesos on public cloud platforms.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 实例是 **虚拟机（VM）**，托管在云服务提供商的基础设施上。实例可以运行云服务提供商提供的 Linux 和 Windows Server 镜像，或者任何定制版的镜像。你还可以构建并运行其他操作系统的镜像。大多数云服务提供商，如
    **Google Compute Engine (GCE)**、**Amazon Web Services** (**AWS**)、**Microsoft
    Azure** 等，也允许你指定实例的机器属性，例如所需的内存和 CPU 数量，这些都取决于你使用的机器类型。在接下来的部分，我们将探讨如何在公共云平台上设置
    Mesos。
- en: Setting up a multi-node Mesos cluster on Amazon Web Services (AWS)
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Amazon Web Services（AWS）上设置多节点 Mesos 集群
- en: Please refer to [http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts.html](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts.html).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考 [http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts.html](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts.html)。
- en: As the name implies, Amazon Web Services (AWS) is a cloud computing platform
    provided by Amazon. This comprises a wide range of web services operating from
    11 physical world regions, which can be accessed remotely. This offers services
    with usage-based pricing; all of this can be used under one account including
    **EC2** (computing or processing), **S3** (storage), **CloudWatch**, **RDS**,
    **DynamoDB**, **EBS**, and so on.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 正如其名，Amazon Web Services（AWS）是亚马逊提供的云计算平台。它包括了从 11 个物理区域提供的广泛网络服务，可以远程访问。这些服务按使用量定价，可以在一个账户下使用，包括
    **EC2**（计算或处理）、**S3**（存储）、**CloudWatch**、**RDS**、**DynamoDB**、**EBS** 等。
- en: AWS gives you a free tier to get you started with Amazon EC2 services. Once
    you sign up, you will be able to launch a **micro machine** (a small machine with
    700 MB of memory) and run this for a year almost free of cost. You will have to
    pay for other services, such as launching a bigger machine, or using their storage
    service, such as Amazon S3\. You can find the updated pricing information on the
    official website.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 为你提供了一个免费套餐，让你可以开始使用 Amazon EC2 服务。注册后，你将能够启动一台 **微型机器**（一台内存为 700 MB 的小型机器），并几乎可以免费运行一年。你还需要支付其他服务的费用，例如启动更大机器，或使用存储服务，如
    Amazon S3。你可以在官网查找最新的定价信息。
- en: '**Account Signup and Creation**: Head to [http://aws.amazon.com](http://aws.amazon.com),
    click on **Sign Up**, and follow the instructions to create an account in AWS.
    One of the steps requires phone verification. Once the signup process is complete,
    you will get a confirmation e-mail with the account number specified inside it.
    Make a note of this as this will be required in the next steps.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**账户注册与创建**：前往 [http://aws.amazon.com](http://aws.amazon.com)，点击 **Sign Up**，并按照指示完成
    AWS 账户的创建过程。过程中有一个步骤需要进行手机验证。注册完成后，你将收到一封确认邮件，其中包含了账户编号。请记下此编号，因为后续步骤中会用到。'
- en: '**Key Pairs**: By default, AWS uses the public key authentication to log in
    to your Linux instances, as this is more secure. You can choose the key pair while
    you launch the instance from a drop-down list, or you can create a new one at
    the time of launching the instance. If you haven''t created a key pair already,
    you can create one using the Amazon EC2 console. Note that you will need key pair
    for each region, separately.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**密钥对**：默认情况下，AWS使用公钥认证登录到您的Linux实例，因为这种方式更加安全。您可以在启动实例时从下拉列表中选择密钥对，或者在启动实例时创建新的密钥对。如果您还没有创建密钥对，可以通过亚马逊EC2控制台创建一个。请注意，每个区域需要单独创建密钥对。'
- en: '**Security Groups**: Security groups act as a firewall for associated instances.
    They can control both inbound and outbound traffic on your instance. You will
    have to enable the rule to accept the connections from your **IP** address to
    the **SSH** port for you to log in to the machine. You can also add or remove
    as many rules as you wish; for example, **HTTP** and **HTTPS** can be accessed
    from anywhere, but SSH connections should only be accessed from your IP address.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**安全组**：安全组充当关联实例的防火墙。它们可以控制实例的进出流量。您必须启用规则，以允许从您的**IP**地址到**SSH**端口的连接，以便您能够登录到机器。您还可以根据需要添加或删除任意数量的规则；例如，**HTTP**和**HTTPS**可以从任何地方访问，但SSH连接应仅从您的IP地址访问。'
- en: Instance types
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实例类型
- en: Virtual servers or machines on AWS are also known as instances. Amazon EC2 provides
    a wide selection of optimized instance types that are geared towards different
    requirements. Instance types come with a variety of resource (storage, RAM, CPU,
    and network capacity) options, providing users with the flexibility to select
    the right mix for their particular use case. Each instance type includes one or
    more instance sizes, which permits the scaling of your resources to the requirements
    of your target workload.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在AWS上，虚拟服务器或机器也被称为实例。亚马逊EC2提供了多种优化的实例类型，针对不同的需求。实例类型提供了各种资源（存储、内存、CPU和网络容量）选项，为用户提供灵活性，可以根据特定的使用案例选择合适的资源组合。每种实例类型包括一个或多个实例大小，允许根据目标工作负载的需求扩展资源。
- en: Instance types are grouped based on the resource type that the application seeks
    to leverage the most; for example, general purpose (for applications that require
    an even mix of all resources), computer optimized (for CPU-intensive workloads),
    GPU instances (for applications requiring GPU capabilities), memory optimized
    (for tasks that need a lot of memory), storage optimized (for applications that
    deal with large volumes of data), and micro instances (for quick trials or lightweight
    applications). Instances are created from preconfigured templates with OS and
    other common software that is already installed, called **Amazon Machine Images**
    (**AMI**). AMIs are either provided by AWS, or they can be obtained through the
    AWS Marketplace. Users can also create and share their own AMIs with a wider community.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 实例类型根据应用程序最需要利用的资源类型进行分组；例如，通用型（用于需要均衡资源的应用程序）、计算优化型（用于CPU密集型工作负载）、GPU实例（用于需要GPU功能的应用程序）、内存优化型（用于需要大量内存的任务）、存储优化型（用于处理大量数据的应用程序）和微型实例（用于快速试验或轻量级应用程序）。实例是从预配置的模板创建的，这些模板包括已经安装操作系统和其他常见软件的**亚马逊机器镜像（AMI）**。AMI可以是AWS提供的，也可以通过AWS市场获取。用户还可以创建并与更广泛的社区共享自己的AMI。
- en: Launching instances
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启动实例
- en: 'There are multiple ways that an instance can be launched on AWS. Here, we will
    use the common option of launching via the Amazon EC2 console using a selected
    Amazon Machine Image. The steps are as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在AWS上启动实例有多种方式。在这里，我们将使用通过亚马逊EC2控制台使用选定的亚马逊机器镜像启动实例的常见方式。步骤如下：
- en: Navigate to the Amazon EC2 console.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到亚马逊EC2控制台。
- en: Click on the **Launch Instance** button from the console as depicted in the
    following diagram:![Launching instances](img/B05186_03_01.jpg)
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从控制台点击**启动实例**按钮，如下图所示：![启动实例](img/B05186_03_01.jpg)
- en: Choose **64-bit Ubuntu 14.04 LTS AMI** from the **Choose an Amazon Machine Image
    (AMI)** page, as follows:![Launching instances](img/B05186_03_02.jpg)
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**选择一个亚马逊机器镜像（AMI）**页面中选择**64位 Ubuntu 14.04 LTS AMI**，如下所示：![启动实例](img/B05186_03_02.jpg)
- en: On the **Choose an Instance Type** page, select the required instance, which
    is based on resource requirements (CPU, memory, and so on). For our Mesos cluster,
    we will use **m4.xlarge** instances having **4** cores and **16** GB of memory
    on each node:![Launching instances](img/B05186_03_03.jpg)
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**选择实例类型**页面上，选择所需的实例，基于资源需求（CPU、内存等）。对于我们的 Mesos 集群，我们将使用每个节点具有 **4** 个核心和
    **16** GB 内存的 **m4.xlarge** 实例：![启动实例](img/B05186_03_03.jpg)
- en: On the **Configure Instance Details** page, change the following settings; choose
    the number of instances as `4` (as we are launching a four node cluster):![Launching
    instances](img/B05186_03_04.jpg)
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**配置实例详细信息**页面上，更改以下设置；将实例数选择为 `4`（因为我们正在启动一个四节点集群）：![启动实例](img/B05186_03_04.jpg)
- en: Click on **Configure Security Group**, add Mesos Web UI port **5050** as **Custom
    TCP Rule**, and make that sure you set **My IP** as the **Source** address. This
    option will restrict any other connections, other than your IP address, from attempting
    to connect to your network:![Launching instances](img/B05186_03_05.jpg)
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击 **配置安全组**，添加 Mesos Web UI 端口 **5050** 作为 **自定义 TCP 规则**，确保您将 **My IP** 设置为
    **来源** 地址。此选项将限制除您 IP 地址以外的任何其他连接尝试连接到您的网络：![启动实例](img/B05186_03_05.jpg)
- en: Click on **Review Instance Launch**. We can skip adding storage and tagging
    instances for now:![Launching instances](img/B05186_03_06.jpg)
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击 **Review Instance Launch**。我们现在可以跳过添加存储和标记实例的步骤：![启动实例](img/B05186_03_06.jpg)
- en: Click on **Launch**.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击 **Launch**。
- en: Now, you will be prompted to choose the private key to log in to the machines.
    You can either choose **Create a new key pair** or use the existing one, and then
    the machines will be launched:![Launching instances](img/B05186_03_07.jpg)
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您将被提示选择登录机器的私钥。您可以选择 **创建新的密钥对** 或使用现有的密钥对，然后将启动机器：![启动实例](img/B05186_03_07.jpg)
- en: Click on the **Download Key Pair** button and the key pair named `mesos-cluster.pem`
    will be downloaded to your machine. You can use this file to SSH into the machines
    that you are launching in AWS.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击 **Download Key Pair** 按钮，将下载名为 `mesos-cluster.pem` 的密钥对文件到您的计算机。您可以使用此文件来
    SSH 连接到您在 AWS 中启动的机器。
- en: Installing Mesos
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Mesos
- en: 'Now log in to all machines:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在登录到所有机器：
- en: '[PRE0]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Let's call the first machine from the preceding list as our master machine and
    rest of them as `slave1`, `slave2`, `slave3` for the rest of this chapter.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们称前面列表中的第一台机器为我们的主节点，其余的为 `slave1`、`slave2`、`slave3` 在本章的其余部分。
- en: 'Now, we can install the dependency libraries and software packages on all four
    machines by typing in the following commands:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '现在，我们可以在所有四台机器上安装依赖库和软件包，输入以下命令： '
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Now, our environment is ready, and we can start building the Mesos binary.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们的环境已准备就绪，可以开始构建 Mesos 二进制文件。
- en: You can build the Mesos binary from the master machine and then copy the build
    to the slave machines instead of building from all the machines.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从主节点构建 Mesos 二进制文件，然后将构建内容复制到从机器，而不是从所有机器构建。
- en: Downloading Mesos
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载 Mesos
- en: 'There are two different ways that you can get Mesos:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种不同的方式可以获取 Mesos：
- en: 'Download the latest stable release from Apache (Recommended) at [http://mesos.apache.org/downloads/](http://mesos.apache.org/downloads/).
    At the time of writing this book, the latest version of Mesos is 0.25.0:'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 Apache 的最新稳定版本下载（推荐）：[http://mesos.apache.org/downloads/](http://mesos.apache.org/downloads/)。在撰写本书时，Mesos
    的最新版本是 0.25.0：
- en: '[PRE2]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Clone the Mesos git repository (Advanced Users Only):'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 克隆 Mesos 的 git 仓库（仅限高级用户）：
- en: '[PRE3]'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Building Mesos
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建 Mesos
- en: 'We can build Mesos as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以按照以下步骤构建 Mesos：
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now, we can copy the build directory from the Mesos master machine to `slave1`,
    `slave2`, and `slave3` machines:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以将 Mesos 主节点上的构建目录复制到 `slave1`、`slave2` 和 `slave3` 机器上：
- en: '[PRE5]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Start the Mesos master, as follows:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 启动 Mesos master，如下所示：
- en: '[PRE6]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Start the Mesos slaves:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 启动 Mesos slaves：
- en: '[PRE7]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The Mesos Web UI runs on port `5050` on the master machine, and this is where
    the installation completion status can be checked.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Mesos Web UI 在主节点上的端口 `5050` 上运行，这是可以检查安装完成状态的地方。
- en: 'To do this, type in the following URL in your web browser:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行此操作，请在您的 web 浏览器中输入以下 URL：
- en: '`http://ec2-54-221-197-122.compute-1.amazonaws.com:5050`'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://ec2-54-221-197-122.compute-1.amazonaws.com:5050`'
- en: 'And the Mesos UI will appear as follows:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Mesos UI 将显示如下：
- en: '![Building Mesos](img/B05186_03_08.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![构建 Mesos](img/B05186_03_08.jpg)'
- en: Using mesos-ec2 script to launch many machines at once
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 mesos-ec2 脚本一次启动多台机器
- en: Mesos provides scripts to create Mesos clusters of various configurations on
    EC2\. The `mesos-ec2` script, which is located in the `ec2` directory allows launching,
    running jobs, and tearing down the Mesos clusters. Note that we can use this script
    even without building Mesos, but you will require Python (>=2.6). We can manage
    multiple clusters using different names.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Mesos提供了脚本，用于在EC2上创建各种配置的Mesos集群。位于`ec2`目录中的`mesos-ec2`脚本可以用来启动、运行任务和销毁Mesos集群。请注意，即使不构建Mesos，我们也可以使用该脚本，但需要安装Python（>=2.6）。我们可以通过不同的名称管理多个集群。
- en: 'We will need an AWS key pair to use the ec2 script, and our access and secret
    key, which we created in the preceding steps:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要一个AWS密钥对来使用ec2脚本，并且需要在前面的步骤中创建的访问密钥和私密密钥：
- en: '[PRE8]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now, we can use the EC2 scripts that are provided with Mesos to launch a new
    cluster using the following command:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以使用Mesos提供的EC2脚本，通过以下命令启动一个新的集群：
- en: '[PRE9]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This will launch a cluster named `mesos-cluster` with ten slaves. Once the scripts
    are done, this will also print the Mesos Web UI link in the form of `<master-hostname>:8080`.
    We can confirm that the cluster is up by going to the web interface.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这将启动一个名为`mesos-cluster`的集群，包含十个从节点。一旦脚本执行完成，它还会打印出以`<master-hostname>:8080`形式展示的Mesos
    Web UI链接。我们可以通过访问该网页界面来确认集群是否已启动。
- en: 'The script provides a number of options, a few of which are listed in the following
    table. We can list all the available options of the script by running `mesos-ec2
    --help`:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 该脚本提供了多个选项，以下是其中的一些。我们可以通过运行`mesos-ec2 --help`列出所有可用的选项：
- en: '| Command | Use |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| 命令 | 用途 |'
- en: '| --- | --- |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `--slave` or `–s` | This is the number of slaves in the cluster |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| `--slave` 或 `–s` | 这是集群中的从节点数量 |'
- en: '| `--key-pair` or `-k` | This is the SSH key pair for authentication |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| `--key-pair` 或 `-k` | 这是用于认证的SSH密钥对 |'
- en: '| `--identity-file` or `–i` | This is the SSH identity file used to log in
    to the instances |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| `--identity-file` 或 `–i` | 这是用于登录实例的SSH身份文件 |'
- en: '| `--instance-type` or `–t` | This is a slave instance type, and this must
    be 64-bit |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| `--instance-type` 或 `–t` | 这是一个从节点实例类型，必须是64位 |'
- en: '| `--ebs-vol-size` | This is the size of an EBS volume, which is used to store
    the persistent HDFS data |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| `--ebs-vol-size` | 这是EBS卷的大小，用于存储持久的HDFS数据 |'
- en: '| `--master-instance-type` or `–m` | This is a master instance type, and this
    is must be 64-bit |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| `--master-instance-type` 或 `–m` | 这是主节点实例类型，必须是64位 |'
- en: '| `--zone` or `-z` | This is the Amazon availability zone to launch instances
    |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| `--zone` 或 `-z` | 这是启动实例的Amazon可用区 |'
- en: '| `--resume` | This flag resumes the installation from the previous run |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| `--resume` | 此标志从上次运行的地方恢复安装 |'
- en: 'We can use the login action to log in to the launched cluster by providing
    a cluster name, as follows:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用登录操作，通过提供集群名称登录已启动的集群，如下所示：
- en: '[PRE10]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The script also sets up an HDFS instance, which can be used via commands in
    the `/root/ephemeral-hdfs/` directory.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 该脚本还设置了一个HDFS实例，可以通过`/root/ephemeral-hdfs/`目录中的命令使用。
- en: 'Finally, we can terminate a cluster using the following command. Be sure to
    copy any important data before terminating the cluster:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以使用以下命令终止集群。在终止集群之前，请确保复制任何重要数据：
- en: '[PRE11]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The script also supports advanced functionalities, such as pausing and restarting
    clusters with EBS-backed instances. The Mesos documentation is a great source
    of information for any clarification. It is worth mentioning that Mesosphere ([http://mesosphere.com](http://mesosphere.com))
    also provides you with an easy way of creating an elastic Mesos cluster on Amazon
    EC2, Google Cloud, and other platforms and provides commercial support for Mesos.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 该脚本还支持高级功能，如暂停和重新启动具有EBS支持的集群。Mesos文档是获取任何澄清信息的极好来源。值得一提的是，Mesosphere（[http://mesosphere.com](http://mesosphere.com)）还为你提供了一种便捷的方式，在Amazon
    EC2、Google Cloud和其他平台上创建弹性Mesos集群，并为Mesos提供商业支持。
- en: Setting up a multi-node Mesos cluster on Google Compute Engine (GCE)
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Google Compute Engine（GCE）上设置多节点Mesos集群
- en: '**Google Compute Engine** (**GCE**) is Google''s **Infrastructure as a Service**
    (**IaaS**) offering, which allows users to run their computational workloads on
    virtual servers that are part of the same infrastructure that powers services,
    such as Gmail, YouTube, and Google''s search engine.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**Google Compute Engine**（**GCE**）是Google的**基础设施即服务**（**IaaS**）产品，允许用户在虚拟服务器上运行计算工作负载，这些服务器属于与Gmail、YouTube和Google搜索引擎等服务相同的基础设施。'
- en: Introduction to instance types
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实例类型介绍
- en: Machine types determine the virtualized hardware resources that are available
    to your instances, such as the amount of memory, virtual CPU, and the persistent
    disk limits an instance will have. A single virtual CPU maps to a single hardware
    hyper-thread on the host CPU that is running your instance.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 机器类型决定了虚拟化硬件资源的分配，包括实例所拥有的内存、虚拟CPU和持久磁盘的限制。一个虚拟CPU对应于主机CPU上的一个硬件超线程，该主机正在运行您的实例。
- en: Machine types are divided into different classes, and they are managed by the
    Google Compute Engine. Each machine type has its own pricing and is billed separately.
    For pricing information, review the price sheet.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 机器类型被分为不同的类别，由 Google Compute Engine 管理。每种机器类型都有自己的定价，并且会单独计费。有关定价的信息，请查看价格表。
- en: 'Available machine types include the following:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 可用的机器类型包括以下几种：
- en: Standard machine types
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标准机器类型
- en: High-CPU machine types
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高CPU机器类型
- en: High-memory machine types
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高内存机器类型
- en: Shared-core machine types
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 共享核心机器类型
- en: Launching machines
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动机器
- en: The easiest way to get started with Google Compute Engine is to create a virtual
    machine instance in the browser tool that Google Cloud Platform offers, the Google
    Developers Console, which can be found at [https://console.developers.google.com](https://console.developers.google.com).
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 启动 Google Compute Engine 的最简便方法是通过 Google Cloud Platform 提供的浏览器工具——Google 开发者控制台，在这里可以创建虚拟机实例，访问地址为
    [https://console.developers.google.com](https://console.developers.google.com)。
- en: Set up a Google Cloud Platform project
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置 Google Cloud Platform 项目
- en: 'We need to set up a Google Cloud Platform project before we begin to launch
    the machines:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始启动机器之前，需要先设置一个 Google Cloud Platform 项目：
- en: Go to the Google Developers Console. When prompted, select an existing project
    or create a new project.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 Google 开发者控制台。当提示时，选择一个已有项目或创建一个新项目。
- en: Tip
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The name you use must be between 1 and 63 characters with a lowercase letter
    as the first character. You can use a dash, lowercase letter, or digit for the
    remaining characters, but the last character cannot be a dash. Also, you should
    be aware that some resource identifiers (such as project IDs) might be retained
    beyond the life of your project. For this reason, avoid storing sensitive information
    in resource identifiers.
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您使用的名称必须介于 1 到 63 个字符之间，并且首字符必须是小写字母。剩余字符可以使用短横线、小写字母或数字，但最后一个字符不能是短横线。此外，您还应当注意，一些资源标识符（如项目ID）可能会在项目生命周期结束后被保留。因此，请避免将敏感信息存储在资源标识符中。
- en: Follow the prompts to set up billing. If you are new to the Google Cloud Platform,
    you have free trial credit to pay for your instances.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照提示设置账单。如果您是 Google Cloud Platform 的新用户，您将获得免费的试用信用额度，用于支付您的实例费用。
- en: Create the network and firewall rules
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建网络和防火墙规则
- en: 'After you set up your project and billing, go to the **Networking** section
    in the Developers Console:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在您设置好项目和账单后，前往开发者控制台中的 **网络** 部分：
- en: Click on **Create network** to create your first network and name it `mesos-network`:![Create
    the network and firewall rules](img/B05186_03_09.jpg)
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **创建网络** 来创建您的第一个网络，并将其命名为 `mesos-network`：![创建网络和防火墙规则](img/B05186_03_09.jpg)
- en: Once the network is added, click on the network and click on the **Add Firewall
    Rules** button.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦网络添加完成，点击该网络，再点击 **添加防火墙规则** 按钮。
- en: Add the rules to open TCP 22 and 5050 ports, this is usually a semicolon separated
    list consisting of `protocol:port`:![Create the network and firewall rules](img/B05186_03_10.jpg)
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加规则以打开 TCP 22 和 5050 端口，这通常是一个以分号分隔的列表，格式为 `协议:端口`：![创建网络和防火墙规则](img/B05186_03_10.jpg)
- en: Click on **Create**.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **创建**。
- en: Create the instances
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建实例
- en: 'After you set up your project and billing, go to the **VM instances** section
    in the Developers Console:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在您设置好项目和账单后，前往开发者控制台中的 **VM 实例** 部分：
- en: Click on **Create a new instance** to create your first instance.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **创建新实例** 来创建您的第一个实例。
- en: Set the **Name** field of your instance to `mesos-master`.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将实例的 **名称** 字段设置为 `mesos-master`。
- en: Under **Boot disk**, click on **Change** and select an **Ubuntu 14.04 LTS**
    boot disk image if this is not already specified by default. Compute Engine has
    several other operating systems for you to choose from, but we will use Ubuntu
    for this example. Save your changes:![Create the instances](img/B05186_03_11.jpg)
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **启动磁盘** 下，点击 **更改**，并选择 **Ubuntu 14.04 LTS** 启动磁盘镜像（如果默认没有指定）。Compute Engine
    提供了其他操作系统供您选择，但在本示例中我们将使用 Ubuntu。保存更改：![创建实例](img/B05186_03_11.jpg)
- en: Click on **Networking** and choose **mesos-network**, which we created in an
    earlier step.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **网络**，然后选择我们在之前步骤中创建的 **mesos-network**。
- en: Click on **Create** to create your instance. The page automatically refreshes
    after the instance starts.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **创建** 来创建你的实例。实例启动后，页面会自动刷新。
- en: 'Once we launch the `mesos-master` machine, now repeat the preceding steps three
    times to start our `mesos-slave1`, `mesos-slave2`, and for our cluster:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们启动了 `mesos-master` 机器，现在重复前面的步骤三次，启动我们的 `mesos-slave1`、`mesos-slave2`，以及我们的集群：
- en: '![Create the instances](img/B05186_03_12.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![创建实例](img/B05186_03_12.jpg)'
- en: Installing Mesos
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Mesos
- en: 'By this point, you will have three machines up and running in the Google Compute
    Cloud named `mesos-master`, `mesos-slave1`, and `mesos-slave2`:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止，你将在 Google Compute Cloud 上启动三台机器，分别命名为 `mesos-master`、`mesos-slave1` 和
    `mesos-slave2`：
- en: '![Installing Mesos](img/B05186_03_13.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![安装 Mesos](img/B05186_03_13.jpg)'
- en: 'Now, log in to all three machines:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，登录所有三台机器：
- en: '[PRE12]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now, we can install the dependency libraries and software packages on all three
    machines by typing in the following commands:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以通过输入以下命令，在三台机器上安装依赖库和软件包：
- en: '[PRE13]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Now, our environment is ready, and we can start building the Mesos binary.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们的环境已经准备好，可以开始构建 Mesos 二进制文件。
- en: You can build the Mesos binary from the master machine, and then copy the build
    to the slave machines instead of building from all the machines.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从主机器构建 Mesos 二进制文件，然后将构建好的文件复制到从机，而不是在所有机器上都进行构建。
- en: Downloading Mesos
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载 Mesos
- en: Follow the steps from the corresponding *Downloading Mesos* subsection under
    the *Setting up a multi-node Mesos cluster on Amazon Web Services (AWS)* section
    to download and extract Mesos on the master machine.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 按照 *在 Amazon Web Services (AWS) 上设置多节点 Mesos 集群* 部分下相应的 *下载 Mesos* 子章节中的步骤，在主机器上下载并解压
    Mesos。
- en: Building Mesos
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建 Mesos
- en: Building Mesos is discussed in the corresponding AWS section. You can follow
    the instructions listed there to build Mesos on the master machine.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 构建 Mesos 的过程已在相应的 AWS 部分中讨论。你可以按照那里列出的指示在主机器上构建 Mesos。
- en: We can now make sure that the installation is complete by looking at the Mesos
    Web UI running on port `5050` on the master machine.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以通过查看运行在主机器端口 `5050` 上的 Mesos Web UI 来确保安装完成。
- en: 'Open your browser and head to the following URL:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 打开浏览器，前往以下网址：
- en: '`http://146.148.62.84:5050`'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://146.148.62.84:5050`'
- en: 'And the Mesos Web UI will appear as follows:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，Mesos Web UI 将如下所示：
- en: '![Building Mesos](img/B05186_03_14.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![构建 Mesos](img/B05186_03_14.jpg)'
- en: Setting up a multi-node Mesos cluster on Microsoft Azure
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Microsoft Azure 上设置多节点 Mesos 集群
- en: Microsoft Azure is a cloud computing platform and infrastructure, which is created
    by Microsoft to build, deploy, and manage applications and services through a
    global network of Microsoft-managed and Microsoft partner-hosted datacenters.
    For more information check out [https://azure.microsoft.com](https://azure.microsoft.com).
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft Azure 是一个云计算平台和基础设施，由微软创建，用于通过微软管理的和微软合作伙伴托管的数据中心的全球网络来构建、部署和管理应用程序和服务。欲了解更多信息，请访问
    [https://azure.microsoft.com](https://azure.microsoft.com)。
- en: Introduction to instance types
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实例类型介绍
- en: 'Virtual machines are available in two tiers: basic and standard. Both types
    offer a choice of sizes, but the basic tier doesn''t provide some capabilities,
    such as load-balancing and autoscaling, which are available in the standard tier.
    The standard tier of sizes consists of different series: A, D, DS, G, and GS.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟机有两种级别：基本版和标准版。两种类型都提供多种大小选项，但基本版不提供一些功能，如负载均衡和自动扩展，而这些功能在标准版中可用。标准版有不同的系列：A、D、DS、G
    和 GS。
- en: Launching machines
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动机器
- en: 'To get started with development or test in the cloud, you will need an active
    Microsoft Azure subscription. If you don''t currently have a subscription, you
    can get a free one-month trial with $200 that you can spend on whatever Azure
    services you want to use:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始进行开发或在云中进行测试，你需要一个有效的 Microsoft Azure 订阅。如果你当前没有订阅，可以获得一个免费的一个月试用，并且获得 $200
    的额度，可以用于任何 Azure 服务：
- en: '![Launching machines](img/B05186_03_15.jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![启动机器](img/B05186_03_15.jpg)'
- en: 'Once you sign-up for Azure, visit the management portal to launch the instances.
    Azure management portal is available at the following URL: [https://manage.windowsazure.com](https://manage.windowsazure.com)'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你注册了 Azure，访问管理门户以启动实例。Azure 管理门户的网址如下：[https://manage.windowsazure.com](https://manage.windowsazure.com)
- en: Create a cloud service
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建云服务
- en: 'A cloud service in Azure gives you a public endpoint to access all the services
    (VMs and so on) that are running within the cloud service. An endpoint would look
    something like the following:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: Azure中的云服务为你提供一个公共端点，用于访问在云服务中运行的所有服务（例如虚拟机等）。一个端点可能如下所示：
- en: '[PRE14]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Following are the steps to create a cloud service:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是创建云服务的步骤：
- en: Click on the **CLOUD SERVICES** option from the left-hand side menu panel:![Create
    a cloud service](img/B05186_03_16.jpg)
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击左侧菜单面板中的**CLOUD SERVICES**选项：![创建云服务](img/B05186_03_16.jpg)
- en: Choose **NEW**, then click on **CLOUD SERVICE**, and then click on **QUICK CREATE**:![Create
    a cloud service](img/B05186_03_17.jpg)
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**NEW**，然后点击**CLOUD SERVICE**，接着点击**QUICK CREATE**：![创建云服务](img/B05186_03_17.jpg)
- en: We used the name `mesos-cluster`; hence, the public endpoint to access this
    service will become `mesos-cluster.cloudapp.net`.
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们使用了`mesos-cluster`这个名称，因此，访问此服务的公共端点将是`mesos-cluster.cloudapp.net`。
- en: Click on **Create** **Cloud Service**. Once you create the cloud service, you
    can see it, as follows:![Create a cloud service](img/B05186_03_18.jpg)
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**Create** **Cloud Service**。创建云服务后，你将能够看到它，如下所示：![创建云服务](img/B05186_03_18.jpg)
- en: Create the instances
  id: totrans-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建实例
- en: 'Once you have the cloud service ready, the next thing that you need to do is
    to start the Virtual machines for our Mesos cluster:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦云服务准备好，接下来的任务是启动用于Mesos集群的虚拟机：
- en: Click on **NEW**, then choose **COMPUTE**, and then choose **VIRTUAL MACHINE**:![Create
    the instances](img/B05186_03_19.jpg)
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**NEW**，然后选择**COMPUTE**，接着选择**VIRTUAL MACHINE**：![创建实例](img/B05186_03_19.jpg)
- en: Click on **FROM GALLERY**; this options gives us better choices and controls
    over the machine.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**FROM GALLERY**；这个选项为我们提供了更好的选择和机器控制。
- en: '**Choose an Image** and click on **UBUNTU**, and then choose the **Ubuntu Server
    14.04 LTS** image from the list and click on **Next**:![Create the instances](img/B05186_03_20.jpg)'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**选择镜像**并点击**UBUNTU**，然后从列表中选择**Ubuntu Server 14.04 LTS**镜像，点击**Next**：![创建实例](img/B05186_03_20.jpg)'
- en: '**Virtual Machine Naming**: In this step, you will name your virtual machine.
    This name will be the hostname of the machine that you are about to launch, so
    we will name it `mesos-master`. Choose the **SIZE** as **D3 (which is the 4 cores
    14GB Memory machine)** and type in the password, which you will use to log in
    to the machine. Now, click on **Next**:![Create the instances](img/B05186_03_21.jpg)'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**虚拟机命名**：在此步骤中，你需要为虚拟机命名。这个名称将成为你即将启动的机器的主机名，因此我们将其命名为`mesos-master`。选择**SIZE**为**D3（即4核14GB内存的机器）**，并输入你将用来登录该机器的密码。然后，点击**Next**：![创建实例](img/B05186_03_21.jpg)'
- en: '**Virtual Machine Configuration**: In this step you will choose the **mesos-cluster**
    cloud service, which we created earlier. Thus, the very machine that you will
    be launching for this exercise will fall under the `mesos-cluster` cloud service:![Create
    the instances](img/B05186_03_22.jpg)'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**虚拟机配置**：在此步骤中，你将选择我们之前创建的**mesos-cluster**云服务。因此，实际上你将为本次操作启动的虚拟机将属于`mesos-cluster`云服务：![创建实例](img/B05186_03_22.jpg)'
- en: Click on **Next** and hit the **Finish** button:![Create the instances](img/B05186_03_23.jpg)
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**Next**并点击**Finish**按钮：![创建实例](img/B05186_03_23.jpg)
- en: Now, follow the same steps to launch `mesos-slave1` and `mesos-slave2`.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，按照相同的步骤启动`mesos-slave1`和`mesos-slave2`。
- en: 'One thing to note here is that for every new machine that you are going to
    launch, if you want to access any of these machines from outside of the `mesos-cluster`
    endpoint, you will have to configure the SSH ports, as follows:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的一点是，对于每一台新虚拟机，如果你希望从`mesos-cluster`端点外部访问这些虚拟机，你必须配置SSH端口，如下所示：
- en: In the **Virtual machine configuration** Step, under **ENDPOINTS**, change the
    **PUBLIC PORT** value to another number:![Create the instances](img/B05186_03_24.jpg)
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**虚拟机配置**步骤中，在**ENDPOINTS**下，将**PUBLIC PORT**值更改为另一个数字：![创建实例](img/B05186_03_24.jpg)
- en: 'Let''s say the `mesos`-`master` public port was `22`; this means that suppose
    we perform the following:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设`mesos`-`master`的公共端口是`22`，这意味着假设我们执行如下操作：
- en: '[PRE15]'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'This will log in to the `mesos-master` machine. Now if you want to log in to
    `mesos-slave1`, then you will configure the public port as `44` so that you can
    log in to `mesos-slave1`, as follows:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将登录到`mesos-master`机器。现在，如果你想登录到`mesos-slave1`，你需要将公共端口配置为`44`，这样你就可以登录到`mesos-slave1`，如下所示：
- en: '[PRE16]'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Configuring the network
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置网络
- en: For security reasons, whenever you deploy a machine in the cloud, always make
    sure that you have opened up the necessary ports to the public.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 出于安全考虑，每当你在云中部署机器时，务必确保已将必要的端口开放给公众。
- en: 'Apart from the SSH port, we also need to open up the Mesos UI port, which runs
    on `5050`. To do this, perform these steps:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 SSH 端口，我们还需要开放 Mesos UI 端口，该端口运行在 `5050` 上。为此，执行以下步骤：
- en: From the Azure console, click on the **mesos-master** machine under the VMs
    provisioned and click on the **End Points**.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Azure 控制台中，点击已配置的虚拟机中的 **mesos-master** 机器，然后点击 **End Points**。
- en: Now click on the **ADD** button to add a specific port:![Configuring the network](img/B05186_03_25.jpg)
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在点击 **添加** 按钮来添加特定端口：![配置网络](img/B05186_03_25.jpg)
- en: Choose the **ADD A STAND-ALONE ENDPOINT** option and click on **Next**:![Configuring
    the network](img/B05186_03_26.jpg)
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **添加独立端点** 选项并点击 **下一步**：![配置网络](img/B05186_03_26.jpg)
- en: Name this `mesos-ui`, choose **TCP** from the protocol list, and use `5050`
    as **PUBLIC PORT**. This will allow you to access it with `http://mesos-cluster.cloudapp.net:5050`
    and assign port `5050` as **PRIVATE PORT**. Click on the **Finish** button:![Configuring
    the network](img/B05186_03_27.jpg)
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此命名为 `mesos-ui`，从协议列表中选择 **TCP**，并使用 `5050` 作为 **公共端口**。这样，你就可以通过 `http://mesos-cluster.cloudapp.net:5050`
    访问它，并将端口 `5050` 分配为 **私有端口**。点击 **完成** 按钮：![配置网络](img/B05186_03_27.jpg)
- en: Installing Mesos
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 Mesos
- en: 'By this point, you will have three machines up and running in the Azure cloud
    named `mesos-master`, `mesos-slave1`, and `mesos-slave2`:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 到这时，你将在 Azure 云中启动并运行三台机器，分别名为 `mesos-master`、`mesos-slave1` 和 `mesos-slave2`：
- en: '![Installing Mesos](img/B05186_03_28.jpg)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![安装 Mesos](img/B05186_03_28.jpg)'
- en: 'Now, log in to all three machines:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，登录到所有三台机器：
- en: '[PRE17]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'It is ideal to use an advanced Linux Terminal, such as **terminator** or **xterm,**
    to work on multiple machines because these terminals support broadcasting the
    command. You can type the command on a single window, and it will be executed
    on all three machines at once, thereby reducing configuration work:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 理想情况下，使用高级 Linux 终端，如 **terminator** 或 **xterm**，可以在多台机器上工作，因为这些终端支持广播命令。你可以在一个窗口中输入命令，然后它会在所有三台机器上同时执行，从而减少配置工作量：
- en: '![Installing Mesos](img/B05186_03_29.jpg)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![安装 Mesos](img/B05186_03_29.jpg)'
- en: 'Now, we can install the dependency libraries and software packages on all three
    machines by typing in the following commands:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以通过输入以下命令，在所有三台机器上安装依赖库和软件包：
- en: '[PRE18]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Now, our environment is ready, and we can start building the Mesos binary. You
    can build the Mesos binary from the master machine and then copy the build to
    the slave machines instead of building from all the machines.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们的环境已准备就绪，可以开始构建 Mesos 二进制文件。你可以在主机上构建 Mesos 二进制文件，然后将构建文件复制到从机上，而不是在所有机器上都进行构建。
- en: Downloading Mesos
  id: totrans-181
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载 Mesos
- en: Follow the steps from the corresponding *Downloading Mesos* subsection under
    the *Setting up a multi-node Mesos cluster on Amazon Web Services (AWS)* section
    to download and extract Mesos on the master machine.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 请按照 *在 Amazon Web Services (AWS) 上设置多节点 Mesos 集群* 部分下的 *下载 Mesos* 小节中的步骤，在主机上下载并解压
    Mesos。
- en: Building Mesos
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建 Mesos
- en: Building Mesos is discussed in the corresponding *Building Mesos* subsection
    under the *Setting up a multi-node Mesos cluster on Amazon Web Services (AWS)*
    section. You can follow the instructions listed there to build Mesos on the master
    machine.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: Mesos 的构建可以在 *构建 Mesos* 小节中找到，位于 *在 Amazon Web Services (AWS) 上设置多节点 Mesos 集群*
    部分下。你可以按照那里列出的说明在主机上构建 Mesos。
- en: 'Once we build this, then we can copy the build directory from the `mesos-master`
    machine to the `mesos-slave1` and `mesos-slave2` machines:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们构建完成，就可以将构建目录从 `mesos-master` 机器复制到 `mesos-slave1` 和 `mesos-slave2` 机器：
- en: '[PRE19]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Starting mesos-master
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动 mesos-master
- en: 'Issue the following command from the master machine to start `mesos-master`:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 在主机上执行以下命令来启动 `mesos-master`：
- en: '[PRE20]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'After the command, you can see the following logs appearing in the Terminal:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 执行该命令后，你可以在终端中看到以下日志：
- en: '[PRE21]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The output here lists the build version, various configurations that the master
    has used, and the master ID of the cluster. The slave process should be able to
    connect to the master. The slave process can specify the IP address or the hostname
    of the master by the `--master` option.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的输出列出了构建版本、主机使用的各种配置以及集群的主节点 ID。从属进程应该能够连接到主节点。从属进程可以通过 `--master` 选项指定主节点的
    IP 地址或主机名。
- en: Start mesos-slaves
  id: totrans-193
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动 mesos-slaves
- en: 'Issue the following commands on the slave machines to start the slave service:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: This output confirms the connection to the master and lists the slave resources.
    Now, the cluster is running with two slaves and is ready to run the frameworks.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: We can now make sure that the installation is complete by looking at the Mesos
    Web UI running on port `5050` on the master machine.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
- en: 'Open your browser and head on to the following URL: `http://mesos-cluster.cloudapp.net:5050`:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
- en: '![Start mesos-slaves](img/B05186_03_30.jpg)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
- en: Mesos commands
  id: totrans-200
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you look into the `bin` directory of Mesos, you can find the following executables,
    which can be used for various operations as listed here:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
- en: '| Command | Use |'
  id: totrans-202
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  id: totrans-203
  prefs: []
  type: TYPE_TB
- en: '| `mesos-local.sh` | This command launches an in-memory cluster within a single
    process. |'
  id: totrans-204
  prefs: []
  type: TYPE_TB
- en: '| `mesos-tests.sh` | This command runs the Mesos test case suite. |'
  id: totrans-205
  prefs: []
  type: TYPE_TB
- en: '| `mesos.sh` | This is a wrapper script, which is used to launch the Mesos
    commands. Running without any arguments shows all the available commands. |'
  id: totrans-206
  prefs: []
  type: TYPE_TB
- en: '| `gdb-mesos-*` | This command launches the corresponding processes in debugging
    mode using `gdb`. |'
  id: totrans-207
  prefs: []
  type: TYPE_TB
- en: '| `lldb-mesos-*` | This command launches the corresponding processes in debugging
    mode using `lldb`. |'
  id: totrans-208
  prefs: []
  type: TYPE_TB
- en: '| `valgrind-mesos-*` | This command launches the corresponding Valgrind instrumentation
    framework. |'
  id: totrans-209
  prefs: []
  type: TYPE_TB
- en: '| `mesos-daemon.sh` | This command starts/stops a Mesos daemon process. |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
- en: '| `mesos-start-cluster.sh` | This command starts the Mesos cluster on nodes
    in the `[install-prefix]/var/mesos/deploy/masters` and `[install-prefix]/var/mesos/deploy/slaves`
    files. |'
  id: totrans-211
  prefs: []
  type: TYPE_TB
- en: '| `mesos-stop-cluster.sh` | This command stops the Mesos cluster on nodes in
    the `[install-prefix]/var/mesos/deploy/masters` and `[install-prefix]/var/mesos/deploy/slaves`
    files. |'
  id: totrans-212
  prefs: []
  type: TYPE_TB
- en: '| `mesos-start-masters.sh` | This command starts the Mesos masters on nodes
    listed in the masters file. |'
  id: totrans-213
  prefs: []
  type: TYPE_TB
- en: '| `mesos-stop-masters.sh` | This command stops the Mesos masters on nodes listed
    in the masters file. |'
  id: totrans-214
  prefs: []
  type: TYPE_TB
- en: '| `mesos-start-slaves.sh` | This command starts the Mesos slaves on nodes listed
    in the slaves file. |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
- en: '| `mesos-stop-slaves.sh` | This command stops the Mesos slaves on nodes listed
    in the slaves file. |'
  id: totrans-216
  prefs: []
  type: TYPE_TB
- en: Testing the installation
  id: totrans-217
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We can now test the installation of our cluster by running the simple examples
    (C++, Java, and Python) that are shipped with Mesos:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The output will be as follows:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '![Testing the installation](img/B05186_03_31.jpg)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
- en: 'You can also look at the status of the tasks from the Web UI:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: '![Testing the installation](img/B05186_03_32.jpg)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
- en: '[PRE25]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Note
  id: totrans-226
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To build the example frameworks, make sure that you build the test suite by
    performing the following:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Setting up a multi-node Mesos cluster on your private datacenter
  id: totrans-229
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we will explain how to get Mesos up and running on your fully-managed
    datacenter. For the sake of simplicity, let's assume you have a datacenter having
    three machines, and you are going to set up Mesos on top of these. Let's also
    assume your datacenter VMs are running the **CentOS 6.6** Linux distribution.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: 'Consider that the following machines are opted in to install Mesos:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: We will choose `machine-a` as the Mesos master machine for our cluster and `machine-b`,
    `machine-c` will be running the slave processes.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: Installing Mesos
  id: totrans-234
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Below are the steps for installing a multi-node Mesos cluster on your private
    datacenter.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: Preparing the environment
  id: totrans-236
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We need to install all the dependencies and libraries for Mesos to run on the
    CentOS machines. For this to happen we need to log in to all three machines and
    type in the following commands:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-238
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Note that the following are the instructions for stock CentOS 6.6\. If you are
    using a different OS, please install the packages accordingly.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Downloading Mesos
  id: totrans-241
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Follow the steps from the corresponding *Downloading Mesos* subsection under
    the *Setting up a multi-node Mesos cluster on Amazon Web Services (AWS)* section
    to download and extract Mesos on the master machine.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: Building Mesos
  id: totrans-243
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We can follow the steps as mentioned in the previous section to build Mesos
    on the master machine.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, we can copy the build directory from `machine-a` to `machine-b` and `machine-c`
    from the master machine:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Starting mesos-master
  id: totrans-247
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Issue the following command from the master machine to start `mesos-master`:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Starting mesos-slaves
  id: totrans-250
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now, we can issue the following command from the slave machines to start the
    slave services:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: We can now make sure the installation is complete by looking at the Mesos Web
    UI running on port `5050` on the master machine.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
- en: 'Open your browser and head on to the following URL: `http://192.168.1.10:5050`:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
- en: '![Starting mesos-slaves](img/B05186_03_33.jpg)'
  id: totrans-255
  prefs: []
  type: TYPE_IMG
- en: Automating the process when you have many machines
  id: totrans-256
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We can repeat the previous procedure to manually start `mesos-slave` on each
    of the slave nodes to set up the cluster, but this is labor-intensive and error-prone
    for large clusters. Mesos includes a set of scripts in the `deploy` folder that
    can be used to deploy Mesos on a cluster. These scripts rely on SSH to perform
    the deployment.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
- en: We will set up a cluster with 10 slave nodes (`slave1`, `slave2`, `slave10`)
    and a master node (master).
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s configure our cluster to make sure that they have connectivity between
    them after installing all the prerequisites on all the nodes. The following commands
    will generate an SSH key and will copy them to all the slaves:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'We need to copy the Mesos build to all the nodes at the same location, as in
    the master:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Create a masters file in the `[install-prefix]/var/mesos/deploy/masters` directory
    with an editor of your choice to list the masters one per line, which in our case
    will be only the following one:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Similarly, the slaves file will list all the nodes that we want to be Mesos
    slaves:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Now, we can start the cluster with the `mesos-start-cluster` script and use
    `mesos-stop-cluster` to stop it:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: This in turn calls `mesos-start-masters` and `mesos-start-slaves` that will
    start the appropriate processes on the master and slave nodes. The script looks
    for any environment configurations in `[install-prefix]/var/mesos/deploy/mesos-deploy-env.sh`.
    Also, for better configuration management, the master and slave configuration
    options can be specified in separate files in `[install-prefix]/var/mesos/deploy/mesos-master-env.sh`
    and `[install-prefix]/var/mesos/deploy/mesos-slave-env.sh`.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
- en: Debugging and troubleshooting
  id: totrans-270
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we will look at how to troubleshoot and debug the common issues
    faced during setup.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
- en: Handling missing library dependencies
  id: totrans-272
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Sometimes, when you try to build Mesos on a brand new Linux VM, it may throw
    up errors in the configure step. An example is a missing `libz-dev` package:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Whenever you find an error such as the preceding one or something similar to
    a missing package, the next thing that you need to do is to install these missing
    packages and execute the `configure` command again.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, to resolve the missing `libz` library, you will have to type in the following
    on the *Ubuntu* machine:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'For *CentOS* flavors, the command will be as follows:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Issues with directory permissions
  id: totrans-280
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If Mesos is trying to write to `/var/lib/mesos` and if you missed assigning
    the correct permissions over the directory, this will end up with the following
    error:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'To overcome such issues, you will have to assign proper permission to this
    directory with the following command:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Missing Mesos library (libmesos*.so not found)
  id: totrans-285
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Whenever you get **libmesos*.so file not found**, then the best thing you can
    do is to *copy* the `libmesos*.so` from your Mesos installation to the `/lib`
    directory.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
- en: 'An example of such an error is as follows:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Debugging a failed framework
  id: totrans-289
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Sometimes, if your cluster is not configured properly or you have a buggy framework,
    then it will not succeed in its execution. In such a situation, you can open up
    the Mesos web interface and click on the failed **Framework** under the **Frameworks**
    tab, as follows:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
- en: '![Debugging a failed framework](img/B05186_03_34.jpg)'
  id: totrans-291
  prefs: []
  type: TYPE_IMG
- en: Here, you can see the tasks marked as **KILLED** for some reason, and your next
    step is to find out why.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the Mesos directory structure
  id: totrans-293
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: On every slave machine, by default, the Mesos work directory lies under `/tmp/mesos`,
    and under `/tmp/mesos/slaves/` will have `slave id`, which will keep track of
    the frameworks running under it inside the `frameworks` directory. The framework
    will contain the number of attempts that it made to execute the given job, and
    each run attempt's information will be logged in the `runs` directory. You can
    find the errors and standard output from the `stderr` and `stdout` files located
    under the runs.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
- en: 'Here''s an example directory structure with a single executor instance and
    multiple frameworks:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
- en: '![Understanding the Mesos directory structure](img/B05186_03_35.jpg)'
  id: totrans-296
  prefs: []
  type: TYPE_IMG
- en: Now, to track down our issue, you need to go to the corresponding framework
    ID and look in the `stderr` file, which will log the exact issue that this framework
    was facing.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s take the following example:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Now that you know the issue is with the directory permission, you can fix this
    using the steps described in the previous section.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
- en: Mesos slaves are not connecting with Mesos masters
  id: totrans-301
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Issues such as slaves failing to connect with the master can be resolved in
    two ways:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
- en: Looking at the slave console logs.
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can look at the console logs while the slave tries to connect to the master,
    and this will show connection failure messages, such as **Operation timed out**,
    **Connection refused**, **Network unreachable**, and so on.
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Making sure that the master and slaves bind to the correct network interface.
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Make sure that your master and slaves bind to the correct network interface;
    it is always safer to use `--ip` option to ensure this.
  id: totrans-306
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Launching multiple slave instances on the same machine
  id: totrans-307
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you try to launch multiple slave processes on the same machine, then you
    will end up with the following exception:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: If you need to launch more slave instances on a single machine, there is a way
    to accomplish this.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
- en: 'You can run one more slave but you have to specify a port and a different `workdir`
    using the following:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Note
  id: totrans-313
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Can Mesos `master` and `slave` nodes be deployed on the same machines?
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
- en: You can definitely run `master` and multiple `slave` processes on the same node.
    You can even run multiple `master` and `slave` processes on the same node, provided
    that you give them each unique ports, but this works best only for a test cluster.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-316
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we saw how to manually set up and run a Mesos cluster on the
    public cloud (AWS, GCE, and Azure) as well as on a private datacenter (on the
    premises). We also discussed common errors that are faced during the setup process
    and how these can be debugged and resolved efficiently.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will explore important scheduling and management frameworks,
    such as Marathon and Chronos, that often go hand in hand with Mesos and are integral
    components of the Mesos ecosystem.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
