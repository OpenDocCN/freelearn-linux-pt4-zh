["```\nPS> New-Item ./random/cities -ItemType Directory -Force\nPS> Set-Location ./random/\nPS> New-Item random-text.txt, himalayas.jpg, crunched-numbers.csv, bangalore.jpg, screenshot-001.png, screenshot-002.png, screenshot-003.png, demo.doc, my-plugin.rb, ./cities/mumbai.html, ./cities/nyc.html, ./cities/cairo.html, ./cities/dubai.html, ./cities/paris.html -ItemType File\n```", "```\nPS> Set-Location ./random/\n```", "```\nPS> Get-ChildItem -Path .\n```", "```\nPS> Get-ChildItem -Path . | Select-Object LastWriteTime, Length, Name\n```", "```\nPS> Get-ChildItem -Path . | Select-Object Name, Length, LastWriteTime\n```", "```\nPS> Get-ChildItem -Path . | Select-Object Name, Length, @{Name='Modified'; Expression={$_.LastWriteTime}}\n```", "```\nPS> Get-ChildItem -Path . | Select-Object Name, Length, @{Name='Modified'; Expression={$_.LastWriteTime.Year}}\n```", "```\nPS> Get-ChildItem -Path . | select Name, Length, @{Name='DaysSinceModification'; Expression={[math]::Round(((Get-Date) - $_.LastWriteTime).TotalDays)}}\n```", "```\nPS> (Get-ChildItem -Path .).Count\n```", "```\nPS> (gci).Count\n```", "```\nPS> Get-Help Select-Object\n```", "```\nPS> Get-ChildItem . | Select-Object -First 5\n```", "```\nPS> Get-ChildItem . | Select-Object -Last 5\n```", "```\nPS> Get-ChildItem . | Select-Object -Skip 3\n```", "```\nPS> Get-ChildItem . | Select-Object -SkipLast 2\n```", "```\nPS> Get-ChildItem . | Select-Object -Index 3\n```", "```\nPS> Get-ChildItem . | select -Property Name, LastWriteTime -First 4\n```", "```\nPS> Get-Process | Select-Object -Property * -First 1\n```", "```\nPS> Get-Process | Select-Object -Property Name, Id, Threads\n```", "```\nPS> Get-Process pwsh | Select-Object -ExpandProperty Threads\n```", "```\nPS> Get-Process pwsh | Select-Object -ExpandProperty Threads | Select-Object -Property Id, PriorityLevel, StartTime\n```", "```\nPS> Get-Process pwsh | Select-Object -ExpandProperty Threads | Select-Object -ExpandProperty Id\n```", "```\nPS> Set-Location ~/random\nPS> Get-ChildItem -Path .\n```", "```\nPS> Get-ChildItem -Path . | Where-Object -Property Length -GT -Value 0\n```", "```\nPS> Get-ChildItem -Path . | Where-Object -FilterScript {$_.Length -GT 0 -and $_.Extension -EQ '.jpg'}\n```", "```\nPS> Get-ChildItem -Path . | Where-Object -FilterScript {$_.Length -GT 0 -and $_.Extension -EQ '.jpg' -and $_.Name -CMatch '^c'}\n```", "```\nPS> Get-ChildItem -Path . | Where-Object -FilterScript {$_.Length -GT 0 -and $_.Extension -EQ '.jpg' -and $_.Name -CMatch '^c' -and $_.LastWriteTime.Minute -LT 30}\n```", "```\nPS> Set-Location ~/random\n```", "```\nPS> Get-ChildItem -Path . -File\n```", "```\nPS> gci -File\n```", "```\nPS> Get-ChildItem . -File | Group-Object Extension\n```", "```\nPS> gci -File | group Extension\n```", "```\nPS> Get-ChildItem -Path . -File | Group-Object -Property Extension | Select-Object -Property Name, Count\n```", "```\nPS> Get-ChildItem -Path . -File | Group-Object -Property Extension -NoElement\n```", "```\nPS> Get-ChildItem -Path . -File | Group-Object -Property Extension | Where-Object Name -EQ .jpg | Select-Object -ExpandProperty Group\n```", "```\nPS> Get-ChildItem . -File | Group-Object<Space><Tab>\n```", "```\nPS> Get-ChildItem -Path .\n```", "```\nPS> Get-ChildItem -Path . -File\n```", "```\nPS> Get-ChildItem -Path . -File | Sort-Object -Property Length\n```", "```\nPS> gci . -File | sort Length\n```", "```\nPS> Get-ChildItem -Path . -File | Sort-Object -Property Length -Descending\n```", "```\nPS> Get-ChildItem -Path . -File | Sort-Object -Property Length -Descending -Top 3\n```", "```\nPS> $($i = 0; while ($i -lt 520) {(-join ((65..90) + (97..122) | Get-Random -Count 8 | ForEach-Object {[char]$_})).ToString(); $i++}) -join ' ' | Out-File ./random-text-1.txt; Start-Sleep -Seconds 60; $($i = 0; while ($i -lt 500) {(-join ((65..90) + (97..122) | Get-Random -Count 8 | ForEach-Object {[char]$_})).ToString(); $i++}) -join ' ' | Out-File ./random-text-2.txt\n```", "```\nPS> Get-ChildItem -Path . -File | Sort-Object -Property Length, Name\n```", "```\nPS> Get-ChildItem -Path . -File | Sort-Object -Property Length, Name -Descending\n```", "```\nPS> Get-ChildItem -Path . -File | Group-Object -Property Extension\n```", "```\nPS> Get-ChildItem -Path . -File | Group-Object -Property Extension | Where-Object Count -GT 1\n```", "```\nPS> Get-ChildItem -Path . -File | Group-Object -Property Extension | Where-Object Count -GT 1 | ForEach-Object {$_.Group | Sort-Object Length -Bottom 2}\n```", "```\nPS> Get-ChildItem -Path . -File | Group-Object -Property Extension | Where-Object Count -GT 1 | ForEach-Object {$_.Group | Sort-Object Length -Bottom 2} | Remove-Item -WhatIf\n```", "```\nPS> Get-Help Get-Item -Parameter Path\n```", "```\nPS> '/home/ram/random' | Get-Item\n```", "```\nPS> Get-Help Get-Date -Parameter *\n```", "```\nPS> '21 June 2018' |  Get-Date\n```", "```\nPS> Get-Item . | Select-Object FullName\n```", "```\nPS> Get-Item . | Select-Object FullName | Get-ChildItem\n```", "```\nPS> Get-Item . | Select-Object @{Name = 'LiteralPath'; Expression = {$_.FullName}}\n```", "```\nPS> Get-Item . | Select-Object @{Name = 'LiteralPath'; Expression = {$_.FullName}} | Get-ChildItem\n```", "```\nPS> Get-ChildItem -Path . | Select-Object Name, FullName, CreationTime, LastWriteTime, Extension, Length\n```", "```\nPS> Get-ChildItem -Path . | Select-Object Name, FullName, CreationTime, LastWriteTime, Extension, Length | Export-Csv ./file-list.csv\n```", "```\nPS> Get-Content ./file-list.csv\n```", "```\nPS> Import-Csv ./file-list.csv\n```", "```\nPS> Import-Csv ./file-list.csv | Get-Member\n```", "```\nPS> Get-ChildItem . | Get-Member\n```", "```\nPS> (Import-Csv ./file-list.csv).CreationTime\n```", "```\nPS> (Import-Csv ./file-list.csv).CreationTime.Year\n```", "```\nPS> (Import-Csv ./file-list.csv).CreationTime | Get-Member\n\n    TypeName: System.String\n```", "```\nPS> Get-Date (Import-Csv ./file-list.csv | Select-Object CreationTime -First 1).CreationTime\n```", "```\nPS> Get-ChildItem -Path . | Export-Clixml ./file-list.xml\n```", "```\nPS> Import-Clixml ./file-list.xml\n```", "```\nPS> Import-Clixml ./file-list.xml | Get-Member\n```", "```\nPS> (Import-Clixml ./file-list.xml).CreationTime | Get-Member\n\n    TypeName: System.DateTime\n```", "```\nPS> (Import-Clixml ./file-list.xml).CreationTime.Year\n```"]