- en: Chapter 2. Troubleshooting Active Processes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章：故障排除活动进程
- en: A deeper understanding of the underlying active processes in CentOS 7 is an
    essential skill for any troubleshooter. From high load averages to slow response
    times, system overloads to dead and dying processes, there comes a time when every
    server may start to feel sluggish, act impoverished, or fail to respond, and as
    a consequence, it will require your immediate attention.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 对CentOS 7中底层活动进程的深入理解是任何故障排除人员的必要技能。从高负载平均值到响应时间缓慢，从系统过载到死掉或将死的进程，每台服务器都会经历开始变得迟缓、表现不佳或无法响应的时刻，因此，它将需要你立即关注。
- en: 'In this chapter, we will:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将：
- en: Learn about memory management, swap, swappiness, and thrashing
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解内存管理、交换空间、交换性和抖动
- en: Learn how to analyze active processes using the `vmstat`, `top`, and `ps` commands
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解如何使用`vmstat`、`top`和`ps`命令分析活动进程
- en: Learn how to monitor the server with `iotop`, `iostat`, and `lsof`
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解如何使用`iotop`、`iostat`和`lsof`监控服务器
- en: Learn about system load and `systemd`
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解系统负载和`systemd`
- en: Learn how to find process IDs, identify parent process IDs and orphaned processes,
    and initiate the various forms of the `kill` signal
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解如何查找进程ID、识别父进程ID和孤儿进程，并启动各种类型的`kill`信号
- en: Tuning server performance with memory management and swap
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过内存管理和交换空间调整服务器性能
- en: 'Regardless of how you look at it, the question of memory usage remains critical
    to the life cycle of a system, and whether you are maintaining system health or
    troubleshooting a particular service or application, you will always need to remember
    that the use of memory is a critical resource to your system. For this reason,
    we will begin by calling the `free` command in the following way:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你怎么看，内存使用问题始终是系统生命周期中的关键问题。无论你是在维护系统健康状态还是排除特定服务或应用程序的故障，你都需要记住，内存的使用是系统的关键资源。基于这一原因，我们将首先通过以下方式调用`free`命令：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The main elements of the preceding command will look similar to this:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 前面命令的主要元素看起来将类似于以下内容：
- en: '[PRE1]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'In the example shown, I have used the `-m` option to ensure that the output
    is formatted in megabytes. This makes it easier to read, but for the sake of troubleshooting,
    rather than trying to understand every numeric value shown, let''s reduce the
    scope of the original output to highlight the relevant area of concern:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在所示示例中，我使用了`-m`选项来确保输出的结果以兆字节为单位进行格式化。这样可以更容易阅读，但为了排除故障，我们不需要尝试理解每个显示的数字值，而是将原始输出的范围缩小，突出显示相关问题区域：
- en: '[PRE2]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The importance of this line is based on the fact that it accounts for the associated
    buffers and caches to illustrate what memory is currently being used and what
    is held in reserve. Where the first value indicates how much memory is being used,
    the second value tells us how much memory is available to our applications. In
    the example shown, this instance translates into 164 MB of used memory and 1673
    MB of available memory.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这一行的重要性在于，它考虑了相关的缓冲区和缓存，以说明当前使用了多少内存以及多少内存被保留。第一个值表示使用的内存量，第二个值则告诉我们应用程序可用的内存量。在所示示例中，这意味着使用了164
    MB内存，剩余1673 MB内存可用。
- en: 'Bearing this in mind, let me draw your attention to the final line in order
    that we can examine the importance of swap:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 记住这一点，我请你注意最后一行，以便我们可以研究交换空间的重要性：
- en: '[PRE3]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Swapping typically occurs when memory usage is impacting performance. As we
    can see from the preceding example, the first value tells us that there is a total
    amount of system swap set at 2063 MB, with the second value indicating how much
    swap is being used (0 MB), while the third value shows the amount of swap that
    is still available to the system as a whole (2063 MB). So yes, based on the example
    data shown here, we can conclude that this is a healthy system, and no swap is
    being used, but while we are here, let's use this time to discover more about
    the swap space on your system.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 交换通常发生在内存使用影响性能时。正如我们从前面的示例中看到的，第一个值告诉我们系统交换总量为2063 MB，第二个值表示使用了多少交换空间（0 MB），而第三个值显示系统整体上还有多少交换空间可用（2063
    MB）。因此，是的，基于此示例数据，我们可以得出结论：这是一个健康的系统，当前没有使用交换空间，但在这里，我们利用这段时间来进一步了解系统的交换空间。
- en: 'To begin, we will revisit the contents of the `proc` directory and reveal the
    total and used swap size by typing the following command:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将重新访问`proc`目录，并通过输入以下命令来揭示交换空间的总大小和已用大小：
- en: '[PRE4]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Assuming that you understand the output shown, you should then investigate
    the level of swappiness used by your system with the following command:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你理解了显示的输出，那么你可以通过以下命令来调查系统使用的交换性水平：
- en: '[PRE5]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Having done this, you will now see a numeric value between the ranges of 0-100\.
    The numeric value is a percentage and it implies that, if your system has a value
    of 30, for example, it will begin to use swap memory at 70 percent occupation
    of RAM.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，你现在应该会看到一个介于0到100之间的数字值。该数字值是百分比，意味着例如如果你的系统值为30，它将在RAM占用率达到70%时开始使用交换内存。
- en: The default for all Linux systems is usually set with a notional value between
    30 to 60, but you can use either of the following commands to temporarily change
    and modify the swappiness of your system.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 所有Linux系统的默认值通常设置在30到60之间，但你可以使用以下命令中的任何一个来临时更改和修改系统的交换性。
- en: 'This can be achieved by replacing the value of `X` with a numeric value from
    1-100 by typing:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过输入以下命令，将`X`的值替换为1到100之间的数字值来实现：
- en: '[PRE6]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Or more specifically, this can also be achieved with:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，更具体地说，也可以通过以下方式实现：
- en: '[PRE7]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: If you change your mind at any point, then you have two options in order to
    ensure that no permanent changes have been made. You can either repeat one of
    the preceding two commands and return the original values, or issue a full system
    reboot.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在任何时候改变主意，你有两个选项来确保没有做出永久更改。你可以重复执行前面两条命令中的任何一条，将值恢复到原来的状态，或者进行一次完整的系统重启。
- en: 'On the other hand, if you want to make the change persist, then you should
    edit the `/etc/sysctl.conf` file and add your swappiness preferences in the following
    way:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，如果你想让更改生效并持久化，那么你应该编辑`/etc/sysctl.conf`文件，并以如下方式添加你的交换性偏好：
- en: '[PRE8]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: When complete, simply save and close the file to ensure that the changes take
    effect.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，只需保存并关闭文件，以确保更改生效。
- en: The level of swappiness controls the tendency of the kernel to move a process
    out of the physical RAM on to a swap disk. This is memory management at work,
    but it is important to realize that swapping will not occur immediately, as the
    level of swappiness is actually expressed as a percentage value. For this reason,
    the process of swapping should be viewed more as a measurement of preference when
    using the cache, and as every administrator will know, there is an option for
    you to clear the swap by using the commands `swapoff -a` and `swapon -a` to achieve
    the desired result.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 交换性值控制内核将进程从物理RAM移到交换磁盘的倾向。这是内存管理的一部分，但需要意识到，交换并不会立即发生，因为交换性值实际上是以百分比的形式表示的。因此，交换的过程应该更多地视为在使用缓存时的偏好度量，正如每个管理员都知道的那样，你可以通过使用命令`swapoff
    -a`和`swapon -a`来清除交换，以达到所需的效果。
- en: The golden rule is to realize that a system displaying a level of swappiness
    close to the maximum value (100) will prefer to begin swapping inactive pages.
    This is because a value of 100 is a representative of 0 percent occupation of
    RAM. By comparison, the closer your system is to the lowest value (0), the less
    likely swapping is to occur as 0 is representative of 100 percent occupation of
    RAM.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 黄金法则是要意识到，系统的交换性（swappiness）接近最大值（100）时，它会倾向于开始交换不活跃的页面。这是因为值为100代表着RAM的占用率为0%。相比之下，系统的交换性越接近最低值（0），发生交换的可能性就越小，因为0代表着RAM的占用率为100%。
- en: Generally speaking, we would all probably agree that systems with a very large
    pool of RAM would not benefit from aggressive swapping. However, and just to confuse
    things further, let's look at it in a different way. We all know that a desktop
    computer will benefit from a low swappiness value, but in certain situations,
    you may also find that a system with a large pool of RAM (running batch jobs)
    may also benefit from a moderate to aggressive swap in a fashion similar to a
    system that attempts to do a lot but only uses small amounts of RAM. So, in reality,
    there are no hard and fast rules; the use of swap should be based on the needs
    of the system in question rather than looking for a single solution that can be
    applied across the board.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，我们大多数人可能都会同意，拥有大量RAM的系统并不需要激进的交换。但为了让事情变得更加复杂，让我们换个角度来看。我们都知道，桌面电脑会从较低的交换性值中受益，但在某些情况下，你可能也会发现，拥有大量RAM的系统（运行批处理作业）也可能受益于适度到激进的交换，这与一个尝试做很多事情但仅使用少量RAM的系统类似。所以，实际上，并没有硬性规定；交换的使用应根据具体系统的需求，而不是寻找一个可以普遍适用的单一解决方案。
- en: Taking this further, special care and consideration should be taken while making
    changes to the swapping values as RAM that is not used by an application is used
    as disk cache. In this situation, by decreasing swappiness, you are actually increasing
    the chance of that application not being swapped-out, and you are thereby decreasing
    the overall size of the disk cache. This can make disk access slower. However,
    if you do increase the preference to swap, then because hard disks are slower
    than memory modules, it can lead to a slower response time across the overall
    system. Swapping can be confusing, but by knowing this, we can also appreciate
    the hidden irony of swappiness. As Newton's third law of motion states, *for every
    action, there is an equal and opposite reaction*, and finding the optimum swappiness
    value may require some additional experimentation.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 更进一步，在修改交换值时应特别小心，因为未被应用程序使用的内存会作为磁盘缓存使用。在这种情况下，通过减少交换性，你实际上是在增加该应用程序不被交换出去的概率，从而减少磁盘缓存的整体大小，这可能会导致磁盘访问变慢。然而，如果增加交换的优先级，由于硬盘比内存模块慢，它可能会导致整个系统响应时间变慢。交换操作可能会令人困惑，但了解这些之后，我们也能体会到交换性的隐含讽刺。正如牛顿的第三定律所说，*每一个动作都会有一个相等且相反的反应*，而找到最优的交换性值可能需要一些额外的实验。
- en: Managing memory with vmstat
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用vmstat管理内存
- en: 'A different aspect of memory management can be achieved by using the `vmstat`
    command. Considered to be a summary reporting feature associated with memory,
    processes, and paging, `vmstat` can be seen in action by typing:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种内存管理的方式可以通过使用`vmstat`命令来实现。`vmstat`被认为是与内存、进程和分页相关的摘要报告功能，输入以下命令即可看到其运行：
- en: '[PRE9]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Having used the `-a` option to call on all active and inactive memory, the
    most endearing columns shown under vmstat''s output are best described as follows:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`-a`选项调用所有活动和非活动内存时，`vmstat`输出中最有意义的列可以描述如下：
- en: '`si`: This column shows the value swapped in from disk'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`si`: 该列显示从磁盘交换进来的值'
- en: '`so`: This column shows the value swapped out to disk'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`so`: 该列显示交换到磁盘的值'
- en: '`bi`: This column shows the value sent to block devices'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bi`: 该列显示发送到块设备的值'
- en: '`bo`: This column shows the value received from block devices'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bo`: 该列显示从块设备接收的值'
- en: '`us`: This column shows the user time'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`us`: 该列显示用户时间'
- en: '`sy`: This column shows the system time'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sy`: 该列显示系统时间'
- en: '`id`: This column shows the idle time'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`id`: 该列显示空闲时间'
- en: 'The display does look quite confusing to begin with, but for our purposes,
    we want to concentrate on the following columns contained under the swap column:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 显示刚开始看起来可能会有些困惑，但对于我们的目的来说，我们需要集中注意以下在交换列下的几列：
- en: '[PRE10]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Where `free` shows the current allocation of free memory, `si` shows page-ins
    while `so` provides page-outs. Sadly, viewing it by this method alone can be seen
    to be a little too restrictive for our needs, and so the most effective way to
    look at this is by managing the output with a delay option being added to the
    original command like this:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 其中`free`显示当前的空闲内存分配，`si`显示页面调入，而`so`提供页面调出。遗憾的是，单纯通过这种方式查看它，发现它对我们的需求有些局限，因此最有效的查看方法是通过在原始命令中添加延迟选项来管理输出，如下所示：
- en: '[PRE11]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Here, `X` is a numeric time value expressed in seconds and `N` indicates the
    number of times we would like to call `vmstat` itself; a working demonstration
    of this code format would be as follows:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`X`是以秒为单位的数字时间值，`N`表示我们希望调用`vmstat`的次数；此代码格式的工作示范如下：
- en: '[PRE12]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'In this example, I have added the values `3` and `5`, in which the first number
    indicates a delay in seconds followed by the second number calling the number
    of results. In this instance, `vmstat 3 5` will run `vmstat` with a `3`-second
    delay, and it will show a total of `5` updates like this:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我添加了值`3`和`5`，其中第一个数字表示延迟的秒数，第二个数字表示调用的结果次数。在这种情况下，`vmstat 3 5`将以`3`秒的延迟运行`vmstat`，并将显示`5`次更新，如下所示：
- en: '[PRE13]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Alternatively, you can keep `vmstat` running at intervals of `N` number of
    seconds by reducing the complexity of the command format to:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你可以通过简化命令格式，减少复杂性，保持`vmstat`每`N`秒运行一次：
- en: '[PRE14]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'So, by running `vmstat 10`, `vmstat` will continue to refresh its report of
    all activity every `10` seconds. However, for more details regarding the time
    of occurrence, you can use the `-t` option like this in order to call a similar
    report with a timestamp:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，通过运行`vmstat 10`，`vmstat`会每`10`秒刷新一次所有活动的报告。然而，如果你需要了解事件发生的时间，可以使用`-t`选项，如下所示，调用一个带有时间戳的类似报告：
- en: '[PRE15]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Finally, as the default `vmstat` command will make a report in kilobytes, to
    avoid confusion it is often better to ask `vmstat` to display a report using megabytes
    with the following expression:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，由于默认的`vmstat`命令会以千字节为单位生成报告，为避免混淆，通常最好使用以下表达式让`vmstat`以兆字节为单位显示报告：
- en: '[PRE16]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Page-ins (`si`) are generally expected when you have started an application
    and the information is "paged-in". However, occasional or intermittent page outs
    (`so`) also happen, and this is particularly so during periods when the kernel
    is freeing up memory. Occurrence of regular page outs (`so`), or the growth of
    regular page outs is not wanted. Eventually, should the regularity of these events
    increase exponentially, then the event will adopt a behavior that is generally
    referred to as thrashing.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 当你启动一个应用程序并且信息被“调入”时，通常会发生页面调入（`si`）。然而，偶尔或间歇性的页面调出（`so`）也会发生，尤其是在内核释放内存的时期。定期的页面调出（`so`）或页面调出的增长是我们不希望看到的。如果这些事件的频率呈指数增长，那么这些事件就会表现为通常称为“抖动”的行为。
- en: Thrashing is an event that happens when a system is seen to be spending more
    time managing paging than providing applications or services. It is not necessarily
    a dire event in itself, but it does indicate that the troubleshooter should re-evaluate
    the value of particular operations and consider trying to spread them out over
    different periods of the working day. You can always buy more RAM for your system
    and this may assist you in the short term, but this will not narrow down the cause,
    nor will it stop the event from repeating. So, in order to make our lives a little
    easier, the next step is to use the `top` command.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 抖动是指系统在管理页面调度的时间超过了为应用程序或服务提供支持的时间。这不一定是一个严重的事件，但它表明故障排除人员应重新评估某些操作的价值，并考虑将它们分散到工作日的不同时间段进行处理。你总是可以为系统购买更多的RAM，这可能在短期内有所帮助，但这并不能缩小问题的根源，也无法阻止事件的重复发生。因此，为了让我们的工作稍微轻松一点，下一步是使用`top`命令。
- en: Checking the system load with the top command
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`top`命令检查系统负载
- en: 'The top command can be called at any time by typing:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 可以随时通过输入以下命令调用`top`命令：
- en: '[PRE17]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The `top` command is the standard command for checking system load (RAM/MEM
    and CPU). It contains a lot of information related to tasks associated with the
    kernel; the display is updated in real-time and the highest load factors are expressed
    as a percentage of CPU or MEM. However, it is important to realize that `top`
    may take these values above the expected percentile range. This is because all
    individual cores are expressed as a percentage and multiple instances of these
    cores are totaled. For example, a dual core system may have the first core at
    70 percent and the second core at 60 percent, and in this instance, `top` may
    show a combined result of 130 percent, but you will not know the individual values.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '`top`命令是检查系统负载（RAM/MEM 和 CPU）的标准命令。它包含许多与内核相关的任务信息；显示内容会实时更新，最高负载因素以CPU或MEM的百分比表示。然而，重要的是要意识到，`top`可能会将这些值显示为超过预期的百分位范围。这是因为所有单独的核心都以百分比表示，且这些核心的多个实例会被加总。例如，一个双核系统可能会显示第一个核心为70%，第二个核心为60%，在这种情况下，`top`可能会显示合计130%的结果，但你将无法得知每个核心的具体值。'
- en: 'You can use the *M* key to sort `top` by memory, but as you will see, rather
    than simply showing the amount of free memory (as seen with the `free` command),
    `top` will provide the swap details you may need in order to make a judgment call
    against certain operations and tasks. Moreover, you can also extend the functionality
    of `top` by customizing the output to show a particular user like this:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用*M*键按内存对`top`进行排序，但正如你所见，`top`不仅会显示空闲内存的数量（如通过`free`命令看到的那样），它还会提供你在做某些操作和任务判断时可能需要的交换区细节。此外，你还可以通过定制输出内容来扩展`top`的功能，以显示特定用户，如下所示：
- en: '[PRE18]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'As you will notice, `top` will automatically refresh; therefore, try to observe
    it for a few minutes before making any decisions. To assist in this process, you
    can request that `top` exits after `10` cycles like this:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所注意到的，`top` 会自动刷新；因此，在做出任何决定之前，尝试观察它几分钟。为了帮助这个过程，你可以要求 `top` 在 `10` 次循环后退出，如下所示：
- en: '[PRE19]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: When using `top`, you should always be aware that certain processes are spawned.
    Known as `child-processes` they will have a tendency to be displayed individually
    (`httpd` and `php-fpm` are good examples of this), and you can expect that it
    is these services that will be consuming the most amount of memory.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `top` 时，你应该始终注意某些进程是由 `child-processes`（子进程）生成的，这些进程往往会单独显示（`httpd` 和 `php-fpm`
    是这方面的典型例子），你可以预期这些服务会消耗最多的内存。
- en: Having said that, even though a series of child-processes can be seen using
    a significant amount of RAM, you should avoid the habit of adding the `%MEM` column
    together as these processes often use shared memory. So, in many respects, you
    should be aware that the values shown can be misleading, and for this reason,
    the results provided by `top` should not form the only body of evidence you will
    want to review before making a final decision.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管可以看到一系列子进程使用了大量的内存，但你应该避免将 `%MEM` 列的数值相加，因为这些进程通常使用共享内存。因此，在很多情况下，你应该注意到所显示的值可能会具有误导性，出于这个原因，`top`
    提供的结果不应作为你在做出最终决定之前唯一的依据。
- en: 'You can learn more about the top command by reviewing the manual like this:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过查看手册来了解更多关于 `top` 命令的信息，如下所示：
- en: '[PRE20]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Monitoring disk I/O with iotop
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 `iotop` 监控磁盘 I/O
- en: Every administrator knows that a system can begin to slow down as a result of
    heavy disk I/O activities. However, in the role of a troubleshooter you will probably
    want to know which processes or (in the case of multi-user systems) which users
    are the culprits that and it is for this reason, you will want to turn to `iotop`—a
    tool that shows a list of the most I/O intensive processes in real time in a top-like
    interface.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 每个管理员都知道，系统可能因为磁盘 I/O 活动过于繁重而开始变慢。然而，作为故障排除人员，你可能希望知道是哪些进程或（在多用户系统中）哪些用户是罪魁祸首，正因如此，你会想要使用
    `iotop`——一个实时显示最消耗 I/O 的进程列表的工具，它以类似 `top` 的界面呈现。
- en: 'To begin with, you will need to install `iotop` by typing:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要通过输入以下命令来安装 `iotop`：
- en: '[PRE21]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The download is only small, and to start a discovery session, simply use the
    following command:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 下载非常小，要开始一个发现会话，只需使用以下命令：
- en: '[PRE22]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Running `iotop` without any arguments will result in a list of all existing
    processes regardless of their disk I/O activities, so if you want `iotop` to only
    report on processes that are committed to disk I/O activity, you should use the
    following instead:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 运行没有任何参数的 `iotop` 会列出所有现有的进程，无论它们是否有磁盘 I/O 活动，因此，如果你只希望 `iotop` 报告那些有磁盘 I/O
    活动的进程，你应该改用以下命令：
- en: '[PRE23]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: The output is verbose as it works in a way similar to the `top` command, so
    familiarity should make you feel at home. However, unlike `top`, `iotop` displays
    a list of all processes and threads and a measurement of disk activity (total
    disk read and actual disk read) in order so that you can quickly identify what
    is impacting any current I/O activity across the server.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 输出非常详细，因为它的工作方式类似于 `top` 命令，所以熟悉后你会感到得心应手。然而，与 `top` 不同，`iotop` 显示了所有进程和线程的列表，以及磁盘活动的测量（总磁盘读取和实际磁盘读取），以便你可以快速识别哪些进程正在影响服务器上的当前
    I/O 活动。
- en: 'You can learn more about `iotop` by reviewing the manual like this:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过查看手册了解更多关于 `iotop` 的信息，如下所示：
- en: '[PRE24]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Checking processes with the ps command
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 `ps` 命令检查进程
- en: 'For most troubleshooters who want a more complete picture of the processes
    running on their system, we can employ the `ps` command in the following way:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 对于大多数希望更全面了解其系统中运行的进程的故障排除人员，我们可以使用 `ps` 命令，如下所示：
- en: '[PRE25]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Alternatively, the information can be displayed in a user-friendly, tree-view
    mode like this:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，信息可以以用户友好的树状视图模式显示，如下所示：
- en: '[PRE26]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'If you prefer a little less detail, try:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望获得更少的细节，可以尝试：
- en: '[PRE27]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Of course, there are always a lot more options that we can use with `ps`. For
    example, the command can be piped and applied with `grep` or `tail`, and you can
    use explicit statements such as `ps -e` (to show every process on the system).
    Alternatively, you can target a specific process by typing the following command:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们可以在`ps`命令中使用更多的选项。例如，命令可以通过管道传输并与`grep`或`tail`结合使用，你还可以使用诸如`ps -e`这样的显式语句（显示系统中的所有进程）。或者，你也可以通过输入以下命令来定位特定进程：
- en: '[PRE28]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Moreover, you can even extend its usage to show every process (except those
    running as root) with the following variation:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你甚至可以扩展其用法，显示所有进程（除了以root身份运行的进程），通过以下变化：
- en: '[PRE29]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'For a specific user, you can use:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 对于特定用户，你可以使用：
- en: '[PRE30]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Finally, you can then obtain additional security information and output the
    results to a text file in the following way:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你可以获得更多的安全信息，并将结果输出到文本文件中，方式如下：
- en: '[PRE31]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Based on this, I think you would agree in saying that `ps` is not only useful
    but also its flexibility and customization do make it an important tool in the
    troubleshooter's kitbag. The `ps` command can be used to display a snapshot of
    the current processes on the system, but for the purpose of this chapter, our
    interest lies in the fact that the `ps` command will also provide us with the
    relevant process ID. Otherwise referred to in its simpler form as the `PID`, this
    essential piece of information will be revisited in just a few moments after we
    digress a little, to learn a little more about system load.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 基于这一点，我想你会同意说`ps`不仅有用，而且它的灵活性和可定制性使其成为故障排除工具箱中一个重要的工具。`ps`命令可以用于显示系统当前进程的快照，但对于本章来说，我们更关心的是`ps`命令还能为我们提供相关的进程ID。通常简化称为`PID`，这个关键信息将在我们稍作岔开后重新提到，我们将深入了解系统负载。
- en: Checking performance with iostat and lsof
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用iostat和lsof检查性能
- en: 'Having already discovered how `vmstat` can be used to provide statistics related
    to memory management, when troubleshooting performance-related issues an overburdened
    CPU is yet another area of concern. For this purpose, we can use the `iostat`
    command like this:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在已经发现`vmstat`可以用于提供与内存管理相关的统计信息后，解决与性能相关的问题时，过载的CPU是另一个需要关注的领域。为此，我们可以像下面这样使用`iostat`命令：
- en: '[PRE32]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'However, to display a more interactive CPU utilization report, you can use
    the `–c` option (and provide a numeric value measured in seconds, such as 5 seconds)
    like this:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，要显示更互动的CPU利用率报告，你可以使用`–c`选项（并提供一个以秒为单位的数值，如5秒），像这样：
- en: '[PRE33]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Most of the columns should be self-explanatory, but if the system is getting
    busy, you will see an increase in `%iowait`, which is used to report on an increase
    in waiting time for any I/O requests to be completed. Based on this, if the server
    is transferring or copying a large amount of files, you may also notice additional
    time being spent at the system level as files will be moved in and out of relevant
    disk partitions. A feature that is particularly useful when attempting to monitor
    storage devices in your search for possible bottlenecks is using `iostat` with
    a numeric value as follows:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数列应该是自解释的，但如果系统变得繁忙，你会看到`%iowait`的增加，这用于报告任何I/O请求完成等待时间的增加。基于此，如果服务器正在传输或复制大量文件，你可能还会注意到额外的时间花费在系统级别，因为文件将被移动进出相关的磁盘分区。在尝试监控存储设备以寻找可能的瓶颈时，`iostat`与数值参数结合使用是特别有用的，如下所示：
- en: '[PRE34]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'As you can see, to check on the read/write operations we have simply added
    a polling option to `iostat`. Of course, you can combine this knowledge with the
    insights gained from running either `vmstat –d` or `vmstat –p <partition_name>`,
    but this command can also be improved with a timestamp by using the `–t` option
    like this:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，要检查读/写操作，我们只是简单地为`iostat`添加了一个轮询选项。当然，你可以将这些知识与运行`vmstat –d`或`vmstat
    –p <partition_name>`命令获得的见解结合使用，但通过使用`–t`选项，你还可以为该命令添加时间戳，像这样：
- en: '[PRE35]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'You should be aware that `iostat` reports run continuously until the process
    is cancelled. However, from these observations, it should now make your use of
    `top` and all the other commands much more satisfying. The technique of using
    the following command is particularly welcomed by the fact that you can review
    a list of open files with the `lsof` command:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该知道`iostat`报告会持续运行，直到该进程被取消。然而，通过这些观察，现在使用`top`和其他所有命令应该会让你感到更加满意。使用以下命令的技巧特别受欢迎，因为你可以通过`lsof`命令查看打开的文件列表：
- en: '[PRE36]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Note
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: When using `lsof`, it is important to note that the first column will show you
    which command is using the file in question, the process ID (`PID`) of that command,
    the user, and the name of the file that is open.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `lsof` 时，重要的是要注意，第一列将显示使用相关文件的命令、该命令的进程 ID（`PID`）、用户以及打开的文件名。
- en: So, with that in mind, and realizing how every command discussed in this chapter
    is connected, let's return to the important subject of system load.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，考虑到这一点，并意识到本章中讨论的每个命令都是相互关联的，我们回到系统负载这一重要话题。
- en: Calculating the system load
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算系统负载
- en: The system load is a measure of the amount of processing a computer system is
    currently performing. It is not the perfect way to measure computer performance,
    but it does provide the troubleshooter with the additional evidence they need
    to fix a system.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 系统负载是衡量计算机系统当前正在执行的处理量的指标。它不是衡量计算机性能的完美方式，但它确实为故障排除人员提供了修复系统所需的附加证据。
- en: 'The expression most commonly associated with calculating load is:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 与负载计算最常相关的表达式是：
- en: '*Actual Load = Total Load (uptime) / Number of CPUs*'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '*实际负载 = 总负载（运行时间）/ CPU 数量*'
- en: 'As you probably know the number of CPUs, you can calculate the uptime by reviewing
    the results of the `top` command or by typing:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所知，CPU 数量已知，你可以通过查看 `top` 命令的结果或输入以下命令来计算运行时间：
- en: '[PRE37]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'The output of the preceding command may look like this:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 前述命令的输出可能如下所示：
- en: '[PRE38]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: The server load is expressed as a value based on 1 minute, 5 minute, and 15
    minute read times. So, by looking at the final three values in the preceding output,
    we can see that, for this system, the average load was `0.01` (at 1 minute), `0.02`
    (at 5 minutes), and `0.05` (at 15 minutes).
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器负载是基于 1 分钟、5 分钟和 15 分钟的读取时间表示的数值。因此，通过查看前述输出中的最后三个值，我们可以看到，对于该系统，平均负载为 `0.01`（1
    分钟时），`0.02`（5 分钟时）和 `0.05`（15 分钟时）。
- en: At this current time, the example system shows no sign of fatigue, but as the
    cause of high-load can vary, this is not to say that the current state of this
    machine will not alter during the course of a working day. High-load can be the
    result of database connectivity, disk input and output, poor coding, visitor frequencies
    for websites, power-hungry applications or e-commerce sites, scripted attacks,
    spam, batch jobs, and much more. Should you encounter this situation, simply run
    the `top` command and begin troubleshooting your system in the usual way. In most
    cases, a short-term solution can be found (especially if your website is receiving
    a lot of visitors during peak intervals), but only a long-term plan will stop
    this from happening again.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 当前，示例系统没有出现疲劳的迹象，但由于高负载的原因可能各异，这并不意味着该机器的当前状态在工作日内不会发生变化。高负载可能是数据库连接、磁盘输入输出、编码不良、网站访问频率、电力消耗大的应用程序或电子商务网站、脚本攻击、垃圾邮件、批处理作业等原因引起的。如果你遇到这种情况，只需运行
    `top` 命令，并按常规方式开始排查系统。大多数情况下，可以找到短期解决方案（尤其是在网站在高峰时段接收到大量访问时），但只有长期计划才能防止这种情况再次发生。
- en: When troubleshooting load, it is important to know that, when load increases,
    processors are queued, and if there are multiple processors, the load is evenly
    distributed across the server's cores to balance the work. The ideal load for
    a server is generally agreed to be set at a value of 1\. This does not mean you
    should hit the panic button as soon as this value is reached or exceeded, but
    if you do begin to see double-digit responses for some period of time, then yes,
    expect that a sluggish server (load value > 1) may now begin to crack under the
    weight of its workload (load value > 10).
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在故障排查负载时，重要的是要知道，当负载增加时，处理器会排队，如果有多个处理器，负载会均匀分布到服务器的各个核心上以平衡工作负载。通常认为，服务器的理想负载值应设置为
    1\。这并不意味着一旦达到或超过此值就需要立即按下“紧急按钮”，但如果你在一段时间内开始看到双位数的响应，那么是的，期望服务器（负载值 > 1）可能会在工作负载（负载值
    > 10）的压力下开始出现问题。
- en: So with this in mind, let's return to the subject of process IDs.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，考虑到这一点，我们回到进程 ID 的话题。
- en: Discovering process IDs with pgrep and systemctl
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 pgrep 和 systemctl 查找进程 ID
- en: 'Rather than using `ps`, another way of discovering a specific process ID is
    to use the `pgrep` command like this:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 与其使用 `ps`，另一种查找特定进程 ID 的方法是使用 `pgrep` 命令，如下所示：
- en: '[PRE39]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: In most cases, the use of this command will reveal the process ID or `PID`.
    However, by using this approach, it is also possible that the output will provide
    more than one value. So remember, if an application (such as `httpd` or `ssh`)
    provides one or more process IDs, you can safely assume that the lowest number
    (which represents the first `PID` generated by the system) is the most important.
    This value is known as the `PPID` or parent process ID.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，使用此命令将显示进程ID或`PID`。但是，采用这种方法时，输出也可能提供多个值。所以请记住，如果某个应用程序（如`httpd`或`ssh`）提供了一个或多个进程ID，你可以安全地假设最小的数字（代表系统生成的第一个`PID`）是最重要的。这个值被称为`PPID`或父进程ID。
- en: 'On the other hand, a more succinct method could be based on taking advantage
    of `systemd` by using the following command:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，一种更简洁的方法可以通过利用`systemd`，使用以下命令：
- en: '[PRE40]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'The output of the preceding command will look similar to the following sample,
    and as we can see, the main `PID` for Apache is `2413`:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 前述命令的输出将类似于以下示例，正如我们所见，Apache的主`PID`是`2413`：
- en: '[PRE41]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Linux is all about options, and yes, there are many more ways to obtain the
    required process ID (`PID`) or parent process ID (`PPID`), but we will not wade
    through all the options (both old and new). Based on speed alone, I think you
    will agree that taking advantage of the `systemd` command has its own advantages.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: Linux注重选项，没错，有许多方法可以获取所需的进程ID（`PID`）或父进程ID（`PPID`），但我们不会遍历所有选项（包括旧的和新的）。单就速度而言，我想你会同意，利用`systemd`命令有其自身的优势。
- en: More about systemd
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多关于systemd的信息
- en: The `systemd` system and service manager is responsible for controlling how
    services are managed on CentOS 7\. Things are very different now, and the consequence
    of this is to appreciate that, not only have the locations of the scripts changed
    to `/usr/lib/systemd/systemd`, but the older commands are to be depreciated to
    such an extent that (eventually) they will be expunged.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '`systemd`系统和服务管理器负责控制CentOS 7上如何管理服务。现在的情况发生了很大变化，结果是，你需要认识到，脚本的位置已经更改为`/usr/lib/systemd/systemd`，而旧的命令将被弃用到一定程度（最终）它们将被彻底移除。'
- en: 'For example, when using `systemd` to check the status or start or stop a service,
    you can use one of the following commands:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，当使用`systemd`检查状态或启动或停止服务时，你可以使用以下命令之一：
- en: '[PRE42]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Moreover, rather than using `chkconfig`, to enable and disable a service during
    the boot sequence, you should now use:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，与其使用`chkconfig`来启用和禁用引导序列中的服务，现在你应该使用：
- en: '[PRE43]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'You may be in two minds about this approach, but rather than dwelling on the
    subject of change, let''s consider how we can use the new commands to make troubleshooting
    an active process a little easier. To do this, we shall begin with a simple approach:
    listing all current services with the following command:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能对这种方法持有不同意见，但与其纠结于变化的主题，不如考虑如何利用新命令让故障排除变得更加轻松。为此，我们将从一个简单的方法开始：列出当前所有服务，使用以下命令：
- en: '[PRE44]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Everything is now known as a unit, and by realizing this, the same command
    can be modified to show all mounts as well:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，一切都被称为单元，认识到这一点后，相同的命令还可以修改为显示所有挂载：
- en: '[PRE45]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Meanwhile, invoking the following command can be used to list all service dependencies:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 与此同时，调用以下命令可以列出所有服务的依赖项：
- en: '[PRE46]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Furthermore, `systemd` also comes with its own version of `top`, and in order
    to view the processes that are associated with a particular service, you can use
    the `system-cgtop` command like this:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，`systemd`还自带了自己的`top`版本，若要查看与特定服务相关的进程，可以使用`system-cgtop`命令，如下所示：
- en: '[PRE47]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'As you will notice, this command provides a summary of all associated processes
    and indicates the path, number of tasks, percentage of CPU used, memory allocation,
    and the relative inputs and outputs. It works in a way similar to `top`, but it
    is different and its use can be modified to output a recursive list of service
    content as follows:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你会注意到的，这个命令提供了所有相关进程的总结，并显示了路径、任务数量、CPU使用百分比、内存分配以及相对的输入和输出。它的工作方式类似于`top`，但不同的是，它的使用可以修改为输出递归的服务内容列表，如下所示：
- en: '[PRE48]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'The output will look something like this:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将类似于以下内容：
- en: '[PRE49]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: So, as we can see, in many respects `systemd` is verbose but it does save us
    time when attempting to retrieve certain information regarding an active process.
    At this stage, it is important to realize that we have only scratched the surface
    of `systemd`, but, for the purpose of this chapter, I am sure your continued experience
    of using it will be both productive and enjoyable.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，正如我们所看到的，在许多方面，`systemd`虽然冗长，但它确实在试图获取有关活动进程的某些信息时节省了我们的时间。在这个阶段，重要的是要意识到，我们只触及了`systemd`的皮毛，但就本章的目的而言，我相信你继续使用它的过程将会既富有成效又愉快。
- en: Issuing the kill signal
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发出终止信号
- en: 'The most common reason behind wanting to know a process ID is to pass this
    information to the `kill` command. The process ID does have other uses, but our
    primary concern is to remove a problematic service or application by issuing a
    termination signal (`SIGTERM`) to the relevant daemon as follows:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 想要了解进程ID的最常见原因是将这些信息传递给`kill`命令。进程ID确实有其他用途，但我们的主要关注点是通过发出终止信号（`SIGTERM`）来移除有问题的服务或应用程序，如下所示：
- en: '[PRE50]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'The `kill` signal instructs the process to terminate, thereby enabling the
    process in question to perform some basic cleanup operations and exit in an orderly
    fashion. This approach is known as a "safe kill". However, depending on your situation,
    a better solution can be to force a service or application to hang up, and thereby
    enable an automatic reload of the daemon as follows:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '`kill`信号指示进程终止，从而使相关进程能够执行一些基本的清理操作，并以有序的方式退出。这种方法被称为“安全终止”。然而，根据你的具体情况，更好的解决方案可能是强制让服务或应用程序挂起，从而启用守护进程的自动重新加载，如下所示：'
- en: '[PRE51]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'This command is known as a `SIGHUP` or `hangover` command. On the other hand,
    if the process has seemingly crashed, and a safe kill or reload operation fails
    to make any difference, then by passing the following command, you will be able
    to literally kill the process in question:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令被称为`SIGHUP`或`挂起`命令。另一方面，如果进程似乎崩溃了，并且安全终止或重新加载操作无法产生任何效果，那么通过传递以下命令，你将能够直接终止该进程：
- en: '[PRE52]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: The use of option `9` in this command infers a signal kill (`SIGKILL`), and
    unlike the original kill order (`SIGTERM`), this alternative version is issued
    to the kernel directly, thereby killing the process in a far more abrupt manner.
    There are no cleanup operations or safe exits with this command, and as a consequence,
    it is known as a "forced kill".
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在此命令中使用选项`9`表示发出一个信号终止（`SIGKILL`），与原始的终止命令（`SIGTERM`）不同，这个替代版本直接发给内核，从而以更为突然的方式终止进程。此命令没有清理操作或安全退出，因此它被称为“强制终止”。
- en: 'Finally, to take the issue of a "forced kill" one stage further, it is also
    quite proper to use the `pkill` command with the following syntax:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，为了进一步解决“强制终止”问题，使用`pkill`命令也是完全合适的，语法如下：
- en: '[PRE53]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Alternatively, you can use the `pgrep` command to ensure that all processes
    associated with the relevant search term are removed:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，你可以使用`pgrep`命令确保所有与相关搜索词相关的进程被移除：
- en: '[PRE54]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: So, having covered the most common usage of the `kill` command, one technique
    that remains is based on the need to deal with an orphaned process.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，涵盖了`kill`命令的最常见用法后，剩下的技巧之一是基于需要处理孤儿进程。
- en: Dealing with an orphaned process
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理孤儿进程
- en: Orphaned processes are not common issues, but they do arise, and in order to
    deal with them, we must begin by matching the displayed `PID` or `PPID` with the
    ID used by the `init` process itself. Using `ps` will reveal that both have a
    `PPID` equal to `1` and being honest, you will probably realize that there is
    little difference between an orphaned process and a daemon process with the exception
    that an orphaned process arises out of error. So, the golden rule here is to remember
    that an orphaned process can be spotted using a relatively simple technique, and
    it can be killed in the standard way.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 孤儿进程并不是常见的问题，但它们确实会发生，解决这些问题的第一步是通过匹配显示的`PID`或`PPID`与`init`进程本身使用的ID。使用`ps`命令可以显示，二者的`PPID`都等于`1`。说实话，你可能会意识到孤儿进程和守护进程之间几乎没有区别，唯一的区别是孤儿进程是由于错误产生的。因此，这里的黄金法则是记住，通过一个相对简单的技巧可以识别孤儿进程，并且它可以通过标准方式终止。
- en: Orphans can arise for a number of reasons and, though they have been adopted
    by `init`, you will find that they are still executing commands. For this reason,
    orphaned processes are potentially dangerous as they continue to starve your system
    of resources. In some instances, having too many orphans can overload the `init`
    process and cause a system hang. This is not common, but the removal of such erroneous
    daemons is an important task for the troubleshooter, and should your system be
    prone to such instances, this is something you should keep a constant eye on.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 孤儿进程可能由多种原因引起，尽管它们已经被 `init` 进程采纳，你仍然会发现它们在执行命令。因此，孤儿进程是潜在的危险，因为它们会继续占用系统资源，导致系统资源短缺。在某些情况下，过多的孤儿进程可能会导致
    `init` 进程过载，并造成系统挂起。虽然这种情况不常见，但删除这些错误的守护进程对于故障排除人员来说是一个重要任务，如果你的系统容易发生这种情况，那么你应该时刻关注它。
- en: Summary
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: The purpose of this chapter was to elucidate some concepts with regards to troubleshooting
    active processes and in this respect we have managed to sweep through the hallways
    of `swap`, `vmstat`, `top`, `ps`, process IDs, `kill`, and `pkill`. Of course,
    there are many more utilities at your disposal but for most troubleshooters (beginner
    and experienced alike), knowing how to monitor and measure memory usage; determining
    server load; watching for power-greedy applications, services, or users; removing
    orphaned processes; and using `systemd` will easily serve you well before we move
    forward and consider an approach to troubleshoot the network.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的目的是阐明一些关于故障排除活动进程的概念，在这方面，我们已经涵盖了 `swap`、`vmstat`、`top`、`ps`、进程 ID、`kill`
    和 `pkill` 等内容。当然，除了这些工具，你还可以使用更多其他工具，但对于大多数故障排除人员（无论是初学者还是有经验的），了解如何监控和测量内存使用情况；确定服务器负载；关注耗电的应用程序、服务或用户；删除孤儿进程；以及使用
    `systemd`，这将对你大有帮助，之后我们可以继续考虑如何故障排除网络问题。
- en: References
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考资料
- en: 'The Red Hat Enterprise Linux 7 System Administrators guide: [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/chap-Managing_Services_with_systemd.html](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/chap-Managing_Services_with_systemd.html)'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Red Hat Enterprise Linux 7 系统管理员指南: [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/chap-Managing_Services_with_systemd.html](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/chap-Managing_Services_with_systemd.html)'
- en: 'The Swappiness Wikipedia page: [http://en.wikipedia.org/wiki/Swappiness](http://en.wikipedia.org/wiki/Swappiness)'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Swappiness 维基百科页面: [http://en.wikipedia.org/wiki/Swappiness](http://en.wikipedia.org/wiki/Swappiness)'
- en: 'The `vmstat` command Wikipedia page: [http://en.wikipedia.org/wiki/Vmstat](http://en.wikipedia.org/wiki/Vmstat)'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`vmstat` 命令维基百科页面: [http://en.wikipedia.org/wiki/Vmstat](http://en.wikipedia.org/wiki/Vmstat)'
- en: 'The `iostat` command Wikipedia page: [http://en.wikipedia.org/wiki/Iostat](http://en.wikipedia.org/wiki/Iostat)'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`iostat` 命令维基百科页面: [http://en.wikipedia.org/wiki/Iostat](http://en.wikipedia.org/wiki/Iostat)'
- en: 'The `lsof` command Wikipedia page: [http://en.wikipedia.org/wiki/Lsof](http://en.wikipedia.org/wiki/Lsof)'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lsof` 命令维基百科页面: [http://en.wikipedia.org/wiki/Lsof](http://en.wikipedia.org/wiki/Lsof)'
- en: 'The `kill` command Wikipedia page: [http://en.wikipedia.org/wiki/Kill_(command)](http://en.wikipedia.org/wiki/Kill_(command))'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kill` 命令维基百科页面: [http://en.wikipedia.org/wiki/Kill_(command)](http://en.wikipedia.org/wiki/Kill_(command))'
- en: 'The `pkill` command Wikipedia page: [http://en.wikipedia.org/wiki/Pkill](http://en.wikipedia.org/wiki/Pkill)'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pkill` 命令维基百科页面: [http://en.wikipedia.org/wiki/Pkill](http://en.wikipedia.org/wiki/Pkill)'
- en: 'SysVinit to Systemd Cheatsheet: [https://fedoraproject.org/wiki/SysVinit_to_Systemd_Cheatsheet](https://fedoraproject.org/wiki/SysVinit_to_Systemd_Cheatsheet)'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'SysVinit 到 Systemd 备忘单: [https://fedoraproject.org/wiki/SysVinit_to_Systemd_Cheatsheet](https://fedoraproject.org/wiki/SysVinit_to_Systemd_Cheatsheet)'
- en: 'The Orphans Wikipedia page: [http://en.wikipedia.org/wiki/Orphan_process](http://en.wikipedia.org/wiki/Orphan_process)'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '孤儿进程维基百科页面: [http://en.wikipedia.org/wiki/Orphan_process](http://en.wikipedia.org/wiki/Orphan_process)'
