["```\nEXTRA_IMAGE_FEATURES += \"dbg-pkgs\"\n```", "```\n$ ulimit -c unlimited\n\n```", "```\n$ ulimit -a\n-f: file size (blocks)             unlimited\n-t: cpu time (seconds)             unlimited\n-d: data seg size (kb)             unlimited\n-s: stack size (kb)                8192\n-c: core file size (blocks)        unlimited\n-m: resident set size (kb)         unlimited\n-l: locked memory (kb)             64\n-p: processes                      5489\n-n: file descriptors               1024\n-v: address space (kb)             unlimited\n-w: locks                          unlimited\n-e: scheduling priority            0\n-r: real-time priority             0\n\n```", "```\n# wvdial\n--> WvDial: Internet dialer version 1.61\n--> Initializing modem.\n--> Sending: ATZ\nATZ\nOK\n--> Sending: ATQ0 V1 E1 S0=0 &C1 &D2 +FCLASS=0\nATQ0 V1 E1 S0=0 &C1 &D2 +FCLASS=0\nOK\n--> Sending: AT+CGDCONT=1,\"IP\",\"internet\"\nAT+CGDCONT=1,\"IP\",\"internet\"\nOK\n--> Modem initialized.\n--> Idle Seconds = 3000, disabling automatic reconnect.\nSegmentation fault (core dumped)\n\n```", "```\n $ ulimit -c unlimited\n $ sleep 30 &\n $ kill -QUIT <sleep-pid>\n\n```", "```\n    $ cd /opt/poky/1.7.1/\n    $ source environment-setup-cortexa9hf-vfp-neon-poky-linux- gnueabi\n\n    ```", "```\n    $ arm-poky-linux-gnueabi-gdb /opt/yocto/fsl-community- bsp/wandboard-quad/tmp/work/cortexa9hf-vfp-neon-poky-linux- gnueabi/wvdial/1.61-r0/packages-split/wvdial- dbg/usr/bin/.debug/wvdial core\n    GNU gdb (GDB) 7.7.1\n    Copyright (C) 2014 Free Software Foundation, Inc.\n    License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\n    This is free software: you are free to change and redistribute it.\n    There is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\n    and \"show warranty\" for details.\n    This GDB was configured as \"--host=x86_64-pokysdk-linux -- target=arm-poky-linux-gnueabi\".\n    Type \"show configuration\" for configuration details.\n    For bug reporting instructions, please see:\n    <http://www.gnu.org/software/gdb/bugs/>.\n    Find the GDB manual and other documentation resources online at:\n    <http://www.gnu.org/software/gdb/documentation/>.\n    For help, type \"help\".\n    Type \"apropos word\" to search for commands related to \"word\"...\n    Reading symbols from /opt/yocto/fsl-community-bsp/wandboard- quad/tmp/work/cortexa9hf-vfp-neon-poky-linux- gnueabi/wvdial/1.61-r0/packages-split/wvdial- dbg/usr/bin/.debug/wvdial...done.\n    [New LWP 1050]\n\n    warning: Could not load shared library symbols for 14 libraries, e.g. /usr/lib/libwvstreams.so.4.6.\n    Use the \"info sharedlibrary\" command to see the complete listing.\n    Do you need \"set solib-search-path\" or \"set sysroot\"?\n    Core was generated by `wvdial'.\n    Program terminated with signal SIGSEGV, Segmentation fault.\n    #0  0x76d524c4 in ?? ()\n    ```", "```\n    (gdb) set sysroot /opt/poky/1.7.1/sysroots/cortexa9hf-vfp- neon-poky-linux-gnueabi/\n    Reading symbols from /opt/poky/1.7.1/sysroots/cortexa9hf-vfp- neon-poky-linux-gnueabi/usr/lib/libwvstreams.so.4.6...Reading symbols from /opt/poky/1.7.1/sysroots/cortexa9hf-vfp-neon-poky-linux- gnueabi/usr/lib/.debug/libwvstreams.so.4.6...done.\n    done.\n    Loaded symbols for /opt/poky/1.7.1/sysroots/cortexa9hf-vfp- neon-poky-linux-gnueabi/usr/lib/libwvstreams.so.4.6\n    Reading symbols from /opt/poky/1.7.1/sysroots/cortexa9hf-vfp- neon-poky-linux-gnueabi/usr/lib/libwvutils.so.4.6...Reading symbols from /opt/poky/1.7.1/sysroots/cortexa9hf-vfp-neon- poky-linux-gnueabi/usr/lib/.debug/libwvutils.so.4.6...done.\n    done.\n    [...]\n    Loaded symbols for /opt/poky/1.7.1/sysroots/cortexa9hf-vfp- neon-poky-linux-gnueabi/lib/libdl.so.2\n    ```", "```\n    (gdb) bt\n    #0  0x76d524c4 in WvTaskMan::_stackmaster () at utils/wvtask.cc:416\n    #1  0x00000000 in ?? ()\n    ```", "```\nEXTRA_IMAGE_FEATURES += \"tools-sdk dbg-pkgs tools-debug\"\n```", "```\n$ cd /opt/yocto/fsl-community-bsp/\n$ source setup-environment wandboard-quad\n$ bitbake core-image-minimal-dev\n\n```", "```\n    $ gdb wvdial\n\n    ```", "```\n    (gdb) run\n    Starting program: /usr/bin/wvdial\n    Cannot access memory at address 0x0\n    Cannot access memory at address 0x0\n\n    Program received signal SIGILL, Illegal instruction.\n    0x7698afe8 in ?? () from /lib/libcrypto.so.1.0.0\n    (gdb) sharedlibrary libcrypto\n    Symbols already loaded for /lib/libcrypto.so.1.0.0\n    ```", "```\n    (gdb) bt\n    #0  0x7698afe8 in ?? () from /lib/libcrypto.so.1.0.0\n    #1  0x769878e8 in OPENSSL_cpuid_setup () from /lib/libcrypto.so.1.0.0\n    #2  0x76fe715c in ?? () from /lib/ld-linux-armhf.so.3\n    Cannot access memory at address 0x48535540\n    ```", "```\n    (gdb) c\n    Continuing.\n    --> WvDial: Internet dialer version 1.61\n    --> Initializing modem.\n    --> Sending: ATZ\n    ATZ\n    OK\n    --> Sending: ATQ0 V1 E1 S0=0 &C1 &D2 +FCLASS=0\n    ATQ0 V1 E1 S0=0 &C1 &D2 +FCLASS=0\n    OK\n    --> Sending: AT+CGDCONT=1,\"IP\",\"internet\"\n    AT+CGDCONT=1,\"IP\",\"internet\"\n    OK\n    --> Modem initialized.\n    --> Idle Seconds = 3000, disabling automatic reconnect.\n\n    Program received signal SIGSEGV, Segmentation fault.\n    0x76db74c4 in WvTaskMan::_stackmaster() () from /usr/lib/libwvbase.so.4.6\n    ```", "```\nDEBUG_BUILD = \"1\"\n```", "```\nEXTRA_IMAGE_FEATURES += \"tools-debug\"\n```", "```\nEXTRA_IMAGE_FEATURES += \"dbg-pkgs\"\n```", "```\n$ bitbake -c populate_sdk core-image-minimal\n\n```", "```\n    # gdbserver localhost:1234 /usr/bin/wvdial\n    Process wvdial created; pid = 879\n    Listening on port 1234\n\n    ```", "```\n    $ cd /opt/poky/1.7.1/\n    $ source environment-setup-cortexa9hf-vfp-neon-poky-linux- gnueabi\n\n    ```", "```\n    $ arm-poky-linux-gnueabi-gdb /opt/poky/1.7.1/sysroots/cortexa9hf-vfp-neon-poky-linux- gnueabi/usr/bin/.debug/wvdial\n    Reading symbols from /opt/poky/1.7.1/sysroots/cortexa9hf-vfp- neon-poky-linux-gnueabi/usr/bin/.debug/wvdial...done.\n    (gdb)\n\n    ```", "```\n    (gdb) set auto-load safe-path /\n    ```", "```\n    (gdb) handle SIGILL nostop\n    ```", "```\n    (gdb) target remote <target_ip>:1234\n    Remote debugging using 192.168.128.6:1234\n    Cannot access memory at address 0x0\n    0x76fd7b00 in ?? ()\n    ```", "```\n    (gdb) set sysroot /opt/poky/1.7.1/sysroots/cortexa9hf-vfp- neon-poky-linux-gnueabi\n    Reading symbols from /opt/poky/1.7.1/sysroots/cortexa9hf- vfp-neon-poky-linux-gnueabi/lib/ld-linux- armhf.so.3...done.\n    Loaded symbols for /opt/poky/1.7.1/sysroots/cortexa9hf-vfp- neon-poky-linux-gnueabi/lib/ld-linux-armhf.so.3\n    ```", "```\n    --> WvDial: Internet dialer version 1.61\n    --> Initializing modem.\n    --> Sending: ATZ\n    ATZ\n    OK\n    --> Sending: ATQ0 V1 E1 S0=0 &C1 &D2 +FCLASS=0\n    ATQ0 V1 E1 S0=0 &C1 &D2 +FCLASS=0\n    OK\n    --> Sending: AT+CGDCONT=1,\"IP\",\"internet\"\n    AT+CGDCONT=1,\"IP\",\"internet\"\n    OK\n    --> Modem initialized.\n    --> Idle Seconds = 3000, disabling automatic reconnect.\n\n    ```", "```\n    Program received signal SIGILL, Illegal instruction.\n\n    Program received signal SIGSEGV, Segmentation fault.\n    0x76dc14c4 in WvTaskMan::_stackmaster () at utils/wvtask.cc:416\n    416     utils/wvtask.cc: No such file or directory.\n    ```", "```\n    (gdb) bt\n    #0  0x76dc14c4 in WvTaskMan::_stackmaster () at utils/wvtask.cc:416\n    #1  0x00000000 in ?? ()\n    ```", "```\nDEBUG_BUILD = \"1\"\n```", "```\nDEBUG_OPTIMIZATION = \"-O -fno-omit-frame-pointer ${DEBUG_FLAGS} - pipe\"\n```", "```\n    (gdb) target remote <target_ip>:1234\n    Remote debugging using 192.168.128.6:1234\n    warning: Unable to find dynamic linker breakpoint function.\n    GDB will be unable to debug shared library initializers\n    and track explicitly loaded dynamic code.\n    Cannot access memory at address 0x0\n    0x76fdd800 in ?? ()\n    ```", "```\n    (gdb) set sysroot /opt/poky/1.7.1/sysroots/cortexa9hf-vfp- neon-poky-linux-gnueabi\n    Reading symbols from /opt/poky/1.7.1/sysroots/cortexa9hf- vfp-neon-poky-linux-gnueabi/lib/ld-linux- armhf.so.3...done.\n    Loaded symbols for /opt/poky/1.7.1/sysroots/cortexa9hf-vfp- neon-poky-linux-gnueabi/lib/ld-linux-armhf.so.3\n    ```", "```\n    (gdb) c\n    Continuing.\n\n    Program received signal SIGILL, Illegal instruction.\n\n    Program received signal SIGABRT, Aborted.\n    0x76b28bb4 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:55\n    55      ../sysdeps/unix/sysv/linux/raise.c: No such file or directory.\n    (gdb) bt\n    #0  0x76b28bb4 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:55\n    #1  0x76b2cabc in __GI_abort () at abort.c:89\n    #2  0x76decfa8 in __assert_fail (__assertion=0x76df4600 \"magic_number == -0x123678\",\n        __file=0x1 <error: Cannot access memory at address 0x1>, __line=427,\n        __function=0x76df4584 <WvTaskMan::_stackmaster()::__PRETTY_FUNCTION__> \"static void WvTaskMan::_stackmaster()\")\n        at utils/wvcrashbase.cc:98\n    #3  0x76dc58c8 in WvTaskMan::_stackmaster () at utils/wvtask.cc:427\n    Cannot access memory at address 0x123678\n    #4  0x00033690 in ?? ()\n    Cannot access memory at address 0x123678\n    Backtrace stopped: previous frame identical to this frame (corrupt stack?)\n    ```", "```\nIMAGE_INSTALL_append = \" strace\"\n```", "```\nEXTRA_IMAGE_FEATURES += \"tools-debug\"\n```", "```\nIMAGE_INSTALL_append = \" procps\"\n```", "```\n# strace -f -t -e sendto /bin/bash -c \"ping -c 1 127.0.0.1\"\n5240  17:18:04 sendto(0, \"\\10\\0;\\220x\\24\\0\\0\\225m\\256\\355\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\ 0\\0\"..., 64, 0, {sa_family=AF_INET, sin_port=htons(0), sin_addr=inet_addr(\"127.0.0.1\")}, 28) = 64\n\n```", "```\nstrace -f -e <filter> -t -s<num> -o <log file>.strace <program>\n\n```", "```\n$ strace -p $( pgrep <program> )\n\n```", "```\n$ strace $( pgrep <program> | sed 's/^/-p' )\n\n```", "```\n> setenv mmcargs 'setenv bootargs console=${console},${baudrate} root=${mmcroot} ${extra_bootargs}; run videoargs'\n> setenv extra_bootargs maxcpus=1\n\n```", "```\n#include <linux/perf_event.h>\n#include <linux/hw_breakpoint.h>\n\nint perf_event_open(struct perf_event_attr *attr,\n                    pid_t pid, int cpu, int group_fd,\n                    unsigned long flags);\n```", "```\n#include <stdlib.h>\n#include <stdio.h>\n#include <unistd.h>\n#include <string.h>\n#include <sys/ioctl.h>\n#include <linux/perf_event.h>\n#include <asm/unistd.h>\n\nstatic long\nperf_event_open(struct perf_event_attr *hw_event, pid_t pid,\n                int cpu, int group_fd, unsigned long flags)\n{\n    int ret;\n\n    ret = syscall(__NR_perf_event_open, hw_event, pid, cpu,\n                   group_fd, flags);\n    return ret;\n}\n\nint\nmain(int argc, char **argv)\n{\n    struct perf_event_attr pe;\n    long long count;\n    int fd;\n\n    memset(&pe, 0, sizeof(struct perf_event_attr));\n    pe.type = PERF_TYPE_HARDWARE;\n    pe.size = sizeof(struct perf_event_attr);\n    pe.config = PERF_COUNT_HW_INSTRUCTIONS;\n    pe.disabled = 1;\n\n    fd = perf_event_open(&pe, 0, -1, -1, 0);\n    if (fd == -1) {\n       fprintf(stderr, \"Error opening leader %llx\\n\", pe.config);\n       exit(EXIT_FAILURE);\n    }\n\n    ioctl(fd, PERF_EVENT_IOC_RESET, 0);\n    ioctl(fd, PERF_EVENT_IOC_ENABLE, 0);\n\n    printf(\"Measuring instruction count for this printf\\n\");\n\n    ioctl(fd, PERF_EVENT_IOC_DISABLE, 0);\n    read(fd, &count, sizeof(long long));\n\n    printf(\"Used %lld instructions\\n\", count);\n\n    close(fd);\n\n    return 0;\n}\n```", "```\n$ source /opt/poky/1.7.1/environment-setup-cortexa9hf-vfp-neon-poky- linux-gnueabi\n$ ${CC} perf_example.c -o perf_example\n\n```", "```\n# ./perf_example\nMeasuring instruction count for this printf\nUsed 0 instructions\n\n```", "```\n# ./perf_example\nMeasuring instruction count for this printf\nUsed 3977 instructions\n\n```", "```\n    # ls /sys/kernel/debug/tracing/events/\n    asoc          ftrace        migrate       rcu           spi\n    block         gpio          module        regmap        sunrpc\n    cfg80211      header_event  napi          regulator     task\n    compaction    header_page   net           rpm           timer\n    drm           irq           oom           sched         udp\n    enable        jbd           power         scsi          vmscan\n    ext3          jbd2          printk        signal        workqueue\n    ext4          kmem          random        skb           writeback\n    filemap       mac80211      raw_syscalls  sock\n\n    ```", "```\n    #  grep 'net'  /sys/kernel/debug/tracing/available_events \n    net:netif_rx\n    net:netif_receive_skb\n    net:net_dev_queue\n    net:net_dev_xmit\n\n    ```", "```\n    #cat /sys/kernel/debug/tracing/events/net/netif_receive_skb/format\n    name: netif_receive_skb\n    ID: 378\n    format:\n     field:unsigned short common_type;  offset:0;  size:2; signed:0;\n     field:unsigned char common_flags;  offset:2;  size:1; signed:0;\n     field:unsigned char common_preempt_count;  offset:3; size:1;  signed:0;\n     field:int common_pid;  offset:4;  size:4;  signed:1;\n\n     field:void * skbaddr;  offset:8;  size:4;  signed:0;\n     field:unsigned int len;\toffset:12;  size:4;  signed:0;\n     field:__data_loc char[] name;\toffset:16;  size:4;  signed:0;\n\n    print fmt: \"dev=%s skbaddr=%p len=%u\", __get_str(name), REC- >skbaddr, REC->len\n\n    ```", "```\n        # echo 1 > /sys/kernel/debug/tracing/events/net/netif_receive_skb/enable\n\n        ```", "```\n        # echo 1 > /sys/kernel/debug/tracing/events/net/enable\n\n        ```", "```\n        # echo netif_receive_skb >> /sys/kernel/debug/tracing/set_event\n\n        ```", "```\n        # echo '!netif_receive_skb' >> /sys/kernel/debug/tracing/set_event\n\n        ```", "```\n        # echo 'net:*' > /sys/kernel/debug/tracing/set_event\n\n        ```", "```\n        # echo > /sys/kernel/debug/tracing/set_event\n\n        ```", "```\n    # echo 1 > /sys/kernel/debug/tracing/tracing_on\n\n    ```", "```\n    # cd /sys/kernel/debug/tracing\n    # echo 1 > events/net/netif_receive_skb/enable\n    # echo netif_receive_skb > set_ftrace_filter\n    # echo function > current_tracer\n    # cat trace\n     <idle>-0     [000] ..s2  1858.542206: netif_receive_skb <-napi_gro_receive\n     <idle>-0     [000] ..s2  1858.542214: netif_receive_skb: dev=eth0 skbaddr=dcb5bd80 len=168\n\n    ```", "```\n#include <linux/module.h>\n#include \"linux/timer.h\"\n#define CREATE_TRACE_POINTS\n#include \"trace.h\"\n\nstatic struct timer_list hello_timer;\n\nvoid hello_timer_callback(unsigned long data)\n{\n        char a[] = \"Hello\";\n        char b[] = \"World\";\n        printk(\"%s %s\\n\",a,b);\n      /* Insert the static tracepoint */\n trace_log_dbg(a, b);\n      /* Trigger the timer again in 8 seconds */\n        mod_timer(&hello_timer, jiffies + msecs_to_jiffies(8000));\n}\n\nstatic int hello_world_init(void)\n{\n      /* Setup a timer to fire in 2 seconds */\n        setup_timer(&hello_timer, hello_timer_callback, 0);\n        mod_timer(&hello_timer, jiffies + msecs_to_jiffies(2000));\n        return 0;\n}\n\nstatic void hello_world_exit(void)\n{\n      /* Delete the timer */\n        del_timer(&hello_timer);\n}\n\nmodule_init(hello_world_init);\nmodule_exit(hello_world_exit);\n\nMODULE_LICENSE(\"GPL v2\");\n```", "```\n#undef TRACE_SYSTEM\n#define TRACE_SYSTEM log_dbg\n\n#if !defined(_HELLOWORLD_TRACE) || defined(TRACE_HEADER_MULTI_READ)\n#define _HELLOWORLD_TRACE\n\n#include <linux/tracepoint.h>\n\nTRACE_EVENT(log_dbg,\n            TP_PROTO(char *a, char *b),\n            TP_ARGS(a, b),\n            TP_STRUCT__entry(\n                    __string(a, a)\n                    __string(b, b)),\n            TP_fast_assign(\n                    __assign_str(a, a);\n                    __assign_str(b, b);),\n            TP_printk(\"log_dbg: a %s b %s\",\n                      __get_str(a), __get_str(b))\n        );\n#endif\n\n/* This part must be outside protection */\n#undef TRACE_INCLUDE_PATH\n#undef TRACE_INCLUDE_FILE\n#define TRACE_INCLUDE_PATH .\n#define TRACE_INCLUDE_FILE trace\n#include <trace/define_trace.h>\n```", "```\nobj-m   := hello_world.o\nCFLAGS_hello_world.o    += -I$(src)\n\nSRC := $(shell pwd)\n\nall:\n        $(MAKE) -C \"$(KERNEL_SRC)\" M=\"$(SRC)\"\n\nmodules_install:\n        $(MAKE) -C \"$(KERNEL_SRC)\" M=\"$(SRC)\" modules_install\n\nclean:\n        rm -f *.o *~ core .depend .*.cmd *.ko *.mod.c\n        rm -f Module.markers Module.symvers modules.order\n        rm -rf .tmp_versions Modules.symvers\n```", "```\n$ cd /opt/yocto/fsl-community-bsp/sources/meta-bsp-custom/recipes- kernel/hello-world-tracepoint/files/\n$ source /opt/poky/1.7.1/environment-setup-cortexa9hf-vfp-neon-poky- linux-gnueabi\n$ KERNEL_SRC=/opt/yocto/linux-wandboard make\n\n```", "```\n# insmod hello_world.ko\nHello World\n\n```", "```\n# cat /sys/kernel/debug/tracing/events/log_dbg/log_dbg/format\nname: log_dbg\nID: 622\nformat:\n field:unsigned short common_type;       offset:0;       size:2; signed:0;\n field:unsigned char common_flags;       offset:2;       size:1; signed:0;\n field:unsigned char common_preempt_count;       offset:3;    size:1; signed:0;\n field:int common_pid;   offset:4;       size:4; signed:1;\n\n field:__data_loc char[] a;      offset:8;       size:4; signed:0;\n field:__data_loc char[] b;      offset:12;      size:4; signed:0;\n\nprint fmt: \"log_dbg: a %s b %s\", __get_str(a), __get_str(b)\n\n```", "```\n# cd /sys/kernel/debug/tracing\n# echo 1 > events/log_dbg/log_dbg/enable\n# echo 1 > /sys/kernel/debug/tracing/tracing_on\n# cat trace\n <idle>-0     [000] ..s2    57.425040: log_dbg: log_dbg: a Hello b World\n\n```", "```\n# echo \"a == \\\"Hello\\\"\" > /sys/kernel/debug/tracing/events/log_dbg/log_dbg/filter\n\n```", "```\n    arm-poky-linux-gnueabi-objdump -d -l vmlinux | grep do_sys_open\n    8010bfa8 <do_sys_open>:\n    do_sys_open():\n    8010c034:       0a000036        beq     8010c114 <do_sys_open+0x16c>\n    8010c044:       1a000031        bne     8010c110 <do_sys_open+0x168>\n    ```", "```\n    #include <linux/kprobes.h>\n    int register_kprobe(struct kprobe *kp);\n    int register_jprobe(struct jprobe *jp)\n    int register_kretprobe(struct kretprobe *rp);\n\n    void unregister_kprobe(struct kprobe *kp);\n    void unregister_jprobe(struct jprobe *jp);\n    void unregister_kretprobe(struct kretprobe *rp);\n    ```", "```\n    int disable_kprobe(struct kprobe *kp);\n    int disable_kretprobe(struct kretprobe *rp);\n    int disable_jprobe(struct jprobe *jp);\n\n    int enable_kprobe(struct kprobe *kp);\n    int enable_kretprobe(struct kretprobe *rp);\n    int enable_jprobe(struct jprobe *jp);\n    ```", "```\n    $ cat /sys/kernel/debug/kprobes/list\n    ```", "```\n    $ echo 0/1 > /sys/kernel/debug/kprobes/enabled\n    ```", "```\n#include <linux/kernel.h>\n#include <linux/module.h>\n#include <linux/kprobes.h>\n\nstatic struct kprobe kp = {\n  .symbol_name  = \"do_sys_open\",\n};\n\nstatic int handler_pre(struct kprobe *p, struct pt_regs *regs)\n{\n  pr_info(\"pre_handler: p->addr = 0x%p, lr = 0x%lx,\"\n    \" sp = 0x%lx\\n\",\n  p->addr, regs->ARM_lr, regs->ARM_sp);\n\n  /* A dump_stack() here will give a stack backtrace */\n  return 0;\n}\n\nstatic void handler_post(struct kprobe *p, struct pt_regs *regs,\n      unsigned long flags)\n{\n  pr_info(\"post_handler: p->addr = 0x%p, status = 0x%lx\\n\",\n    p->addr, regs->ARM_cpsr);\n}\n\nstatic int handler_fault(struct kprobe *p, struct pt_regs *regs, int trapnr)\n{\n  pr_info(\"fault_handler: p->addr = 0x%p, trap #%dn\",\n    p->addr, trapnr);\n  /* Return 0 because we don't handle the fault. */\n  return 0;\n}\n\nstatic int kprobe_init(void)\n{\n  int ret;\n  kp.pre_handler = handler_pre;\n  kp.post_handler = handler_post;\n  kp.fault_handler = handler_fault;\n\n  ret = register_kprobe(&kp);\n  if (ret < 0) {\n    pr_err(\"register_kprobe failed, returned %d\\n\", ret);\n    return ret;\n  }\n  pr_info(\"Planted kprobe at %p\\n\", kp.addr);\n  return 0;\n}\n\nstatic void kprobe_exit(void)\n{\n  unregister_kprobe(&kp);\n  pr_info(\"kprobe at %p unregistered\\n\", kp.addr);\n}\n\nmodule_init(kprobe_init)\nmodule_exit(kprobe_exit)\nMODULE_LICENSE(\"GPL\");\n```", "```\nSUMMARY = \"kprobe on do_sys_open kernel module.\"\nLICENSE = \"GPLv2\"\nLIC_FILES_CHKSUM = \"file://${COMMON_LICENSE_DIR}/GPL- 2.0;md5=801f80980d171dd6425610833a22dbe6\"\n\ninherit module\n\nPV = \"0.1\"\n\nSRC_URI = \" \\\n    file://kprobe_open.c \\\n    file://Makefile \\\n\"\n\nS = \"${WORKDIR}\"\n```", "```\nobj-m  := kprobe_open.o\n\nSRC := $(shell pwd)\n\nall:\n  $(MAKE) -C \"$(KERNEL_SRC)\" M=\"$(SRC)\"\n\nmodules_install:\n  $(MAKE) -C \"$(KERNEL_SRC)\" M=\"$(SRC)\" modules_install\n\nclean:\n  rm -f *.o *~ core .depend .*.cmd *.ko *.mod.c\n  rm -f Module.markers Module.symvers modules.order\n  rm -rf .tmp_versions Modules.symvers\n```", "```\n$ insmod kprobe_open.ko\nPlanted kprobe at 8010da84\n\n```", "```\npre_handler: p->addr = 0x8010da84, lr = 0x8010dc34, sp = 0xdca75f98\npost_handler: p->addr = 0x8010da84, status = 0x80070013\n\n```", "```\n#include <linux/kernel.h>\n#include <linux/module.h>\n#include <linux/kprobes.h>\nstatic long jdo_sys_open(int dfd, const char __user *filename, int flags, umode_t mode)\n{\n  pr_info(\"jprobe: dfd = 0x%x, filename = 0xs \"\n    \"flags = 0x%x mode umode %x\\n\", dfd, filename, flags, mode);\n\n  /* Always end with a call to jprobe_return(). */\n  jprobe_return();\n  return 0;\n}\n\nstatic struct jprobe my_jprobe = {\n  .entry        = jdo_sys_open,\n  .kp = {\n    .symbol_name  = \"do_sys_open\",\n  },\n};\n\nstatic int jprobe_init(void)\n{\n  int ret;\n\n  ret = register_jprobe(&my_jprobe);\n  if (ret < 0) {\n    pr_err(\"register_jprobe failed, returned %d\\n\", ret);\n    return -1;\n  }\n  pr_info(\"Planted jprobe at %p, handler addr %p\\n\",\n        my_jprobe.kp.addr, my_jprobe.entry);\n  return 0;\n}\n\nstatic void jprobe_exit(void)\n{\n  unregister_jprobe(&my_jprobe);\n  pr_info(\"jprobe at %p unregistered\\n\", my_jprobe.kp.addr);\n}\n\nmodule_init(jprobe_init)\nmodule_exit(jprobe_exit)\nMODULE_LICENSE(\"GPL\");\n```", "```\n#include <linux/kernel.h>\n#include <linux/module.h>\n#include <linux/kprobes.h>\n#include <linux/ktime.h>\n#include <linux/limits.h>\n#include <linux/sched.h>\n\n/* per-instance private data */\nstruct my_data {\n  ktime_t entry_stamp;\n};\n\nstatic int entry_handler(struct kretprobe_instance *ri, struct pt_regs *regs)\n{\n  struct my_data *data;\n\n  if (!current->mm)\n    return 1;  /* Skip kernel threads */\n\n  data = (struct my_data *)ri->data;\n  data->entry_stamp = ktime_get();\n  return 0;\n}\n\nstatic int ret_handler(struct kretprobe_instance *ri, struct pt_regs *regs)\n{\n  int retval = regs_return_value(regs);\n  struct my_data *data = (struct my_data *)ri->data;\n  s64 delta;\n  ktime_t now;\n\n  now = ktime_get();\n  delta = ktime_to_ns(ktime_sub(now, data->entry_stamp));\n  pr_info(\"returned %d and took %lld ns to execute\\n\",\n        retval, (long long)delta);\n  return 0;\n}\n\nstatic struct kretprobe my_kretprobe = {\n  .handler    = ret_handler,\n  .entry_handler    = entry_handler,\n  .data_size    = sizeof(struct my_data),\n  .maxactive    = 20,\n};\n\nstatic int kretprobe_init(void)\n{\n  int ret;\n\n  my_kretprobe.kp.symbol_name = \"do_sys_open\";\n  ret = register_kretprobe(&my_kretprobe);\n  if (ret < 0) {\n    pr_err(\"register_kretprobe failed, returned %d\\n\",\n        ret);\n    return -1;\n}\n  pr_info(\"Planted return probe at %s: %p\\n\",\n  my_kretprobe.kp.symbol_name,            my_kretprobe.kp.addr);\n  return 0;\n}\n\nstatic void kretprobe_exit(void)\n{\n  unregister_kretprobe(&my_kretprobe);\n  pr_info(\"kretprobe at %p unregistered\\n\",\n      my_kretprobe.kp.addr);\n\n  /* nmissed > 0 suggests that maxactive was set too low. */\n  pr_info(\"Missed probing %d instances of %s\\n\",\n    my_kretprobe.nmissed, my_kretprobe.kp.symbol_name);\n}\n\nmodule_init(kretprobe_init)\nmodule_exit(kretprobe_exit)\nMODULE_LICENSE(\"GPL\");\n```", "```\n# echo 'p:example_probe do_sys_open dfd=%r0 filename=%r1 flags=%r2 mode=%r3' > /sys/kernel/debug/tracing/kprobe_events\n\n```", "```\nlong do_sys_open(int dfd, const char __user *filename, int flags, umode_t mode);\n\n```", "```\n    # cat /sys/kernel/debug/tracing/kprobe_events\n    p:kprobes/example_probe do_sys_open dfd=%r0 filename=%r1 flags=%r2 mode=%r3\n\n    ```", "```\n    # cat /sys/kernel/debug/tracing/events/kprobes/example_probe/format\n    name: example_probe\n    ID: 1235\n    format:\n     field:unsigned short common_type;       offset:0;      size:2; signed:0;\n     field:unsigned char common_flags;       offset:2;      size:1; signed:0;\n     field:unsigned char common_preempt_count;       offset:3;       size:1; signed:0;\n     field:int common_pid;   offset:4;       size:4; signed:1;\n     field:unsigned long __probe_ip; offset:8;       size:4; signed:0;\n     field:u32 dfd;  offset:12;      size:4; signed:0;\n     field:u32 filename;     offset:16;      size:4; signed:0;\n     field:u32 flags;        offset:20;      size:4; signed:0;\n     field:u32 mode; offset:24;      size:4; signed:0;\n    print fmt: \"(%lx) dfd=%lx filename=%lx flags=%lx mode=%lx\", REC->__probe_ip, REC->dfd, REC->filename, REC->flags, REC- >mode\n\n    ```", "```\n    # echo 1 > /sys/kernel/debug/tracing/events/kprobes/example_probe/enable\n\n    ```", "```\n    # cat /sys/kernel/debug/tracing/trace\n    # tracer: nop\n    #\n    # entries-in-buffer/entries-written: 59/59   #P:4\n    #\n    #                              _-----=> irqs-off\n    #                             / _----=> need-resched\n    #                            | / _---=> hardirq/softirq\n    #                            || / _--=> preempt-depth\n    #                            ||| /     delay\n    #           TASK-PID   CPU#  ||||    TIMESTAMP  FUNCTION\n    #              | |       |   ||||       |         |\n     sh-737   [000] d...  1610.378856: example_probe: (do_sys_open+0x0/0x184) dfd=ffffff9c filename=f88488 flags=20241 mode=16\n     sh-737   [000] d...  1660.888921: example_probe: (do_sys_open+0x0/0x184) dfd=ffffff9c filename=f88a88 flags=20241 mode=16\n\n    ```", "```\n    # echo '-:example_probe' >> /sys/kernel/debug/tracing/kprobe_events\n\n    ```", "```\n    # echo > /sys/kernel/debug/tracing/kprobe_events\n\n    ```", "```\n    # cat /sys/kernel/debug/tracing/kprobe_profile\n    example_probe                             78               0\n\n    ```", "```\n    <event name> <hits> <miss-hits>\n\n    ```", "```\n<type>:<event name> <symbol> <fetch arguments>\n\n```", "```\n    <name>=<offset>(<argument>):<type>\n\n    ```", "```\n        b<bit-width>@<bit-offset>/<container-size>\n        ```", "```\nEXTRA_IMAGE_FEATURES = \"tools-profile dbg-pkgs\"\n```", "```\nIMAGE_INSTALL_append = \" perf\"\n```", "```\nEXTRA_IMAGE_FEATURES += \"tools-profile\"\n```", "```\nINHIBIT_PACKAGE_STRIP = \"1\"\n```", "```\nEXTRA_IMAGE_FEATURES += \"dbg-pkgs\"\n```", "```\nPACKAGE_DEBUG_SPLIT_STYLE = 'debug-file-directory'\n```", "```\n-PERF_FEATURES_ENABLE = \"\"\n```", "```\n# perf stat <command>\n\n```", "```\n# perf stat ping -c 1 192.168.1.1\nPING 192.168.1.1 (192.168.1.1): 56 data bytes\n64 bytes from 192.168.1.1: seq=0 ttl=64 time=6.489 ms\n\n--- 192.168.1.1 ping statistics ---\n1 packets transmitted, 1 packets received, 0% packet loss\nround-trip min/avg/max = 6.489/6.489/6.489 ms\n\n Performance counter stats for 'ping -c 1 192.168.1.1':\n\n 8.984333 task-clock                #    0.360 CPUs utilized\n 15 context-switches          #    0.002 M/sec\n 0 cpu-migrations            #    0.000 K/sec\n 140 page-faults               #    0.016 M/sec\n 3433188 cycles                    #    0.382 GHz\n 123948 stalled-cycles-frontend   #    3.61% frontend cycles idle \n 418329 stalled-cycles-backend    #   12.18% backend  cycles idle \n 234497 instructions              #    0.07  insns per cycle \n #    1.78  stalled cycles per insn\n 22649 branches                  #    2.521 M/sec\n 8123 branch-misses             #   35.86% of all branches \n\n 0.024962333 seconds time elapsed\n\n```", "```\n# perf record <command>\n\n```", "```\n# perf record -g -- ping -c 1 192.168.1.1\n\n```", "```\n# perf report\n\n```", "```\n# perf report –stdio\n\n```", "```\n# perf annotate -d <command>\n\n```", "```\n# perf stat -a sleep 5\nPerformance counter stats for 'sleep 5':\n 5006.660002 task-clock                #    1.000 CPUs utilized[100.00%]\n 324 context-switches          #    0.065 K/sec [100.00%]\n 0 cpu-migrations            #    0.000 K/sec [100.00%]\n 126 page-faults               #    0.025 K/sec\n 12200175 cycles                    #    0.002 GHz [100.00%]\n 2844703 stalled-cycles-frontend   #   23.32% frontend cycles idle    [100.00%]\n 9152564 stalled-cycles-backend    #   75.02% backend  cycles idle    [100.00%]\n 4645466 instructions              #    0.38  insns per cycle \n #    1.97  stalled cycles per insn [100.00%]\n 479051 branches                  #    0.096 M/sec [100.00%]\n 222903 branch-misses             #   46.53% of all branches \n\n 5.006115001 seconds time elapsed\n\n```", "```\n# perf record -a -g -- sleep 5\n\n```", "```\nperf stat|record [-e <comma separated event list> --filter '<expr>'] [-o <filename>] [--] <command> [<arguments>]\n\n```", "```\n# perf list\n\n```", "```\n# perf list '<subsystem>:*'\n\n```", "```\n# perf stat -e r3 sleep 5\n\n```", "```\n# perf script\n\n```", "```\n# perf script -g python\n\n```", "```\n# perf script -s perf-script.py\n\n```", "```\nIMAGE_INSTALL_append = \" perf-python\"\n```", "```\n# perf probe --add \"tcp_sendmsg\"\nAdded new event:\n probe:tcp_sendmsg    (on tcp_sendmsg)\n\n```", "```\n# perf record -e probe:tcp_sendmsg -a -g -- wget http://downloads.yoctoproject.org/releases/yocto/yocto- 1.7.1/RELEASENOTES\nConnecting to downloads.yoctoproject.org (198.145.29.10:80)\nRELEASENOTES         100% |**************************************************************************************| 11924   0:00:00 ETA\n[ perf record: Woken up 1 times to write data ]\n[ perf record: Captured and wrote 0.025 MB perf.data (~1074 samples) ]\n\n```", "```\n# perf report\n\n```", "```\nnameserver 8.8.8.8\nnameserver 8.8.4.4\n\n```", "```\n# perf probe --del tcp_sendmsg\n/sys/kernel/debug//tracing/uprobe_events file does not exist - please rebuild kernel with CONFIG_UPROBE_EVENT.\nRemoved event: probe:tcp_sendmsg\n\n```", "```\n# perf timechart record -- <command> <arguments>\n\n```", "```\n# perf timechart\n\n```", "```\n# perf trace record <command>\n\n```", "```\nMakefile:681: No libaudit.h found, disables 'trace' tool, please install audit-libs-devel or libaudit-dev\n\n```", "```\nIMAGE_INSTALL_append = \" systemtap\"\n```", "```\nEXTRA_IMAGE_FEATURES += \"ssh-server-openssh\"\n```", "```\nprobe begin\n{\n        print(\"Monitoring starts\\n\")\n        printf(\"%6s %6s %16s\\n\", \"UID\", \"PID\", \"NAME\");\n}\n\nprobe kernel.function(\"sys_open\")\n{\n          printf(\"%6d %6d %16s\\n\", uid(), pid(), execname());\n}\n\nprobe timer.s(60)\n{\n        print(\"Monitoring ends\\n\")\n        exit()\n}\n```", "```\n$ source setup-environment wandboard-quad\n$ crosstap root@<target_ip> sys_open.stp\n\n```", "```\n IMAGE_INSTALL_append += \" oprofile\"\n```", "```\nEXTRA_IMAGE_FEATURES += \"tools-profile\"\n```", "```\nDEBUG_BUILD = \"1\"\n```", "```\n# modprobe oprofile timer=1\n\n```", "```\n# opcontrol --start --vmlinux=/boot/vmlinux --callgraph 5\nUsing 2.6+ OProfile kernel interface.\nReading module info.\nUsing log file /var/lib/oprofile/samples/oprofiled.log\nDaemon started.\nProfiler running.\n\n```", "```\n# ping -c 1 192.168.1.1\nPING 192.168.1.1 (192.168.1.1): 56 data bytes\n64 bytes from 192.168.1.1: seq=0 ttl=64 time=5.421 ms\n\n--- 192.168.1.1 ping statistics ---\n1 packets transmitted, 1 packets received, 0% packet loss\nround-trip min/avg/max = 5.421/5.421/5.421 ms\n\n```", "```\n # opcontrol --stop\n\n```", "```\n# ln -s /boot/vmlinux-3.10.17-1.0.2- wandboard+gbe8d6872b5eb /boot/vmlinux\n\n```", "```\nCount 100000 for event CPU_CYCLES is below the minimum 1500000\n\n```", "```\n# opcontrol --setup --event=CPU_CYCLES:1500000\n\n```", "```\n# opreport -f\nUsing /var/lib/oprofile/samples/ for samples directory.\nCPU: ARM Cortex-A9, speed 996000 MHz (estimated)\nCounted CPU_CYCLES events (CPU cycle) with a unit mask of 0x00 (No unit mask) count 1500000\nCPU_CYCLES:150...|\n samples|      %|\n------------------\n 401 83.0228 /boot/vmlinux-3.10.17-1.0.2-wandboard+gbe8d6872b5eb\n 31  6.4182 /bin/bash\n 28  5.7971 /lib/libc-2.20.so\n 18  3.7267 /lib/ld-2.20.so\n 3  0.6211 /usr/bin/oprofiled\n 1  0.2070 /usr/bin/ophelp\n 1  0.2070 /usr/sbin/sshd\n\n```", "```\n# opreport -cl\nUsing /var/lib/oprofile/samples/ for samples directory.\nwarning: [heap] (tgid:790 range:0x3db000-0x4bc000) could not be found.\nwarning: [stack] (tgid:785 range:0x7ee11000-0x7ee32000) could not be found.\nCPU: ARM Cortex-A9, speed 996000 MHz (estimated)\nCounted CPU_CYCLES events (CPU cycle) with a unit mask of 0x00 (No unit mask) count 1500000\nsamples  %        app name                 symbol name\n-------------------------------------------------------------------------------\n 102      48.8038  vmlinux-3.10.17-1.0.2-wandboard+gbe8d6872b5eb __do_softirq\n 107      51.1962  vmlinux-3.10.17-1.0.2-wandboard+gbe8d6872b5eb do_softirq\n102      21.1180  vmlinux-3.10.17-1.0.2-wandboard+gbe8d6872b5eb __do_softirq\n 102      47.4419  vmlinux-3.10.17-1.0.2-wandboard+gbe8d6872b5eb __do_softirq\n 102      47.4419  vmlinux-3.10.17-1.0.2-wandboard+gbe8d6872b5eb __do_softirq [self]\n 7         3.2558  vmlinux-3.10.17-1.0.2-wandboard+gbe8d6872b5eb net_rx_action\n 4         1.8605  vmlinux-3.10.17-1.0.2-wandboard+gbe8d6872b5eb run_timer_softirq\n--------------------------------------------------------------------- ----------\n31        6.4182  bash                     /bin/bash\n\n```", "```\nopcontrol --no-vmlinux <options>\n```", "```\nopcontrol --vmlinux=/boot/path/to/vmlinux <options>\n```", "```\n# opcontrol --status\nDaemon not running\nSession-dir: /var/lib/oprofile\nSeparate options: library kernel\nvmlinux file: /boot/vmlinux\nImage filter: none\nCall-graph depth: 5\n\n```", "```\nopreport <options>\n```", "```\nIMAGE_INSTALL_append = \" lttng-tools lttng-modules lttng-ust\"\n```", "```\nEXTRA_IMAGE_FEATURES += \"tools-profile\"\n```", "```\n    # lttng create test-session\n    Session test-session created.\n    Traces will be written in /home/root/lttng-traces/test- session-20150117-174945\n\n    ```", "```\n    # lttng enable-event --kernel sched_switch,sched_process_fork\n    Warning: No tracing group detected\n    Kernel event sched_switch created in channel channel0\n    Kernel event sched_process_fork created in channel channel0\n\n    ```", "```\n    # lttng list --kernel\n\n    ```", "```\n    # lttng start\n    Tracing started for session test-session\n\n    ```", "```\n    # ping -c 1 192.168.1.1\n\n    ```", "```\n    # lttng stop\n    Waiting for data availability.\n    Tracing stopped for session test-session\n\n    ```", "```\n    # lttng destroy\n    Session test-session destroyed\n\n    ```", "```\n    # babeltrace /home/root/lttng-traces/test-session-20150117- 174945\n\n    ```", "```\n#include <stdio.h>\n#include <lttng/tracef.h>\n\nmain(void)\n{\n    printf(\"Hello World\");\n    tracef(\"I said: %s\", \"Hello World\");\n}\n```", "```\nDESCRIPTION = \"Simple helloworld application\"\nSECTION = \"examples\"\nLICENSE = \"MIT\"\nLIC_FILES_CHKSUM = \"file://${COMMON_LICENSE_DIR}/MIT;md5=0835ade698e0bcf8506ecda2f7b4 f302\"\n\nSRC_URI = \"file://helloworld.c\"\nDEPENDS = \"lttng-ust\"\n\nS = \"${WORKDIR}\"\n\ndo_compile() {\n             ${CC} helloworld.c -llttng-ust -o helloworld\n}\n\ndo_install() {\n             install -d ${D}${bindir}\n             install -m 0755 helloworld ${D}${bindir}\n}\n```", "```\n    # lttng create test-user-session\n    Session test-user-session created.\n    Traces will be written in /home/root/lttng-traces/test-user- session-20150117-185731\n\n    ```", "```\n    # lttng enable-event -u -a\n    Warning: No tracing group detected\n    All UST events are enabled in channel channel0\n\n    ```", "```\n    # lttng start\n    Tracing started for session test-user-session\n\n    ```", "```\n    # helloworld\n    Hello World\n\n    ```", "```\n    # lttng stop\n    Waiting for data availability.\n    Tracing stopped for session test-user-session\n\n    ```", "```\n    # lttng view\n    [18:58:22.625557512] (+0.001278334) wandboard-quad lttng_ust_tracef:event: { cpu_id = 0 }, { _msg_length = 19, msg = \"I said: Hello World\" }\n\n    ```", "```\n    # lttng destroy test-user-session\n    Session test-user-session destroyed\n\n    ```", "```\n    # lttng enable-event <comma separated event list> -k\n\n    ```", "```\n    # lttng enable-event -a -k --tracepoint\n\n    ```", "```\n    # lttng enable-event -a -k --syscall\n\n    ```", "```\n    # lttng enable-event -a -k\n\n    ```", "```\n    # lttng enable-event <probe_name> -k --probe <symbol>+<offset>\n\n    ```", "```\n    # lttng enable-event <probe_name> -k --probe <address>\n\n    ```", "```\n    # lttng enable-event <probe_name> -k --function <symbol>\n\n    ```", "```\n    # lttng add-context -t perf:cpu:cpu-cycles -k\n\n    ```", "```\nEXTRA_IMAGE_FEATURES += \"tools-sdk dev-pkgs\"\n```", "```\nTRACEPOINT_EVENT(\n    hello_world_trace_provider,\n    hw_tracepoint,\n    TP_ARGS(\n        int, my_integer_arg,\n        char*, my_string_arg\n    ),\n    TP_FIELDS(\n        ctf_string(my_string_field, my_string_arg)\n        ctf_integer(int, my_integer_field, my_integer_arg)\n    )\n)\n```", "```\n# lttng-gen-tp hw.tp\n\n```", "```\nIMAGE_INSTALL_append = \" lttng-ust-bin\"\n\n```", "```\n#include <stdio.h>\n#include \"hw.h\"\n\nmain(void)\n{\n    printf(\"Hello World\");\n    tracepoint(hello_world_trace_provider,  hw_tracepoint, 1, \"I said: Hello World\");\n}\n```", "```\n# gcc -o hw helloworld.c hw.o -llttng-ust -ldl\n\n```", "```\nEXTRA_IMAGE_FEATURES = \"tools-sdk dev-pkgs\"\n\n```", "```\n    # lttng create test-session\n    Spawning a session daemon\n    Warning: No tracing group detected\n    Session test-session created.\n    Traces will be written in /home/root/lttng-traces/test- session-20150117-195930\n\n    ```", "```\n    # lttng enable-event --userspace hello_world_trace_provider:hw_tracepoint\n    Warning: No tracing group detected\n    UST event hello_world_trace_provider:hw_tracepoint created in channel channel0\n\n    ```", "```\n    # lttng start\n    Tracing started for session test-session\n\n    ```", "```\n    #./hw\n    Hello World\n\n    ```", "```\n    # lttng stop\n\n    ```", "```\n    # lttng view\n    [20:00:43.537630037] (+?.?????????) wandboard-quad hello_world_trace_provider:hw_tracepoint: { cpu_id = 0 }, { my_string_field = \"I said: Hello World\", my_integer_field = 1 }\n\n    ```", "```\n    # lttng destroy test-session\n\n    ```", "```\nIMAGE_INSTALL_append = \" blktrace\"\n```", "```\n# mount -t ext2 /dev/mmcblk0p2 /mnt\nEXT2-fs (mmcblk0p2): warning: mounting ext3 filesystem as ext2\nEXT2-fs (mmcblk0p2): warning: mounting unchecked fs, running e2fsck is recommended\n\n```", "```\n    # blktrace /dev/mmcblk0\n\n    ```", "```\n    # dd if=/dev/urandom of=/mnt/home/root/random-10k-file bs=1k count=10 conv=fsync\n    10+0 records in\n    10+0 records out\n    10240 bytes (10 kB) copied, 0.00585167 s, 1.7 MB/s\n\n    ```", "```\n    ^C=== mmcblk0 ===\n      CPU  0:                   30 events,        2 KiB data\n     Total:                    30 events (dropped 0),        2 KiB data\n\n    ```", "```\n# blkparse mmcblk0\n\n```", "```\nInput file mmcblk0.blktrace.0 added\n179,0    0        1     0.000000000   521  A   W 1138688 + 8 <- (179,2) 1114112\n179,0    0        2     0.000003666   521  Q   W 1138688 + 8 [kworker/u8:0]\n179,0    0        3     0.000025333   521  G   W 1138688 + 8 [kworker/u8:0]\n179,0    0        4     0.000031000   521  P   N [kworker/u8:0]\n179,0    0        5     0.000044666   521  I   W 1138688 + 8 [kworker/u8:0]\n179,0    0        0     0.000056666     0  m   N cfq519A  insert_request\n179,0    0        0     0.000063000     0  m   N cfq519A  add_to_rr\n179,0    0        6     0.000081000   521  U   N [kworker/u8:0] 1\n179,0    0        0     0.000121000     0  m   N cfq workload slice:6\n179,0    0        0     0.000132666     0  m   N cfq519A  set_active wl_class:0 wl_type:0\n179,0    0        0     0.000141333     0  m   N cfq519A  Not idling. st->count:1\n179,0    0        0     0.000150000     0  m   N cfq519A  fifo=  (null)\n179,0    0        0     0.000156000     0  m   N cfq519A  dispatch_insert\n179,0    0        0     0.000167666     0  m   N cfq519A  dispatched a request\n179,0    0        0     0.000175000     0  m   N cfq519A  activate rq, drv=1\n179,0    0        7     0.000181333    83  D   W 1138688 + 8 [mmcqd/2]\n179,0    0        8     0.735417000    83  C   W 1138688 + 8 [0]\n179,0    0        0     0.739904333     0  m   N cfq519A  complete rqnoidle 0\n179,0    0        0     0.739910000     0  m   N cfq519A  set_slice=4\n179,0    0        0     0.739912000     0  m   N cfq schedule dispatch\nCPU0 (mmcblk0):\n Reads Queued:           0,        0KiB  Writes Queued:1,4KiB\n Read Dispatches:        0,        0KiB  Write Dispatches:1,4KiB\n Reads Requeued:         0               Writes Requeued:0\n Reads Completed:        0,        0KiB  Writes Completed:1,4KiB\n Read Merges:            0,        0KiB  Write Merges:0,0KiB\n Read depth:             0               Write depth:1\n IO unplugs:             1               Timer unplugs:0\n\nThroughput (R/W): 0KiB/s / 5KiB/s\nEvents (mmcblk0): 20 entries\nSkips: 0 forward (0 -   0.0%)\n```", "```\n179,0    0        7     0.000181333    83  D   W 1138688 + 8 [mmcqd/2]\n\n```", "```\n<mayor,minor> <cpu> <seq_nr> <timestamp> <pid> <actions> <rwbs> <start block> + <nr of blocks> <command>\n\n```", "```\n# blktrace /dev/mmcblk0 -o - | blkparse -i -\n\n```", "```\n# btrace /dev/mmcblk0\n\n```", "```\n# blktrace -l /dev/mmcblk0\n\n```", "```\n$ blktrace -d /dev/mmcblk0 -h <target_ip>\n\n```", "```\n# dd if=/dev/urandom of=/mnt/home/root/random-10k-file bs=1k count=10 conv=fsync\n10+0 records in\n10+0 records out\n10240 bytes (10 kB) copied, 0.00585167 s, 1.7 MB/s\n\n```"]