["```\ncat /etc/*-release\n```", "```\ncat /proc/version\n```", "```\nuname -a\n```", "```\nserver_uptime=`uptime | awk '{print $3,$4}'| sed 's/,//'| grep \"day\"`;\nif [[ -z \"$server_uptime\" ]]; then\n server_uptime=`uptime | awk '{print $3}'| sed 's/,//'`\n echo $server_uptime\nelse\n :;\nfi;\n```", "```\n$ sudo dmidecode -s system-manufacture\n$ sudo dmidecode -s system-product-name\n$ sudo dmidecode -s system-serial-number\n```", "```\nsudo dmidecode -t4|awk '/Handle / {print $2}' |sed 's/,//'\n```", "```\nip a\n```", "```\nip addr show ens33\n```", "```\nsudo dmidecode -t17 |awk '/Handle / {print $2}'|wc -l\n```", "```\nsudo dmidecode -t17 |awk '/Size:/'|awk '!/No/'|wc -l\n```", "```\nsudo dmidecode -t17 |awk '/Size:/'|awk '/No/'|wc -l\n```", "```\nDISTRIB_ID=Ubuntu\nDISTRIB_RELEASE=16.04\nDISTRIB_CODENAME=xenial\nDISTRIB_DESCRIPTION=\"Ubuntu 16.04.4 LTS\"\nNAME=\"Ubuntu\"\nVERSION=\"16.04.4 LTS (Xenial Xerus)\"\nID=ubuntu\nID_LIKE=Debian\nPRETTY_NAME=\"Ubuntu 16.04.4 LTS\"\nVERSION_ID=\"16.04\"\nHOME_URL=\"http://www.ubuntu.com/\"\nSUPPORT_URL=\"http://help.ubuntu.com/\"\nBUG_REPORT_URL=\"http://bugs.launchpad.net/ubuntu/\"\nVERSION_CODENAME=xenial\nUBUNTU_CODENAME=xenial\n```", "```\nLinux version 4.13.0-45-generic (buildd@lgw01-amd64-011) (gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.9)) #50~16.04.1-Ubuntu SMP Wed May 30 11:18:27 UTC 2018\n```", "```\nLinux ubuntu 4.13.0-45-generic #50~16.04.1-Ubuntu SMP Wed May 30 11:18:27 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\n```", "```\n0x0004\n0x0005\n0x0006\n0x0007\n```", "```\nCPU#000\nUnknown\nGenuineIntel\n1800MHz\n3.3V\n1\nCPU#001\nUnknown\nGenuineIntel\n1800MHz\n3.3V\n1\nCPU#002\nUnknown\nGenuineIntel\n1800MHz\n3.3V\n1\nCPU#003\nUnknown\nGenuineIntel\n1800MHz\n3.3V\n1\n```", "```\nif ping -q -c 1 -W 1 8.8.8.8 >/dev/null; then\n echo \"IPv4 is up\"\nelse\n echo \"IPv4 is down\"\nfi\n```", "```\nif ping -q -c 1 -W 1 google.com >/dev/null\nthen\n echo \"The network is up\"\nelse\n echo \"The network is down\"\nfi\n```", "```\ncase \"$(curl -s --max-time 2 -I http://google.com | sed 's/^[^ ]*  *\\([0-9]\\).*/\\1/; 1q')\" in\n [23]) echo \"HTTP connectivity is up\";;\n 5) echo \"The web proxy won't let us through\";;\n *) echo \"The network is down or very slow\";;\nesac\n```", "```\n#!/bin/bash\nifdown wlan0\nrm /etc/network/interfaces\ntouch /etc/network/interfaces\necho 'auto lo' >> /etc/network/interfaces\necho 'iface lo inet loopback' >> /etc/network/interfaces\necho 'iface eth0 inet dhcp' >> /etc/network/interfaces\necho 'allow-hotplug wlan0' >> /etc/network/interfaces\necho 'iface wlan0 inet manual' >> /etc/network/interfaces\necho 'wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf' >> /etc/network/interfaces\necho 'iface default inet dhcp' >> /etc/network/interfaces\nrm /etc/wpa_supplicant/wpa_supplicant.conf\ntouch /etc/wpa_supplicant/wpa_supplicant.conf\necho 'ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev' >> /etc/wpa_supplicant/wpa_supplicant.conf\necho 'update_config=1' >> /etc/wpa_supplicant/wpa_supplicant.conf\nwpa_passphrase $1 $2 >> /etc/wpa_supplicant/wpa_supplicant.conf\nifup wlan0\n```", "```\nsudo bash wifi_conn.sh <SSID> <password>\n```", "```\n#! /bin/bash\nfolder=~/Desktop/abc\ncdate=$(date +\"%Y-%m-%d-%H:%M\")\ninotifywait -m -q -e create -r --format '%:e %w%f' $folder | while read file\ndo\n    mv ~/Desktop/abc/output.txt ~/Desktop/Old_abc/${cdate}-output.txt\ndone\n```", "```\n$ bzip2 *filename*\n```", "```\n$ bzip2 file1 file2 file3 /student/work\n```", "```\n$ zip -r file_name.zip files_dir\n```", "```\n$ tar -cvf filename.tar directory/file\n```", "```\n$ tar -cvf filename.tar /home/student/work /home/student/school\n```", "```\n$ tar -tvf filename.tar\n```", "```\n$ tar -xvf filename.tar\n```", "```\n$ cat /etc/logrotate.conf\n```", "```\nweekly\nrotate 4\ncreate\n\ninclude /etc/logrotate.d\n# no packages own wtmp, or btmp -- we'll rotate them here\n/var/log/wtmp {\n missingok\n monthly\n create 0664 root utmp\n rotate 1\n}\n\n/var/log/btmp {\n missingok\n monthly\n create 0660 root utmp\n rotate 1\n}\n\n# system-specific logs may be configured here\n```", "```\n$ sudo nano /etc/logrotate.d/example-app\n```", "```\n/var/log/example-app/*.log {\n    daily\n    missingok\n    rotate 14\n    compress\n    notifempty\n    create 0640 www-data www-data\n    sharedscripts\n    postrotate\n        systemctl reload example-app\n    endscript\n}\n\n```", "```\n $ sudo logrotate /etc/logrotate.conf --debug\n```", "```\n$ sudo iptables -L\n```", "```\n$ sudo iptables -A INPUT -p tcp --dport 4321 -j ACCEPT\n```", "```\n$ sudo iptables -A INPUT -j DROP\n```", "```\n$ sudo iptables-save\n```", "```\n$ sudo iptables-save > /path/to/the/file\n```", "```\n$ sudo iptables-restore > /path/to/the/file\n```", "```\n#!/bin/bash\nmysql -u root -pTraining2@^ <<MY_QUERY\nSELECT VERSION();\nMY_QUERY\n```", "```\n#!/bin/bash\nmysql -u root -pTraining2@^ <<MY_QUERY\ncreate database testdb;\nMY_QUERY\n```", "```\n$ sqlite3 testdb\n```", "```\n$  sqlite3 testdb\nSQLite version 3.11.0 2016-02-15 17:29:24\nEnter \".help\" for usage hints.\nsqlite> .databases\nseq  name             file \n---  ---------------  ----------------------------------------------------------\n0   main             /home/student/testdb \nsqlite> CREATE TABLE bookslist(title text, author text);\nsqlite> .tables\nbookslist\n```", "```\nstudent@ubuntu:~$ sudo -i -u postgres\npostgres@ubuntu:~$ psql\npsql (9.5.13)\nType \"help\" for help.\npostgres=# create database testdb;\nCREATE DATABASE\npostgres=# \\quit\npostgres@ubuntu:~$ psql testdb\npsql (9.5.13)\nType \"help\" for help.\ntestdb=# select version();\n version \n-------------------------------------------------------------------------------------------\n PostgreSQL 9.5.13 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609, 64-bit\n(1 row)\n```", "```\npostgres@ubuntu:~$ psql testdb\npsql (9.5.13)\nType \"help\" for help.\ntestdb=# create table employee(id integer, name text, address text, designation text, salary integer);\nCREATE TABLE\ntestdb=#\n```", "```\n$ ssh-keygen\n```", "```\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/home/student/.ssh/id_rsa): /home/student/keytext\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in /home/student/keytext.\nYour public key has been saved in /home/student/keytext.pub.\nThe key fingerprint is:\nSHA256:6wmj6l9EcjufZhvwQ+iKIqEchO1mtEwC/x5rMyoKyeY student@ubuntu\nThe key's randomart image is:\n+---[RSA 2048]----+\n|                 |\n|.                |\n|oo  . o          |\n|o.=  + o         |\n|.* o  * S        |\n|oo* oo * o       |\n|=*.. o= X        |\n|O. .*+ * =       |\n|+E==+o  +        |\n+----[SHA256]-----+\n```", "```\n$ ssh-copy-id remote_hostname\n```", "```\n$ ssh remote_hostname\n```", "```\n$ crontab -e\n```", "```\n * * * * * /etc/name_of_cron_folder/script.sh\n```", "```\n$ crontab -l\n```", "```\n$ crontab -e\n```", "```\n#!/bin/bash\n#set -x\nMY_INPUT='/home/mansijoshi/Desktop'\ndeclare -a SURNAME\ndeclare -a NAME\ndeclare -a USERNAME\ndeclare -a DEPARTMENT\ndeclare -a PASSWORD\nwhile IFS=, read -r COL1 COL2 COL3 COL4 COL5 TRASH;\ndo\n    SURNAME+=(\"$COL1\")\n    NAME+=(\"$COL2\")\n    USERNAME+=(\"$COL3\")\n    DEPARTMENT+=(\"$COL4\")\n    PASSWORD+=(\"$COL5\")\ndone <\"$MY_INPUT\"\nfor index in \"${!USERNAME[@]}\"; do\n    useradd -g \"${DEPARTMENT[$index]}\" -d \"/home/${USERNAME[$index]}\" -s /bin/bash -p \"$(echo \"${PASSWORD[$index]}\" | openssl passwd -1 -stdin)\" \"${USERNAME[$index]}\"\ndone\n```"]