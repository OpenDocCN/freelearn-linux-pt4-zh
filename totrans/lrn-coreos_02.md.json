["```\n$ git clone https://github.com/coreos/coreos-vagrant/\n\n```", "```\ngit clone https://github.com/coreos/coreos-vagrant/\nCloning into 'coreos-vagrant'...\nremote: Counting objects: 402, done.\nremote: Total 402 (delta 0), reused 0 (delta 0), pack-reused 402\nReceiving objects: 100% (402/402), 96.63 KiB | 31.00 KiB/s, done.\nResolving deltas: 100% (175/175), done.\n\ncd coreos-vagrant/\nls\nconfig.rb.sample*  CONTRIBUTING.md*  DCO*  LICENSE*  MAINTAINERS*  NOTICE*  README.md*  user-data.sample*  Vagrantfile*\n\n```", "```\n…\nCONFIG = File.join(File.dirname(__FILE__), \"config.rb\")\n….\nif File.exist?(CONFIG)\n require CONFIG\nend\n…\n\n…\nCLOUD_CONFIG_PATH = File.join(File.dirname(__FILE__), \"user-data\")\n…\n if File.exist?(CLOUD_CONFIG_PATH)\n config.vm.provision :file, :source => \"#{CLOUD_CONFIG_PATH}\", :destination => \"/tmp/vagrantfile-user-data\"\n config.vm.provision :shell, :inline => \"mv /tmp/vagrantfile-user-data /var/lib/coreos-vagrant/\", :privileged => true\n end\n…\n\n```", "```\n        #cloud-config\n        coreos:\n         etcd2:\n         discovery: https://discovery.etcd.io/d54166dee3e709cf35b0d78913621df6\n         # multi-region and multi-cloud deployments need to use $public_ipv4\n         advertise-client-urls: http://$public_ipv4:2379\n         initial-advertise-peer-urls: http://$private_ipv4:2380\n         # listen on both the official ports and the legacy ports\n         # legacy ports can be omitted if your application doesn't depend on them\n         listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001\n         listen-peer-urls: http://$private_ipv4:2380,http://$private_ipv4:7001\n\n        ```", "```\n        #cloud-config\n         fleet:\n         etcd_servers: http:// $public_ipv4:2379,http:// $public_ipv4:4001\n         public-ip: $public_ipv4\n\n        ```", "```\n        #cloud-config\n         units:\n         - name: etcd2.service\n         command: start\n         - name: fleet.service\n         command: start\n         - name: docker-tcp.socket\n         command: start\n         enable: true\n         content: |\n         [Unit]\n         Description=Docker Socket for the API\n\n         [Socket]\n         ListenStream=2375\n         Service=docker.service\n         BindIPv6Only=both\n\n         [Install]\n         WantedBy=sockets.target\n\n        ```", "```\n$num_instances=1\n$new_discovery_url=\"https://discovery.etcd.io/new?size=#{$num_instances}\"\n\n# To automatically replace the discovery token on 'vagrant up', uncomment\n# the lines below:\n#\n#if File.exists?('user-data') && ARGV[0].eql?('up')\n#  require 'open-uri'\n#  require 'yaml'\n#\n#  token = open($new_discovery_url).read\n#\n#  data = YAML.load(IO.readlines('user-data')[1..-1].join)\n#  if data['coreos'].key? 'etcd'\n#    data['coreos']['etcd']['discovery'] = token\n#  end\n#  if data['coreos'].key? 'etcd2'\n#    data['coreos']['etcd2']['discovery'] = token\n#  end\n#\n#  # Fix for YAML.load() converting reboot-strategy from 'off' to false`\n#  if data['coreos']['update'].key? 'reboot-strategy'\n#     if data['coreos']['update']['reboot-strategy'] == false\n#          data['coreos']['update']['reboot-strategy'] = 'off'\n#       end\n#  end\n#\n#  yaml = YAML.dump(data)\n#  File.open('user-data', 'w') { |file| file.write(\"#cloud-config\\n\\n#{yaml}\") }\n#end\n\n$instance_name_prefix=\"coreOS-learn\"\n$image_version = \"current\"\n$update_channel='alpha'\n$vm_gui = false\n$vm_memory = 1024\n$vm_cpus = 1\n$shared_folders = {}\n$forwarded_ports = {}\n```", "```\nvagrant up\nBringing machine 'core-01' up with 'virtualbox' provider...\n==> core-01: Checking if box 'coreos-alpha' is up to date...\n==> core-01: Clearing any previously set forwarded ports...\n==> core-01: Clearing any previously set network interfaces...\n==> core-01: Preparing network interfaces based on configuration...\n core-01: Adapter 1: nat\n core-01: Adapter 2: hostonly\n==> core-01: Forwarding ports...\n core-01: 22 => 2222 (adapter 1)\n==> core-01: Running 'pre-boot' VM customizations...\n==> core-01: Booting VM...\n==> core-01: Waiting for machine to boot. This may take a few minutes...\n core-01: SSH address: 127.0.0.1:2222\n core-01: SSH username: core\n core-01: SSH auth method: private key\n core-01: Warning: Connection timeout. Retrying...\n==> core-01: Machine booted and ready!\n==> core-01: Setting hostname...\n==> core-01: Configuring and enabling network interfaces...\n==> core-01: Machine already provisioned. Run `vagrant provision` or use the `--provision`\n==> core-01: flag to force provisioning. Provisioners marked to run always will still run.\n\nvagrant status\nCurrent machine states:\n\ncore-01                   running (virtualbox)\n\n```", "```\n    mkdir -p /tmp/new-drive/openstack/latest\n\n    ```", "```\n    cp user_data /tmp/new-drive/openstack/latest/user_data\n\n    ```", "```\n    mkisofs -R -V config-2 -o configdrive.iso /tmp/new-drive\n\n    ```", "```\n$cat Dockerfile\nFROM centos\nCMD [\"uname\", \"-a\"]\n\n$ docker build -t docker_uname .\nSending build context to Docker daemon 2.048 kB\nStep 0 : FROM centos\n ---> 7322fbe74aa5\nStep 1 : CMD uname -a\n ---> Using cache\n ---> 36d993cf27b9\nSuccessfully built 36d993cf27b9\n\n```", "```\n# Comment\nINSTRUCTION arguments\n```", "```\n    FROM <image> \n    FROM <image>:<tag>\n    FROM <image>@<digest>\n\n    ```", "```\n    RUN <command> \n\n    ```", "```\n    RUN [\"executable\", \"param1\", \"param2\"]\n\n    ```", "```\ndocker pull centos\n\n```", "```\n$ docker run centos uname -a\nLinux 3c954433a1e2 4.0.9-boot2docker #1 SMP Thu Aug 13 03:05:44 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux\n\n```", "```\n$cat Dockerfile\nFROM centos\n\n# install ncat commad to be used for this demo during build. Ncat \n# is not part of standard package.\nRUN [\"yum\", \"-y\", \"install\", \"nc\"]\n\n# print machine ips\nRUN [\"cat\", \"/etc/hosts\"]\n\n# run the command ncat to listen on all IP address on port 12345\nCMD [\"ncat\", \"-vv\", \"-l\", \"0.0.0.0\", \"12345\"]\n\n$ docker build -t dock_ncat .\nSending build context to Docker daemon 3.072 kB\nStep 0 : FROM centos\n ---> 7322fbe74aa5\nStep 1 : RUN yum -y install nc\n ---> Using cache\n ---> 886063e43760\nStep 2 : RUN cat /etc/hosts\n ---> Using cache\n ---> df623793d532\nStep 3 : CMD ncat -vv -l 0.0.0.0 12345\n ---> Running in a0a5daa581b4\n ---> f8ad341c047e\nRemoving intermediate container a0a5daa581b4\nSuccessfully built f8ad341c047e Removing intermediate container 6f8284dad1f8\nSuccessfully built 3c60a690a2d7\n\n$ docker run -p :12344:12345 dock_ncat\nNcat: Version 6.40 ( http://nmap.org/ncat )\nNcat: Listening on 0.0.0.0:12345\nNcat: Connection from 172.18.42.1.\nNcat: Connection from 172.18.42.1:58939.\n\n```"]