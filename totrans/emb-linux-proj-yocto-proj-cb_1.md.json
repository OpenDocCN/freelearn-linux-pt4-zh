["```\n$ sudo apt-get install gawk wget git-core diffstat unzip texinfo gcc- multilib build-essential chrpath socat libsdl1.2-dev xterm make xsltproc docbook-utils fop dblatex xmlto autoconf automake libtool libglib2.0-dev python-gtk2 bsdmainutils screen\n\n```", "```\n    noatime,barrier=0,commit=6000.\n    ```", "```\n$ sudo install -o $(id -u) -g $(id -g) -d /opt/yocto\n$ cd /opt/yocto\n$ git clone --branch dizzy git://git.yoctoproject.org/poky\n\n```", "```\n$ cd /opt/yocto/poky\n$ source oe-init-build-env qemuarm\n\n```", "```\n$ source oe-init-build-env-memres 12345 qemuarm\n\n```", "```\n$ bitbake -m\n\n```", "```\n$ cd /opt/yocto/poky/qemuarm\n$ rm -Rf tmp sstate-cache\n\n```", "```\n$ TEMPLATECONF=meta-custom/config source oe-init-build-env <build- dir>\n\n```", "```\n$ cd /opt/yocto/poky\n$ ls meta*/recipes*/images/*.bb\n\n```", "```\n$ cd /opt/yocto/poky/qemuarm\n$ MACHINE=qemuarm bitbake core-image-minimal\n\n```", "```\n$ export MACHINE=qemuarm\n\n```", "```\n- #MACHINE ?= \"qemuarm\"\n+ MACHINE ?= \"qemuarm\"\n```", "```\n$ bitbake core-image-minimal\n\n```", "```\nINHERIT += \"rm_work\"\n```", "```\nRM_WORK_EXCLUDE += \"linux-yocto u-boot\"\n```", "```\nRM_OLD_IMAGE = \"1\"\n```", "```\n$ runqemu qemuarm core-image-minimal\n\n```", "```\n    ACCEPT_FSL_EULA = \"1\"\n    ```", "```\n$ sudo curl http://commondatastorage.googleapis.com/git-repo- downloads/repo > /usr/local/sbin/repo\n$ sudo chmod a+x /usr/local/sbin/repo\n\n```", "```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<manifest>\n  <default sync-j=\"4\" revision=\"master\"/>\n  <remote fetch=\"git://git.yoctoproject.org\" name=\"yocto\"/>\n  <remote fetch=\"git://github.com/Freescale\" name=\"freescale\"/>\n  <remote fetch=\"git://git.openembedded.org\" name=\"oe\"/>\n  <project remote=\"yocto\" revision=\"dizzy\" name=\"poky\" path=\"sources/poky\"/>\n  <project remote=\"yocto\" revision=\"dizzy\" name=\"meta-fsl-arm\" path=\"sources/meta-fsl-arm\"/>\n  <project remote=\"oe\" revision=\"dizzy\" name=\"meta-openembedded\" path=\"sources/meta-openembedded\"/>\n  <project remote=\"freescale\" revision=\"dizzy\" name=\"fsl- community-bsp-base\" path=\"sources/base\">\n        <copyfile dest=\"README\" src=\"img/README\"/>\n        <copyfile dest=\"setup-environment\" src=\"img/setup- environment\"/>\n  </project>\n  <project remote=\"freescale\" revision=\"dizzy\" name=\"meta-fsl-arm- extra\" path=\"sources/meta-fsl-arm-extra\"/>\n  <project remote=\"freescale\" revision=\"dizzy\" name=\"meta-fsl- demos\" path=\"sources/meta-fsl-demos\"/>\n  <project remote=\"freescale\" revision=\"dizzy\" name=\"Documentation\" path=\"sources/Documentation\"/>\n</manifest>\n```", "```\n$ mkdir /opt/yocto/fsl-community-bsp\n$ cd /opt/yocto/fsl-community-bsp\n$ repo init -u https://github.com/Freescale/fsl-community-bsp- platform -b dizzy\n$ repo sync\n\n```", "```\n$ ls sources/meta-fsl*/conf/machine/*.conf\n\n```", "```\n$ ls sources/meta-fsl*/recipes*/images/*.bb\n\n```", "```\n$ cd /opt/yocto/fsl-community-bsp\n$ mkdir -p wandboard-quad\n$ MACHINE=wandboard-quad source setup-environment wandboard-quad\n$ bitbake core-image-minimal\n\n```", "```\n$ cd /opt/yocto/fsl-community-bsp/\n$ source setup-environment wandboard-quad\n\n```", "```\n$ cd /opt/yocto/fsl-community-bsp/wandboard- quad/tmp/deploy/images/wandboard-quad/\n$ sudo dd if=core-image-minimal.sdcard of=/dev/sdN bs=1M && sync\n\n```", "```\n    Bus 002 Device 006: ID 15a2:0054 Freescale Semiconductor, Inc. i.MX6Q SystemOnChip in RecoveryMode\n    ```", "```\n    $ minicom -D /dev/ttyS0 -b 115200\n\n    ```", "```\n    IMAGE_INSTALL_append = \" dropbear\"\n    ```", "```\n    $ ssh root@<ip_address>\n\n    ```", "```\n$ sudo dd if=/dev/sdN of=/tmp/sdcard.img count=10\n\n```", "```\n$ head /tmp/sdcard.img | hexdump\n0000400 00d1 4020 0000 1780 0000 0000 f42c 177f\n\n```", "```\n$ head u-boot-wandboard-quad.imx | hexdump\n0000000 00d1 4020 0000 1780 0000 0000 f42c 177f\n\n```", "```\n$ sudo apt-get install tftpd-hpa\n\n```", "```\n$ sudo chmod 1777 /var/lib/tftpboot\n\n```", "```\n$ cd /opt/yocto/fsl-community-bsp/wandboard- quad/tmp/deploy/images/wandboard-quad/\n$ cp zImage-wandboard-quad.bin zImage-imx6q-wandboard.dtb /var/lib/tftpboot\n\n```", "```\n$ sudo apt-get install nfs-kernel-server\n\n```", "```\n$ sudo mkdir /nfsroot\n$ cd /nfsroot\n$ sudo tar xvf /opt/yocto/fsl-community-bsp/wandboard- quad/tmp/deploy/images/wandboard-quad/core-image-minimal-wandboard- quad.tar.bz2\n\n```", "```\n/etc/exports:\n/nfsroot/ *(rw,no_root_squash,async,no_subtree_check)\n\n```", "```\n$ sudo service nfs-kernel-server restart\n\n```", "```\n    > dhcp\n\n    ```", "```\n    > setenv ipaddr <static_ip>\n\n    ```", "```\n    > setenv serverip <host_ip>\n\n    ```", "```\n    > setenv nfsroot /nfsroot\n\n    ```", "```\n    > setenv image zImage-wandboard-quad.bin\n    > setenv fdt_file zImage-imx6q-wandboard.dtb\n\n    ```", "```\n    > setenv ip_dyn no\n\n    ```", "```\n    > saveenv\n\n    ```", "```\n    > run netboot\n\n    ```", "```\nDL_DIR ?= \"${BSPDIR}/downloads/\"\n```", "```\nINHERIT += \"own-mirrors\"\nSOURCE_MIRROR_URL = \"http://example.com/my-source-mirror\"\n```", "```\nBB_GENERATE_MIRROR_TARBALLS = \"1\"\n```", "```\nBB_FETCH_PREMIRRORONLY = \"1\"\n```", "```\nSSTATE_MIRRORS ?= \"\\\n     file://.* file:///nfs/local/mount/sstate/PATH\"\n```", "```\nEXTRA_IMAGE_FEATURES += \"package-management\"\n```", "```\nPRSERV_HOST = \"localhost:0\"\n```", "```\n$ bitbake-prserv --host <server_ip> --port <port> --start\n\n```", "```\nPRSERV_HOST = \"<server_ip>:<port>\"\n```", "```\n    $ sudo apt-get install lighttpd\n\n    ```", "```\n    $ sudo mkdir /var/www/wandboard-quad\n    $ sudo ln -s /opt/yocto/fsl-community-bsp/wandboard- quad/tmp/deploy/rpm /var/www/wandboard-quad/rpm\n\n    ```", "```\n    $ sudo service lighttpd reload\n\n    ```", "```\n    $ bitbake package-index\n\n    ```", "```\n    # smart channel --add all type=rpm-md \\ baseurl=http://<server_ip>/wandboard-quad/rpm/all\n\n    # smart channel --add wandboard_quad type=rpm-md \\ baseurl=http://<server_ip>/wandboard-quad/rpm/wandboard_quad\n\n    # smart channel --add cortexa9hf_vfp_neon type=rpm-md \\ baseurl=http://<server_ip>/wandboard- quad/rpm/cortexa9hf_vfp_neon\n\n    ```", "```\n    # smart update\n    # smart query <package_name>\n    # smart install <package_name>\n\n    ```", "```\nPACKAGE_FEED_URIS = \"http://<server_ip>/wandboard-quad\"\n```", "```\nINHERIT += \"buildhistory\"\n```", "```\nBUILDHISTORY_COMMIT = \"1\"\n```", "```\nBUILDHISTORY_FEATURES = \"image\"\n```", "```\nBUILDHISTORY_IMAGE_FILES += \"/path/to/file\"\n```", "```\n    $ git rev-parse \"HEAD@{1 month ago}\" > .git/info/grafts\n\n    ```", "```\n    $ git filter-branch\n\n    ```", "```\n    $ git clone file://${tmpfs}/buildhistory buildhistory.new\n\n    ```", "```\n    $ rm -rf buildhistory\n    $ mv buildhistory.new buildhistory\n\n    ```", "```\nUSER_CLASSES ?= \"buildstats\"\n\n```", "```\nHost Info: Linux agonzal 3.13.0-35-generic #62-Ubuntu SMP Fri Aug 15 01:58:42 UTC 2014 x86_64 x86_64\nBuild Started: 1411486841.52\nUncompressed Rootfs size: 6.2M  /opt/yocto/fsl-community- bsp/wandboard-quad/tmp/work/wandboard_quad-poky-linux- gnueabi/core-image-minimal/1.0-r0/rootfs\nElapsed time: 2878.26 seconds\nCPU usage: 51.5%\nEndIOinProgress: 0\nEndReadsComp: 0\nEndReadsMerged: 55289561\nEndSectRead: 65147300\nEndSectWrite: 250044353\nEndTimeIO: 14415452\nEndTimeReads: 10338443\nEndTimeWrite: 750935284\nEndWTimeIO: 816314180\nEndWritesComp: 0\nStartIOinProgress: 0\nStartReadsComp: 0\nStartReadsMerged: 52319544\nStartSectRead: 59228240\nStartSectWrite: 207536552\nStartTimeIO: 13116200\nStartTimeReads: 8831854\nStartTimeWrite: 3861639688\nStartWTimeIO: 3921064032\nStartWritesComp: 0\n```", "```\n$ ../sources/poky/scripts/pybootchartgui/pybootchartgui.py tmp/buildstats/core-image-minimal-wandboard-quad/ -o /tmp\n\n```", "```\n$ find -name \"*busybox*\"\n\n```", "```\n$ find -name \"*busybox*.bb*\"\n\n```", "```\n$ bitbake -e | grep -w DISTRO_FEATURES\n\n```", "```\n$ bitbake -e busybox | grep ^S=\n\n```", "```\n$ bitbake -e <target> | grep ^WORKDIR=\n\n```", "```\n$ bitbake -c devshell <target>\n\n```", "```\nOE_TERMINAL = \"screen\"\n```", "```\n$ bitbake -c listtasks <target>\n\n```", "```\n$ bitbake -f <target>\n\n```", "```\n$ bitbake -c compile -f <target>\n\n```", "```\n /opt/yocto/fsl-community-bsp/wandboard-quad/tmp/work/cortexa9hf- vfp-neon-poky-linux-gnueabi/busybox/1.22.1-r32/temp\n```", "```\ninherit logging\n```", "```\n    bbdebug [123] \"message\"\n    ```", "```\n$ bitbake --show-versions\n\n```", "```\n$ bitbake -v <target>\n\n```", "```\n$ bitbake -g <target>\n\n```", "```\n$ bitbake -g <target> -I glibc\n\n```", "```\n$ dot -Tps filename.dot -o outfile.ps\n\n```", "```\n$ bitbake -g -u depexp <target>\n\n```", "```\n$ bitbake -DDD <target>\n\n```", "```\nINHERIT += \"report-error\"\n```", "```\n$ send-error-report ${LOG_DIR}/error-report/error-report_${TSTAMP}\n\n```", "```\n$ cd /opt/yocto/fsl-community-bsp/sources\n$ git clone https://github.com/kergoth/bb.git\n\n```", "```\n$ eval \"$(/opt/yocto/fsl-community-bsp/sources/bb/bin/bb init -)\"\n\n```", "```\n$ cd /opt/yocto/fsl-community-bsp\n$ source setup-environment wandboard-quad\n\n```", "```\n    $ bb contents <target>\n\n    ```", "```\n    $ bb search <pattern>\n\n    ```", "```\n    $ bb show -r <recipe> <variable>\n\n    ```"]