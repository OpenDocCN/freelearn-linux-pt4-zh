- en: Virtualization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When something is virtual, it's real, but not really. Virtual computers exist
    inside an actual physical, reach-out-and-touch-it computer. Okay, it's not really
    real, but it's inside a computer? Yes, you've got it! However, just to clarify
    for our mutual understanding, Merriam Webster's dictionary defines virtual (in
    the context of computing) as *being on or simulated on a computer or computer
    network*. This is a very good definition in that it describes exactly how a virtual
    device comes to be and where it exists.
  prefs: []
  type: TYPE_NORMAL
- en: A virtualized network environment provides an organization with the capability
    to create multiple **virtual machines** (**VMs**), each running a different operating
    system and applications. This allows the organization to maximize the capacity
    of its IT resources by extending the capabilities of a single computer to provide
    direct computing capacity to several users simultaneously.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will look at the concepts and applications of virtualization
    in a computer network environment. This includes the terminology, topology, components
    (virtual and physical), and their configurations and purposes. With the understanding
    of these elements of a virtualized environment, we can then see the purpose and
    operation of a virtualized network. The specific areas we will discuss are as
    follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Virtual environments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hypervisors and virtual network managers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Virtual hosts and guests
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hardware configurations for a virtual environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Resource allocations in a virtual network
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Virtual networking
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are three types of virtualization that are used in networks, each with
    its own specific purpose and operation:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Virtual private network (VPN)**: A secure connection through the internet
    using tunneling protocols'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Virtual local area network (VLAN)**: A grouping of network nodes in a logical
    domain'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Virtual network**: Not to be confused with a VLAN, a virtual network employs
    virtual, software-induced components to extend the capabilities of physical computing
    equipment'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A VPN creates a virtualized direct connection over the internetwork, between
    a remote device and an internal network. The purpose of a VPN is to provide the
    same safeguards and security that a directly wired connection should provide.
    A VLAN creates a logical arrangement of network nodes, regardless of their proximity,
    into a single domain structure. A VLAN is a virtual subset of a network that is
    a collision domain. Don't confuse a VLAN with a subnetwork, though.
  prefs: []
  type: TYPE_NORMAL
- en: Virtual network components
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The essential parts of a virtualized network environment, as illustrated in
    the following diagram, are the physical hardware, a virtual network server, and
    one or more virtual machines, each running a guest operating system, which, in
    turn, supports applications running in the virtual space.
  prefs: []
  type: TYPE_NORMAL
- en: 'Underneath any virtual environment is a physical infrastructure that must be
    able to support the resource needs of the virtualized environment you envision.
    As we discuss the components of a virtual environment, bear in mind the importance
    of the physical hardware:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f07fe702-4b3c-42a0-8f12-233fd028abd1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The structure of a virtualized environment
  prefs: []
  type: TYPE_NORMAL
- en: Virtual devices
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Regardless of whether a network is physical or virtual, it requires the functionality
    of interconnecting network devices, such as switches, routers, and network interfaces.
    A virtual network differs from a physical network because many, if not all, of
    its connectivity devices are themselves virtualized versions of physical devices
    with the same functionality.
  prefs: []
  type: TYPE_NORMAL
- en: In a virtual network, the essential virtual devices are virtual servers, virtual
    machines, virtual network interfaces, virtual switches, and virtual routers. Any
    physical component required in a physical network has a virtual equivalent use
    in a virtual environment.
  prefs: []
  type: TYPE_NORMAL
- en: Virtual servers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Networks grow, adding nodes, applications, and scope. In the past, managing
    network growth meant adding one or more physical servers to handle the additional
    demand on existing servers. Adding a physical server can be costly in terms of
    hardware acquisition, configuration, and downtime. On the other hand, adding a
    virtual server requires only the time to configure it, resulting in a much lower
    implementation cost and a lot less service interruption.
  prefs: []
  type: TYPE_NORMAL
- en: 'Server virtualization is the partitioning of a physical server into two or
    more virtual servers. Server virtualization masks the physical hardware and users
    see only the resources that have been allocated to the virtual machine in use.
    There are three primary types of server virtualization:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Full virtualization**: This form of server virtualization replaces the physical
    server''s operating system with a specialized form of operations, either through
    a supervisor or a hypervisor. The hypervisor acts as a go-between for the virtual
    servers and virtual machines, which are unaware of each other, running in its
    environment and the physical computer and its resources. Examples of full virtualization
    systems include Adeos, Mac-on-Linux, Parallel Desktop for Mac, VMware ESXi, VirtualBox,
    Win4BSD, and **Quick Emulator** (**QEMU**) or Microsoft Hyper-V.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Para-virtualization**: In this form of server virtualization, a hypervisor
    or **virtual machine manager** (**VMM**) supports virtual servers that have been
    modified to run in this environment. This virtualization approach allows two or
    more different operating systems to share a physical computer and its resources.
    A primary example of this form of virtualization is the Xen Project Hypervisor.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Operating system level virtualization**: This form of server virtualization
    creates an environment in which several processing spaces, known as containers,
    zones, virtualization engines, or jails, which are independent processing spaces,
    are all running on the same operating system. In place of a hypervisor, the native
    operating system provides support for the virtualized environment. Examples of
    this type of server virtualization include Linux V-Server, FreeBSD Jail, AIX Workload
    Partitions, and Solaris Containers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hypervisors
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A key part of virtualization is the hypervisor, or VMM, which is low-level
    software that facilitates multiple virtual machines running on a single physical
    computer. There are two types of hypervisors, plus a hybrid that blends the two.
    The two types of hypervisors are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Type I**: These are the bare-metal, embedded, or native hypervisors. This
    type of hypervisor installs itself directly onto the physical hardware or on the
    *bare metal* of the computer, as illustrated in the following diagram.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Type II**: These are the hosted hypervisors. As shown in the following diagram,
    a Type II hypervisor runs on the host computer''s operating system:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/f9f2d859-9d4a-4218-8045-3b5308a222d2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: A Type I hypervisor configuration (left) and a Type II hypervisor configuration
    (right)
  prefs: []
  type: TYPE_NORMAL
- en: As illustrated in the preceding diagram, the primary difference between a Type
    I and a Type II hypervisor is that one runs without an underlying host operating
    system (Type I) while the other does (Type II).
  prefs: []
  type: TYPE_NORMAL
- en: Although not technically a separate category of hypervisors, some companies
    are finding that fitting different hypervisors to different workloads creates
    a more efficient computing solution for them. Third-party software is available
    to manage multi-hypervisor environments, creating a hybrid hypervisor deployment.
  prefs: []
  type: TYPE_NORMAL
- en: Hosts and guests
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Three virtualization terms that are often confused or used interchangeably are
    virtual machine, host, and guest. A virtual machine and a guest are terms for
    the same thing. Each refers to a software-created and managed workspace on the
    host computer that emulates a single virtual computer. The term *host* can refer
    to the host hardware, or the computer on which the virtual system is running,
    or to the host OS in a Type II environment. The host system is typically able
    to support multiple guest systems.
  prefs: []
  type: TYPE_NORMAL
- en: Virtual machine (VM)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A VM is a complete computer system, including its devices, operating system,
    application software, and so on, that are created through software to run on a
    physical computer, possibly along with other VMs. A VM is able to run programs
    or applications in the same way they would on a physical computer that''s not
    been configured virtually:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0df6271f-b88a-42a0-8d4e-0511f9ce13f8.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Virtual machines on a host system
  prefs: []
  type: TYPE_NORMAL
- en: A **virtual machine management interface** (**VMMI**), that is, a VM control
    panel, allows an administrator to monitor, create, delete, pause, start, and stop
    virtual machines in a virtualized environment. Some of these tools also provide
    the capability to reconfigure the allocation of the host system's physical resources
    for one or more virtual machines. Each of the major virtualized system developers
    (Citrix, Microsoft, and VMWare) offer VMMI software as part of their server virtualization
    packages. There are also third-party and open source VMMI packages that are compatible
    with many of the virtualization systems, including some that are based on the
    **Simple Network Management Protocol** (**SNMP**).
  prefs: []
  type: TYPE_NORMAL
- en: Hardware configuration for a virtual environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The hardware configuration required to support a virtual server, virtual machine,
    or other virtual devices is a function of each network environment, which is,
    in turn, a function of each individual organization. The major virtualization
    software providers have websites that enable users to determine the best hardware
    configuration for their needs, hardware, and plans. However, there are general
    guidelines, although not actually standards, for configuring a computer to support
    a virtual environment. The primary components for consideration are the CPU, memory,
    the BIOS/UEFI, and the physical network capacity.
  prefs: []
  type: TYPE_NORMAL
- en: 'Like just about everything else in computing, what you need in terms of computing
    power and memory really depends on what you plan to do. Your choices may depend
    on the answers to the questions that define the needs of your organization and
    its near-term requirements. Some of the considerations to address include the
    following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**CPU**: Along with primary memory, one or more processors sufficient in size
    to support the size and volume of the virtualized system are required:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If multiple physical computers are in the virtualized network, you should use
    the same CPU platform (Intel versus AMD) in every case. Virtual machines can move
    from one physical computer to another easily, but only if the computers have the
    same CPU platform.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Choose only those processors that are optimized for hardware virtualization
    support and include Intel-VT or AMD-V.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Multi-core processors can provide additional processing capabilities, especially
    in larger virtualizations.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Memory**: The number of virtual machines possible on a host computer is a
    function of the amount of memory available on the host. Memory is the most limiting
    resource in a virtualized environment.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**BIOS/UEFI**: On AMD processors with AMD-V, this feature is automatically
    enabled. However, on Intel processors, the Intel-VT feature has an initial state disabled
    and must be enabled using either BIOS or UEFI.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Physical network**: Regardless of the structure of a virtualized of **software-defined
    network** (**SDN**) that overlays the physical network hardware, the physical
    network carries the network traffic. The physical network requires sufficient
    capacity to support all of the traffic generated by the virtual servers and machines,
    as if it were all directly part of the physical network.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Virtual resource allocation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In a virtualized environment, resources, such as the CPU, memory, and data storage,
    are allocated based on the settings of the shares, reservations, and limits of
    each resource for each VM. A virtual data center manages the resource pool and
    provides each VM with its initial resource allotment and on-demand resources,
    as needed, until the allocations reach an upper limit. The resource pool consists
    of the physical resources of the host computer minus the resource needs of the
    operating system, if any, and the hypervisor.
  prefs: []
  type: TYPE_NORMAL
- en: 'When the physical resources of the host no longer satisfy the resource demands
    of its virtual machines, the resources may require allocation or limits. The actions
    an administrator can take to assign resources to one or all VMs include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a reservation of one or more physical resources of the host computer
    or server cluster to one or more VMs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allocate a fixed share of a physical resource to a VM
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Assign a priority ranking to a VM that assures it a larger share of a physical
    resource
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Set upper limits on the allocation of resources to a VM
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The primary allocation methods that are used to balance the assignment and
    use of the physical system resources to virtual machines are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Resource allocation shares**: A share indicates the priority or importance
    of a virtual machine with respect to a particular resource. Shares are in three
    levels—**High**, **Normal**, or **Low**, which translates to *4* shares for High,
    *2* shares for Normal, and *1* share for Low. An administrator may also set a
    custom level and set the number of shares to a specific number that set a proportional
    share ratio with the shares of other VMs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Resource allocation reservation**: A resource reservation sets a minimum
    amount (in MBs or MHz) of a physical resource allocated to a VM. If the amount
    of a reserved resource is not available, the VM will start with a lower share,
    until such a time as the rest of the reserved resources become available.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Resource allocation limit**: An allocation limit sets an upper limit on the
    amount of a physical resource that may be allocated to a virtual machine. A virtual
    server can allocate more than one resource allocation reservation amount, but
    with an allocation limit specified, it cannot allocate the resource above the
    limit (expressed as MBs, MHz, or IOPS). By default, the limits for CPU, memory,
    and data storage are unlimited.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Network connectivity
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Network connectivity and bandwidth are host resources that may be allocated
    to the VMs running on it. The amount of allocation can be preset, just like the
    preceding resources, or it can be allocated to fit the communication need of a
    particular transmission.
  prefs: []
  type: TYPE_NORMAL
- en: 'A network connection on a VM can have one of three configurations:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Direct access (bridged)**: A VM, which has an assigned IP address, has direct
    access to an external network. The VM is able to communicate with the physical
    network through the host computer''s network adapter and directly interact with
    network nodes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Network Address Translation (NAT)**: In this configuration, the VM communicates
    to the network using the IP address of the host computer. This option is best
    if the VM doesn''t have an IP address of its own.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Host-only**: This configuration creates a connection between the host computer''s
    network adapter and that of the VM. In other words, the virtual network adapter
    is visible to the host system. In this configuration, the VM is able to communicate
    only with the host and any other VMs running on the host.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Virtual internetworking devices
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A virtual network uses essentially the same interconnection devices as a physical
    network—a **network interface controller** (**NIC**), a network switch, and a
    network router. On a virtual network, these devices (and a few others) are software-defined
    and virtual. These are **virtual NICs** (**vNICs**), **virtual switches** (**vSwitches**),
    and **virtual routers** (**vRouters**). The VMs connect to a virtual network through
    their vNICs, which logically connected to the **physical NICs** (**pNICs**) of
    the host.
  prefs: []
  type: TYPE_NORMAL
- en: On many virtual networks, vNICs connect to a vSwitch, which, in turn, connect
    to a vRouter. The functions of these virtual connectivity devices mirror that
    of their physical counterparts. However, like all virtual devices, at some point,
    they interconnect with the physical network.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are three types of virtualization that are used in networks, each with
    its own specific purpose and operation—VPNs, VLANs, and virtual networks. The
    parts of a virtualized network environment are the physical hardware, a virtual
    network server, and virtual machines. In a virtual network, the devices are virtual
    servers, VMs, virtual network interfaces, virtual switches, and virtual routers.
    Server virtualization partitions a physical server into virtual servers. Three
    types of server virtualization are full virtualization, para-virtualization, and
    operating system level virtualization.
  prefs: []
  type: TYPE_NORMAL
- en: A hypervisor is a piece of software that facilitates multiple virtual machines
    running on a single physical computer. There are two types of hypervisors—Type
    I, or bare-metal, and Type II, or a hosted hypervisor. The difference between
    Type I and Type II hypervisors is that a Type I runs without an underlying host
    operating system and a Type II hypervisor runs on top of a host operating system.
  prefs: []
  type: TYPE_NORMAL
- en: A VM is a software-created and managed workspace on a host computer that emulates
    a single virtual computer. A host may refer to the physical hardware of a computer
    or a host OS in a Type II environment. A host system typically supports multiple
    guest (virtual) systems. A VM is a complete computer system that runs on a host
    computer, typically with other VMs.
  prefs: []
  type: TYPE_NORMAL
- en: The hardware configuration required for the configuration of a virtual environment
    is the CPU, with hardware virtualization, memory, the BIOS/UEFI, and the physical
    network. Resources are allocated through shares, reservations, and limits. Network
    connectivity and bandwidth are host resources that may be allocated as direct-access,
    NAT, and host-only.
  prefs: []
  type: TYPE_NORMAL
