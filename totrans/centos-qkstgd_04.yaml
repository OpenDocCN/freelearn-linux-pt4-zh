- en: User and Group Management
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用户和组管理
- en: Linux is a multiuser OS, so it is essential to have a basic understanding of
    user management. In this chapter, you will learn how to add, delete, modify, and
    suspend user accounts and grant them permissions to perform essential tasks. You
    will also learn how to apply password policies in a Linux environment.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 是一个多用户操作系统，因此对用户管理有基本的了解是至关重要的。在本章中，您将学习如何添加、删除、修改和暂停用户账户，并授予它们执行基本任务的权限。您还将学习如何在
    Linux 环境中应用密码策略。
- en: 'In this chapter, we will cover the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下内容：
- en: Understanding different types of users and groups in CentOS 7
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解 CentOS 7 中不同类型的用户和组
- en: Executing commands as a superuser in CentOS 7
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以超级用户身份执行命令在 CentOS 7 中
- en: Creating, modifying, and deleting local user accounts
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建、修改和删除本地用户账户
- en: Creating, modifying, and deleting local group accounts
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建、修改和删除本地组账户
- en: Managing user passwords and aging policies
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理用户密码和密码过期策略
- en: Understanding users and groups in CentOS 7
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 CentOS 7 中的用户和组
- en: Managing different types of users and groups is one of the primary roles of
    system administration. Using different types of user and group account as a role-based
    access control is configured into the system. Depending upon the privileges of
    user, we can restrict user access to various system resources.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 管理不同类型的用户和组是系统管理的主要任务之一。通过将不同类型的用户和组账户作为基于角色的访问控制配置到系统中。根据用户的权限，我们可以限制用户访问各种系统资源。
- en: Defining a user
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义用户
- en: Each process running on our system is started by a user, to whom it belongs.
    Access to different files and directories by running processes is determined by
    the user associated with that process. Similarly, every file in our system is
    owned by some user and access to different files and directories on the system
    is restricted by user privileges. By default, new files created are owned by the
    user creating the file.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们系统中运行的每个进程都由一个用户启动，并归该用户所有。运行进程访问不同文件和目录的权限由与该进程关联的用户决定。同样，系统中的每个文件都归某个用户所有，访问系统中不同文件和目录的权限也受到用户权限的限制。默认情况下，创建新文件的用户即为该文件的所有者。
- en: 'There are generally three types of user account in Linux systems:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 系统中，通常有三种类型的用户账户：
- en: Root user (administrator)
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根用户（管理员）
- en: System users (used by various services)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统用户（由各种服务使用）
- en: Regular users (normal users who carry out daily operations)
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 普通用户（执行日常操作的普通用户）
- en: Identifying the current user
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 识别当前用户
- en: 'Since Linux is a multiuser OS, we can have multiple users logged in at the
    same time. The following table lists the different commands that are used to find
    information about the logged-in user and other information associated with users:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Linux 是一个多用户操作系统，我们可以有多个用户同时登录。下表列出了用于查找登录用户及与用户相关的其他信息的不同命令：
- en: '| **Command** | **Description** |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| **命令** | **描述** |'
- en: '| `$ who` | Display currently logged in users |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| `$ who` | 显示当前登录用户 |'
- en: '| `$ w` | Display detailed information of currently logged in users |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| `$ w` | 显示当前登录用户的详细信息 |'
- en: '| `$ whoami` | Display current user |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| `$ whoami` | 显示当前用户 |'
- en: '| `$ id` | Display information about current logged in user (such as User ID,
    primary group and secondary group, and SELinux context) |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| `$ id` | 显示当前登录用户的信息（如用户 ID、主组、次组和 SELinux 上下文） |'
- en: '| `$ id <username>` | Display information about the username passed as the
    first argument to the `id` command |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| `$ id <用户名>` | 显示传递给 `id` 命令的用户名的相关信息 |'
- en: 'Examples of the `id` command, `who` command and the `w` command usage are shown
    in the following screenshot:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了 `id` 命令、`who` 命令和 `w` 命令使用的示例：
- en: '![](img/d7be6526-23f0-44a7-88f5-4100d55aa5ca.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d7be6526-23f0-44a7-88f5-4100d55aa5ca.png)'
- en: 'To show the user associated with the file, use the long-listing (`ls -l`) command,
    which displays user associations in the third column as shown in the following
    command line:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看与文件关联的用户，请使用长列表（`ls -l`）命令，该命令在第三列显示用户关联信息，如以下命令行所示：
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To view the user associated with a process, use the `ps` command with the `u` option.
    Most of the time, the `a` option is also clubbed with the `ps` command to display
    all the processes associated with the Terminal as shown in the following command:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看与进程关联的用户，请使用带有 `u` 选项的 `ps` 命令。大多数时候，`ps` 命令也会与 `a` 选项一起使用，以显示与终端相关的所有进程，如以下命令所示：
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: All Linux users are assigned a unique integer number known as a **User ID**
    (**UID**). Specific UID numbers and ranges of numbers are used for particular
    purposes by Linux systems.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 所有 Linux 用户都会分配一个唯一的整数，称为 **用户 ID** (**UID**)。Linux 系统使用特定的 UID 数字和范围来执行特定任务。
- en: 'The following table that lists the various UID ranges and their description:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格列出了不同的 UID 范围及其描述：
- en: '| **UID** | **Description** |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| **UID** | **描述** |'
- en: '| UID 0 | Root user is always assigned UID as 0. |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| UID 0 | 根用户总是分配 UID 为 0。 |'
- en: '| UID 1-999 | UID 1-999 are assigned to system user accounts. Of this, UID
    1-200 are statically assigned to system processes and UID 201–999 are reserved
    for the system. UID 201-999 are dynamically allocated in the system to an application
    upon its installation in CentOS 7. |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| UID 1-999 | UID 1-999 分配给系统用户账户。其中，UID 1-200 静态分配给系统进程，UID 201-999 保留给系统。UID
    201-999 在 CentOS 7 中安装应用程序时会动态分配给该应用程序。 |'
- en: '| UID 1000+ | Regular user accounts have UID 1000 onward by default. |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| UID 1000+ | 常规用户账户默认从 UID 1000 开始。 |'
- en: 'The mapping of user information, such as `username`, `UID`, `GID`, and the
    `home` directory of the user, is defined in a plain text file, `/etc/passwd`.
    The `/etc/passwd` file contains seven colon-separated fields, as follows:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 用户信息的映射，如 `username`、`UID`、`GID` 和用户的 `home` 目录，定义在一个纯文本文件 `/etc/passwd` 中。`/etc/passwd`
    文件包含七个由冒号分隔的字段，如下所示：
- en: '[PRE2]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The following table describes the various fields of the `/etc/passwd` file:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格描述了 `/etc/passwd` 文件的各个字段：
- en: '| **Field** | **Description** |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| **字段** | **描述** |'
- en: '| `username` | It is the user login name associated with the UID for human
    readability (should be between 1 and 32 characters). |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| `username` | 它是与 UID 关联的用户登录名，方便人类阅读（应为 1 到 32 个字符之间）。 |'
- en: '| `password` | In this field, passwords were originally stored in encrypted
    format. Now, they are stored in the `/etc/shadow` file. |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| `password` | 在此字段中，密码最初以加密格式存储。现在，它们存储在 `/etc/shadow` 文件中。 |'
- en: '| `UID` | It is the UID that system uses to identify a user:UID 0: reserved
    for rootUID 1-200: reserved for predefined system accounts (static)UID 201-999:
    reserved for system accounts (dynamic)UID 1000+: reserved for regular user accounts
    |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| `UID` | 它是系统用来识别用户的 UID：UID 0：保留给 rootUID 1-200：保留给预定义的系统账户（静态）UID 201-999：保留给系统账户（动态）UID
    1000+：保留给常规用户账户 |'
- en: '| `GID` | It is the primary GID of the user, used by the system to associate
    the user to its primary group |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| `GID` | 它是用户的主 GID，由系统用来将用户与其主组关联 |'
- en: '| `Gecos` | This field is optional and contains user-related extra information,
    such as user''s full name, address, contact details, and so on |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| `Gecos` | 该字段是可选的，包含与用户相关的额外信息，如用户的全名、地址、联系方式等 |'
- en: '| `/home/dir` | This field contains the absolute path of the user''s home directory
    |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| `/home/dir` | 该字段包含用户主目录的绝对路径 |'
- en: '| `Default shell` | It is the absolute path of the user''s default shell (this
    program runs when the user logs in to the system), which provides the users command
    prompt |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| `默认 shell` | 它是用户默认 shell 的绝对路径（该程序在用户登录系统时运行），提供用户的命令提示符 |'
- en: 'The contents of last two lines in `/etc/passwd` file is shown in the following
    the screenshot:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '`/etc/passwd` 文件中最后两行的内容如下所示：'
- en: '![](img/7088b765-c9f2-4bdc-bb35-dc9f1ad39be8.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7088b765-c9f2-4bdc-bb35-dc9f1ad39be8.png)'
- en: Understanding groups in Linux
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 Linux 中的组
- en: 'Linux uses groups to organize users in the system. Groups are collections of
    accounts with certain shared features and access controls. Like users, a group
    also have a name, which is associated to a number known as the **Group ID** (**GID**),
    and is generally the same as the UID. Local group information is stored in the `/etc/group`
    file. There are two types of group associated with user accounts:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 使用组来组织系统中的用户。组是具有某些共享特征和访问控制的账户集合。像用户一样，组也有一个名称，该名称与一个称为 **组 ID** (**GID**)
    的数字相关联，通常与 UID 相同。本地组信息存储在 `/etc/group` 文件中。与用户账户相关的组有两种类型：
- en: '**Primary groups**:'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主组**：'
- en: Every user has only one primary group.
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个用户只有一个主组。
- en: It is the default group of a user to which he belongs.
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是用户所属的默认组。
- en: Each local user's primary group is defined by the GID number of the group listed
    in the third field of the `/etc/passwd` file.
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个本地用户的主组由 `/etc/passwd` 文件第三字段中列出的组的 GID 编号定义。
- en: By default, the primary group owns the new files created by the user.
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认情况下，主组拥有用户创建的所有新文件。
- en: Generally, the primary group of a newly created user will have the same name
    as the user. Each user is the only member of this private primary group of the
    user.
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常，新创建用户的主组将与用户同名。每个用户是其私人主组的唯一成员。
- en: '**Supplementary groups**:'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**补充组**：'
- en: Each can be associated with 0 or more supplementary groups.
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个用户可以与0个或多个补充组相关联。
- en: Each local user's secondary group entry is defined in the last field of the
    `/etc/group` file. This file contains a comma-separated list of users in the last
    field, which determines the group membership of users for a group.
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个本地用户的附加组条目在`/etc/group`文件的最后一个字段中定义。此文件包含一个以逗号分隔的用户列表，决定了用户所属组的组成员身份。
- en: 'Supplementary group membership helps in implementing access rights, privileges,
    and security considerations to files and other resources in the system. The various
    fields of the `/etc/group` file are as follows:'
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 补充组成员身份有助于实现对系统中文件和其他资源的访问权限、特权和安全考虑。`/etc/group`文件的各个字段如下：
- en: '[PRE3]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The following screenshot displays the contents of the last two line of the `/etc/group`
    file:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了`/etc/group`文件最后两行的内容：
- en: '![](img/13cdb025-f0e0-4a24-beaf-e5b0cb1b3038.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](img/13cdb025-f0e0-4a24-beaf-e5b0cb1b3038.png)'
- en: Executing commands as superuser in CentOS 7
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在CentOS 7中以超级用户身份执行命令
- en: Every operating system has an account to administer the resources of that system.
    In the case of CentOS Linux, this user account is known as **root**, very often
    called the **superuser**. The root account is the most privileged account in a
    Linux/Unix system. This account is used to carry out system administration tasks,
    such as managing user accounts and their passwords, managing software packages,
    modifying system files, and restarting system services. Extra caution must be
    taken while working as the root user as it has no security restrictions imposed
    on it. If the root account is compromised, then another person will have full
    administrative control of the system. The root account on Linux is equivalent
    to the local administrator account on Windows.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 每个操作系统都有一个账户来管理系统的资源。在CentOS Linux中，这个用户账户被称为**root**，通常称为**超级用户**。root账户是Linux/Unix系统中权限最高的账户。此账户用于执行系统管理任务，如管理用户账户及其密码、管理软件包、修改系统文件和重启系统服务。以root用户身份工作时必须特别小心，因为它没有任何安全限制。如果root账户被破坏，另一个人将完全控制该系统。Linux中的root账户相当于Windows中的本地管理员账户。
- en: When you are logged in as the root user, the shell prompt displays the hash
    `#` symbol by convention to make the user aware that you are working as most the privileged
    user in the system.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 当以root用户身份登录时，shell提示符会显示`#`符号，表示你正在作为系统中权限最高的用户工作。
- en: In Linux, there are two commands, `su` and `sudo`, which are used to temporarily
    grant root access to a normal user. We will discuss these commands one by one.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux中，有两个命令，`su`和`sudo`，用于暂时授予普通用户root访问权限。我们将逐一讨论这些命令。
- en: Switching users with the su command
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`su`命令切换用户
- en: 'The **su** (short for **switch user** or **substitute user**) command is used
    to switch into other user accounts. If a username is not specified as an argument
    to the `su` command, it takes the root account into consideration. There are two
    ways of invoking this command, as follows:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**su**（即**switch user**或**substitute user**的缩写）命令用于切换到其他用户账户。如果`su`命令没有指定用户名作为参数，它会默认考虑root账户。该命令有两种调用方式，如下所示：'
- en: '`$ su - <username>`: This method starts a new **login shell** as another username
    specified. It sets up the shell environment as if this was a proper login as that
    user in the system.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`$ su - <用户名>`：此方法启动一个新的**登录shell**，并指定另一个用户名。它将设置shell环境，就像在系统中作为该用户进行正常登录一样。'
- en: '`$ su <username>`: This method starts a **non-login shell** as the username
    specified. It just launches the new shell with the current user environment settings,
    without invoking other username shell variables.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`$ su <用户名>`：此方法启动一个**非登录shell**，并指定用户名。它只会使用当前用户的环境设置启动新的shell，而不会调用其他用户名的shell变量。'
- en: 'In the absence of any username, `su –` invokes the root shell and asks for
    root credentials to be given at the prompt as shown in the following screenshot:'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果没有指定任何用户名，`su –`将调用root shell，并要求在提示符处输入root凭据，如以下截图所示：
- en: '![](img/29528b59-42db-49da-8d35-fdd5ff30051e.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/29528b59-42db-49da-8d35-fdd5ff30051e.png)'
- en: Disadvantages of using the su command to grant root access to a normal user
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`su`命令授予普通用户root访问权限的缺点
- en: Once the user has logged in as the root account using `su`, they can do anything
    for as long as they want, without being asked again for a root password. This
    command also has limited logging features.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦用户通过`su`登录为root账户，他们可以在不再询问root密码的情况下，做任何事情，直到注销为止。该命令的日志功能也有限。
- en: Using sudo to run commands as the root user
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`sudo`以根用户身份运行命令
- en: In the previous method, the standard user temporarily becomes the root using
    the `su` command; all the privileges of root are granted by specifying the `root`
    password. This method is not suitable for running some programs as root as it
    gives unlimited privileges to the normal user. Granting privileges using `sudo`
    is less dangerous and is the preferred method.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的方法中，标准用户通过`su`命令临时成为root；通过指定`root`密码授予root的所有权限。此方法不适用于以root身份运行某些程序，因为它给普通用户授予了无限的权限。使用`sudo`授予权限更安全，也是首选的方法。
- en: The `sudo` feature is used to assign more limited privileges to user accounts,
    based on the settings in the `/etc/sudoers` file. In this method, `sudo` requires
    the user to enter their own password for authentication and not the password of
    the account they are trying to access. This method allows them to delegate system
    administration tasks, without giving them access to the root password. We can
    also restrict the privileges of the user to a specific subset of commands; that
    is, he can execute only a limited number of specified commands as root. Any command
    executed using `sudo` is logged by default into the `/var/log/secure` log file.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '`sudo`功能用于根据`/etc/sudoers`文件中的设置，分配更多有限的权限给用户账户。在这种方法中，`sudo`要求用户输入他们自己的密码进行身份验证，而不是他们试图访问的账户的密码。这种方法使他们能够委派系统管理任务，而不需要让他们接触root密码。我们还可以将用户的权限限制为一组特定的命令；也就是说，他们只能以root身份执行有限数量的指定命令。通过`sudo`执行的任何命令默认会被记录到`/var/log/secure`日志文件中。'
- en: 'To execute just one command with root privilege, type `sudo <command>`. After
    the execution of the command, you will return to being a normal unprivileged user.
    An example of using `sudo` to execute just the `iptables` command with root privileges
    is shown in the following screenshot:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 要以root权限执行单个命令，输入`sudo <command>`。命令执行后，您将返回到普通的无权限用户。以下截图展示了使用`sudo`执行仅`iptables`命令的例子：
- en: '![](img/9427e4c3-00ce-4abc-8971-d4ba5555f33a.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9427e4c3-00ce-4abc-8971-d4ba5555f33a.png)'
- en: 'The log of commands executed using `sudo` is stored in `/var/log/secure` as
    shown in the following screenshot:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`sudo`执行的命令日志存储在`/var/log/secure`中，如下图所示：
- en: '![](img/fd7ea3a7-ef85-4a88-bd3e-f0b15304cc27.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fd7ea3a7-ef85-4a88-bd3e-f0b15304cc27.png)'
- en: 'An example of granting a user rights to execute an admin command using `sudo`
    by making the required entry in the `/etc/sudoers` file is shown in the following
    screenshot:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图展示了通过在`/etc/sudoers`文件中进行必要的条目，来授予用户执行管理员命令的权限的示例：
- en: '![](img/d35457b7-a674-462b-911a-bbf1f4473d6a.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d35457b7-a674-462b-911a-bbf1f4473d6a.png)'
- en: In CentOS 7, all members of group wheel can use `sudo` to run any command as
    root by specifying their own password. This was not set as the default rule in
    the `/etc/sudoers` file in CentOS 7.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在CentOS 7中，所有属于wheel组的成员都可以通过指定自己的密码，使用`sudo`以root身份运行任何命令。CentOS 7中`/etc/sudoers`文件中并没有将其设置为默认规则。
- en: Creating, modifying, or deleting local user accounts
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建、修改或删除本地用户账户
- en: There are multiple commands that can be used to manage local user accounts in
    CentOS 7\. This section covers only the most popular commands available in CentOS
    7 to manage local user accounts.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在CentOS 7中有多个命令可用于管理本地用户账户。本节仅介绍CentOS 7中用于管理本地用户账户的最常用命令。
- en: Creating a user with the useradd command
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`useradd`命令创建用户
- en: 'The `useradd` command, when run without options, creates a user account with
    default parameters. The default parameters are read from the `/etc/login.defs`
    file and include parameters such as valid UID, GID number, default password aging
    rules, and so on. Values from this file are used while creating a new user only.
    The syntax of `useradd` is as follows:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '`useradd`命令在没有选项的情况下运行时，会创建一个具有默认参数的用户账户。默认参数是从`/etc/login.defs`文件中读取的，包括有效的UID、GID号、默认的密码过期规则等。这些值仅在创建新用户时使用。`useradd`的语法如下：'
- en: '[PRE4]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '`useradd --help` will display options that can be used with the `useradd` command
    to override the default parameters.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '`useradd --help`将显示可以与`useradd`命令一起使用的选项，以覆盖默认参数。'
- en: 'An example of using the `useradd` command to create a user account is shown
    in the following screenshot:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`useradd`命令创建用户帐户的示例，如下截图所示：
- en: '![](img/b06354fa-db8f-4513-a3e6-29851e2d70de.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b06354fa-db8f-4513-a3e6-29851e2d70de.png)'
- en: Apart from `useradd`, we can also use the `adduser` command to create a local
    user account in Linux. You can read more about `adduser` in the man page, using
    the man `adduser` command.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 除了`useradd`，我们还可以使用`adduser`命令在Linux中创建本地用户帐户。您可以通过`man adduser`命令阅读有关`adduser`的更多信息。
- en: Modifying a user with the usermod command
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`usermod`命令修改用户
- en: 'The `usermod` command is used with various options to modify the existing user
    account parameters. The `usermod --help` command will display the various options
    that can be used. The syntax of `usermod` is as follows:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '`usermod`命令与各种选项一起使用，以修改现有的用户帐户参数。运行`usermod --help`命令将显示可以使用的各种选项。`usermod`的语法如下：'
- en: '[PRE5]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The following table lists the common options used with `usermod` and their
    descriptions:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格列出了与`usermod`命令常用选项及其描述：
- en: '| **Options** | **Description** |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| **选项** | **描述** |'
- en: '| `usermod -c "Comments" <username>` | Add comments, such as the user''s full
    name, address, phone number, and so on, in the GECOS field. |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| `usermod -c "Comments" <username>` | 在GECOS字段中添加注释，例如用户的全名、地址、电话号码等。 |'
- en: '| `usermod -g <gid> <username>` | Modify the user''s primary group. |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| `usermod -g <gid> <username>` | 修改用户的主组。 |'
- en: '| `usermod -G <groupname> <username>` | Modify the user''s secondary group.
    |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| `usermod -G <groupname> <username>` | 修改用户的辅助组。 |'
- en: '| `usermod -a -G <groupname> <user>` | Used with the `-G` option only. It appends
    the user to the secondary group mentioned, without removing the user from other
    groups. |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| `usermod -a -G <groupname> <user>` | 仅与`-G`选项一起使用。它将用户添加到指定的辅助组中，而不会将用户从其他组中移除。
    |'
- en: '| `usermod -s <shell> <username>` | Modify the login shell of the user account.
    |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| `usermod -s <shell> <username>` | 修改用户帐户的登录shell。 |'
- en: '| `usermod -L <username>` | Lock a user account. |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| `usermod -L <username>` | 锁定用户帐户。 |'
- en: '| `usermod -U <username>` | Unlock a user account. |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| `usermod -U <username>` | 解锁用户帐户。 |'
- en: 'An example of using the `usermod` command to modify the user''s login shell
    is shown in the following screenshot:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`usermod`命令修改用户登录shell的示例，如下截图所示：
- en: '![](img/06bd9360-098c-4d4e-99e9-a94d1d95db2c.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](img/06bd9360-098c-4d4e-99e9-a94d1d95db2c.png)'
- en: 'The following command is used to view the associated `groups` of a user:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令用于查看与用户相关联的`groups`：
- en: '[PRE6]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The `usermod` command can be used to add a new secondary group in the existing
    secondary groups of a user. The following command will add a new secondary group
    wheel in the existing secondary groups of user `sam` as shown in the following
    screenshot:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '`usermod`命令可以用于在用户的现有辅助组中添加新的辅助组。以下命令将把新的辅助组wheel添加到用户`sam`的现有辅助组中，如下截图所示：'
- en: '![](img/c263fdd6-f217-422e-91de-c7d270159559.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c263fdd6-f217-422e-91de-c7d270159559.png)'
- en: Deleting a user account with the userdel command
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`userdel`命令删除用户帐户
- en: 'The `userdel` command is used to delete the existing user account. The `userdel`
    command can be used in two ways as mentioned follows:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '`userdel`命令用于删除现有的用户帐户。`userdel`命令可以以两种方式使用，如下所述：'
- en: '`userdel <username>`: This removes the user entry from the `/etc/passwd` file,
    but leaves the user''s home directory and mail intact. This way of deleting a
    user account is not recommended.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`userdel <username>`：这将从`/etc/passwd`文件中删除用户条目，但保留用户的主目录和邮件不变。这种删除用户帐户的方式不推荐使用。'
- en: '`userdel -r <username>`: This removes the user and the user''s home directory,
    along with the user''s mail box. This will remove the files owned by the user
    along with the user''s account from his home directory. An example of `userdel`
    command with option `-r` is shown in the following screenshot:'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`userdel -r <username>`：这将删除用户及其主目录以及用户的邮件箱。这样会从用户的主目录中删除由用户拥有的文件及其帐户。带有`-r`选项的`userdel`命令示例如下：'
- en: '![](img/f280a2b2-622f-4fc6-8dc8-c50171a87542.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f280a2b2-622f-4fc6-8dc8-c50171a87542.png)'
- en: Creating, modifying, or deleting local group accounts
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建、修改或删除本地组帐户
- en: Groups are used for organizing users. A group is a collection of accounts with
    shared permissions. However, a group must exist before a user is added to that
    group. There are multiple commands that can be used to manage group accounts in
    CentOS 7\. This section covers only the most popular commands available in CentOS
    7 to manage local group accounts.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 组用于组织用户。一个组是具有共享权限的账户集合。然而，组必须在用户被添加到该组之前存在。CentOS 7中有多个命令可以用于管理组账户。本节仅介绍在CentOS
    7中管理本地组账户的最常用命令。
- en: Control of group membership is managed with the `/etc/group` file. It lists
    the group, along with its members.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 组成员控制由`/etc/group`文件管理。该文件列出了组及其成员。
- en: Creating supplementary groups with groupadd
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`groupadd`创建附加组
- en: The `groupadd` command can be used with multiple options to create a supplementary
    group for user accounts, or a system user group.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '`groupadd` 命令可以与多个选项一起使用，用于为用户账户创建附加组，或创建系统用户组。'
- en: 'The following table list the `groupadd` command with various options along
    with their description:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 下表列出了`groupadd`命令及其不同选项的描述：
- en: '| **Command** | **Description** |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| **命令** | **描述** |'
- en: '| `groupadd <groupname>` | Creates a user private groups (GID 1000+) from the
    next available GID from the range given in the `/etc/login.defs` file |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| `groupadd <groupname>` | 从`/etc/login.defs`文件中给定的范围内的下一个可用 GID 创建用户私有组（GID
    1000+）。 |'
- en: '| `groupadd -g GID <groupname>` | Creates a user private group using the given
    GID |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| `groupadd -g GID <groupname>` | 使用给定的 GID 创建用户私有组 |'
- en: '| `groupadd -r <groupname>` | Creates a system group using a GID from the default
    system group''s range (1-999), or as given in the `/etc/login.defs` file. |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| `groupadd -r <groupname>` | 使用默认系统组范围（1-999）中的 GID，或`/etc/login.defs`文件中给定的
    GID 创建一个系统组。 |'
- en: 'An example of `groupadd` command usage is shown in the following screenshot:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了`groupadd`命令使用的示例：
- en: '![](img/b2bc8e9e-f0a2-4ab4-823e-8cdc901b824c.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b2bc8e9e-f0a2-4ab4-823e-8cdc901b824c.png)'
- en: Modifying existing groups with the groupmod command
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`groupmod`命令修改现有组
- en: 'The `groupmod` command is used to modify group properties such as the group''s
    GID, group name, and so on. The example in following image shows how to use the `groupmod`
    command with the `-n` option to modify the `groupname` of a specified group:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '`groupmod` 命令用于修改组属性，如组的 GID、组名等。下图中的示例展示了如何使用`groupmod`命令及`-n`选项来修改指定组的`groupname`：'
- en: '![](img/f2569645-922b-428e-a324-fb4bbe251555.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f2569645-922b-428e-a324-fb4bbe251555.png)'
- en: 'The `-g` option is used to assign a new GID to an existing `groupname` as shown
    in the following screenshot:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '`-g`选项用于为现有的`groupname`分配新的GID，如下图所示：'
- en: '![](img/29449680-527a-458f-a590-ba3a64ec1d67.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](img/29449680-527a-458f-a590-ba3a64ec1d67.png)'
- en: Deleting a group with the groupdel command
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`groupdel`命令删除组
- en: 'The `groupdel` command is generally used to delete a group from the system
    if it is not the primary group of any existing user. The following command line
    shows how to delete a group named `appusers` from the system using the `groupdel`
    command:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '`groupdel` 命令通常用于从系统中删除一个组，前提是该组不是任何现有用户的主组。以下命令行展示了如何使用`groupdel`命令从系统中删除名为`appusers`的组：'
- en: '[PRE7]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Managing user passwords and aging policies
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理用户密码和过期策略
- en: This section covers commands that are used to manage passwords and password
    aging parameters in the shadow password file available in CentOS 7.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 本节介绍用于管理密码和密码过期参数的命令，这些命令适用于CentOS 7中的shadow密码文件。
- en: Setting a user password using the passwd command
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`passwd`命令设置用户密码
- en: 'The `passwd` command is used to either set the user''s initial password or
    modify the user''s existing password. The syntax of the `passwd` command is as
    follows:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '`passwd` 命令用于设置用户的初始密码或修改用户现有密码。`passwd`命令的语法如下：'
- en: '[PRE8]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The root user can set the password for any user to any value without knowing
    his current password. For a regular user, the default policy is to use at least
    an eight-character password, and it should not be a dictionary word, or the username,
    or a previous password. An example updating a user''s password using the `passwd`
    command is shown in the following screenshot:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: root 用户可以为任何用户设置密码，而无需知道其当前密码。对于普通用户，默认策略是使用至少八位字符的密码，并且密码不能是字典单词、用户名或以前的密码。以下截图展示了使用`passwd`命令更新用户密码的示例：
- en: '![](img/c946d58e-3ec7-4fd8-b95c-02e87ec09ed4.png)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c946d58e-3ec7-4fd8-b95c-02e87ec09ed4.png)'
- en: Understanding the shadow password file
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解shadow密码文件
- en: 'In the early days of Linux''s evolution, encrypted passwords were stored in
    a human-readable file, `/etc/passwd`. This was considered a safe mechanism for
    keeping passwords until dictionary attacks on encrypted passwords became more
    prevalent. Now, to harden Linux security, the encrypted passwords (salted password
    hashes) are stored in the `/etc/shadow` file. This file also contains password
    aging policy parameters. Only those with root access can modify or read this file.
    We can view the last line of this file by executing the command line given as
    follows:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux发展的早期，加密的密码存储在一个可读的文件中，`/etc/passwd`。在字典攻击对加密密码的攻击日益猖獗之前，这被认为是存储密码的安全机制。现在，为了加强Linux安全性，加密的密码（盐化密码哈希）存储在`/etc/shadow`文件中。此文件还包含密码老化策略参数。只有root权限的用户可以修改或读取此文件。我们可以通过执行以下命令查看此文件的最后一行：
    |
- en: '[PRE9]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'On execution of the preceding command, we get the following output, which displays
    the encrypted password along with the salt and various password aging parameters:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 执行前述命令后，我们得到以下输出，其中显示了加密的密码、盐和各种密码老化参数： |
- en: '[PRE10]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'In the preceding output, the second field of the `/etc/shadow` file is the
    password field and contains the following three pieces of information, separated
    by a `$` symbol, in the `/etc/shadow` file:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在前述输出中，`/etc/shadow`文件的第二个字段是密码字段，包含以下三个信息，使用`$`符号分隔，存储在`/etc/shadow`文件中： |
- en: '`6`: It represents the hashing algorithm used to encrypt the password. The
    number 1 indicates MD5 hashing, number 5 indicates SHA-256 hashing, and number
    6 indicates the SHA-512 hashing algorithm.'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`6`: 它表示用于加密密码的哈希算法。数字1表示MD5哈希，数字5表示SHA-256哈希，数字6表示SHA-512哈希算法。 |'
- en: '`cKc/hj8V`: It represents the randomly chosen salt used to encrypt the hash.
    This salt and the unencrypted password are combined and encrypted to create the
    password hash. Use of the salt prevents two or more users with the same password
    from having identical entries in the `/etc/shadow` file.'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cKc/hj8V`: 它表示用于加密哈希的随机盐值。这个盐值与未加密的密码结合后加密生成密码哈希。使用盐可以防止两个或更多使用相同密码的用户在`/etc/shadow`文件中拥有相同的条目。
    |'
- en: '`JZPyiz6TMpz/YpPtSPdNARPd/gXxLqm3c0qHZinNmweXEpM/IMBYGiBYXZw7OuzLnr0YkFdZZifPvywkJYuqv0`:
    It is the encrypted hash.'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`JZPyiz6TMpz/YpPtSPdNARPd/gXxLqm3c0qHZinNmweXEpM/IMBYGiBYXZw7OuzLnr0YkFdZZifPvywkJYuqv0`:
    它是加密的哈希值。 |'
- en: When the user enters his password at the login prompt, the system looks up the
    entry for the user in `/etc/shadow`, then combines the salt of the user with the unencrypted
    password and generates a hash value using the specified hashing algorithm. If
    the password matches, the user gets logged in; otherwise, the login attempt fails.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户在登录提示符下输入密码时，系统会查找`/etc/shadow`中的用户条目，然后将用户的盐与未加密的密码结合，并使用指定的哈希算法生成哈希值。如果密码匹配，用户将成功登录；否则，登录尝试失败。
    |
- en: Understanding password aging parameters
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解密码老化参数 |
- en: 'The `chage` command is used to list the existing password aging policy or to
    modify the policy. The `/etc/shadow` file contains nine colon-separated fields,
    which include both the encrypted password and the password aging policy. The following
    is the format of the information contained in the `/etc/shadow` file:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '`chage`命令用于列出现有的密码老化策略或修改该策略。`/etc/shadow`文件包含九个由冒号分隔的字段，其中包括加密的密码和密码老化策略。以下是`/etc/shadow`文件中包含信息的格式：
    |'
- en: '[PRE11]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The following table lists the `/etc/shadow` file fields and their descriptions:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 下表列出了`/etc/shadow`文件字段及其描述： |
- en: '| **Field** | **Description** |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| **字段** | **描述** |'
- en: '| Login name | It is the user account login name on the local system. |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '| 登录名 | 它是本地系统中的用户帐户登录名。 |'
- en: '| Password | It is an encrypted password. If this field contains the `!` symbol,
    then it means the password is locked. |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| 密码 | 它是加密的密码。如果该字段包含`!`符号，则表示密码已被锁定。 |'
- en: '| Lastchange | It is the date of the last password change, represented by the number
    of days since `01.01.1970`. |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| 最后更改 | 它是最后一次密码更改的日期，以自`01.01.1970`以来的天数表示。 |'
- en: '| Minimum age | It is the minimum number of days before which a password cannot be
    changed.`0` in this field means no minimum day requirement. |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| 最小年龄 | 它是密码在更改之前必须保持的最小天数。`0`表示没有最小天数要求。 |'
- en: '| Maximum age | It is the maximum number of days after which the password must
    be changed. |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
  zh: '| 最大年龄 | 它是密码必须更改的最大天数。 |'
- en: '| Warning Period | It is the number of days before password expiry, when the user
    starts getting a warning to change his password.`0` in this field means no warning
    would be given. |'
  id: totrans-165
  prefs: []
  type: TYPE_TB
  zh: '| 警告期 | 这是密码过期前的天数，当此时用户将开始接收到更改密码的警告。此字段中的`0`表示不会给出警告。 |'
- en: '| Inactive | It is the number of days an account remains active after a password
    has expired. A user can still log in during this inactive period and change his
    password. After the specified number of days, the account will get locked and
    become inactive. |'
  id: totrans-166
  prefs: []
  type: TYPE_TB
  zh: '| 不活跃 | 这是密码过期后账户仍然保持活跃的天数。在这个不活跃期间，用户仍然可以登录并更改密码。超过指定天数后，账户将被锁定并变为不活跃状态。 |'
- en: '| Expiry date | It is the account expiration date, represented as the number
    of days since `01.01.1970`. |'
  id: totrans-167
  prefs: []
  type: TYPE_TB
  zh: '| 过期日期 | 这是账户过期日期，表示自`01.01.1970`以来的天数。 |'
- en: '| Blank | A blank field reserved for future use. |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
  zh: '| 空白 | 为将来使用预留的空白字段。 |'
- en: 'By default, passwords are set to not expire. Forcing passwords to expire is
    part of a strong security policy. We can modify the default expiration settings
    by making changes in the `/etc/login.defs` file. We can change the password aging
    policy using the `chage` command. The syntax of the `chage` command is given follows:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，密码设置为不自动过期。强制密码过期是强大安全策略的一部分。我们可以通过修改`/etc/login.defs`文件来更改默认的过期设置。我们还可以使用`chage`命令来更改密码过期策略。`chage`命令的语法如下所示：
- en: '[PRE12]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'An example of the `chage` command to list all existing password aging policy
    parameters for a user is shown in the following screenshot:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图展示了使用`chage`命令列出用户所有现有密码过期策略参数的例子：
- en: '![](img/69117902-93a4-4e4a-abad-853b7e208f57.png)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![](img/69117902-93a4-4e4a-abad-853b7e208f57.png)'
- en: 'The following table lists the various options that are used with the `chage` command
    and their descriptions:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 下表列出了与`chage`命令一起使用的各种选项及其描述：
- en: '| **Option** | **Description** |'
  id: totrans-174
  prefs: []
  type: TYPE_TB
  zh: '| **选项** | **描述** |'
- en: '| `Chage -l <username>` | Lists all the user''s current aging parameter settings
    |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
  zh: '| `Chage -l <username>` | 列出用户当前的所有密码过期参数设置 |'
- en: '| `Chage -d 0 <username>` | Forces password change on next login |'
  id: totrans-176
  prefs: []
  type: TYPE_TB
  zh: '| `Chage -d 0 <username>` | 强制用户在下次登录时更改密码 |'
- en: '| `Chage -m 3 <username>` | Sets the minimum number of days a user can keep
    a password |'
  id: totrans-177
  prefs: []
  type: TYPE_TB
  zh: '| `Chage -m 3 <username>` | 设置用户可以保留密码的最短天数 |'
- en: '| `Chage -M 30 <username>` | Sets the maximum number of days a user can keep
    a password (`-1` here means unlimited) |'
  id: totrans-178
  prefs: []
  type: TYPE_TB
  zh: '| `Chage -M 30 <username>` | 设置用户可以保留密码的最长天数（`-1`表示无限期） |'
- en: '| `Chage -W 7 <username>` | Sets the number of days at which the user starts
    getting warnings before a password change |'
  id: totrans-179
  prefs: []
  type: TYPE_TB
  zh: '| `Chage -W 7 <username>` | 设置用户在密码更改前开始接收警告的天数 |'
- en: '| `Chage -d YYY-MM-DD <username>` | Sets the last change date for a password
    (the `/etc/shadow` file stores the number of days starting from 1 Jan 1970) |'
  id: totrans-180
  prefs: []
  type: TYPE_TB
  zh: '| `Chage -d YYY-MM-DD <username>` | 设置密码的最后更改日期（`/etc/shadow`文件记录自1970年1月1日起的天数）
    |'
- en: '| `Chage -E YYYY-MM-DD <username>` | Sets the password expiration date for
    the user (the `/etc/shadow` file stores the number of days starting from 1 Jan
    1970) |'
  id: totrans-181
  prefs: []
  type: TYPE_TB
  zh: '| `Chage -E YYYY-MM-DD <username>` | 设置用户的密码过期日期（`/etc/shadow`文件记录自1970年1月1日起的天数）
    |'
- en: 'An example of the `chage` command to modify various parameters is shown in
    the following screenshot:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图展示了使用`chage`命令修改各种参数的例子：
- en: '![](img/fb0f8bcc-f569-4aec-8b60-2eb27ca42cda.png)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fb0f8bcc-f569-4aec-8b60-2eb27ca42cda.png)'
- en: Restricting user access
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 限制用户访问
- en: 'Once the account expiration date set using the `chage` command is reached,
    the user cannot log in to the system interactively. Some parameters of the `chage`
    command can be set using `useradd` and `usermod`. The `usermod` command can be
    used to lock an account with the `-L` option as shown in follows command line:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦使用`chage`命令设置的账户过期日期到达，用户将无法与系统进行交互式登录。`chage`命令的一些参数可以通过`useradd`和`usermod`命令设置。可以使用`usermod`命令通过`-L`选项来锁定账户，如下所示：
- en: '[PRE13]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'We can also unlock the user account using the `-U` option as shown in the following
    command line:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用`-U`选项来解锁用户账户，如下所示：
- en: '[PRE14]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Fake shell or nologin shell
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 假壳或nologin shell
- en: 'At times, we may need a user account with a password for authentication with
    a system, but do not require an interactive shell with that username. This helps
    in preventing the user account being used for logging in to the system with that
    password. In those scenarios, we can set the user''s shell to `/sbin/nologin`.
    If the user tries to log in to system, the `nologin` shell closes the connection
    of the user as shown in the following screenshot:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，我们可能需要一个带有密码的用户帐户来进行系统身份验证，但不需要为该用户名提供交互式 shell。这样有助于防止该用户帐户使用密码登录系统。在这种情况下，我们可以将用户的
    shell 设置为`/sbin/nologin`。如果用户尝试登录系统，`nologin` shell 将关闭用户的连接，如下图所示：
- en: '![](img/421b31f1-fcdc-46a3-a0e1-9917879fecea.png)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![](img/421b31f1-fcdc-46a3-a0e1-9917879fecea.png)'
- en: An example of such a situation could be a mail server, where a user account
    is needed to store mail and passwords for the user to authenticate with the mail
    client and retrieve their mail; however, if the `/sbin/nologin` shell is assigned,
    then the user cannot log in to the system using that account.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 这样的情况示例可能是邮件服务器，在这种情况下，需要一个用户帐户来存储邮件和密码，以便用户可以通过邮件客户端进行身份验证并接收邮件；然而，如果分配了`/sbin/nologin`
    shell，则该用户无法使用该帐户登录系统。
- en: Summary
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we began by learning about the different types of users and
    groups on CentOS 7\. This was followed by understanding the difference between
    `su` and `sudo` for temporarily granting root privileges to the user. Then, we
    learned about the management of local user accounts and local user groups. Finally,
    we looked at how passwords are set and stored in Linux and how password aging
    policies are implemented in CentOS 7.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 本章开始时，我们学习了 CentOS 7 中不同类型的用户和组。接着，我们了解了 `su` 和 `sudo` 之间的区别，它们可以临时授予用户 root
    权限。然后，我们学习了如何管理本地用户帐户和本地用户组。最后，我们查看了密码如何在 Linux 中设置和存储，以及 CentOS 7 中密码过期策略的实现方式。
- en: In the next chapter, we will learn about managing file permissions in CentOS
    7.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将学习如何在 CentOS 7 中管理文件权限。
