["```\ngzarrelli:~$ time echo $0\n/bin/bash\nreal 0m0.000s\nuser 0m0.000s\nsys 0m0.000s\ngzarrelli:~$ \n\n```", "```\ngzarrelli:~$ time /bin/echo $0/bin/bash\nreal 0m0.001s\nuser 0m0.000s\nsys 0m0.000s  \n\n```", "```\ngzarrelli:~$ type echo\necho is a shell builtin\ngzarrelli:~$ type /bin/echo\n/bin/echo is /bin/echo  \n\n```", "```\ncd /this_dir  \n\n```", "```\ncompgen -b  \n\n```", "```\nenable -a | awk '{ print $2 }'  \n\n```", "```\ngzarrelli:~$ hash\nhits command\n1  /usr/bin/which\n1  /usr/bin/ld\n24  /bin/sh\n1  /bin/ps\n1  /usr/bin/who\n1  /usr/bin/man\n1  /bin/ls\n1  /usr/bin/top  \n\n```", "```\n>  \n\n```", "```\ngzarrelli:~$ echo \"This is some content\"\nThis is some content  \n\n```", "```\ngzarrelli:~$ ls -lah\ntotal 0\ndrwxr-xr-x   2 zarrelli  gzarrelli    68B 20 Jan 07:43 .\ndrwxr-xr-x+ 47 zarrelli  gzarrelli   1.6K 20 Jan 07:43 ..  \n\n```", "```\ngzarrelli:~$ echo \"This is some content\" > output_file.txt  \n\n```", "```\ngzarrelli:~$ ls -lah\ntotal 8\ndrwxr-xr-x   3 gzarrelli  gzarrelli   102B 20 Jan 07:44 .\ndrwxr-xr-x+ 47 gzarrelli  gzarrelli   1.6K 20 Jan 07:43 ..\n-rw-r--r--   1 gzarrelli  gzarrelli    21B 20 Jan 07:44 \noutput_file.txt  \n\n```", "```\ngzarrelli:~$ cat output_file.txt\nThis is some content  \n\n```", "```\n>>  \n\n```", "```\ngzarrelli:~$ echo \"This is some other content\" >> output_file.txt\ngzarrelli:~$ cat output_file.txt\nThis is some content\nThis is some other content  \n\n```", "```\n<  \n\n```", "```\ngzarrelli:~$ echo -e '5\\n9\\n4\\n1\\n0\\n6\\n2' > to_sort  \n\n```", "```\ngzarrelli:~$ cat to_sort\n5\n9\n4\n1\n0\n6\n2  \n\n```", "```\ngzarrelli:~$ sort < to_sort\n0\n1\n2\n4\n5\n6\n9  \n\n```", "```\ngzarrelli:~$ sort < to_sort > sorted  \n\n```", "```\ngzarrelli:~$ cat sorted\n0\n1\n2\n4\n5\n6\n9   \n\n```", "```\n|  \n\n```", "```\ngzarrelli:~$ ps aux | awk '{print $2, $3, $4}' | grep -v [A-Z] | sort -r -k 2 \n-g | head -n 3\n95 0.0 0.0\n94 0.0 0.0\n93 0.0 0.0  \n\n```", "```\ngzarrelli:~$ echo \"Hello\" > /dev/null\ngzarrelli:~$  \n\n```", "```\nroot:~$ ls\noutput_file.txtsortedto_sort\nroot:~$ mv output_file.txt /dev/null\nroot:~$ ls\nto_sort  \n\n```", "```\n/proc/pid/fd  \n\n```", "```\ngzarrelli:~$ ls -lah /proc/15820/fd\ntotal 0\ndr-x------ 2 postgres postgres  0 Jan 20 17:59 .\ndr-xr-xr-x 9 postgres postgres  0 Jan 20 09:59 ..\nlr-x------ 1 postgres postgres 64 Jan 20 17:59 0 -> /dev/null \n(deleted)\nl-wx------ 1 postgres postgres 64 Jan 20 17:59 1 -> /var/log/postgresql/postgresql-9.4-main.log\nlrwx------ 1 postgres postgres 64 Jan 20 17:59 10 -> /var/lib/postgresql/9.4/main/base/16385/16587\nlrwx------ 1 postgres postgres 64 Jan 20 17:59 11 -> socket:[13135]\nlrwx------ 1 postgres postgres 64 Jan 20 17:59 12 -> socket:[1502010]\nlrwx------ 1 postgres postgres 64 Jan 20 17:59 13 -> /var/lib/postgresql/9.4/main/base/16385/16591\nlrwx------ 1 postgres postgres 64 Jan 20 17:59 14 -> /var/lib/postgresql/9.4/main/base/16385/16593\nlrwx------ 1 postgres postgres 64 Jan 20 17:59 15 -> /var/lib/postgresql/9.4/main/base/16385/16634\nlrwx------ 1 postgres postgres 64 Jan 20 17:59 16 -> /var/lib/postgresql/9.4/main/base/16385/16399\nlrwx------ 1 postgres postgres 64 Jan 20 17:59 17 -> /var/lib/postgresql/9.4/main/base/16385/16406\nlrwx------ 1 postgres postgres 64 Jan 20 17:59 18 -> /var/lib/postgresql/9.4/main/base/16385/16408\nl-wx------ 1 postgres postgres 64 Jan 20 17:59 2 -> /var/log/postgresql/postgresql-9.4-main.log\nlr-x------ 1 postgres postgres 64 Jan 20 17:59 3 -> /dev/urandom\nl-wx------ 1 postgres postgres 64 Jan 20 17:59 4 -> /dev/null \n(deleted)\nl-wx------ 1 postgres postgres 64 Jan 20 17:59 5 -> /dev/null \n(deleted)\nlr-x------ 1 postgres postgres 64 Jan 20 17:59 6 -> pipe:[1502013]\nl-wx------ 1 postgres postgres 64 Jan 20 17:59 7 -> pipe:[1502013]\nlrwx------ 1 postgres postgres 64 Jan 20 17:59 8 -> /var/lib/postgresql/9.4/main/base/16385/11943\nlr-x------ 1 postgres postgres 64 Jan 20 17:59 9 -> pipe:[13125]\n\n```", "```\ngzarrelli:~$ exec 9<> /dev/tcp/172.16.210.128/80 || exit 1  \n\n```", "```\ngzarrelli:~$ printf 'GET /index2.html HTTP/1.1\\nHost: 172.16.210.128\\nConnection: close\\n\\n' >&9\n\n```", "```\ngzarrelli:~$ cat <&9\nHTTP/1.1 200 OK\nDate: Sat, 21 Jan 2017 17:57:33 GMT\nServer: Apache/2.4.10 (Debian)\nLast-Modified: Sat, 21 Jan 2017 17:57:12 GMT\nETag: \"f3-5469e7ef9e35f\"\nAccept-Ranges: bytes\nContent-Length: 243\nVary: Accept-Encoding\nConnection: close\nContent-Type: text/html\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n \"http://www.w3.org/TR/html4/strict.dtd\">\n<HTML>\n <HEAD>\n <TITLE>This is a test file</TITLE>\n </HEAD>\n <BODY>\n <P>And we grabbed it through our descriptor!\n </BODY>\n</HTML>  \n\n```", "```\n#!  \n\n```", "```\ngzarrelli:~$ echo \"echo \\\"This should go under the sha-bang\\\"\" > test.sh  \n\n```", "```\ngzarrelli:~$ cat test.sh \necho \"This should go under the sha-bang\"  \n\n```", "```\ngzarrelli:~$ file test.sh \ntest.sh: ASCII text  \n\n```", "```\ngzarrelli:~$ sed -i '1s/^/#!\\/bin\\/sh\\n/' test.sh  \n\n```", "```\ngzarrelli:~$ cat test.sh \n#!/bin/sh\necho \"This should go under the sha-bang\"  \n\n```", "```\ngzarrelli:~$ file test.sh \ntest.sh: POSIX shell script, ASCII text executable  \n\n```", "```\ngzarrelli:~$ ls -lah /bin/sh\nlrwxrwxrwx 1 root root 4 Nov  8  2014 /bin/sh -> dash  \n\n```", "```\ngzarrelli:~$ ./test.sh\n-bash: ./test.sh: Permission denied  \n\n```", "```\ngzarrelli:~$ ls -lah test.sh \n-rw-r--r-- 1 gzarrelli gzarrelli 41 Jan 21 18:56 test.sh  \n\n```", "```\ngzarrelli:~$ umask\n0022  \n\n```", "```\nr-- = 100\n-w- = 010\n--x = 001  \n\n```", "```\nchmod u+rwx filename\nchmod g+wfilename  \n\n```", "```\nUser - rwx: 4+2+1 =7\nGroup - rw: 4+2 = 6\nOther - r = 4  \n\n```", "```\nchmod  764 test.sh  \n\n```", "```\ngzarrelli:~$ ls -lah test.sh \n-rwxrw-r-- 1 gzarrelli gzarrelli 41 Jan 21 18:56 test.sh  \n\n```", "```\ngzarrelli:~$ ./test.sh  \n\n```", "```\ngzarrelli:~$ chmod +t test.sh\ngzarrelli:~$ ls -lah test.sh\n-rwxrw-r-T 1 gzarrelli gzarrelli 41 Jan 22 09:05 test.sh  \n\n```", "```\ngzarrelli:~$ chmod +t test.sh \ngzarrelli:~$ ls -lah test.sh \n-rwxrw-r-T 1 gzarrelli gzarrelli 41 Jan 22 09:05 test.sh \ngzarrelli:~$ chmod o+x test.sh \ngzarrelli:~$ ls -lah test.sh \n-rwxrw-r-t 1 gzarrelli gzarrelli 41 Jan 22 09:05 test.sh \n\n```", "```\ngzarrelli:~$ chmod 0764 test.sh \ngzarrelli:~$ ls -lah test.sh \n-rwxrw-r-- 1 gzarrelli gzarrelli 41 Jan 22 09:05 test.sh \n\n```", "```\ngzarrelli:~$ chmod u+s test.sh\ngzarrelli:~$ ls -lah test.sh\n-rwsrw-r-- 1 gzarrelli gzarrelli 41 Jan 22 09:05 test.sh      \n\n```", "```\ngzarrelli:~$ chmod 0764 test.sh\ngzarrelli:~$ ls -lah test.sh\n-rwxrw-r-- 1 gzarrelli gzarrelli 41 Jan 22 09:05 test.sh    \n\n```", "```\ngzarrelli:~$ chmod 2764 test.sh\ngzarrelli:~$ ls -lah test.sh\n-rwxrwSr-- 1 gzarrelli gzarrelli 41 Jan 22 09:05 test.sh  \n\n```", "```\n0777  \n\n```", "```\n0777 -\n0022\n------ \n0755  \n\n```", "```\ngzarrelli:~$ umask -S\nu=rwx,g=rx,o=rx  \n\n```", "```\n0666 -\n0022\n--------\n0644  \n\n```", "```\ngzarrelli:~$ umask\n0000\ngzarrelli:~$ umask -S\nu=rwx,g=rwx,o=rwx  \n\n```", "```\nzarrelli:~$ touch test-file\ngzarrelli:~$ mkdir test-dir\ngzarrelli:~$ ls -lah test-*\n-rw-rw-rw- 1 gzarrelli gzarrelli    0 Jan 22 18:01 test-file\n\ntest-dir:\ntotal 8.0K\ndrwxrwxrwx 2 gzarrelli gzarrelli 4.0K Jan 22 18:01 .\ndrwxr-xr-x 4 gzarrelli gzarrelli 4.0K Jan 22 18:01 ..  \n\n```", "```\nzarrelli:~$ umask o-rwx,g-w\ngzarrelli:~$ umask -S\nu=rwx,g=rx,o=\n\ngzarrelli:~$ touch 2-test-file\ngzarrelli:~$ mkdir 2-test-dir\ngzarrelli:~$ ls -lah 2-test-*\n-rw-r----- 1 gzarrelli gzarrelli    0 Jan 22 18:03 2-test-file\n\n2-test-dir:\ntotal 8.0K\ndrwxr-x--- 2 gzarrelli gzarrelli 4.0K Jan 22 18:03 .\ndrwxr-xr-x 5 gzarrelli gzarrelli 4.0K Jan 22 18:03 ..  \n\n```", "```\n0777 -\n0750\n--------\n0027  \n\n```", "```\ngzarrelli:~$ umask\n0027  \n\n```", "```\ngzarrelli:~$ cat disk.sh\n#!/bin/bash    \necho \"The total disk allocation for this system is: \"    \necho -e \"\\n\"    \ndf -h    \necho -e \"\\n    \ndf -h | grep /$ | awk '{print \"Space left on root partition: \" $4}'  \n\n```", "```\nzarrelli:~$ ./disk.sh  \n\n```", "```\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/dm-0        19G   15G  3.0G  84% /\nudev             10M     0   10M   0% /dev\ntmpfs            99M  9.1M   90M  10% /run\ntmpfs           248M   80K  248M   1% /dev/shm\ntmpfs           5.0M  4.0K  5.0M   1% /run/lock\ntmpfs           248M     0  248M   0% /sys/fs/cgroup\n/dev/sda1       236M   33M  191M  15% /boot\ntmpfs            50M   12K   50M   1% /run/user/1000\ntmpfs            50M     0   50M   0% /run/user/0\nSpace left on root partition: 3.0G  \n\n```", "```\ngzarrelli:~$ bash -x disk.sh\n+ echo 'The total disk allocation for this system is: '\nThe total disk allocation for this system is:\n+ echo -e '\\n'    \n+ df -h\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/dm-0        19G   15G  3.0G  84% /\nudev             10M     0   10M   0% /dev\ntmpfs            99M  9.1M   90M  10% /run\ntmpfs           248M   80K  248M   1% /dev/shm\ntmpfs           5.0M  4.0K  5.0M   1% /run/lock\ntmpfs           248M     0  248M   0% /sys/fs/cgroup\n/dev/sda1       236M   33M  191M  15% /boot\ntmpfs            50M   12K   50M   1% /run/user/1000\ntmpfs            50M     0   50M   0% /run/user/0\n+ echo -e '\\n'    \n+ awk '{print \"Space left on root partition: \" $4}'\n+ grep /dm-0\n+ df -h\nSpace left on root partition: 3.0G  \n\n```", "```\n#!/bin/bash  \nset -x \necho \"The total disk allocation for this system is: \"  \necho -e \"\\n\"  \ndf -h  \necho -e \"\\n\"  \nset +x  \ndf -h | grep /dm-0 | awk '{print \"Space left on root partition: \" $4}' \n\n```", "```\ngzarrelli:~$ ./disk.sh\n+ echo 'The total disk allocation for this system is: '\nThe total disk allocation for this system is:\n+ echo -e '\\n'    \n+ df -h\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/dm-0        19G   15G  3.0G  84% /\nudev             10M     0   10M   0% /dev\ntmpfs            99M  9.1M   90M  10% /run\ntmpfs           248M   80K  248M   1% /dev/shm\ntmpfs           5.0M  4.0K  5.0M   1% /run/lock\ntmpfs           248M     0  248M   0% /sys/fs/cgroup\n/dev/sda1       236M   33M  191M  15% /boot\ntmpfs            50M   12K   50M   1% /run/user/1000\ntmpfs            50M     0   50M   0% /run/user/0\n+ echo -e '\\n'    \n+ set +x\nSpace left on root partition: 3.0G  \n\n```", "```\nLABEL=value  \n\n```", "```\ngzarrelli:~$ FIRST_VARIABLE=amazing  \n\n```", "```\ngzarrelli:~$ echo FIRST_VARIABLE\nFIRST_VARIABLE  \n\n```", "```\ngzarrelli:~$ echo $FIRST_VARIABLE\namazing  \n\n```", "```\ngzarrelli:~$ echo $first_variable    \ngzarrelli:~$  \n\n```", "```\n${label}  \n\n```", "```\ngzarrelli:~$ echo $FIRST_VARIABLE\namazing  \n\n```", "```\ngzarrelli:~$ echo ${FIRST_VARIABLE}\namazing  \n\n```", "```\ngzarrelli:~$ echo $FIRST_VARIABLEngly    \ngzarrelli:~$  \n\n```", "```\ngzarrelli:~$ echo ${FIRST_VARIABLE}ly\namazingly  \n\n```", "```\ngzarrelli:~$ cat disk-space.sh \n#!/bin/bash    \necho -e \"\\n\"    \necho \"The space left is ${disk_space}\"\ndisk_space=`df -h | grep /$ | awk '{print $4}'`    \necho \"The space left is ${disk_space}  \n\n```", "```\ngzarrelli:~$ sh -x disk-space.sh \n+ echo -e \\n\n-e     \n+ echo The space left is \nThe space left is \n+ awk {print $4}\n+ grep /dm-0\n+ df -h\n+ disk_space=3.0G\n+ echo The space left is 3.0G\nThe space left is 3.0G  \n\n```", "```\ngzarrelli:~$ echo ${disk_space}    \ngzarrelli:~$  \n\n```", "```\ngzarrelli:~$ cat disk-space-function.sh\n#!/bin/bash    \necho -e \"\\n\"    \necho \"The space left is ${disk_space}\"    \ndisk_space=`df -h | grep /dm-0 | awk '{print $4}'`    \nprint () {    \necho \"The space left inside the function is ${disk_space}\"    \nlocal available=yes\nlast=yes\necho \"Is the available variable available inside the function? ${available}\"    \n}\necho \"Is the last variable available outside the function before it is invoked? ${last}\"\nprint\necho \"The space left outside is ${disk_space}\"\necho \"Is the available variable available outside the function? ${available}\"\necho \"Is the last variable available outside the function after it is invoked? ${last}\"  \n\n```", "```\ngzarrelli:~$ cat di./pace-function.sh\nThe space left is\nIs the last variable available outside the function before it is invoked?\nThe space left inside the function is 3.0G\nIs the available variable available inside the function? yes\nThe space left outside is 3.0G\nIs the available variable available outside the function?\nIs the last variable available outside the function after it is invoked? yes  \n\n```", "```\nzarrelli:~$ env    \n...\nLANG=en_GB.utf8\n...\nDISPLAY=:0.0\n...\nUSER=zarrelli\n...\nDESKTOP_SESSION=xfce\n...\nPWD=/home/zarrelli/Documents\n...\nHOME=/home/zarrelli\n...\nSHELL=/bin/bash\n...\nLANGUAGE=en_GB:en\n...\nGDMSESSION=xfce\n...\nLOGNAME=zarrelli\n...\nPATH=/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games\n_=/usr/bin/env  \n\n```", "```\nzarrelli:~$ export TEST_VAR=awesome  \n\n```", "```\nzarrelli:~/$ echo ${TEST_VAR}\nawesome  \n\n```", "```\nzarrelli:~$ unset TEST_VAR  \n\n```", "```\nzarrelli:~/$ echo ${TEST_VAR}\nzarrelli:~/$  \n\n```", "```\nzarrelli:~$ cat setting.sh \n#!/bin/bash    \nexport MYTEST=NOWAY    \nenv | grep MYTEST    \necho ${MYTEST}  \n\n```", "```\nzarrelli@:~$ ./setting.sh ; echo ${MYTEST}\nMYTEST=NOWAY\nNOWAY    \nzarrelli:~$   \n\n```", "```\n#!/bin/bash    \necho \"We are into the directory\"\npwd  \n\n```", "```\necho \"What is our PATH?\"\necho ${PATH}  \n\n```", "```\necho \"Now we expand the path for all the shell\"\nexport PATH=${PATH}:~/tmp  \n\n```", "```\necho \"And now our PATH is...\"\necho ${PATH}\necho \"We are looking for the setting.sh script!\"\nwhich setting.sh\necho \"Found it!\"  \n\n```", "```\necho \"Time for magic!\"\necho  \"We are looking for the setting.sh script!\"\nenv PATH=/usr/bin which setting.sh\necho \"BOOOO, nothing!\"  \n\n```", "```\necho \"Second try...\"\nenv PATH=/usr/sbin which setting.sh    \necho \"No way...\"  \n\n```", "```\nzarrelli:~$ ./setenv.sh   \n\n```", "```\n/home/zarrelli/Documents/My books/Mastering bash/Chapter 1/Scripts  \n\n```", "```\n/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games  \n\n```", "```\n/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/home\n/zarrelli/tmp  \n\n```", "```\n/home/zarrelli/tmp/setting.sh  \n\n```", "```\nzarrelli:~$ cat env-test.sh \n#!/bin/bash\nenv PATH=HELLO /usr/bin/env | grep -A1 -B1 ^PATH  \n\n```", "```\nzarrelli:~$ ./env-test.sh     \n2705-XDG_CONFIG_DIRS=/etc/xdg\n2730:PATH=HELLO\n2741-SESSION_MANAGER=local/moveaway:@/tmp/.ICE-unix/888,unix/moveaway:/tmp/.ICE-unix/888  \n\n```", "```\nzarrelli:~$ cat env-test.sh \n#!/bin/bash    \nenv -i PATH=HELLO /usr/bin/env | grep -A1 -B1 ^PATH  \n\n```", "```\nzarrelli:~/$ ./env-test.sh \nPATH=HELLO\nzarrelli:~/$   \n\n```", "```\nenv -i PATH=HELLO /usr/bin/env   \n\n```", "```\nzarrelli:~$ env -i PATH=HELLO /usr/bin/env\nPATH=HELLO\nzarrelli:~$   \n\n```", "```\nzarrelli:~$ env -i PATH=HELLO LOGNAME=whoami/usr/bin/env\nPATH=HELLO\nLOGNAME=whoami/usr/bin/env\nzarrelli:~$  \n\n```", "```\n#!/bin/bash    \necho -e \"\\n\"    \necho \"The space left is ${disk_space}\"    \ndisk_space=`df -h | grep vg-root | awk '{print $4}'`    \nprint () {    \necho \"The space left inside the function is ${disk_space}\"    \nlocal available=yes\nlast=yes    \necho \"Is the available variable available inside the function? ${available}\"   \n}    \necho \"Is the last variable available outside the function before it is invoked? ${last}\"\nprint\necho \"The space left outside is ${disk_space}\"\necho \"Is the available variable available outside the function? ${available}\"\necho \"Is the last variable available outside the function after it is invoked? ${last}\"    \necho \"What happens if we unset a variable, like last?\"\nunset last\necho \"Has last a referrable value ${last}\"\necho \"And what happens if I try to unset a while print functions using  unset -f\" t\nprint    \nunset -f print\necho \"Unset done, now let us invoke the function\"\nprint  \n\n```", "```\nzarrelli:~$ ./disk-space-function-unavailable.sh   \n\n```", "```\nIs the last variable available outside the function before it is invoked? \nThe space left inside the function is 202G\nIs the available variable available inside the function? yes\nThe space left outside is 202G\nIs the available variable available outside the function? \nIs the last variable available outside the function after it is invoked? yes\nWhat happens if we unset a variable, like last?\nHas last a referrable value \nAnd what happens if I try to unset a while print functions using  \nunset -f\nThe space left inside the function is 202G\nIs the available variable available inside the function? yes  \n\n```", "```\nzarrelli:~$   \n\n```", "```\nunset -v variable1 variable2 variablen  \n\n```", "```\nzarrelli:~$ cat readonly.sh \n#!/bin/bash    \necho \"What is our PATH?\"\necho ${PATH}    \necho \"Now we make it readonly\"\nreadonly PATH\necho \"Now  we expand the path for all the shell\"\nexport PATH=${PATH}:~/tmp  \n\n```", "```\nzarrelli:~$ ./readonly.sh \nWhat is our PATH?\n/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games\nNow we make it readonly\nNow  we expand the path for all the shell\n./readonly.sh: line 10: PATH: readonly variable\nzarrelli:~$  \n\n```", "```\nzarrelli:~$ echo $?\n1\nzarrelli:~$ echo $?\n0  \n\n```", "```\nx=1 ; echo $x    \nzarrelli:~$ x=1 ; echo $x\n1  \n\n```", "```\nzarrelli:~$ x=1 ; y=$x; echo \"x is $x\" ; echo \"y is $y\"\nx is 1\ny is 1  \n\n```", "```\n$x\n${x}  \n\n```", "```\n${variable-default}\n${variable:-default}  \n\n```", "```\n${variable:-default} ${variable-default}  \n\n```", "```\n#!/bin/bash\necho \"Setting the variable x\"\nx=10\necho \"Printing the value of x using a default fallback value\"\necho \"${x:-20}\"\necho \"Unsetting x\"\nunset -v x\necho \"Printing the value of x using a default fallback value\"\necho \"${x:-20}\"\necho \"Setting the value of x to null\"\nx=\necho \"Printing the value of x with x to null\"\necho \"${x:-30}  \n\n```", "```\nzarrelli:~$ ./variables.sh \nSetting the variable x\nPrinting the value of x using a default fallback value\n10\nUnsetting x\nPrinting the value of x using a default fallback value\n20\nSetting the value of x to null\nPrinting the value of x with x to null\n30  \n\n```", "```\nSetting the variable x\nPrinting the value of x using a default fallback value\n10\nUnsetting x\nPrinting the value of x using a default fallback value\n20\nSetting the value of x to null\nPrinting the value of x with x to null    \nzarrelli:$   \n\n```", "```\n#!/bin/bash        \necho \"Hello user, please give me a number: \"\nread user_input        \necho \"The number is: ${user_input:-99}\"      \n\n```", "```\nzarrelli:~$ ./userinput.sh \nHello user, please give me a number: \n10\nThe number is: 10\nzarrelli:~/$    \nzarrelli$ ./userinput.sh \nHello user, please give me a number:     \nThe number is: 99\nzarrelli:~/$\n${variable:=default} ${variable=default}  \n\n```", "```\n#!/bin/bash    \n#!/bin/bash\necho \"Setting the variable x\"\nx=10\necho \"Printing the value of x\"\necho ${x}\necho \"Unsetting x\"\nunset -v x\necho \"Printing the value of x using a default fallback value\"\necho \"${x:-20}\"\necho \"Printing the value of x\"\necho ${x}\necho \"Setting the variable x with assignement\"\necho \"${x:=30}\"\necho \"Printing the value of x again\"\necho ${x}  \n\n```", "```\nSetting the variable x\nPrinting the value of x\n10\nUnsetting x\nPrinting the value of x using a default fallback value\n20\nPrinting the value of x    \nSetting the variable x with assignement\n30\nPrinting the value of x again\n30  \n\n```", "```\n${variable:+default} ${variable+default}  \n\n```", "```\n#!/bin/bash    \n#!/bin/bash\necho \"Setting the variable x\"\nx=10\necho \"Printing the value of x\"\necho ${x}\necho \"Printing the value of x with a default value on \nassigned value\"\necho \"${x:+100}\"\necho \"Printing the value of x after default\"\necho ${x}\necho \"Unsetting x\"\nunset -v x\necho \"Printing the value of x using a default fallback value\"\necho \"${x:+20}\"\necho \"Printing the value of x\"\necho ${x}\necho \"Setting the variable x with assignement\"\necho \"${x:+30}\"\necho \"Printing the value of x again\"\necho ${x}  \n\n```", "```\nSetting the variable x\nPrinting the value of x\n10\nPrinting the value of x with a default value on assigned value\n100\nPrinting the value of x after default\n10\nUnsetting x\nPrinting the value of x using a default fallback value    \nPrinting the value of x    \nSetting the variable x with assignement    \nPrinting the value of x again    \nzarrelli:~$   \n\n```", "```\n${variable:?message} ${variable?message}\n#!/bin/bash\nx=10\ny=\nunset -v z\necho ${x:?\"Should work\"}\necho ${y:?\"No way\"}\necho ${y:?\"Well\"}  \n\n```", "```\nzarrelli:~$ ./set-message.sh \n10\n./set-message.sh: line 8: y: No way  \n\n```", "```\n${#variable)  \n\n```", "```\nzarrelli:~$ my_variable=thisisaverylongvalue\nzarrelli:~$ echo ${#my_variable}\n20  \n\n```", "```\nzarrelli:~$ fruit=(apple pear banana)  \n\n```", "```\nzarrelli@moveaway:~$ echo ${fruit[2]}\nbanana  \n\n```", "```\nzarrelli@moveaway:~$ echo ${fruit[1]}\npear  \n\n```", "```\nzarrelli@moveaway:~$ echo ${fruit[0]}\napple  \n\n```", "```\nzarrelli:~$ echo ${#fruit}\n5  \n\n```", "```\n${variable#pattern) \n\n```", "```\nzarrelli:~$ shortest=1010201010\nzarrelli:~$ echo ${shortest#10}\n10201010\nzarrelli:~$ echo ${shortest}\n1010201010\n${variable##pattern)  \n\n```", "```\nzarrelli:~$ my_variable=10102010103  \n\n```", "```\nzarrelli:~$ echo ${my_variable#1*1}\n02010103  \n\n```", "```\nzarrelli:~$ echo ${my_variablet##1*1}\n03  \n\n```", "```\n${variable%pattern)  \n\n```", "```\nzarrelli:~$ ending=10102010103\nzarrelli:~$ echo ${ending%1*3}\n10102010  \n\n```", "```\n${variable%%pattern)  \n\n```", "```\nzarrelli:~$ ending=10102010103\nzarrelli:~$ echo ${ending}\n10102010103\nzarrelli:~$ echo ${ending%1*3}\n10102010\nzarrelli:~$ echo ${ending%%1*3}\nzarrelli:~$   \n\n```", "```\nzarrelli:~$ my_var=${ending%1*3}\nzarrelli:~$ [[ -z \"$my_var\" ]] && echo \"Empty\" || echo \"Not empty\"\nNot empty\nzarrelli:~$ my_var=${ending%%1*3}\nzarrelli:~$ [[ -z \"$my_var\" ]] && echo \"Empty\" || echo \"Not empty\"\nEmpty\n${variable/pattern/substitution}  \n\n```", "```\nzarrelli:~$ my_var=\"Give me a banana\"\nzarrelli:~$ echo ${my_var}\nGive me a banana\nzarrelli:~$ echo ${my_var/banana/pear}\nGive me a pear\nzarrelli:~$ fruit=${my_var/banana/pear}\nzarrelli:~$ echo ${fruit}\nGive me a pear  \n\n```", "```\n${variable//pattern/substitution}  \n\n```", "```\nzarrelli@moveaway:~$ fruit=\"A pear is a pear and is not a banana\"\nzarrelli@moveaway:~$ echo ${fruit//pear/watermelon}\nA watermelon is a watermelon and is not a banana  \n\n```", "```\n${variable/#pattern/substitution}  \n\n```", "```\nzarrelli:~$ fruit=\"a pear is a pear and is not a banana\"\nzarrelli:~$ echo ${fruit/#\"a pear\"/}\nis a pear and is not a banana\nzarrelli:~$ echo ${fruit/#\"a pear\"/\"an apple\"}\nan apple is a pear and is not a banana  \n\n```", "```\n${variable/%pattern/substitution}  \n\n```", "```\nzarrelli:~$ fruit=\"a pear is not a banana even tough I would \nlike to eat a banana\"\nzarrelli:~$ echo ${fruit/%\"a banana\"/\"an apple\"}\na pear is not a banana even though I would like to eat an apple  \n\n```", "```\n${!prefix_variable*}\n${!prefix_variable@}  \n\n```", "```\nzarrelli:~$ firstvariable=1\nzarrelli:~$ secondvariable=${!first*}\nzarrelli@:~$ echo ${secondvariable}\nfirstvariable\nzarrelli:~$ thirdvariable=${secondvariable}\nzarrelli:~$ echo ${thirdvariable}\nfirstvariable\n${variable:position}  \n\n```", "```\nzarrelli:~$ picnic=\"Either I eat an apple or I eat a raspberry\"\nzarrelli:~$ echo ${picnic:25}\nI eat a raspberry  \n\n```", "```\n${variable:position:offset}\nzarrelli:~$ wheretogo=\"I start here, I go there, no further\"\nzarrelli:~$ echo ${wheretogo:14:10}\nI go there  \n\n```", "```\n${1}, ${n}\n\n```", "```\n!/bin/bash    \nfistvariable=${1}\nsecondvariable=${2}\nthirdvariable=${3}    \necho \"The value of the first variable is ${1}, the second \nis ${2}, the third is ${3}\" \n\n```", "```\nzarrelli:~$ ./positional.sh \nThe value of the first variable is , the second is , the third is   \n\n```", "```\nzarrelli:~$ ./positional.sh 1 2 3\nThe value of the first variable is 1, the second is 2, \nthe third is 3  \n\n```", "```\nzarrelli:~$ ./positional.sh Green Yellow Red  \n\n```", "```\nzarrelli:~$ ./positional.sh \"One sentence\" \"Another one\" \nA third one\nThe value of the first variable is One sentence, the second \nis Another one, the third is A  \n\n```", "```\nthirdvariable=${3}\nfistvariable=${1}\nsecondvariable=${2}  \n\n```", "```\n${1}\n$1  \n\n```", "```\n#!/bin/bash    \nfistvariable=${1}\nsecondvariable=${2}\nthirdvariable=${3}\neleventhvariable=$11    \necho \"The value of the first variable is ${fistvariable}, \nthe second is ${secondvriable}, the third is ${thirdvariable}, \nthe eleventh is ${eleventhvariable}\"   \n\n```", "```\nzarrelli:~$ ./positional.sh \"One sentence\" \"Another one\" A \nthird one\nThe value of the first variable is One sentence, the second \nis Another one, the third is A, the eleventh is One sentence1  \n\n```", "```\neleventhvariable=${11}  \n\n```", "```\nzarrelli$ ./positional.sh \"One sentence\" \"Another one\" A third one\nThe value of the first variable is One sentence, the second is \nAnother one, the third is A, the eleventh is   \n\n```", "```\n${0}  \n\n```", "```\necho \"The full path to the script is $0\"\nzarrelli:~$ ./positional.sh 1 2 3\nThe value of the first variable is 1, the second is 2, the \nthird is 3, the eleventh is \nThe full path to the script is ./positional.sh \n\n```", "```\n${#}  \n\n```", "```\necho \"We passed ${#} arguments to the script\"    \nzarrelli:~$ ./positional.sh 1 2 3 4 5 6 7 \nThe value of the first variable is 1, the second is 2, the \nthird is 3, the eleventh is \nThe full path to the script is ./positional.sh\nWe passed 7 arguments to the script    \n${@}\n${*}  \n\n```", "```\n#!/bin/bash\nfistvariable=${1}\nsecondvariable=${2}\nthirdvariable=${3}\neleventhvariable=${11}\nexport IFS=*    \necho \"The value of the first variable is ${fistvariable}, \nthe second is ${secondvariable}, the third is ${thirdvariable}, \nthe eleventh is ${eleventhvariable}\"\necho \"The full path to the script is $0\"\necho \"We passed ${#} arguments to the script\"    \necho \"This is the list of the arguments ${@}\"\necho \"This too is the list of the arguments ${*}\"\nIFS=\necho \"This too is the list of the arguments ${*}\"  \n\n```", "```\nzarrelli:~$ ./positional.sh 1 2 3\nThe value of the first variable is 1, the second is 2, \nthe third is 3, the eleventh is \nThe full path to the script is ./positional.sh\nWe passed 3 arguments to the script\nThis is the list of the arguments 1 2 3\nThis too is the list of the arguments 1*2*3\nThis too is the list of the arguments 123  \n\n```", "```\n${?}  \n\n```", "```\nzarrelli:~$ /bin/ls disk.sh ; echo ${?} ; tt ; echo ${?}\ndisk.sh\n0\nbash: tt: command not found\n127  \n\n```", "```\necho \"The process id of this script is ${$}\"  \n\n```", "```\nzarrelli:~$ ./positional.sh 1 2 3\nThe value of the first variable is 1, the second is 2, the \nthird is 3, the eleventh is \nThe full path to the script is ./positional.sh\nWe passed 3 arguments to the script\nThis is the list of the arguments 1 2 3\nThis too is the list of the arguments 1*2*3\nThis too is the list of the arguments 123\nThe process id of this script is 13081  \n\n```", "```\n${!}  \n\n```", "```\necho \"The background process id of this script is ${!}\"\necho \"Executing a ps in background\"\nnohup ps &\necho \"The background process id of this script is ${!}\"  \n\n```", "```\nzarrelli:~$ ./positional.sh 1 2 3\nThe value of the first variable is 1, the second is 2, \nthe third is 3, the eleventh is \nThe full path to the script is ./positional.sh\nWe passed 3 arguments to the script\nThis is the list of the arguments 1 2 3\nThis too is the list of the arguments 1*2*3\nThis too is the list of the arguments 123\nThe process id of this script is 13129\nThe background process id of this script is \nExecuting a ps in background\nThe background process id of this script is 13130\nnohup: appending output to 'nohup.out'  \n\n```", "```\nnohup: appending output to 'nohup.out'  \n\n```"]