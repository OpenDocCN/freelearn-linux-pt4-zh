["```\n#cloud-config\n\n---\ncoreos:\n  etcd2:\n    name: core-01\n    advertise-client-urls: http://$public_ipv4:2379\n    initial-advertise-peer-urls: http://$private_ipv4:2380\n    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001\n    listen-peer-urls: http://$private_ipv4:2380,http://$private_ipv4:7001\n    initial-cluster-token: coreOS-static\n    initial-cluster: core-01=http://172.17.8.101:2380,core-02=http://172.17.8.102:2380,core-03=http://172.17.8.103:2380\n  units:\n  - name: etcd2.service\n    command: start\n    enable: true\n```", "```\n...\n      ip = \"172.17.8.#{i+100}\"\n      config.vm.network :private_network, ip: ip\n...\n```", "```\n...\n      if $share_home\n        config.vm.synced_folder ENV['HOME'], ENV['HOME'], id: \"home\", :nfs => true, :mount_options => ['nolock,vers=3,udp']\n      end\n\n      if File.exist?(CLOUD_CONFIG_PATH)\n user_data_specific = \"#{CLOUD_CONFIG_PATH}-#{i}\"\n require 'yaml'\n data = YAML.load(IO.readlines(CLOUD_CONFIG_PATH)[1..-1].join)\n if data['coreos'].key? 'etcd2'\n data['coreos']['etcd2']['name'] = vm_name\n end\n yaml = YAML.dump(data)\n File.open(user_data_specific, 'w') { |file| file.write(\"#cloud-config\\n\\n#{yaml}\") }\n config.vm.provision :file, :source => user_data_specific, :destination => \"/tmp/vagrantfile-user-data\"\n        config.vm.provision :shell, :inline => \"mv /tmp/vagrantfile-user-data /var/lib/coreos-vagrant/\", :privileged => true\n      end\n...\n```", "```\nvagrant ssh core-01\n\netcdctl member list\n7cc8bd52fa88d49: name=core-02 peerURLs=http://172.17.8.102:2380 clientURLs=http://172.17.8.102:2379\n533d38560a602262: name=core-01 peerURLs=http://172.17.8.101:2380 clientURLs=http://172.17.8.101:2379\nb8d2db3a5bf3d17d: name=core-03 peerURLs=http://172.17.8.103:2380 clientURLs=http://172.17.8.103:2379\n\netcdctl cluster-health\ncluster is healthy\nmember 533d38560a602262 is healthy\nmember 7cc8bd52fa88d49 is healthy\nmember b8d2db3a5bf3d17d is healthy\n\n```", "```\n...\n# To automatically replace the discovery token on 'vagrant up', uncomment\n# the lines below:\n#\nif File.exists?('user-data') && ARGV[0].eql?('up')\n require 'open-uri'\n require 'yaml'\n\n token = open($new_discovery_url).read\n\n data = YAML.load(IO.readlines('user-data')[1..-1].join)\n\n if data['coreos'].key? 'etcd2'\n data['coreos']['etcd2']['discovery'] = token\n end\n\n yaml = YAML.dump(data)\n File.open('user-data', 'w') { |file| file.write(\"#cloud-config\\n\\n#{yaml}\") }\nend\n...\n```", "```\n#cloud-config\n\ncoreos:\n  etcd2:\n    discovery: https://discovery.etcd.io/<token>\n    advertise-client-urls: http://$public_ipv4:2379\n    initial-advertise-peer-urls: http://$private_ipv4:2380\n    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001\n    listen-peer-urls: http://$private_ipv4:2380,http://$private_ipv4:7001\n  units:\n    - name: etcd2.service\n      command: start\n      enable: true\n```", "```\nvagrant ssh core-01\n\netcdctl member list\n466abd73fa498e31: name=5fd5fe90fef243a090cb2ee4cfac4d53 peerURLs=http://172.17.8.103:2380 clientURLs=http://172.17.8.103:2379\n940245793b93afb3: name=43e78c85f5bb439f84badd8a5cb9f12b peerURLs=http://172.17.8.101:2380 clientURLs=http://172.17.8.101:2379\nea07891f96c6abfe: name=93c559a5c40d47c7917607a15d676b6d peerURLs=http://172.17.8.102:2380 clientURLs=http://172.17.8.102:2379\n\netcdctl cluster-health\ncluster is healthy\nmember 466abd73fa498e31 is healthy\nmember 940245793b93afb3 is healthy\nmember ea07891f96c6abfe is healthy\n\n```", "```\n#cloud-config\n\ncoreos:\n  etcd2:\n    discovery: http://172.17.8.101:4001/v2/keys/discovery/40134540-b53c-46b3-b34f-33b4f0ae3a9c\n    advertise-client-urls: http://$public_ipv4:2379\n    initial-advertise-peer-urls: http://$private_ipv4:2380\n    listen-client-urls: http://$public_ipv4:2379,http://$public_ipv4:4001\n    listen-peer-urls: http://$private_ipv4:2380,http://$private_ipv4:7001\n  units:\n    - name: etcd2.service\n      command: start\n      enable: true\n```", "```\n...\n      if $share_home\n        config.vm.synced_folder ENV['HOME'], ENV['HOME'], id: \"home\", :nfs => true, :mount_options => ['nolock,vers=3,udp']\n      end\n\n      if File.exist?(CLOUD_CONFIG_PATH)\n user_data_specific = \"#{CLOUD_CONFIG_PATH}-#{i}\"\n require 'yaml'\n data = YAML.load(IO.readlines(CLOUD_CONFIG_PATH)[1..-1].join)\n if data['coreos'].key? 'etcd2'\n data['coreos']['etcd2']['name'] = vm_name\n end\n if i.equal? 1\n data['coreos']['etcd2']['discovery'] = nil\n data['coreos']['etcd2']['initial-advertise-peer-urls'] = nil\n data['coreos']['etcd2']['listen-peer-urls'] = nil\n end \n yaml = YAML.dump(data)\n File.open(user_data_specific, 'w') { |file| file.write(\"#cloud-config\\n\\n#{yaml}\") }\n config.vm.provision :file, :source => user_data_specific, :destination => \"/tmp/vagrantfile-user-data\"\n        config.vm.provision :shell, :inline => \"mv /tmp/vagrantfile-user-data /var/lib/coreos-vagrant/\", :privileged => true\n      end\n...\n```", "```\nvagrant ssh core-01\ncurl -X PUT http://172.17.8.101:4001/v2/keys/discovery/40134540-b53c-46b3-b34f-33b4f0ae3a9c/_config/size -d value=2\n{\"action\":\"set\",\"node\":{\"key\":\"/discovery/40134540-b53c-46b3-b34f-33b4f0ae3a9c/_config/size\",\"value\":\"2\",\"modifiedIndex\":3,\"createdIndex\":3}}\n\n```", "```\netcdctl --peers=http://172.17.8.102:4001 member list\n36b2390cc35b7932: name=core-03 peerURLs=http://172.17.8.103:2380 clientURLs=http://172.17.8.103:2379\n654398796d95b9a6: name=core-02 peerURLs=http://172.17.8.102:2380 clientURLs=http://172.17.8.102:2379\n\netcdctl --peers=http://172.17.8.102:4001 cluster-health\ncluster is healthy\nmember 36b2390cc35b7932 is healthy\nmember 654398796d95b9a6 is healthy\n```", "```\n_etcd-server._tcp.testdomain.com. 300   IN      SRV     0       0       2380    CoreOS-01.testdomain.com.\n_etcd-server._tcp.testdomain.com. 300   IN      SRV     0       0       2380    CoreOS-02.testdomain.com.\n_etcd-server._tcp.testdomain.com. 300   IN      SRV     0       0       2380    CoreOS-03.testdomain.com.\nCoreOS-01.testdomain.com.       300     IN      A       172.17.8.101\nCoreOS-02.testdomain.com.       300     IN      A       172.17.8.102\nCoreOS-03.testdomain.com.       300     IN      A       172.17.8.103\n```", "```\n#cloud-config\ncoreos:\n  etcd2:\n    discovery-srv: testdomain.com\n    advertise-client-urls: http://$public_ipv4:2379\n    initial-advertise-peer-urls: http://$private_ipv4:2380\n    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001\n    listen-peer-urls: http://$private_ipv4:2380,http://$private_ipv4:7001\n    initial-cluster-token: etcd-cluster-1\n    initial-cluster-state: new\n  units:\n  - name: etcd2.service\n    command: start\n    enable: true\nwrite_files:\n - path: \"/etc/resolv.conf\"\n permissions: \"0644\"\n owner: \"root\"\n content: |\n      nameserver 172.17.8.111\n```", "```\nvagrant ssh core-01\n\netcdctl member list\n13530017c40ce74f: name=5d0c2805e0944d43b03ef260fea20ae2 peerURLs=http://CoreOS-02.testdomain.com:2380 clientURLs=http://172.17.8.102:2379\n25c0879f38e80fd0: name=26fed2d2c43b4901ad944d9912d071cb peerURLs=http://CoreOS-01.testdomain.com:2380 clientURLs=http://172.17.8.101:2379\n3551738c55e6c3e4: name=39d95e1e69ae4bea97aed0ba5817241e peerURLs=http://CoreOS-03.testdomain.com:2380 clientURLs=http://172.17.8.103:2379\n\netcdctl cluster-health\nmember 13530017c40ce74f is healthy: got healthy result from http://172.17.8.102:2379\nmember 25c0879f38e80fd0 is healthy: got healthy result from http://172.17.8.101:2379\nmember 3551738c55e6c3e4 is healthy: got healthy result from http://172.17.8.103:2379\ncluster is healthy\n```", "```\nsystemctl enable crond\nsystemctl start crond\n\n```", "```\nsystemctl stop crond\n\n```", "```\nsystemctl status crond\ncrond.service - Command Scheduler\n Loaded: loaded (/usr/lib/systemd/system/crond.service; enabled)\n Active: active (running) since Tue 2015-09-08 22:51:30 IST; 2s ago\n Main PID: 8225 (crond)\n CGroup: /system.slice/crond.service\n `-8225 /usr/sbin/crond -n\n...\n\n```", "```\nfleetctl --endpoint http://<IP:PORT> list-units\n\n```", "```\nfleetctl --tunnel 10.0.0.1 list-machines\n\n```", "```\n$ fleetctl list-unit-files\nUNIT            HASH    DSTATE   STATE    TMACHINE\nmyservice.service d4d81cf launched launched 85c0c595.../172.17.8.102\nexample.service   e56c91e launched launched 113f16a7.../172.17.8.103\n\n```", "```\n$ fleetctl start myservice.service\nUnit myservice.service launched on d4d81cf.../172.17.8.102\n\n```", "```\n$ fleetctl stop myservice.service\nUnit myservice.service stopped on d4d81cf.../172.17.8.102\n\n```", "```\n$ fleetctl load example.service\nUnit example.service loaded on 133f19a7.../172.17.8.103\n\n```", "```\n$ fleetctl load example.service\n\n```", "```\nfleetctl submit example.service\n\n```", "```\nfleetctl destroy example.service\n\n```", "```\n$ fleetctl status example.service\nexample.service - Hello World\n Loaded: loaded (/run/systemd/system/example.service; enabled-runtime)\n Active: active (running) since Mon 2015-09-21 23:20:23 UTC; 1h 49min ago\n Main PID: 6972 (bash)\n CGroup: /system.slice/example.1.service\n ├─ 6973 /bin/bash -c while true; do echo \"Hello, world\"; sleep 1; done\n └─20381 sleep 1\n\n```", "```\n[Unit]\nDescription=Example\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nTimeoutStartSec=0\nExecStartPre=-/usr/bin/docker kill busybox1\nExecStartPre=-/usr/bin/docker rm busybox1\nExecStartPre=/usr/bin/docker pull busybox\nExecStart=/usr/bin/docker run --name busybox1 busybox /bin/sh -c \"while true; do echo Hello World; sleep 1; done\"\nExecStop=/usr/bin/docker stop busybox1\n```", "```\n$ fleetctl start example.service\n\n$ fleetctl list-units\nUNIT              MACHINE                 ACTIVE    SUB\nexample.service     d0ef0562.../10.0.0.3   active    running\n\n$ fleetctl list-machines\nMACHINE                                 IP          METADATA\n159b2900-7f06-5d43-92da-daeeabb90d5a    10.0.0.1   -\n50a69aa6-518d-4d81-ad3d-bfc4d146e996    10.0.0.2   -\nd0ef0562-6a6f-1d80-b7e6-46e996bfc4d1    10.0.0.3   -\n\n```", "```\n[Unit]\nDescription=My redis Frontend\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nTimeoutStartSec=0\nExecStartPre=-/usr/bin/docker kill redis\nExecStartPre=-/usr/bin/docker rm redis\nExecStartPre docker pull dockerfile/redis\nExecStart docker run -d --name redis -p 6379:6379 dockerfile/redis\nExecStop=/usr/bin/docker stop redis\n\n[X-Fleet]\nConflicts=redis@*.service\n```", "```\n$ fleetctl start redis@1\n$ fleetctl start redis@2\n$ fleetctl list-units\nUNIT              MACHINE                 ACTIVE    SUB\nredis@1.service  5a2686a6.../10.0.0.2   active    running\nredis@2.service  259b18ff.../10.0.0.1   active    running\n\n```"]