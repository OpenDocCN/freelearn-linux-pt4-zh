- en: Chapter 1. Installation and Setup
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Preparing for the initial boot
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Downloading new SD cards
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Booting with NOOBS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mac OS X disk utilities – diskutil and dd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Image Writer for Windows – Win32DiskImager.exe
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Convert and copy for Linux – dd
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Booting Raspbian Linux for the first time
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shutting down the Raspberry Pi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter introduces the Raspberry Pi. It begins by listing the components
    that you will need, such as a power supply, in addition to the Raspberry Pi.
  prefs: []
  type: TYPE_NORMAL
- en: The core recipes of this chapter describe how to download, install, and configure
    a number of common Raspberry Pi operating systems.
  prefs: []
  type: TYPE_NORMAL
- en: The last two recipes describe the initial boot of the official Raspbian Linux
    distribution and how to safely power off the Raspberry Pi.
  prefs: []
  type: TYPE_NORMAL
- en: Once you've completed this chapter, you will have downloaded, installed, and
    configured an operating system for your Raspberry Pi and booted your Raspberry
    Pi for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: Preparing for the initial boot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This recipe explains which components are needed for the initial boot, in addition
    to the Raspberry Pi, before it can be powered on for the first time.
  prefs: []
  type: TYPE_NORMAL
- en: The Raspberry Pi Foundation has released a number of versions of the Raspberry
    Pi since it was first released in June 2012, which include Raspberry Pi B (April
    2012), Raspberry Pi A (February 2013), Raspberry Pi Compute Module (April 2014),
    Raspberry Pi Model B+ (July 2014), and the Raspberry Pi 2 Model B (February 2015).
  prefs: []
  type: TYPE_NORMAL
- en: The original Raspberry Pi Model B has a memory of only 512 MB, a single-core
    processor, and two USB ports. The current model, the Raspberry Pi 2 Model B, has
    a memory of 1 GB, a quad-core processor, and four USB ports.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The examples in this book feature the Raspberry Pi 2 Model B.
  prefs: []
  type: TYPE_NORMAL
- en: The Raspberry Pi is shipped without a case and power supply. There is no keyboard
    or monitor. Depending on how you intend to use the Raspberry Pi, you will need
    additional components. For the majority of the recipes in this book, you will
    only need a power supply, an SD card, and a network cable.
  prefs: []
  type: TYPE_NORMAL
- en: You may wish to attach additional peripherals, depending on how you intend to
    use the Raspberry Pi. An HDMI cable, a USB keyboard, and a USB mouse are needed
    if you'd like to use the Raspberry Pi as you would use a desktop computer. This
    recipe lists a number of different Raspberry Pi projects and the peripherals needed
    to complete them.
  prefs: []
  type: TYPE_NORMAL
- en: After completing this recipe, you will be ready for the initial boot of your
    Raspberry Pi.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To get started with this recipe, there are a few prerequisites that you must
    be familiar with.
  prefs: []
  type: TYPE_NORMAL
- en: The basic components
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'These are some of the basic components:'
  prefs: []
  type: TYPE_NORMAL
- en: The Raspberry Pi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An SD card
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A 5V Micro USB Power Supply
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Raspberry Pi draws its power from a 5V micro USB power supply and needs
    an SD card for its operating system. While no further components are required
    to boot the Raspberry Pi, many of the networking solutions in this book will require
    additional components.
  prefs: []
  type: TYPE_NORMAL
- en: A single 4 GB SD Class 10 card has more than enough room and speed to host the
    base operating system as well as many useful applications. Because the SD card
    is where the Raspberry Pi stores its operating system, the speed of the operating
    system is dependent on the speed of the SD card. Class 10 cards will have better
    performance than Class 4 or Class 6 cards. The Embedded Linux Wiki maintains an
    SD Card compatibility table, which can be viewed by visiting [http://elinux.org/RPi_SD_cards](http://elinux.org/RPi_SD_cards).
  prefs: []
  type: TYPE_NORMAL
- en: In addition to an SD Card, the Raspberry Pi will need additional components
    for many applications. For most of the recipes in this book, you will need only
    a network connection. For some, you may also need a display as well as a keyboard
    and mouse.
  prefs: []
  type: TYPE_NORMAL
- en: The following are a few examples of networking applications and the components
    that they will need.
  prefs: []
  type: TYPE_NORMAL
- en: Basic networking
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: By basic networking, we mean having a network connection. For the simplest networking
    solutions, the only additional component that the Raspberry Pi needs is a network
    connection—either a direct TCP cable connection, or a wireless network USB dongle.
    Once the network is configured and remote logins to the Raspberry Pi are possible,
    the Raspberry Pi can be remotely accessed, updated, and administered.
  prefs: []
  type: TYPE_NORMAL
- en: Media centers
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As part of media centers, we will require an HDMI television or monitor.
  prefs: []
  type: TYPE_NORMAL
- en: For the simplest network media solutions, in addition to the basic networking
    components, the only additional component that the Raspberry Pi needs is an HDMI
    connection. Both audio and video can be streamed through the Raspberry Pi's HDMI
    connection. Furthermore, there is enough room on an SD card to store a small collection
    of music and video files in addition to the operating system.
  prefs: []
  type: TYPE_NORMAL
- en: Desktop computers
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you are using desktop computers, these will be required:'
  prefs: []
  type: TYPE_NORMAL
- en: An HMDI television or monitor
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A USB keyboard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A USB mouse
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Raspberry Pi 2 has four USB ports, with enough power to support low-power
    devices, such as a USB keyboard or a USB mouse. With its quad-core processor,
    it is powerful enough to browse the Web, send e-mails, and edit documents or images.
    Because it runs the Linux operating system, the Raspberry Pi can also run hundreds
    of educational, scientific, and business programs. In short, the Raspberry Pi
    can run many useful open source desktop applications.
  prefs: []
  type: TYPE_NORMAL
- en: Network hubs
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For network hubs, we will require these:'
  prefs: []
  type: TYPE_NORMAL
- en: A powered USB hub
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A USB LAN adapter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A USB WLAN adapter (a Wi-Fi dongle)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A USB hard drive
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A USB printer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When using the Raspberry Pi as a firewall or wireless access point, an additional
    LAN or WLAN network adapter is required. If the network adapter is powered from
    the USB connection, an additional powered USB connector will be required for the
    adapter to operate reliably.
  prefs: []
  type: TYPE_NORMAL
- en: Game consoles
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A powered USB hub
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: USB game controllers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Raspberry Pi is an excellent gaming platform if you wish to create games,
    or play single-player console games or multi-player network games. Many of the
    older text-based games can be played on the Raspberry Pi with just a keyboard
    or via a remote login. However, USB game controllers can also be connected to
    the Raspberry Pi to further enrich the gameplay of multimedia action games.
  prefs: []
  type: TYPE_NORMAL
- en: The initial setup
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Raspberry Pi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An SD card
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A 5V Micro USB power supply
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A network connection
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An HDMI TV or monitor
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A USB keyboard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A USB mouse
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A power supply, preformatted SD card, monitor, keyboard, and mouse are the bare
    minimum components that are needed for an initial setup. When connected with an
    HDMI to a television, the television will output audio as well as video.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps to boot the Raspberry Pi:'
  prefs: []
  type: TYPE_NORMAL
- en: Download the latest disk image.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Write the disk image to an SD card.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Insert the formatted SD card into the Raspberry Pi.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Attach a display to the HDMI connector.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Attach a USB board and a USB mouse to the USB ports.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Attach a 5V micro USB power supply to the Raspberry Pi, and it boots.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, shut down the Raspberry Pi.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before you can boot the Raspberry Pi, you'll need an SD card with a bootable
    disk image on it. The official Raspbian Linux image for the Raspberry Pi can be
    downloaded from [http://www.raspberrypi.org/downloads](http://www.raspberrypi.org/downloads).
  prefs: []
  type: TYPE_NORMAL
- en: Once the disk image has been downloaded, it needs to be written to an SD card
    (refer to the *Setting up new SD cards* recipe).
  prefs: []
  type: TYPE_NORMAL
- en: After the SD card has been prepared and inserted into the Raspberry Pi, the
    display, keyboard, and mouse can be connected to the Raspberry Pi. Then it is
    ready to be booted (refer to the Booting Raspbian Linux recipe).
  prefs: []
  type: TYPE_NORMAL
- en: Connect the power supply in the end! There is no on-off switch for the Raspberry
    Pi. When the power supply is connected, the Raspberry Pi immediately boots. Therefore,
    it is important to have all the cables connected and the SD card inserted before
    connecting the power supply.
  prefs: []
  type: TYPE_NORMAL
- en: When it is time to turn off the Raspberry Pi, the operating system must first
    be shut down, which is the opposite of booting (refer to the *Shutting down the
    Raspberry Pi* recipe).
  prefs: []
  type: TYPE_NORMAL
- en: There's more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Raspberry Pi 2 is a low-cost single-board computer (it costs only $35).
    It is sold bare bones and requires a power supply, a preformatted SD card to hold
    its operating system, a keyboard, and a display before it can do anything useful.
    However, it does have a number of standard I/O interfaces and on-board components
    that will enable it to connect to a large variety of devices.
  prefs: []
  type: TYPE_NORMAL
- en: Interfaces
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The standard connectors and interfaces for the Raspberry Pi are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Power** (5V at 800 mA (4.0 W)): The Raspberry Pi has a Micro USB power connector
    that should be connected directly to a power supply that is neither the USB port
    on a computer, nor a USB hub.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SD card**: The Raspberry Pi is designed to be booted from a preformatted
    SD card (4 GB or greater is recommended; Class 10 SD cards deliver the best performance).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**GPIO**: This is used in analog and digital I/O connection for expansion and
    experimentation.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Audio output** (3.5 mm jack—stereo): The Raspberry Pi does not have an audio
    input connector. However, a USB microphone or sound card can be added. Audio output
    includes the I2S protocol to connect to digital audio devices.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**LEDs**: These are disk, power, and network traffic indicators. When these
    LEDs are flashing, the Raspberry Pi is actively processing. After shutting down,
    wait until the LEDs stop flashing before unplugging the Raspberry Pi.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**USB 2.0** (four ports): There is limited power available on these ports.
    The devices connected to the Raspberry Pi via USB should either have their own
    power supply, or should be connected via a powered USB hub.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Network** (10/100 wired Ethernet RJ45): Be aware that the onboard networking
    competes for bandwidth with attached USB devices.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**HDMI** (rev 1.3 and 1.4): This may be used for both video and audio output.
    Resolutions from 640x350 to 1920x1200, including the PAL and NTSC standards, are
    supported.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: On-board components
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The central on-board components for the Raspberry Pi are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**SoC**: This stands for System on Chip. The one we require is Broadcom BCM2836
    media processor. Here are its features:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CPU**: quad-core ARM Cortex-A7 at 900MHz'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**GPU**: 24 GFLOPS of compute power'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Memory**: 1GB SDRAM'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**LAN9512**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 10/100 MB Ethernet (Auto-MDIX)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 4x USB 2.0
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Recommended accessories
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In addition to a power supply, the following accessories are recommended:'
  prefs: []
  type: TYPE_NORMAL
- en: '**A Case**: This is a protective enclosure for the Raspberry Pi.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**A powered USB hub**: This has its own power supply that is separate from
    that of the Raspberry Pi. This has enough power to support attached devices.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Power supply problems
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It is difficult to say how much power is actually needed by the Raspberry Pi
    because the power needed varies depending on how busy the Raspberry Pi is and
    which peripherals are connected. However, problems related to an inadequate supply
    of power have been reported. These problems are reduced or eliminated when the
    power supply for the Raspberry Pi produces at least 800mA at 5V and the USB devices
    are connected indirectly through a powered USB Hub.
  prefs: []
  type: TYPE_NORMAL
- en: Symptoms
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Here are some of the symptoms:'
  prefs: []
  type: TYPE_NORMAL
- en: A rainbow square glows in the upper-right corner of the display
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The network connection is unreliable
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The keyboard does not work after the Desktop GUI is started
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Intermittent SD card errors occur
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Causes
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Here are the causes:'
  prefs: []
  type: TYPE_NORMAL
- en: The power supply is rated less than 800mA
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A complex keyboard or a keyboard with a built-in USB hub, such as Apple Macintosh
    keyboards
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A USB hard disk or an extra large thumb drive is attached directly to the Raspberry
    Pi instead of indirectly through a powered USB hub
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Solutions
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Here are the solutions:'
  prefs: []
  type: TYPE_NORMAL
- en: Use a regulated power supply of at least 700mA at 5V
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Only connect simple USB devices directly to the Raspberry Pi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Connect USB devices to a powered USB hub and only connect the hub directly to
    the Raspberry Pi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Wikipedia—the Raspberry Pi** ([http://en.wikipedia.org/wiki/Raspberry_Pi](http://en.wikipedia.org/wiki/Raspberry_Pi)):
    This Wikipedia article about the Raspberry Pi includes a comparison of all the
    Raspberry Pi models, detailed information about each Raspberry Pi component, and
    an extended history of the Raspberry Pi.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The** **MagPi** ([http://www.raspberrypi.org/magpi](http://www.raspberrypi.org/magpi)):
    The MagPi is the official Raspberry Pi magazine. Monthly issues are available
    online.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The** **Raspberry Pi website** ([http://www.raspberrypi.org](http://www.raspberrypi.org)):
    The official Raspberry Pi website contains history, news, and documentation for
    the Raspberry Pi as well as a quick start guide, a forum, a wiki, and a download
    area.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**R-Pi Hub— eLinux.org** ([http://elinux.org/R-Pi_Hub](http://elinux.org/R-Pi_Hub)):
    The R-Pi Hub is an Embedded Linux community''s wiki page for Raspberry Pi users.
    This wiki page has a buying guide, a beginner''s guide, a list of verified peripherals,
    and a list of Raspberry Pi distributions that is larger than what''s found on
    the official website. It has a wealth of well-organized, up-to-date information.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The hardware history of the** **Raspberry Pi** ([http://elinux.org/RPi_HardwareHistory](http://elinux.org/RPi_HardwareHistory)):
    The Embedded Linux community has chronicled the history of the Raspberry Pi, including
    detailed specs and images for each version.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Downloading new SD cards
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The following recipes explain how to create bootable SD cards from downloaded
    disk images using `Win32DiskImager.exe`, `dd`, and `diskutil`.
  prefs: []
  type: TYPE_NORMAL
- en: The Raspberry Pi does not come with an operating system. Before the Raspberry
    Pi can boot, it needs an SD card with the operating system installed. Preinstalled
    SD cards are available for purchase. However, downloading and installing an operating
    system image is not difficult.
  prefs: []
  type: TYPE_NORMAL
- en: Once you've completed this recipe, you will know how to download a Raspberry
    Pi operating system. The following recipes will show you how to write it to an
    SD card.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps to write an image to the SD card:'
  prefs: []
  type: TYPE_NORMAL
- en: Download a Raspberry Pi image.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Write the image to an SD card.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The easiest way to get started with the Raspberry Pi is to download the **NOOBS**
    (**New Out Of Box Software**) distribution from the Raspberry Pi Foundation website,
    which can be viewed by visiting [http://www.raspberrypi.org/downloads](http://www.raspberrypi.org/downloads).
    The files from this distribution can be copied directly to a formatted SD card.
    No additional disk utilities are required to create a bootable image (refer to
    the *Booting with NOOBS* recipe).
  prefs: []
  type: TYPE_NORMAL
- en: Included with NOOBS is the Raspberry Pi Foundation's recommended operating system
    distribution, Raspbian Linux. On the downloads page, you will also find a link
    to the Raspbian Linux disk image. There are links to a number of other third-party
    operating systems too. For more images for the Raspberry Pi, visit the Embedded
    Linux community's wiki page ([http://elinux.org/RPi_Distributions](http://elinux.org/RPi_Distributions)).
  prefs: []
  type: TYPE_NORMAL
- en: Unlike NOOBS, once one of these individual operating system images is downloaded,
    you'll need to write it to an SD card using a special disk utility.
  prefs: []
  type: TYPE_NORMAL
- en: If you are using the Mac OS operating system, use `diskutil` and `dd` to write
    the operating system image to an SD card (refer to the Mac OS Disk Utilities recipe).
    If you are writing the SD card from a Windows computer, use `Win32DiskImager.exe`
    (refer to the *Image Writer for Windows* recipe). If you are using the Linux operating
    system to write the image to the SD card, use the `dd` command-line utility (refer
    to the *Convert and Copy for Linux* recipe).
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The Raspberry Pi website—downloads ([http://www.raspberrypi.org/downloads](http://www.raspberrypi.org/downloads)):
    The Raspberry Pi website''s download page is where you can find links to the recommended
    versions of Raspberry Pi to optimize operating system distributions. Currently,
    the Raspberry Pi Foundation has links to the following operating system distributions:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NOOBS and NOOBS Lite
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Raspbian (Jessie and Wheezy)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Ubuntu Mate (a Linux desktop)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Snappy Ubuntu Core (a developer distribution)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Windows 10 IoT Core (a developer distribution)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Open Source Media Center (OSMC)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Open Embedded Linux Entertainment Center (OpenELEC)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: PINET (a classroom distribution)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: RISC OS (a non-Linux distribution)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The Raspbian Linux distribution is recommended by the Raspberry Pi Foundation.
    It also is the operating system distribution that is used throughout this book.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**The Embedded Linux for the Raspberry Pi distributions** ([http://elinux.org/RPi_Distributions](http://elinux.org/RPi_Distributions)):
    The Embedded Linux community maintains an excellent wiki page on Raspberry Pi
    operating system distributions. The wiki page has a comparison table and links
    to downloadable image files. Many of these distributions are specialized for a
    specific use, such as penetration testing; use as a home theater, firewall, or
    an inexpensive desktop PC; or the development of software.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Windows 10IoT—Downloads** ([https://ms-iot.github.io/content/Downloads.htm](https://ms-iot.github.io/content/Downloads.htm)):
    Windows for IoT and the other tools that you will need to develop for Windows
    IoT devices such as the Raspberry Pi are available at this website.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As of this revision, the Window 10 IoT distribution does not have a user interface.
    It is labeled as **Windows 10 IoT Core Insider Preview**. The tools needed to
    interact with the IoT Core are available from the downloads page of Windows 10
    IoT.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Booting with NOOBS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This recipe explains how to use the Raspberry Pi Foundation's NOOBS to install
    a Raspberry Pi operating system.
  prefs: []
  type: TYPE_NORMAL
- en: NOOBS is not an operating system distribution. It is a tool that is used to
    install operating systems. By using NOOBS, you can select an operating system
    for your Raspberry Pi.
  prefs: []
  type: TYPE_NORMAL
- en: This is the easiest way to get started with the Raspberry Pi. No special disk
    utilities are required. Therefore, this recipe works from any computer that has
    an SD card writer.
  prefs: []
  type: TYPE_NORMAL
- en: Once you've completed this recipe, you will be able to use NOOBS to select an
    operating system for your Raspberry Pi.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Ingredients:'
  prefs: []
  type: TYPE_NORMAL
- en: A computer with an SD card writer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An initial setup for the Raspberry Pi (refer to the *Preparing for the initial
    boot* recipe)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A formatted SD card—4 GB or greater (class 10 has the best speed)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The NOOBS ZIP file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The installation of NOOBS on an SD card is not operating system-specific.
  prefs: []
  type: TYPE_NORMAL
- en: Download the NOOBS ZIP file (`NOOBS_v1_4_2.zip`) from the Raspberry Pi website
    ([https://www.raspberrypi.org/downloads/noobs/](https://www.raspberrypi.org/downloads/noobs/)).
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following steps are required to copy NOOBS to an SD card:'
  prefs: []
  type: TYPE_NORMAL
- en: Insert the formatted SD card into the computer.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Decompress the NOOBS ZIP file onto the SD card.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Eject the SD card.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Insert the SD card into the Raspberry Pi and power on the Raspberry Pi.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select and install an operating system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The NOOBS installation process is not operating system-specific. The files in
    the NOOBS ZIP file simply need to be expanded onto a newly formatted SD card.
  prefs: []
  type: TYPE_NORMAL
- en: Once the files have been expanded onto the SD card, the SD card can be safely
    ejected from the computer and inserted into the Raspberry Pi.
  prefs: []
  type: TYPE_NORMAL
- en: After the SD card is firmly inserted into the Raspberry Pi and all of its other
    components are connected (the HDMI monitor, network connection, USB keyboard,
    and USB mouse), you can connect the power supply and boot the Raspberry Pi. Ensure
    that the power supply is connected in the end. Otherwise, your Raspberry Pi will
    not boot properly.
  prefs: []
  type: TYPE_NORMAL
- en: When the Raspberry Pi is finished booting NOOBS, you will be presented with
    a choice of operating systems. Select **Raspbian [RECOMMENDED]** from the top
    of the list by pressing the Spacebar or clicking on it with the mouse. Click on
    **Install (i)** or press the *I* key to install the Raspbian Linux operating system.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Raspbian Linux is the operating system that is used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: NOOBS will then extract the Raspbian Linux operating system and reboot the Raspberry
    Pi. As NOOBS is extracting the operating system, you will be presented with a
    few tips on how to use the Raspberry Pi, including the default username and password
    (the default username is `pi` and the default password is `raspberry`).
  prefs: []
  type: TYPE_NORMAL
- en: After the Raspberry Pi is rebooted, you will be ready to use the `raspi-config`
    command to complete the installation (refer to the *Booting Raspbian Linux for
    the first time* recipe).
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: NOOBS is the easiest way to get started with the Raspberry Pi. It is an installation
    tool and not a complete operating system.
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, you used NOOBS to install the Raspbian Linux operating system.
    NOOBS can also be used to install a number of other operating systems, including
    Arch, OpenELEC, Pidora, and RaspBMC.
  prefs: []
  type: TYPE_NORMAL
- en: By using NOOBS, Raspbian Linux can be configured so that it boots directly into
    an easy-to-use programming environment called **Scratch**. NOOBS also has a built-in
    configuration editor that can be used by experts to apply additional tweaks to
    the boot configuration.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: NOOBS (the New Out of Box Software) at [https://github.com/raspberrypi/noobs](https://github.com/raspberrypi/noobs)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NOOBS is designed to make it easier to select and install operating systems
    for the Raspberry Pi without having to worry about manually imaging an SD card.
  prefs: []
  type: TYPE_NORMAL
- en: Mac OS X disk utilities – diskutil and dd
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This recipe explains how to use the `diskutil` and `dd` disk utilities that
    are found on a Mac OS X computer to install a Raspberry Pi operating system image
    on an SD card.
  prefs: []
  type: TYPE_NORMAL
- en: You should have already downloaded a Raspberry Pi disk image and you should
    be ready to write the disk image onto an SD card.
  prefs: []
  type: TYPE_NORMAL
- en: Once you've completed this recipe, you will be able to write an SD card from
    a Mac OS X computer.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Ingredients:'
  prefs: []
  type: TYPE_NORMAL
- en: A computer running Mac OS X with an SD card writer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An SD card of 4 GB or greater (class 10 has the best performance)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A Raspberry Pi operating system image file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Both the `diskutil` and `dd` disk utility commands are installed by default
    with the Mac OS X operating system. The `diskutil` command is used to administer
    disk devices, and the `dd` command is used to copy data to and from a disk device.
  prefs: []
  type: TYPE_NORMAL
- en: The `dd` command requires administrative privileges. Use the `sudo` command
    to temporarily give the user administrative privileges.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following steps need to be performed to write a disk image to an SD card
    on a Linux computer:'
  prefs: []
  type: TYPE_NORMAL
- en: Open a Terminal.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Determine the name of the SD drive by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Unmount the mounted SD card by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Use `dd` to copy the disk image to the SD card (this requires `sudo`), as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Choose the disk carefully! Ensure that you do not erase the wrong disk!
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of a Terminal session that shows the `diskutil` and `dd`
    commands being used to discover the name of the SD card''s disk drive, unmount
    the SD card, and write a Raspberry Pi disk image to the SD card:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `diskutil` command is used to find the name of the SD card and unmount the
    disk.
  prefs: []
  type: TYPE_NORMAL
- en: The command is first used with the `list` subcommand to show information about
    each mounted disk drive.
  prefs: []
  type: TYPE_NORMAL
- en: After the SD card is inserted, the SD card appears in this list as `/dev/disk2`.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we know that the SD card disk device is `/dev/disk2`, the SD card is
    unmounted by using the `unmountdisk` subcommand.
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, the `dd` command is used to write the Raspberry Pi disk image to the
    SD card:'
  prefs: []
  type: TYPE_NORMAL
- en: Each written disk block is 1 MB (`bs=1M`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The input file (`if`) is `raspbian.img`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The output file (`of`) is the SD card disk device (`/dev/rdisk2`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note that the output file is named `/dev/rdisk2` and not `/dev/disk2`. The extra
    `r` asks Mac OS X to use the raw mode when writing to the disk. The raw mode is
    much faster, if you want to write, than the default mode.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `diskutil` command utility is a feature-rich tool that is used to modify,
    verify, and repair disks on Mac OS X. More information about the `diskutil` command
    can be found by using the built-in man pages (`man diskutil`).
  prefs: []
  type: TYPE_NORMAL
- en: Before the image is copied to the SD card in the preceding example, the disk
    partition is unmounted (`diskutil unmountdisk`). It is important to unmount the
    disk before formatting or overwriting it.
  prefs: []
  type: TYPE_NORMAL
- en: When the image is copied with the `dd` command,
  prefs: []
  type: TYPE_NORMAL
- en: '`if=` specifies the input file (`raspbian.img`)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`of=` specifies the output file (`/dev/rdisk2`)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`bs=` specifies the size of the blocks written to the disk'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `dd` utility can also be used as a backup tool. Just exchange the input
    file (`if=`) and output file (`of=`).
  prefs: []
  type: TYPE_NORMAL
- en: 'Use the following command to create a backup using the disk from the preceding
    example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Pressing *Ctrl* + *T* while the `dd` command is running will cause the command
    to report its progress.
  prefs: []
  type: TYPE_NORMAL
- en: More information about the `dd` command can be found in its man pages (`man
    dd`).
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Disk Utility** ([http://en.wikipedia.org/wiki/Disk_Utility](http://en.wikipedia.org/wiki/Disk_Utility)):
    The `diskutil` command can be used to unmount disks from a system. This Wikipedia
    article explains in detail all the features of the `diskutil` command.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**diskutil – modify, verify, and repair local disks** ([https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man8/diskutil.8.html](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man8/diskutil.8.html)):
    The `diskutil` command is part of the Mac OS X operating system. The Apple man
    page for `diskutil` describes the command and its options.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**dd – convert and copy a file** ([https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/dd.1.html](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/dd.1.html)):
    The `dd` command can be used to copy images to and from disks. The Apple man page
    for `dd` gives details about the command and its options.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Image Writer for Windows – Win32DiskImager.exe
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This recipe shows how to install a Raspberry Pi operating system image on an
    SD card using the open source Image Writer for Windows, `Win32DiskImager.exe`.
  prefs: []
  type: TYPE_NORMAL
- en: You should have already downloaded a Raspberry Pi disk image, and you should
    be ready to write the disk image onto an SD card using a Windows PC.
  prefs: []
  type: TYPE_NORMAL
- en: To complete this recipe, you will also need an Internet connection to download
    Image Writer for Windows.
  prefs: []
  type: TYPE_NORMAL
- en: Once you've completed this recipe, you will be able to write Raspberry Pi images
    to SD cards from a Windows computer.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here are the ingredients:'
  prefs: []
  type: TYPE_NORMAL
- en: A computer running Windows with an SD card writer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An SD card of 4 GB or greater (class 10 has the best performance)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A Raspberry Pi operating system image file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A precompiled `Win32DiskImager` binary
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The precompiled binary of `Win32DiskImager` is distributed as a ZIP file and
    can be downloaded from [https://launchpad.net/win32-image-writer](https://launchpad.net/win32-image-writer).
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following steps are required to write a disk image to an SD card on a Windows
    computer:'
  prefs: []
  type: TYPE_NORMAL
- en: Download the `Win32DiskImager` ZIP file from [https://launchpad.net/win32-image-writer](https://launchpad.net/win32-image-writer).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Expand the ZIP file to a folder on disk, such as `C:\Win32DiskImager`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run `Win32DiskImager.exe` from the install folder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the downloaded Raspberry Pi disk image as the source image file and the
    location of your SD card writer as the target device.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Write** button to copy the image to the SD card.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Writing an image to disk takes about 5 minutes for a 2 GB image file. Once the
    image is written to the SD card, the SD card can be ejected and used to boot the
    Raspberry Pi.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: First, you will need to download and install Image Writer for Windows (`Win32DiskImager`).
    The `Win32DiskImager` is a single standalone executable and can be installed to
    a folder that is located anywhere on your PC.
  prefs: []
  type: TYPE_NORMAL
- en: Double-click on the expanded `Win32DiskImager` executable to start the application.
  prefs: []
  type: TYPE_NORMAL
- en: Once the application has started, select the downloaded Raspberry Pi disk image
    as the source Image File and then select the location of the SD card writer as
    the target device. When you click on the **Write** button, the `Win32DiskImager`
    writes the Raspberry Pi disk image to the SD card.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `Win32DiskImager` is also an excellent backup tool! After booting and configuring
    the Raspberry Pi, a backup can be made to preserve the image in case the SD card
    is damaged or lost.
  prefs: []
  type: TYPE_NORMAL
- en: 'To create a backup, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Run `Win32DiskImager.exe`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select SD card as the source and a new image file as the target.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Read** button to read the SD card in a new image on the disk.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The steps needed to back up a Raspberry Pi disk image from an SD card are similar
    to those required to write the image. The only difference is that during a backup,
    the SD card is the source of the copy, and a new image on the disk is the target.
  prefs: []
  type: TYPE_NORMAL
- en: A new backup should be created after each update to the Raspberry Pi's operating
    system, application software, or configuration.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Image Writer for Windows** ([https://launchpad.net/win32-image-writer](https://launchpad.net/win32-image-writer)):
    This utility was originally written to read and write disk images for a specific
    Linux distribution. However, it has now been generalized and is now a popular
    tool for many development projects, such as the Raspberry Pi. The Image Writer
    for Windows homepage has details about this disk image utility.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Convert and copy for Linux – dd
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This recipe explains how to install an operating system image on an SD card
    using the `dd` standard Linux utility.
  prefs: []
  type: TYPE_NORMAL
- en: You should have already downloaded a Raspberry Pi disk image, and you should
    now be ready to write the disk image onto an SD card using a Linux PC.
  prefs: []
  type: TYPE_NORMAL
- en: Most versions of Linux and Mac OS have the `dd` command installed. This powerful
    version of the copy command (`cp`) can be used to write blocks of data to devices
    such as an SD card.
  prefs: []
  type: TYPE_NORMAL
- en: Once you've completed this recipe, you will be able to write an SD card from
    a Linux computer.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here are the ingredients:'
  prefs: []
  type: TYPE_NORMAL
- en: A computer running Linux with an SD card writer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An SD card with a capacity of 4 GB or greater (class 10 has the best performance)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A Raspberry Pi operating system image file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `dd` utility is normally installed by default with most Linux distributions.
    If it is not installed, use the appropriate Linux installation utility to install
    it.
  prefs: []
  type: TYPE_NORMAL
- en: All the commands in this example are executed as a privileged user (root).
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps to write a disk image to an SD card on a Linux
    computer:'
  prefs: []
  type: TYPE_NORMAL
- en: Determine the name of the SD drive by using the `df` command.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Unmount the mounted disk partitions with `umount`, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Use `dd` to copy the disk image to the SD card, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Here is an example of a Terminal session that shows the `df` command being
    used to discover the name of the SD card drive, the `umount` command being used
    to unmount the SD card, and the `dd` command being used to write a Raspberry Pi
    disk image to an SD card:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The name of the SD drive is discovered using the `df` command.
  prefs: []
  type: TYPE_NORMAL
- en: The `df` command shows how much disk space is free on each mounted disk drive.
    After the SD card is inserted, the primary partition (`p1`) of the SD card appears
    in this list as `/dev/mmcblk0p1`. Therefore, the SD card disk device is `/dev/mmcblk0`
    (note that `p1` is missing).
  prefs: []
  type: TYPE_NORMAL
- en: Now that we know that the SD card disk device is `/dev/mmcblk0`, the SD card
    is unmounted using the `umount` command (note that there is no `n` in `umount`).
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, the `dd` command is used to write the Raspberry Pi disk image to the
    SD card:'
  prefs: []
  type: TYPE_NORMAL
- en: Each written disk block is 1 MB (`bs=1M`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The input file (`if`) is `raspbian.img`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The output file (`of`) is the SD card disk device (`/dev/mmcblk0`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pressing *Ctrl* + *T* while the `dd` command is running will cause the command
    to report its progress.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `dd` utility is one of the core Gnu utilities found in most Linux distributions.
    It is a low-level utility that simply copies blocks of data from one file to another.
  prefs: []
  type: TYPE_NORMAL
- en: The preceding example shows how the `df` command can be used to determine the
    name of the SD card disk drive. The first partition of the SD disk, `/dev/mmcblk0p1`,
    is mounted at /`media/A1B1-918F`. Disk images cover a whole disk and not just
    one partition. Therefore, the correct name of the disk drive in the preceding
    example is `/dev/mmcblk0` (note the missing `p1`).
  prefs: []
  type: TYPE_NORMAL
- en: Before the image is copied to the SD card in the preceding example, the disk
    partition is unmounted. It is good practice to unmount all disk partitions before
    formatting or overwriting a disk.
  prefs: []
  type: TYPE_NORMAL
- en: When the image is copied with the `dd` command,
  prefs: []
  type: TYPE_NORMAL
- en: '`if=` specifies the input file (`raspbian.img`)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`of=` specifies the output file `(/dev/mmcblk0`)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`bs=` specifies the size of the blocks written to the disk'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `dd` utility can also be used as a backup tool. Just exchange the input
    file (`if=`) and output file (`of=`).
  prefs: []
  type: TYPE_NORMAL
- en: 'Use the following command to create a backup using the disk from the preceding
    example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**dd (Unix)** ([http://en.wikipedia.org/wiki/Dd_(Unix)](http://en.wikipedia.org/wiki/Dd_(Unix))):
    This Wikipedia article explains the original application of the `dd` command.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**dd – convert and copy a file** ([http://manpages.debian.net/cgi-bin/man.cgi?query=dd](http://manpages.debian.net/cgi-bin/man.cgi?query=dd)):
    The Debian man page for `dd` describes the command and its options.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**dd (gnu - coreutils)** ([http://www.gnu.org/software/coreutils/manual/html_node/dd-invocation.html](http://www.gnu.org/software/coreutils/manual/html_node/dd-invocation.html)):
    The GNU Operating System manual reference for `dd` has a detailed description.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Booting Raspbian Linux for the first time
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This recipe explains how to boot the official Raspbian Jessie Linux distribution
    and use the `raspi-config` command to complete the installation of the Raspberry
    Pi remotely.
  prefs: []
  type: TYPE_NORMAL
- en: When the Raspberry Pi boots for the first time, it automatically boots into
    the **graphical user interface** (**GUI**) mode—the Raspberry Pi Desktop. The
    Raspberry Pi also starts a secure shell server on the initial boot. Therefore,
    the installation can be completed without a display attached to the Raspberry
    Pi.
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, the `raspi-config` command is run from a remote shell (SSH or
    PuTTY) to complete the installation of the Raspberry Pi. Details of the use of
    `raspi-config` can be found in [Chapter 2](ch02.html "Chapter 2. Administration"),
    *Administration*.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The installation of the Raspberry Pi can also be completed from the GUI using
    the **Raspberry Pi Configuration** tool, which is found in the **Preferences**
    menu.
  prefs: []
  type: TYPE_NORMAL
- en: Once this recipe is complete, you will have booted the Raspberry Pi for the
    first time.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here are the ingredients:'
  prefs: []
  type: TYPE_NORMAL
- en: A basic networking setup for the Raspberry Pi (refer to the *Preparing for the
    initial boot* recipe)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An SD card formatted with a Raspbian Linux image
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A network connection
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For this recipe, the SD card should already be formatted with a Raspbian Jessie
    disk image, or the Raspbian operating system should have been selected using NOOBS
    and the Raspberry Pi should be connected to the local network, where another computer
    is being used to connect to the Raspberry Pi remotely.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps to boot the Raspberry Pi for the first time:'
  prefs: []
  type: TYPE_NORMAL
- en: Insert the SD card into the Raspberry Pi and plug in the power supply. The Raspberry
    Pi should start booting.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After a short initial boot, the Raspberry Pi will announce itself on the local
    network using the `raspberrypi.local` hostname.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Log in to the Raspberry Pi using a secure shell. The default password for the
    user with a username of `pi` is raspberry ([Chapter 2](ch02.html "Chapter 2. Administration"),
    *Administration*, has two remote access recipes).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Use the `raspi-config` command to update the operating system. This is a privileged
    command, and it requires the `sudo` prefix to run. More information on *Executing
    commands with privileges* can be found in [Chapter 2](ch02.html "Chapter 2. Administration"),
    *Administration*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Note that the `raspi-config` main menu has several options to update the Raspberry
    Pi operating system:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The following are the primary configuration options:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Expand Filesystem**: This resizes the root partition to fill the SD card
    (not necessary if you used NOOBS)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Change User Password**: This changes the default password (should be the
    first thing that you do).'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Boot Options**: Choose to boot the Raspberry Pi in the text mode or the desktop
    GUI (this book exclusively uses the text mode).'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Internationalisation Options**: This changes the display language and the
    default keyboard layout (the default language is British English and UK is the
    default keyboard layout)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Enable Camera**: This enables the use of the Raspberry Pi camera'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Add to Rastrack**: This includes the Raspberry Pi in the Raspberry Pi Foundation''s
    usage statistics'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Overclock**: This puts the Raspberry Pi into the Turbo mode (the newest model,
    Raspberry Pi 2, only has one speed to choose from)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Advanced Options**: This is for additional configuration options for advanced
    users (such as overscan, SSH, memory split, and audio)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**About raspi-config**: This provides information about `raspi-config`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Select **1 Expand Filesystem** to expand the filesystem on the SD card to use
    all the available space on the SD Card. [Chapter 2](ch02.html "Chapter 2. Administration"),
    *Administration*, has a recipe for *Expanding the size of the filesystem*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select **2 Change User Password** to change the default password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select **Finish** to complete the configuration and reboot the system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Upon booting, the Raspberry Pi registers its hostname (`raspberrypi.local`)
    with the local **Multicast Domain Name Server** (**mDNS**). Most home gateways
    and local area networks include an mDNS that provides domain name registration
    services for mobile devices and computers that dynamically connect to the network.
  prefs: []
  type: TYPE_NORMAL
- en: Once the Raspberry Pi has booted and registered its hostname, a secure shell
    client is used to connect to the Raspberry Pi using the `raspberrypi.local` hostname,
    the username as `pi` and the password as `raspberry`. [Chapter 2](ch02.html "Chapter 2. Administration"),
    *Administration*, has two remote access recipes, one for Windows (PuTTY), and
    one for Mac OS X and Linux (SSH).
  prefs: []
  type: TYPE_NORMAL
- en: The Raspbian Linux operating system distribution includes the `raspi-config`
    utility. This configuration utility should be run once upon the first boot of
    the operating system to expand the filesystem and change the default password.
  prefs: []
  type: TYPE_NORMAL
- en: The `raspi-config` command is privileged and requires the `sudo` prefix to be
    run. More information on *Executing commands with privileges* can be found in
    [Chapter 2](ch02.html "Chapter 2. Administration"), *Administration*.
  prefs: []
  type: TYPE_NORMAL
- en: When the `raspi-config` main menu appears, you can use the keyboard arrow keys,
    the *Tab* key, the Spacebar, or the *Return* key to navigate the menus.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. Administration"), *Administration*, has a
    number of recipes that use the `raspi-config` command to configure the Raspberry
    Pi. For now, just use the **Expand Filesystem** and **Change User Password** menu
    items and the *Expand the size of the filesystem* and *Changing the login password*
    recipes.'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you have used NOOBS, it is not necessary to expand the filesystem. NOOBS
    has already expanded the filesystem.
  prefs: []
  type: TYPE_NORMAL
- en: Selecting **Finish** from the main menu will cause the Raspberry Pi to reboot.
  prefs: []
  type: TYPE_NORMAL
- en: Once rebooted, the Raspberry Pi is ready for use!
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Multicast DNS** ([https://en.wikipedia.org/wiki/Multicast_DNS](https://en.wikipedia.org/wiki/Multicast_DNS)):
    This Wikipedia article describes how mDNS is used to resolve host names to IP
    address with small local area networks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shutting down the Raspberry Pi
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This recipe shows how the Raspberry Pi can be powered off safely.
  prefs: []
  type: TYPE_NORMAL
- en: Before powering off the Raspberry Pi, it is important to first shut down the
    operating system so that all of the applications and services on the Raspberry
    Pi have a chance to complete any disk writing that may be in progress and to prepare
    for the next boot.
  prefs: []
  type: TYPE_NORMAL
- en: External devices, such as hard disks, also need time to shut down and flush
    their buffers. The `shutdown` command also gives the devices attached to the Raspberry
    Pi an opportunity to clean up and prepare for the next boot.
  prefs: []
  type: TYPE_NORMAL
- en: After completing this recipe, you will be able to power off the Raspberry Pi
    safely.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here are my ingredients:'
  prefs: []
  type: TYPE_NORMAL
- en: An Initial Setup for the Raspberry Pi (refer to the *Preparing for initiating
    the boot* recipe)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An SD card formatted with the official Raspbian Linux image
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Raspberry Pi should already be powered on and booted before implementing
    this recipe.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps to shut down the Raspberry Pi:'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have not already done so, log in to the Raspberry Pi as the user `pi`
    (the default password is `raspberry`):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Shut down and halt (`-h`) the operating system. This command is privileged.
    Use the `sudo` prefix to run the shutdown command as a privileged user, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: After the `shutdown` command is executed, the Raspberry Pi will begin its shutdown
    process, displaying messages from applications, devices, and services, as they
    clean up and prepare for the next boot.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the operating system has shut down, the Raspberry Pi will halt, leaving
    only a single red LED lit on the Raspberry Pi (as long as the LEDs are flashing,
    the Raspberry Pi is still busy shutting down).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The power supply can now be unplugged from the Raspberry Pi.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have not already logged into the Raspberry Pi, you will need to log in
    to the Raspberry Pi before shutting it down.
  prefs: []
  type: TYPE_NORMAL
- en: The default user is `pi`. You should have already changed the default user's
    password during the first boot (refer to the *Booting Raspbian Linux for the first
    time* recipe). In case you have not changed it, the default password is `raspberry`.
  prefs: []
  type: TYPE_NORMAL
- en: After logging in, the `shutdown` command is executed with the `–h` option, which
    tells the Raspberry Pi to halt after the operating system is shut down.
  prefs: []
  type: TYPE_NORMAL
- en: The `shutdown` command is privileged. Therefore, the `sudo` command is used
    as a prefix to temporarily grant privileges. More information on *Executing commands
    with privileges* can be found in [Chapter 2](ch02.html "Chapter 2. Administration"),
    *Administration*.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `shutdown` command can also be used to reboot the system. Just use the `–r`
    reboot option instead of the `–h` halt option.
  prefs: []
  type: TYPE_NORMAL
- en: 'Rebooting the system when you''re logged in as the user `pi` can be done with
    the help of the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Synonyms exist for the `shutdown` command, which include `poweroff` and `reboot`.
  prefs: []
  type: TYPE_NORMAL
- en: 'To power off the system instead of using `shutdown –h`, you can also use the
    following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Instead of `shutdown –r`, you can also use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: More information about these commands can be found in their man pages.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**halt, reboot, poweroff – stop the system** ([http://manpages.debian.net/cgi-bin/man.cgi?query=halt](http://manpages.debian.net/cgi-bin/man.cgi?query=halt)):
    There are alternatives to the `shutdown` command. The Debian man page for halt,
    poweroff, and reboot describes these commands in detail.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**shutdown – bring the system down** ([http://manpages.debian.net/cgi-bin/man.cgi?query=shutdown](http://manpages.debian.net/cgi-bin/man.cgi?query=shutdown)):
    The `shutdown` command can be used to halt (`-h`) or reboot (`-r`) the system.
    The Debian man page for `shutdown` describes the command and all of its options
    in detail.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
