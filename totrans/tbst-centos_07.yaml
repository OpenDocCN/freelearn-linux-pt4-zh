- en: Chapter 7. Troubleshooting Security Issues
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will discuss the issues related to the security of CentOS
    7\. However, instead of taking a traditional tour relating to hardening a server,
    we will take a more pragmatic approach by reviewing SSH, `SELinux`, HIDS, and
    Firewalld in an alternate fashion in order to encourage you to discover more about
    the system in general.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will:'
  prefs: []
  type: TYPE_NORMAL
- en: Discover how to use `aureport` to generate audit reports and audit `SELinux`
    with `setroubleshoot`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learn how to add and manage `SSH` banners and use `FIGlet` to create custom
    banners
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Discover more about the rudiments of tuning the `SSH` service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learn how to install `Tripwire` and provide your system with an intrusion detection
    system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Discover more about Firewalld, zone management, and how to add/remove interfaces,
    ports, and masquerade your infrastructure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learn how to remove Firewalld and return to iptables
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Auditing SELinux with aureport and setroubleshoot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Disabling `SELinux` is something that happens quite regularly. It is a common
    occurrence when hosted control panels are used, or when one or more specific applications
    seem to be experiencing such difficulties that they will not run with `SELinux`
    enabled. In these instances, the act of disabling `SELinux` is a tried-and-tested
    technique that can save the system''s administrator an immense amount of time.
    For many, this is an automatic response, while others will argue that the tools
    associated with `SELinux` are probably more at home on the desktop, workstation,
    on servers with a GUI, or in a controlled network environment. However, the fact
    is simple, the act of disabling `SELinux` will remove a key component of security
    and leave the system exposed. I agree, `SELinux` is a complex system, and for
    those of us who wish to enjoy the protection it offers, our lives can be made
    simpler through the option of running `aureport` like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'This will provide a list of `avc` messages, the output of which may look like
    this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The `aureport` utility is designed to create column-based reports that show
    the events recorded in the audit log files, and by taking this one step further,
    you can also use this same utility to create a list of executable files with the
    following variation:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The output of which, depending on the nature of your system, could look like
    this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Others may want to use this utility in order to generate a full authentication
    report by using the following syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The output of which would look similar to this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'To generate a summary report of failed authentication events, use the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'You can create an opposing summary report of successful authentication events
    with the following syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: So, given the depth of reporting at your disposal, when you are dealing with
    a system that runs `SELinux`, your first point of call as a troubleshooter is
    to consider the benefits of `aureport` when auditing the system. However, as an
    addition, you will also want to consider a tool called `setroubleshoot`.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `setroubleshoot` tool can be installed with the following syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Having done this, you have now equipped the system with a tool that will actively
    return announcements from the log file found at `/var/log/audit/audit.log` and
    translate them into something far more "human-friendly". This tool is called `sealert`
    and its purpose is to issue reports and resolutions regarding any issues related
    to `SELinux`.
  prefs: []
  type: TYPE_NORMAL
- en: 'A process can be started by invoking the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'However, if you''re expecting a large return of data, then the following variation
    may be more applicable to your needs:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: However, before we exit our discussion on auditing `SELinux`, for those of you
    who are running headless and would like to receive e-mail alerts, a final configuration
    change may be necessary.
  prefs: []
  type: TYPE_NORMAL
- en: 'To do this, we will open the following file in our favorite text editor:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Scroll down this file to find the `[email]` section and add your e-mail address
    to the following line by replacing the relevant text:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, create the relevant list of recipients by customizing the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: The `setroubleshoot` command may not be the perfect solution for everyone and
    every environment, but the effect of using this package is to realize that regardless
    of whether you are running a headless server, a server with a GUI, or even a desktop
    workstation, `SELinux Alert` is a solution that will enable you to keep using
    and enjoying the benefits of `SELinux` without sacrificing your security.
  prefs: []
  type: TYPE_NORMAL
- en: Given the weight of this subject, further reading regarding `SELinux` and `setroubleshoot`
    is available at the end of this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: SSH banners
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Using SSH banners is not exactly troubleshooting in its purest form (and yes,
    we are dipping into the subject of hardening). However, as it is often considered
    to be a good idea that all servers carry some form of legal banner, notice, or
    security warning that should be displayed to a user before and after the SSH authentication
    process is started and finished, it is an area we should explore. Troubleshooters
    do not build systems, but they do fix them and, for this reason, it is something
    you will be expected to know. Moreover, as this provides an entry into the world
    of SSH, learning how to develop your very own (and unique) SSH login banners will
    be a nice place to start.
  prefs: []
  type: TYPE_NORMAL
- en: 'To display a banner prior to SSH authentication, you should open the following
    file in your favorite editor:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Now, add the desired message, notice, or security notice as required, but remember,
    try to keep it short and simple.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, you may want to say:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Having done this and saved the file, you should now open the master configuration
    file for SSH in your favorite text editor like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Then scroll down until you find the following line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'Uncomment it and add the correct path to `issue.net` like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'Now save and close the file before restarting the SSH service in the following
    way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'At this point, you should check the status of the SSH service at any time by
    typing this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'You can qualify the banner settings used by SSH with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: However, let's say you wanted to provide a unique message by converting plain
    text to a large ASCII banner.
  prefs: []
  type: TYPE_NORMAL
- en: 'To do this, we will need to install a small utility called `FIGlet`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'To use `FIGlet`, you simply need to use the following syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'However, for the purposes of our SSH banner, we will want to create a message
    that is stored on a local file like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'Having done this, simply return to the following file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'Now find where you previously uncommented this line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'Replace the target path with the path to your new banner file created with
    `FIGlet`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'To finish, save and close the file, and then restart the SSH service like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'You could say that was it, but if you wish to provide an additional post-login
    message, then this can be achieved by editing the following file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: Again, simply add the desired message before saving and closing the file in
    the usual way. After you have completed these steps, the next time a user completes
    SSH authentication they will not only be greeted by a server message, but they
    will also be welcomed by a secondary message, thereby giving you plenty of opportunities
    to provide system users with suitable instruction and reports where required.
  prefs: []
  type: TYPE_NORMAL
- en: Remember, login banners can be useful for two main reasons. They not only provide
    a small message to users before accessing the system, but also serve to warn against
    unauthorized access while delivering important information to system administrators
    without their needing to request it.
  prefs: []
  type: TYPE_NORMAL
- en: Tuning SSH
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: SSH is the definitive way of communicating with your system. It is a vital service
    to the lifeblood of your system and it maintains a single, system-wide configuration
    file that enables the system administrator to modify the operation of the daemon.
  prefs: []
  type: TYPE_NORMAL
- en: 'SSH access is generally given using the following syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'However, if things are particularly slow, the first step in troubleshooting
    your system is to use the alternative debug mode like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: So with this in mind, let's take a closer look at this file to assist you in
    the process of troubleshooting the `sshd` daemon as a whole.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will begin by opening the following file in our favorite text editor:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: Seen as a good practice when dealing with dictionary attacks, scanners, or bots,
    you can change the SSH port by simply replacing the value `#Port 22` with something
    completely different, such as `Port 2222`.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also restrict the root login (this is always recommended) by updating
    the following value to read as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'To disable tunneled clear passwords, you should uncomment the following line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'SSH logs can be difficult at times, so before we end this brief review of SSH,
    if it is felt that the system is going through a stage difficult to diagnose,
    it is often a good idea to simply uncomment and update the logging parameters
    like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'Modify this to read:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: 'Otherwise, if necessary, higher levels of logging can be achieved with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, the final modification may not prevent an attack, but by requiring SSH
    to look up, the remote hostname through forward and reverse DNS will generate
    the appropriate warnings in the system log files. To do this, simply find the
    following line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: 'Update this line to read:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: 'However, if SSH is still acting rather sluggish, then ensuring that SSH does
    not require a reverse DNS lookup can improve the situation immensely. To do this,
    simply change the preceding line to read:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: 'Moreover, it is also possible that a difficulty may arise from the use of `GSSAPI`
    authentication. This is not common as it is a feature of SSH that is called upon
    when a `GSSAPI` server is required to validate the relevant user credentials.
    To avoid this, you should add or edit the following line to read:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: Further to this, you may also want to consider the subject of timeouts. This
    common problem can be managed by configuring the correct `ServerAliveInterval`,
    `ServerAliveCountMax`, and `TCPKeepAlive` values. I have made a simple recommendation
    here, but you should remember to ensure that these values are appropriate to your
    needs.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, the following rules imply that a packet will be issued every 60
    seconds:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: 'Adjusting the following values can serve to provide a more sustainable connection:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, to make the SSH service just a little bit more secure, scroll down
    to the bottom of the main configuration file and add the following line in order
    to maintain a list of usernames that will be allowed to undertake the SSH authentication
    process:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: 'Alternatively, instead of enabling access on a per-user basis, this process
    of managing identities can be simplified on a per-group basis like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: Your job is nearly done, but having said all that, and depending on your reasons
    for troubleshooting the SSH daemon, you must remember to ensure that, when your
    work is finished, the SSH service must be secured against the possibility of an
    attack. So, always keep in mind that a successful troubleshooting session will
    not only fix the problem, it will also serve to ensure the continuation of a safe
    and secure server.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, for those of you who are not using `SELinux`, `fail2ban`, or other
    such security measures, you can always review the login records at any time by
    typing:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: 'The output of which will look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: 'And, should you wish to view a list of failed attempts, you could try the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: 'Accepted login attempts can be viewed with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: Intrusion detection with Tripwire
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Tripwire is a **host-based intrusion detection system** (**HIDS**). It works
    by collecting configuration and filesystem details and uses this information to
    provide a reference point between the previous state of a system and its current
    state, a process that is achieved by monitoring which files or directories were
    added or modified recently, who changed them, what changes were made, and when
    the changes took place.
  prefs: []
  type: TYPE_NORMAL
- en: 'As discussed in a previous chapter, you will need access to the EPEL repository
    in order to get Tripwire. When you are ready, it can be installed like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: 'To begin using Tripwire, you will need to create the appropriate local and
    site keys with the following syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: When prompted, add a passphrase for both the site and local key file. Tripwire
    will advise you to use a combination of uppercase and lowercase letters, digits,
    and punctuation marks and, when complete, you will be asked to sign the configuration
    file with the previously created site passphrase.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once this process is complete, you have the chance to customize Tripwire by
    making changes to the following file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: Before you begin, it is advisable to read through `twpol.txt` as many of the
    default directories used will not necessarily be available to your system. These
    extra lines will not cause you any specific problems, but they should be commented
    out if you want to avoid meaningless error messages.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can achieve this by commenting the following lines:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: 'Further to this, you should also spend some time reviewing the following file
    in order to customize Tripwire for a suitable purpose:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: 'So, having made the relevant changes, you should now update the Tripwire policy
    file in the following way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: 'Tripwire will now step through various onscreen phases to reference your changes;
    when it has finished, you should now be able to initialize the Tripwire database
    like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: 'Tripwire will now begin to scan the system, but this may take some time depending
    on the overall size of the system in question:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: 'When complete, you can run a Tripwire report with the following syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: By running the preceding command, Tripwire will automatically open the report
    in `vi` and, from this point onwards, all subsequent reports will be made in the
    compare mode. So having done this, why not take this opportunity to create a few
    simple text files or directories in your home folder and rerun the report so that
    the findings of Tripwire become much more obvious.
  prefs: []
  type: TYPE_NORMAL
- en: Remember, if any changes to the filesystem are considered to be the result of
    a system intrusion, the administrator will be notified and they will need to restore
    the system with files and directories that can be trusted. For this reason, any
    system changes must be validated through Tripwire.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can validate your current policy file by running the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: 'You can send Tripwire reports via e-mail with utilities such as `mutt` in the
    following way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: 'Or by modifying the later part of the daily `cron` job:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: 'By including the following line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: 'Of course, in the space of a few short paragraphs, we have now managed to take
    a small but significant step towards building a comprehensive host-based intrusion
    system. It is not troubleshooting in the purest form of the word, but it will
    help you to diagnose an issue at some point in the future. Moreover, between now
    and then, you can read more about `Tripwire` by reviewing the manual like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs: []
  type: TYPE_PRE
- en: However, and just before we finish, at this stage, I would suggest that you
    secure both the `twpol.txt` and `twcfg.txt` files. In the full knowledge that
    Tripwire's policy file is far more extensible than what has been suggested, in
    order to assist your ongoing learning I have provided a link to the project home
    page at the end of this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Firewalld – zone, service, and port management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The purpose of Firewalld is to replace the need for iptables and improve the
    management of security by enabling configuration changes without stopping the
    current connections. Firewalld runs as a daemon that allows for rules to be added
    and changed instantly and it uses network zones to define a level of trust for
    any and all associated network connections. For the troubleshooter, this does
    provide a range of flexible options but, more importantly, it is necessary to
    understand that, while a connection can only be a part of a single zone, a zone
    can be used across many network connections.
  prefs: []
  type: TYPE_NORMAL
- en: 'To know whether Firewalld is currently running, you can type:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs: []
  type: TYPE_PRE
- en: 'To list the predefined zones, you can use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'These zones can be defined as:'
  prefs: []
  type: TYPE_NORMAL
- en: '`drop`: In this zone, incoming network packets are dropped (with no reply),
    and only outgoing network connections are possible'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`block`: In this zone, only network connections initiated within this system
    are possible as all incoming network connections are rejected with an `icmp-host-prohibited`
    message'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`public`: This zone is used in areas where you do not trust the other computers;
    only selected incoming connections are accepted'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`external`: This zone is used on external networks with masquerading enabled
    and only selected incoming connections are accepted'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dmz`: This is the demilitarized zone'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`work/home/internal`: This zone is used in environments where you mostly trust
    the other computers on the network; again, only selected incoming connections
    are accepted'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`trusted`: In this zone, all network connections are accepted'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'However, by extending this command, we can also discover what the default zone
    is by typing:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs: []
  type: TYPE_PRE
- en: 'The value of this can be updated with the following syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs: []
  type: TYPE_PRE
- en: 'Taking this one step further, we can extend this command to provide not only
    a list of zones, but also network interface information like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE68]'
  prefs: []
  type: TYPE_PRE
- en: 'In this situation, network interfaces can be managed with the following syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  prefs: []
  type: TYPE_PRE
- en: 'We can change the assignment of network interfaces and bind them to different
    zones using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, you can obtain all the relevant information about any particular zone
    by typing:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]'
  prefs: []
  type: TYPE_PRE
- en: 'You can list all supported services with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  prefs: []
  type: TYPE_PRE
- en: 'Then you can manage additional services within a zone using the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE73]'
  prefs: []
  type: TYPE_PRE
- en: 'Otherwise, list all ports open in any particular zone with this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  prefs: []
  type: TYPE_PRE
- en: 'You can manage the addition or removal of TCP/UDP ports like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, and without trying to over-complicate the array of commands available,
    you can configure masquerading in the following way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]'
  prefs: []
  type: TYPE_PRE
- en: 'Then query it like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE77]'
  prefs: []
  type: TYPE_PRE
- en: 'You can manage port forwarding with these commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  prefs: []
  type: TYPE_PRE
- en: 'For example, in a typical configuration, if you want to send all packets intended
    for port 22 to port 2222, you can use the following syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE79]'
  prefs: []
  type: TYPE_PRE
- en: So, as you can see, Firewalld is comprehensive, but in the full knowledge that
    there are many more commands that can be discussed, the intention is to show that
    a troubleshooter has the ability to dynamically manage firewall architecture without
    ever needing to stop or restart the firewall service. This is something that cannot
    be achieved with iptables; in many respects, based on the associated learning
    curve and the plethora of new commands, it is a defining feature that may prove
    to be a great success.
  prefs: []
  type: TYPE_NORMAL
- en: Further information about Firewalld can be found at the end of this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Removing Firewalld and returning to iptables
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Firewalld may not be to everyone's liking and you may prefer iptables. So, on
    a final note, if you ever find yourself in a situation where you do not want to
    use Firewalld, you can return to iptables easily.
  prefs: []
  type: TYPE_NORMAL
- en: 'To begin with, you should disable Firewalld like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  prefs: []
  type: TYPE_PRE
- en: 'You should then install and configure iptables by typing:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE81]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, start the `iptables` service with the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE82]'
  prefs: []
  type: TYPE_PRE
- en: From this point onwards, you now have `iptables` as your firewall service of
    choice. However, just before you go, it is probably a good idea to reboot your
    server in order for the kernel to account for the new configuration.
  prefs: []
  type: TYPE_NORMAL
- en: 'To do this, type:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  prefs: []
  type: TYPE_PRE
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: From the more passive positioning of SSH banners and notices to the rigid approach
    involved in building a host-based intrusion detection system, in this chapter
    we covered a number of approaches intended to provide a way forward in troubleshooting
    security. We have not only talked about the release of Firewalld, and how it can
    be used to dynamically re-engineer the entire firewall environment without an
    interruption in service, but we have also discussed OpenSSH and shown you the
    way back to using iptables.
  prefs: []
  type: TYPE_NORMAL
- en: I believe everyone would agree that security is a big subject and its methods
    and approaches are found throughout the pages in this book. However, having toured
    this chapter, I hope that this small stepping-stone will serve you well in the
    future before we take the next step with a discussion on troubleshooting database
    services.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Red Hat customer portal: [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The Fedora project – the SELinux troubleshooting tool (setroubleshoot): [https://fedorahosted.org/setroubleshoot/wiki/SETroubleShoot%20Overview](https://fedorahosted.org/setroubleshoot/wiki/SETroubleShoot%20Overview)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Oracle – configuring and using SELinux: [http://docs.oracle.com/cd/E37670_01/E36387/html/ol_selinux_sec.html](http://docs.oracle.com/cd/E37670_01/E36387/html/ol_selinux_sec.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The Fedora project – Docs/Drafts/SELinux/SETroubleShoot/DeveloperFAQ: [http://fedoraproject.org/wiki/Docs/Drafts/SELinux/SETroubleShoot/DeveloperFAQ](http://fedoraproject.org/wiki/Docs/Drafts/SELinux/SETroubleShoot/DeveloperFAQ)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The FIGlet home page: [http://www.figlet.org](http://www.figlet.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The Tripwire project home page: [http://sourceforge.net/projects/tripwire/](http://sourceforge.net/projects/tripwire/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The SSH Wikipedia page: [http://en.wikipedia.org/wiki/Secure_Shell](http://en.wikipedia.org/wiki/Secure_Shell)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The SSH project home page: [http://www.openssh.com](http://www.openssh.com)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The FirewallD Fedora project: [https://fedoraproject.org/wiki/FirewallD](https://fedoraproject.org/wiki/FirewallD)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'RHEL – using Firewalls: [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Security_Guide/sec-Using_Firewalls.html](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Security_Guide/sec-Using_Firewalls.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
