["```\n#!/bin/bash \nvar1=\"Welcome to bash scripting ...\" \necho $var1 \n```", "```\n#!/bin/bash files='ls -la' echo $files\n```", "```\n-a\n-b50\n-c\n```", "```\n\"Hello message\": {\n    \"prefix\": \"hello\",\n    \"body\": [\n      \"echo 'Hello ${1|first,second,third|}' \"\n    ],\n    \"description\": \"Hello message\"\n  }\n```", "```\n#!/bin/bash\nnum=$(( 25 - 8 ))\necho $num\n```", "```\n$ rm \"my file\"\n```", "```\n#!/bin/bash\na=$(( 8 + 4 ))\necho $a\n```", "```\n#!/bin/bash \nfor (( v=1; v <= 10; v++ )) \ndo \necho \"value is $v\" \ndone \n```", "```\nclean_file() { \n    is_file \"$1\" \n    BEFORE=$(wc -l \"$1\") \n    echo \"The file $1 starts with $BEFORE\" \n    sed -i.bak '/^\\s*#/d;/^$/d' \"$1\" \n    AFTER=$(wc -l \"$1\") \n    echo \"The file $1 is now $AFTER\" \n} \n```", "```\n#!/bin/bash \nmyfunc() { \narr=$@ \necho \"The array from inside the function: ${arr[*]}\" \n}\n```", "```\ntest_arr=(1 2 3) \necho \"The origianl array is: ${test_arr[*]}\" \nmyfunc ${test_arr[*]} \n\n```", "```\n$ sed -n '50 p ' /etc/httpd/conf/httpd.conf  \n```", "```\n$ sed -i '0,/Listen [0-9]*/s//Listen 8080/' /etc/httpd/conf/httpd.conf  \n```", "```\n$ awk '/awesome\\.$/{print $0}' myfile \n```", "```\n$ awk '{print $1}' access.log | sort | uniq -c\n```", "```\n$ awk '{print $7}' access.log | grep 'php' | sort | uniq -c | sort -nr | head -n 1 \n```", "```\n$ lastlog | awk ' /Never logged/ { print $1}'\n```", "```\n$ lastlog | awk ' /Never logged/ { print $1}' | wc -l\n```", "```\n#!/usr/bin/python3\nimport sys\nprint( len(sys.argv))\n```"]