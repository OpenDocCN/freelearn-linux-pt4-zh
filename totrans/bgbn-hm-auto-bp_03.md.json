["```\nroot@arm:~# ./bin/gpio_set.sh 68 out 1\n\n```", "```\nroot@arm:~# echo 0 > /sys/class/gpio/gpio68/value\nroot@arm:~# echo 1 > /sys/class/gpio/gpio68/value\n\n```", "```\nusb 1-1: New USB device found, idVendor=045e, idProduct=0766\nusb 1-1: New USB device strings: Mfr=1, Product=2, SerialNumber=0\nusb 1-1: Product: Microsoft LifeCam VX-800\nusb 1-1: Manufacturer: Microsoft\n...\nuvcvideo 1-1:1.0: usb_probe_interface\nuvcvideo 1-1:1.0: usb_probe_interface - got id\nuvcvideo: Found UVC 1.00 device Microsoft LifeCam VX-800 (045e:0766)\n\n```", "```\nroot@beaglebone:~# lsmod\nModule                  Size  Used by\nsnd_usb_audio          95766  0\nsnd_hwdep               4818  1 snd_usb_audio\nsnd_usbmidi_lib        14457  1 snd_usb_audio\nuvcvideo               53354  0\nvideobuf2_vmalloc       2418  1 uvcvideo\n...\n\n```", "```\nroot@beaglebone:~# svn checkout svn://svn.code.sf.net/p/mjpg-streamer/code/ mjpg-streamer-code\n\n```", "```\nroot@beaglebone:~# aptitude install subversion\n\n```", "```\nroot@beaglebone:~# cd mjpg-streamer-code/mjpg-streamer/ && make && make install\n\n```", "```\nroot@beaglebone:~# mjpg_streamer --help\n-----------------------------------------------------------------------\nUsage: mjpg_streamer\n -i | --input \"<input-plugin.so> [parameters]\"\n -o | --output \"<output-plugin.so> [parameters]\"\n [-h | --help ]........: display this help\n [-v | --version ].....: display version information\n [-b | --background]...: fork to the background, daemon mode\n...\n\n```", "```\nmake[1]: Entering directory `/root/mjpg-streamer-code/mjpg-streamer/plugins/input_testpicture'\nconvert pictures/960x720_1.jpg -resize 640x480!\npictures/640x480_1.jpg\n/bin/sh: 1: convert: not found\nmake[1]: *** [pictures/640x480_1.jpg] Error 127\n\n```", "```\nroot@beaglebone:~# aptitude install imagemagick\n\n```", "```\nroot@beaglebone:~# LD_LIBRARY_PATH=/usr/local/lib/ mjpg_streamer -i \"input_uvc.so -y -f 10 -r QVGA\" -o \"output_http.so -w /var/www/\"\n\n```", "```\nbind: Address already in use\n\n```", "```\nroot@BeagleBone:~# systemctl stop bonescript.socket\nroot@BeagleBone:~# systemctl disable bonescript.socket\nrm '/etc/systemd/system/sockets.target.wants/bonescript.socket'\n\n```", "```\nroot@beaglebone:~# LD_LIBRARY_PATH=/usr/local/lib/ mjpg_streamer -i \"input_uvc.so -y -f 10 -r QVGA\" -o \"output_http.so -p 8090 -w /var/www/\"\n\n```", "```\n   fragment@1 {\n      target = <&ocp>;\n\n      __overlay__ {\n         #address-cells  = <1>;\n         #size-cell      = <0>;\n         status          = \"okay\";\n\n         /* Setup the pins */\n         pinctrl-names   = \"default\";\n         pinctrl-0       = <&bb_w1_pins>;\n\n         /* Define the new one-wire master as based on w1-gpio\n         * and using GPIO1_13\n         */\n         onewire@0 {\n            compatible      = \"w1-gpio\";\n            gpios           = <&gpio2 13 0>;\n         };\n      };\n   };\n```", "```\nroot@beaglebone:~# dtc -O dtb -o /lib/firmware/BB-W1-GPIO-00A0.dtbo -b 0 -@ BB-W1-GPIO-00A0.dts\n\n```", "```\nroot@beaglebone:~# echo BB-W1-GPIO > /sys/devices/bone_capemgr.9/slots\n\n```", "```\nroot@beaglebone:~# ls /sys/bus/w1/devices/\n28-000004b541e9  w1_bus_master1\n\n```", "```\nroot@beaglebone:~# cat /sys/bus/w1/devices/28-000004b541e9/w1_slave\nd8 01 00 04 1f ff 08 10 1c : crc=1c YES\nd8 01 00 04 1f ff 08 10 1c t=29500\n\n```", "```\nroot@beaglebone:~# echo am33xx_pwm > /sys/devices/bone_capemgr.9/slots\nroot@beaglebone:~# echo bone_pwm_P9_22 > /sys/devices/bone_capemgr.9/slots\n\n```", "```\nroot@beaglebone:~# ls -d /sys/devices/ocp.3/pwm_*\n/sys/devices/ocp.3/pwm_test_P9_22.12\n\n```", "```\nroot@beaglebone:~# ls /sys/devices/ocp.3/pwm_test_P9_22.12/\ndriver\tduty   modalias   period   polarity   power   run   subsystem   uevent\n\n```", "```\nroot@beaglebone:~# echo 0 > /sys/devices/ocp.3/pwm_test_P9_22.12/polarity\nroot@beaglebone:~# echo 20000000 > /sys/devices/ocp.3/pwm_test_P9_22.12/period\nroot@beaglebone:~# echo 1500000 > /sys/devices/ocp.3/pwm_test_P9_22.12/duty\n\n```", "```\nroot@beaglebone:~# echo 2100000 > /sys/devices/ocp.3/pwm_test_P9_22.12/duty\n\n```", "```\nroot@beaglebone:~# echo 900000 > /sys/devices/ocp.3/pwm_test_P9_22.12/duty\n\n```", "```\necho 1000000 > /sys/devices/ocp.3/pwm_test_P9_22.12/duty\nsleep 1\necho 2000000 > /sys/devices/ocp.3/pwm_test_P9_22.12/duty\n\n```", "```\nroot@beaglebone:~# ../bin/gpio_set.sh 67 in\n\n```", "```\nroot@beaglebone:~# cat /sys/class/gpio/gpio67/value\n0\nroot@beaglebone:~# cat /sys/class/gpio/gpio67/value\n1\n\n```", "```\n# Select database\nUSE aquarium_mon;\n\n#\n# Create the system status table\n#\n\nCREATE TABLE status (\n        n VARCHAR(64) NOT NULL,\n        v VARCHAR(64) NOT NULL,\n        PRIMARY KEY (n)\n) ENGINE=MEMORY;\n\n# Setup default values\nINSERT INTO status (n, v) VALUES('alarm_sys', '0');\nINSERT INTO status (n, v) VALUES('alarm_level', '0');\nINSERT INTO status (n, v) VALUES('alarm_temp', '0');\nINSERT INTO status (n, v) VALUES('water', '21');\nINSERT INTO status (n, v) VALUES('cooler', '0');\nINSERT INTO status (n, v) VALUES('pump', '0');\nINSERT INTO status (n, v) VALUES('lamp', '0');\nINSERT INTO status (n, v) VALUES('force_cooler', '0');\nINSERT INTO status (n, v) VALUES('force_pump', '0');\nINSERT INTO status (n, v) VALUES('force_lamp', '0');\nINSERT INTO status (n, v) VALUES('force_feeder', '0');\n\n#\n# Create the system configuration table\n#\n\nCREATE TABLE config (\n   n VARCHAR(64) NOT NULL,\n   v VARCHAR(64) NOT NULL,\n   PRIMARY KEY (n)\n);\n\n# Setup default values\nINSERT INTO config (n, v) VALUES('pump_t_on', '20');\nINSERT INTO config (n, v) VALUES('pump_t_off', '60');\nINSERT INTO config (n, v) VALUES('feeder_interval', '60');\nINSERT INTO config (n, v) VALUES('water_temp_max', '27');\nINSERT INTO config (n, v) VALUES('water_temp_min_alarm', '18');\nINSERT INTO config (n, v) VALUES('water_temp_max_alarm', '29');\n\n#\n# Create one table per sensor data\n#\n\nCREATE TABLE temp_log (\n   t DATETIME NOT NULL,\n   v FLOAT,\n   PRIMARY KEY (t)\n);\n```", "```\nroot@beaglebone:~/chapter_03# ls /var/www/\nDisplay.js  Knob.js  Slider.js   Drinks.js   Led.js   Switch.js\n\n```", "```\n# Open the DB\ndb_open(\"aquarium_mon\");\n\n# Set initial statuses for input widgets\n$force_cooler = db_get_status(\"force_cooler\");\n$force_pump = db_get_status(\"force_pump\");\n$force_lamp = db_get_status(\"force_lamp\");\n$force_feeder = db_get_status(\"force_feeder\");\n```", "```\n<html>\n   <head>\n      <link href=\"aquarium.css\" rel=\"stylesheet\" type=\"text/css\">\n\n      <script type=\"text/javascript\" src=\"img/Drinks.js\"></script>\n\n      <script>\n         var man_in = Drinks.createManager();\n         man_in.href = 'handler.php';\n         man_in.input = new Array(\"force_cooler\", \"force_pump\", \"force_lamp\", \"force_feeder\");\n         man_in.refresh = 1;\n         man_in.start();\n\n         var man_out = Drinks.createManager();\n         man_out.href = 'handler.php';\n         man_out.refresh = 1;\n         man_out.start();\n      </script>\n   </head>\n```", "```\n   <table>\n      <tr>\n         <th><h3>Live video</h3></th>\n         <th><h3>Alarms</h3></th>\n      </tr>\n      <tr>\n         <td>\n            <img src=\"img/<?=$_SERVER[\"SERVER_ADDR\"]?>:8080/?action=stream\" alt=\"real-time video feed\" />\n         </td>\n         <td>\n            <table class=\"widget\">\n               <tr>\n                  <th>system</th>\n                  <th>Water level</th>\n                  <th>Water temperature</th>\n               </tr>\n               <tr>\n                  <td><led id=\"alarm_sys\" type=\"round\" radius=\"25\" color=\"red\"></led></td>\n                  <td><led id=\"alarm_level\" type=\"round\" radius=\"25\" color=\"red\"></led></td>\n                  <td><led id=\"alarm_temp\" type=\"round\" radius=\"25\" color=\"red\"></led></td>\n               </tr>\n            </table>\n         </td>\n      </tr>\n   </table>\n```", "```\n<img src=\"img/<?=$_SERVER[\"SERVER_ADDR\"]?>:8080/?action=stream\" alt=\"real-time video feed\" />\n```", "```\n               <td><led id=\"alarm_sys\" type=\"round\" radius=\"25\" color=\"red\"></led></td>\n               <td><led id=\"alarm_level\" type=\"round\" radius=\"25\" color=\"red\"></led></td>\n               <td><led id=\"alarm_temp\" type=\"round\" radius=\"25\" color=\"red\"></led></td>\n```", "```\n   <form method=\"post\">\n      <table class=\"widget\">\n         <tr>\n            <th>Water temp (C)</th>\n            <th>Lamp</th>\n            <th>Cooler</th>\n            <th>Pump</th>\n            <th>Feeder</th>\n         </tr>\n         <tr>\n            <td>\n               <display id=\"water\" type=\"thermo\" max_range=\"50\" range_from=\"10\" range_to=\"50\" autoscale=\"true\"></display>\n            </td>\n            <td>\n               <led id=\"lamp\" type=\"round\" radius=\"25\"></led>\n               <switch id=\"force_lamp\" type=\"circle\" value=\"<?=$force_lamp?>\"></switch>\n            </td>\n            <td>\n               <led id=\"cooler\" type=\"round\" radius=\"25\"></led>\n               <switch id=\"force_cooler\" type=\"circle\" value=\"<?=$force_cooler?>\"></switch>\n            </td>\n            <td>\n               <led id=\"pump\" type=\"round\" radius=\"25\"></led>\n               <switch id=\"force_pump\" type=\"circle\" value=\"<?=$force_pump?>\"></switch>\n            </td>\n            <td>\n               <led id=\"feeder\" type=\"round\" radius=\"25\"></led>\n               <switch id=\"force_feeder\" type=\"toggle\" width=\"80\" value=\"<?=$force_feeder?>\"></switch>\n            </td>\n         </tr>\n      </table>\n      <input type=\"hidden\">\n   </form>\n```", "```\n<display id=\"water\" type=\"thermo\" max_range=\"50\" range_from=\"10\" range_to=\"50\" autoscale=\"true\"></display>\n```", "```\n               <led id=\"lamp\" type=\"round\" radius=\"25\"></led>\n               <switch id=\"force_lamp\" type=\"circle\" value=\"<?=$force_lamp?>\"></switch>\n```", "```\n               <led id=\"feeder\" type=\"round\" radius=\"25\"></led>\n               <switch id=\"force_feeder\" type=\"toggle\" width=\"80\" value=\"<?=$force_feeder?>\"></switch>\n```", "```\n   <display id=\"temp_graph\" type=\"graph\" scale=\"range\" autoscale=\"true\" mode=\"ch1\" power_onload=\"true\">\n      <channel href=\"log_temp.php\" refresh=\"60\" sweep=\"0.005\" frequency=\"20\"></channel>\n   </display>\n```", "```\n<?php\n\nrequire(\"db.php\");\n\n# Open the DB\ndb_open(\"aquarium_mon\");\n\nif (count($_GET) > 0) {\n   # Input section\n       db_set_status(\"force_cooler\", $_GET[\"force_cooler\"]);\n       db_set_status(\"force_pump\", $_GET[\"force_pump\"]);\n       db_set_status(\"force_lamp\", $_GET[\"force_lamp\"]);\n\n   if ($_GET[\"force_feeder\"])\n      db_set_status(\"force_feeder\", 1);\n}\n\n# Output section\n$values[\"alarm_sys\"] = db_get_status(\"alarm_sys\");\n$values[\"alarm_level\"] = db_get_status(\"alarm_level\");\n$values[\"alarm_temp\"] = db_get_status(\"alarm_temp\");\n\n$values[\"water\"] = db_get_status(\"water\");\n$values[\"cooler\"] = db_get_status(\"cooler\");\n$values[\"pump\"] = db_get_status(\"pump\");\n$values[\"lamp\"] = db_get_status(\"lamp\");\n$values[\"feeder\"] = db_get_status(\"force_feeder\");\n\n$values[\"force_feeder\"] = 0;\n\necho json_encode($values);\n?>\n```", "```\n<?php\n\nrequire(\"db.php\");\n\n# Open the DB\ndb_open(\"aquarium_mon\");\n\n# Get the last 20 points\n$query = \"SELECT v FROM temp_log ORDER BY t DESC LIMIT 20\";\n$ret = mysql_query($query);\nif (!$ret)\n  die();\n\n$data = array();\n$n = 0;\nwhile ($row = mysql_fetch_array($ret)) {\n  array_unshift($data, $row[\"v\"]);\n  $n++;\n}\n\nif ($n < 20)\n  echo json_encode(array_merge(array_fill(0, 20 - $n, 0), $data));\nelse\n  echo json_encode($data);\n?>\n```", "```\nroot@beaglebone:~/chapter_03# ls /var/www/\nDisplay.js  Knob.js  Slider.js  aquarium.css  db.php   log_temp.php\nDrinks.js   Led.js   Switch.js  aquarium.php  handler.php\n\n```", "```\nfunction daemon_body()\n{\n   global $loop_time;\n   global $sensors;\n\n   $pump_time = strtotime(\"now\");\n   $feeder_time = strtotime(\"now\");\n\n   # The main loop\n   dbg(\"start main loop (loop_time=${loop_time}s)\");\n   while (sleep($loop_time) == 0) {\n   dbg(\"loop start\");\n\n      $alarm_sys = 0;\n```", "```\n   #\n   # Temperature management\n   #\n\n   $ret = temp_get();\n   if ($ret === false) {\n      err(\"unable to get temperature!\");\n      $alarm_sys = 1;\n   }\n   $temp = $ret;\n   dbg(\"t=$temp\");\n\n   # Save status\n   db_set_status(\"water\", $temp);\n\n   #\n   # Check alarms\n   #\n\n   $water_temp_min = db_get_config(\"water_temp_min_alarm\");\n   $water_temp_max = db_get_config(\"water_temp_max_alarm\");\n   $val = ($temp < $water_temp_min ||\n      $temp > $water_temp_max) ? 1 : 0;\n   db_set_status(\"alarm_temp\", $val);\n\n   # Store the result into the proper log table\n   db_log_var(\"temp_log\", $temp);\n\n   $water_level = get_water_level();\n   db_set_status(\"alarm_level\", $water_level);\n```", "```\nfunction get_water_level()\n{\n   global $gpios;\n\n   return gpio_get($gpios[\"water\"]) == 0 ? 1 : 0;\n}\n```", "```\n   #\n   # Lamp management\n   #\n\n   # The lamp is directly managed by the force_lamp switch\n\n   $lamp = db_get_status(\"force_lamp\");\n\n   # Set the new status\n   set_lamp($lamp);\n   db_set_status(\"lamp\", $lamp);\n   dbg(\"lamp %sactivated\", $lamp ? \"\" : \"de\");\n```", "```\n   #\n   # Cooler management\n   #\n\n   # The cooler must be enabled if temp > water_temp_max in order\n   # to try to reduce the temperature of the water...\n   $water_temp_max = db_get_config(\"water_temp_max\");\n   $cooler = $temp > $water_temp_max ? 1 : 0;\n\n   # We must force on?\n   $force_cooler = db_get_status(\"force_cooler\");\n   $cooler = $force_cooler ? 1 : $cooler;\n\n   # Set the new status\n   set_cooler($cooler);\n   db_set_status(\"cooler\", $cooler);\n   dbg(\"cooler %sactivated\", $cooler ? \"\" : \"de\");\n```", "```\n   #\n   # Pump management\n   #\n\n   # The pump must be on for pump_t_on delay time and off for\n      # pump_t_off delay time (if not forced of course...)\n      $force_pump = db_get_status(\"force_pump\");\n      $pump = db_get_status(\"pump\");\n      $pump_interval = $pump ? db_get_config(\"pump_t_on\") :\n         db_get_config(\"pump_t_off\");\n      if ($force_pump ||\n         strtotime(\"-$pump_time seconds\") > $pump_interval) {\n            $pump_time = strtotime(\"now\");\n\n            $pump = $force_pump ? 1 : !$pump;\n         }\n\n         # Set the new status\n         set_pump($pump);\n         db_set_status(\"pump\", $pump);\n         dbg(\"pump %sactivated\", $pump ? \"\" : \"de\");\n```", "```\nfunction set_pump($status)\n{\n   global $gpios;\n\n   gpio_set($gpios[\"pump\"], $status ? 0 : 1);\n}\n```", "```\n   #\n   # Feeder management\n   #\n\n   $force_feeder = db_get_status(\"force_feeder\");\n   $feeder_interval = db_get_config(\"feeder_interval\");\n   if ($force_feeder || (strtotime(\"-$feeder_time seconds\") > $feeder_interval)) {\n      $feeder_time = strtotime(\"now\");\n\n      do_feeder();\n      db_set_status(\"force_feeder\", 0);\n      dbg(\"feeder activated\");\n   }\n```", "```\nfunction do_feeder()\n{\n   system(\"feeder.sh &\");\n}\n```", "```\nroot@beaglebone:~# ./aquarium_mon.php -d -f -l\naquarium_mon.php[3882]: signals traps installed\naquarium_mon.php[3882]: start main loop (loop_time=15s)\naquarium_mon.php[3882]: loop start\naquarium_mon.php[3882]: t=28.5\naquarium_mon.php[3882]: lamp deactivated\naquarium_mon.php[3882]: cooler activated\naquarium_mon.php[3882]: pump deactivated\naquarium_mon.php[3882]: feeder activated\naquarium_mon.php[3882]: loop end\n...\n```", "```\nroot@beaglebone:~# apt-get install php5 libapache2-mod-php5\n\n```", "```\nroot@beaglebone:~# ./SYSINIT.sh\ndone!\n\n```", "```\nroot@beaglebone:~# ./aquarium_mon.php -d -f -l\n\n```", "```\nroot@beaglebone:~# LD_LIBRARY_PATH=/usr/local/lib/ mjpg_streamer -i \"input_uvc.so -y -f 10 -r QVGA\" -o \"output_http.so -w /var/www/\"\n\n```", "```\nroot@beaglebone:~# ./my_dump.sh config\nn   v\nfeeder_interval   60\npump_t_off   60\npump_t_on   20\nwater_temp_max   27\nwater_temp_max_alarm   29\nwater_temp_min   20\nwater_temp_min_alarm   18\nroot@beaglebone:~# ./my_set.sh config water_temp_max_alarm 30.5\nroot@beaglebone:~# ./my_dump.sh config\nn   v\nfeeder_interval   60\npump_t_off   60\npump_t_on   20\nwater_temp_max   27\nwater_temp_max_alarm   30.5\nwater_temp_min   20\nwater_temp_min_alarm   18\n\n```"]