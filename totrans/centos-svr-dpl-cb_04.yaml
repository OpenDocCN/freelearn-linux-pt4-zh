- en: Chapter 4. Software Installation Management
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章 软件安装管理
- en: 'This chapter contains the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章包含以下操作：
- en: Registering the EPEL and Remi repositories
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注册 EPEL 和 Remi 仓库
- en: Prioritizing repositories using the Priorities plugin
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Priorities 插件优先级设置仓库
- en: Automating software updates with `yum-cron`
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `yum-cron` 自动更新软件
- en: Verifying installed RPM packages
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 验证已安装的 RPM 包
- en: Compiling a program from source
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从源代码编译程序
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: 'This chapter presents recipes for managing the installation of software on
    your CentOS system. You''ll learn how to add new package repositories to provide
    a wider selection of software than what''s found in the main CentOS repositories,
    and also how to prioritize the repositories to control those from which a package
    is installed. You''ll also learn how to automate software updates to keep up with
    the latest security patches and bug fixes, and how to verify the installed packages
    to make sure a malicious user hasn''t tampered with your software. Finally, you''ll
    learn a skill that''s slowly fading but is essential if you want to modify the
    open source software on your system: how to compile software from source.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章提供了在 CentOS 系统上管理软件安装的具体操作方法。你将学习如何添加新的软件包仓库，以提供比主 CentOS 仓库更多的软件选择，同时也能了解如何优先排序仓库，从中选择安装软件包的源。你还将学习如何自动更新软件，以便跟上最新的安全补丁和错误修复，如何验证已安装的软件包，以确保恶意用户未篡改你的软件。最后，你将掌握一项逐渐消失但对于修改系统中开源软件至关重要的技能：如何从源代码编译软件。
- en: Registering the EPEL and Remi repositories
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 注册 EPEL 和 Remi 仓库
- en: A clean CentOS installation will have the main supported repositories enabled,
    from which we can install a wide variety of software. We can also register third-party
    repositories to make additional (or newer) software available to us. This recipe
    teaches you how to add two such repositories, specifically the popular **Extra
    Packages for Enterprise Linux** (**EPEL**) and Remi repositories.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 一个全新安装的 CentOS 系统将启用主支持仓库，通过这些仓库我们可以安装各种软件。我们还可以注册第三方仓库，以便获取更多（或更新的）软件。本教程将教你如何添加两个这样的仓库，分别是流行的
    **企业 Linux 扩展包（EPEL）** 和 Remi 仓库。
- en: Getting ready
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: This recipe requires a CentOS system with a working network connection. Administrative
    privileges are also required, either by logging in with the `root` account or
    through the use of `sudo`.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程需要一个具有工作网络连接的 CentOS 系统。还需要管理员权限，可以通过使用 `root` 账户登录或使用 `sudo` 来实现。
- en: How to do it...
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To register the EPEL repository, install the epel-release package:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要注册 EPEL 仓库，请安装 epel-release 包：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To register and enable the REMI repository, follow these steps:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 注册并启用 REMI 仓库，请按照以下步骤操作：
- en: 'Download the repository''s configuration package:'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载仓库的配置包：
- en: '[PRE1]'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Install the downloaded package:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装下载的包：
- en: '[PRE2]'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Delete the file since it''s no longer needed:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除文件，因为它已不再需要：
- en: '[PRE3]'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Open the Remi repository''s configuration file:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Remi 仓库的配置文件：
- en: '[PRE4]'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Locate the `enabled` option in the `[remi]` section and change it''s value
    to `1` to enable it:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `[remi]` 部分找到 `enabled` 选项，并将其值更改为 `1` 以启用它：
- en: '[PRE5]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Save your changes and close the file.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存更改并关闭文件。
- en: How it works...
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'The EPEL repository hosts software packages that complement those in the official
    CentOS repositories. It can be automatically configured by installing the `epel-release`
    package available in the official repositories:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: EPEL 仓库托管着与官方 CentOS 仓库互补的软件包。通过安装官方仓库中提供的 `epel-release` 包，可以自动配置它：
- en: '[PRE6]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Remi is a popular third-party repository providing newer versions of software
    found in the official repositories. We downloaded the configuration package for
    the repository from the project''s server using `curl`:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Remi 是一个流行的第三方仓库，提供官方仓库中没有的更新版本软件。我们通过 `curl` 从项目服务器下载了仓库的配置包：
- en: '[PRE7]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: We used the `-O` argument (an uppercase letter `O`, not zero) so that the file
    will be saved to disk, otherwise its contents would be dumped to the screen. The
    recipe didn't identify a specific directory you should download the file to. You
    can download it to your `home` directory, or even `/tmp` if you like, since the
    file isn't needed after the package is installed.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了 `-O` 参数（大写字母 O，而不是数字 0），这样文件会保存到磁盘，否则其内容将显示在屏幕上。本教程没有指定应下载文件的具体目录。你可以将文件下载到你的
    `home` 目录，甚至是 `/tmp` 目录，因为安装软件包后该文件不再需要。
- en: 'After the package is downloaded, we can install it using `yum`:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在下载软件包后，我们可以使用 `yum` 安装它：
- en: '[PRE8]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Note
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Many times there are alternative ways to accomplish the same task. For instance,
    the `rpm` command can also be used to install the package after it is downloaded:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 很多时候，完成同一任务有多种方式。例如，`rpm` 命令也可以在下载包后用来安装软件包：
- en: '`**rpm -iv remi-release-7.rpm**`'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '`**rpm -iv remi-release-7.rpm**`'
- en: The `-i` argument installs the package and `-v` instructs `rpm` to be verbose
    in its output so we can see it's activities.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '`-i` 参数安装软件包，而 `-v` 指示 `rpm` 在输出中提供详细信息，以便我们可以看到它的操作。'
- en: 'The `remi-release` package installs the configurations for three Remi repositories:
    the Remi, Safe Remi, and Remi''s PHP 7 repositories. Safe Remi is enabled by default
    because its packages are considered safe to use with the official CentOS-Base
    repository. However, the Remi repository is disabled so we need to edit `/etc/yum.repos.d/remi.repo`:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`remi-release` 包安装了三个 Remi 仓库的配置：Remi、Safe Remi 和 Remi 的 PHP 7 仓库。默认情况下启用 Safe
    Remi，因为它的软件包被认为可以与官方 CentOS-Base 仓库一起使用。然而，Remi 仓库是禁用的，所以我们需要编辑 `/etc/yum.repos.d/remi.repo`：'
- en: '![How it works...](img/image_04_001.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/image_04_001.jpg)'
- en: The Remi repository is enabled by updating its configuration file
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 通过更新配置文件来启用 Remi 仓库
- en: REMI is popular for providing newer releases of PHP. If you want to upgrade
    your existing PHP installation with a version found in Remi you can enable the
    desired section in `remi.repo` or in `remi-php70.repo`.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: REMI 以提供 PHP 的较新版本而闻名。如果你想通过 Remi 升级现有的 PHP 安装，可以在 `remi.repo` 或 `remi-php70.repo`
    中启用所需的部分。
- en: 'After you''ve installed the EPEL repository and installed and enabled the Remi
    repository, you can ask yum to list the available repositories. The EPEL and Remi
    repositories should appear in its output:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了 EPEL 仓库并启用了 Remi 仓库后，你可以使用 yum 来列出可用的仓库。EPEL 和 Remi 仓库应该会出现在输出中：
- en: '[PRE9]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![How it works...](img/image_04_002.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/image_04_002.jpg)'
- en: The EPEL and Remi repositories are enabled and ready to go!
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: EPEL 和 Remi 仓库已启用并准备就绪！
- en: Tip
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Remi uses the same package names as those found in the official CentOS repositories.
    Like Remi, the IUS repository provides newer versions of software found in the
    official repositories, but uses different package names. Some managed service
    providers recommend using IUS over Remi because they update servers nightly and
    the differing package names help prevent unplanned upgrades. If you're contracted
    with such a provider and not using the Priorities plugin (discussed in the next
    recipe), be sure to heed their advice. More information on IUS can be found at
    their website, [https://ius.io/](https://ius.io/).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Remi 使用与官方 CentOS 仓库中相同的软件包名称。与 Remi 类似，IUS 仓库提供了官方仓库中较新的软件版本，但使用了不同的软件包名称。一些托管服务提供商推荐使用
    IUS 而不是 Remi，因为他们会每晚更新服务器，而不同的软件包名称有助于防止计划外的升级。如果你与这样的服务提供商签订了合同并且没有使用 Priorities
    插件（将在下一个配方中讨论），请务必听从他们的建议。有关 IUS 的更多信息，请访问他们的官方网站，[https://ius.io/](https://ius.io/)。
- en: See also
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'For more information on the EPEL and Remi repositories, refer to the following
    resources:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 EPEL 和 Remi 仓库的更多信息，请参考以下资源：
- en: 'Fedora Project: EPEL ([http://fedoraproject.org/wiki/EPEL](http://fedoraproject.org/wiki/EPEL))'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Fedora 项目：EPEL ([http://fedoraproject.org/wiki/EPEL](http://fedoraproject.org/wiki/EPEL))
- en: Remi's RPM repository ([http://rpms.famillecollet.com/](http://rpms.famillecollet.com/))
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Remi 的 RPM 仓库 ([http://rpms.famillecollet.com/](http://rpms.famillecollet.com/))
- en: Install EPEL and additional repositories on CentOS and Red Hat ([http://www.rackspace.com/knowledge_center/article/install-epel-and-additional-repositories-on-centos-and-red-hat](http://www.rackspace.com/knowledge_center/article/install-epel-and-additional-repositories-on-centos-and-red-hat))
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 CentOS 和 Red Hat 上安装 EPEL 和其他仓库 ([http://www.rackspace.com/knowledge_center/article/install-epel-and-additional-repositories-on-centos-and-red-hat](http://www.rackspace.com/knowledge_center/article/install-epel-and-additional-repositories-on-centos-and-red-hat))
- en: Prioritizing repositories using the Priorities plugin
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Priorities 插件对仓库进行优先级排序
- en: Although package managers make installing and updating software an almost trivial
    task, there can still be some pain points if we're not careful. For example, we
    can configure multiple repositories, including third-party repositories not maintained
    by CentOS, and the version of a package in one repository can conflict with the
    same in another. This recipe uses the Priorities plugin to prioritize the repositories
    we use to help avoid such pitfalls.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管软件包管理器使安装和更新软件几乎变得不费吹灰之力，但如果我们不小心，仍然可能会遇到一些问题。例如，我们可以配置多个仓库，包括 CentOS 不维护的第三方仓库，而一个仓库中的软件包版本可能与另一个仓库中的版本发生冲突。本配方使用
    Priorities 插件来对我们使用的仓库进行优先级排序，帮助避免这些问题。
- en: Getting ready
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: This recipe requires a CentOS system with a working network connection. Administrative
    privileges are also required, either by logging in with the `root` account or
    through the use of `sudo`.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱需要一个有正常网络连接的 CentOS 系统。还需要管理员权限，可以通过登录 `root` 账户或使用 `sudo` 来获得。
- en: How to do it...
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to prioritize which repositories `yum` downloads software
    from:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤优先排序 `yum` 下载软件的仓库：
- en: 'Open the `/etc/yum.conf` file with your text editor. Locate the `plugins` option
    and verify that its value is set to `1` to enable plugin support. Update the value
    if necessary:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用文本编辑器打开 `/etc/yum.conf` 文件。找到 `plugins` 选项，并确认其值设置为 `1` 以启用插件支持。如有必要，更新其值：
- en: '[PRE10]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Install the `yum-plugin-priorities` package:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 `yum-plugin-priorities` 包：
- en: '[PRE11]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'To set a repository''s priority, open its respective configuration file found
    under `/etc/yum.repos.d`. Add the `priority` option as a new entry within each
    desired section:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要设置仓库的优先级，请打开其相应的配置文件，该文件位于 `/etc/yum.repos.d` 目录下。在每个所需部分中添加 `priority` 选项作为新条目：
- en: '[PRE12]'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: When you're finished, save and close the repository's configuration file.![How
    to do it...](img/image_04_003.jpg)
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，保存并关闭仓库的配置文件。![如何操作...](img/image_04_003.jpg)
- en: The CentOS-Base repository is given a relatively high priority for base packages
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: CentOS-Base 仓库为基础软件包分配了相对较高的优先级
- en: How it works...
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In this recipe, we installed the Priorities plugin and prioritized our repositories
    by updating their configuration files. By prioritizing one repository over another,
    we can more easily control the packages and software versions installed on our
    system.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们安装了 Priorities 插件并通过更新仓库配置文件来优先排序仓库。通过优先排序一个仓库，我们可以更轻松地控制系统中安装的软件包和版本。
- en: 'First, we checked to make sure Yum''s plugin support is enabled. We opened
    its configuration file at `/etc/yum.conf` and verified the value of the `plugins`
    option:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们检查了 Yum 的插件支持是否已启用。我们打开了它的配置文件 `/etc/yum.conf` 并验证了 `plugins` 选项的值：
- en: '[PRE13]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Next, we installed the `yum-plugin-priorities` package:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们安装了 `yum-plugin-priorities` 包：
- en: '[PRE14]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Priorities comes with its own minimal configuration file at `/etc/yum/plugins/
    priorities.conf`. There, the `enabled` option let''s us toggle whether the plugin
    is active or not. This means we can prioritize the repositories as we like, but
    temporarily disable prioritization for any reason without removing and then re-adding
    priority values in the repositories'' configuration files:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Priorities 插件有一个最小的配置文件，位于 `/etc/yum/plugins/priorities.conf`。在该文件中，`enabled`
    选项让我们可以切换插件是否启用。这意味着我们可以根据需要对仓库进行优先级设置，但也可以在不删除和重新添加仓库配置文件中的优先级值的情况下，暂时禁用优先级设置：
- en: '[PRE15]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The last step is to edit the repositories'' configuration files found in the
    `/etc/ yum.repos.d` directory. Each repository has its own file, for example,
    the CentOS-Base repository''s file is `/etc/yum.repos.d/CentOS-Base.repo`, which
    configures details about connections and security keys for each channel. To prioritize
    our repositories, we simply open the desired files and add a new line for the
    `priority` option in the desired sections:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是编辑 `/etc/yum.repos.d` 目录下的仓库配置文件。每个仓库都有自己的配置文件，例如，CentOS-Base 仓库的文件是 `/etc/yum.repos.d/CentOS-Base.repo`，该文件配置了每个频道的连接和安全密钥。为了优先排序仓库，我们只需打开所需的文件，并在所需的部分添加
    `priority` 选项的新行：
- en: '[PRE16]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Priorities are assigned as a number in the range of `1` to `99`, where `1` is
    the highest priority and `99` is the lowest priority. Any repository or channel
    we don't explicitly set a priority for will default to priority `99`. Repositories
    that are meant to work together (like EPEL and Remi) can be assigned the same
    priority.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 优先级以 `1` 到 `99` 范围内的数字来分配，其中 `1` 为最高优先级，`99` 为最低优先级。任何我们没有明确设置优先级的仓库或频道将默认使用优先级
    `99`。本应一起使用的仓库（例如 EPEL 和 Remi）可以分配相同的优先级。
- en: Note
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Don't use consecutive priority numbers, like 1, 2, 3.... Setting priorities
    as multiples of 5 or 10, for example 5, 10, 15... or 10, 20, 30... allows you
    to later add additional repositories without re-prioritizing existing ones.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 不要使用连续的优先级数字，如 1、2、3...。例如，设置优先级为 5、10、15... 或 10、20、30...，可以让你稍后添加其他仓库，而无需重新排序现有仓库的优先级。
- en: When priorities are assigned and enabled and when we try to install or update
    a package which is found in multiple repositories, the package will be retrieved
    from whichever repository that has the highest priority. In this way, we can control
    if a third-party repository can replace important base packages, or if updates
    from supported CentOS repositories can replace third-party packages on a highly-customized
    system.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 当分配并启用优先级时，当我们尝试安装或更新一个在多个仓库中都能找到的软件包时，系统会从具有最高优先级的仓库中获取该软件包。通过这种方式，我们可以控制第三方仓库是否可以替代重要的基础包，或者在高度定制的系统上，来自CentOS支持仓库的更新是否可以替代第三方软件包。
- en: See also
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: Refer to the CentOS Wiki's `yum-plugin-priorities` article for more information
    on the Priorities plugin at [https://wiki.centos.org/PackageManagement/Yum/Priorities](https://wiki.centos.org/PackageManagement/Yum/Priorities).
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考CentOS Wiki上的`yum-plugin-priorities`文章，了解更多有关Priorities插件的信息，链接：[https://wiki.centos.org/PackageManagement/Yum/Priorities](https://wiki.centos.org/PackageManagement/Yum/Priorities)。
- en: Automating software updates with yum-cron
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用yum-cron自动化软件更新
- en: We know the importance of staying on top of any security alerts and applying
    important updates, but it can be a tedious and time-consuming task to make sure
    all of the software on your CentOS system is updated, especially when you're managing
    more than one server. This recipe shows you how to automate the update process
    ensuring your system stays up to date without the need for daily interaction.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们都知道及时跟进安全警报和应用重要更新的重要性，但确保CentOS系统上的所有软件都得到更新可能是一项繁琐且耗时的任务，特别是当你管理多个服务器时。本教程展示了如何通过自动化更新过程来确保系统始终保持最新，无需每天手动操作。
- en: Getting ready
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: This recipe requires a CentOS system with a working network connection. Administrative
    privileges are also required, either by logging in with the `root` account or
    through the use of `sudo`.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程需要一个具有正常网络连接的CentOS系统。同时，您需要具有管理员权限，可以通过`root`账户登录或使用`sudo`来获得权限。
- en: How to do it...
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To automate software updates using `yum-cron`, perform the following steps:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用`yum-cron`自动化软件更新，请执行以下步骤：
- en: 'Install the `yum-cron` package:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装`yum-cron`软件包：
- en: '[PRE17]'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Start and enable the service:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动并启用该服务：
- en: '[PRE18]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Perform a system update to ensure everything is up to date before `yum-cron`
    takes over:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行系统更新，确保在`yum-cron`接管之前，系统所有内容都是最新的：
- en: '[PRE19]'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: How it works...
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: 'Our first action step was to install the `yum-cron` package, but you''ll notice
    that the invocation also updates Yum itself. Although we only have to specify
    `yum-cron`, including `yum` works around a particular versioning bug (you can
    read the bug report at [https://bugzilla.redhat.com/show_bug.cgi?id=1293713](https://bugzilla.redhat.com/show_bug.cgi?id=1293713)):'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的第一步是安装`yum-cron`软件包，但你会注意到，这个操作还会更新Yum本身。虽然我们只需要指定`yum-cron`，但包含`yum`可以绕过一个特定的版本问题（你可以在[https://bugzilla.redhat.com/show_bug.cgi?id=1293713](https://bugzilla.redhat.com/show_bug.cgi?id=1293713)上查看该错误报告）：
- en: '[PRE20]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The package installs the `yum-cron` command and a daily cron job to trigger
    it and a `systemctl` unit used to enable and disable updating. Starting the service
    with `systemctl` results in the creation of a special lock file. Cron runs the
    daily cron job every day to invoke `yum-cron`, which checks whether the lock file
    exists. If the file exists, then it knows it should check for updates. Otherwise,
    it knows daily updating is disabled (the service is stopped) and does nothing.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 该软件包安装了`yum-cron`命令，并且设置了一个每天触发它的定时任务（cron job），同时还包括一个`systemctl`单元，用于启用和禁用更新。通过`systemctl`启动该服务时，会创建一个特殊的锁文件。Cron每天运行这个定时任务来调用`yum-cron`，该命令检查锁文件是否存在。如果文件存在，它会检查更新；否则，它会知道每日更新被禁用（服务被停止），并且不执行任何操作。
- en: The `yum-cron.config` configuration file in `/etc/yum` can be used to modify
    the general behavior of `yum-cron`. The most important option is `update_cmd`
    because it lets us specify what type of update to perform. It's possible for `yum-cron`
    to perform different update strategies, and if you want to perform a more targeted
    update beyond the default then you can change the value of the `update_cmd` option.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '`/etc/yum`中的`yum-cron.config`配置文件可以用于修改`yum-cron`的总体行为。最重要的选项是`update_cmd`，因为它允许我们指定执行的更新类型。`yum-cron`可以执行不同的更新策略，如果你希望进行更有针对性的更新而不是默认设置，可以更改`update_cmd`选项的值。'
- en: 'Servers that fill different roles may require different update strategies;
    for example, you might want to apply only critical security updates on a production
    server and leave the other software installed at their specific versions. Comments
    in the configuration file list what values are valid for `update_cmd` and what
    they mean. `default` performs a general system-wide update, whereas a value such
    as `security` only applies security-related updates:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 执行不同角色的服务器可能需要不同的更新策略；例如，你可能只希望在生产服务器上应用关键的安全更新，而将其他软件保持在特定版本。配置文件中的注释列出了 `update_cmd`
    的有效值及其含义。`default` 执行一般的系统范围更新，而像 `security` 这样的值则仅应用与安全相关的更新：
- en: '[PRE21]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Also of interest in `yum-cron.conf` is the `emit_via` option. The `stdio` value
    means any logging messages that may be generated by `yum-cron` will be passed
    through a standard output. Usually, this is captured by cron and written to `/var/log/cron`.
    Cron can be configured to e-mail the output, but you can also specifically configure
    `yum-cron` to e-mail the messages. If you want the output sent to you by `yum-cron`,
    change the value of `emit_via` to `email` and the value of `email_to` to your
    e-mail address:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `yum-cron.conf` 中，还可以看到 `emit_via` 选项。`stdio` 值表示 `yum-cron` 生成的任何日志信息都将通过标准输出传递。通常，这些信息会被
    cron 捕获并写入 `/var/log/cron`。Cron 可以配置为通过电子邮件发送输出，但你也可以特别配置 `yum-cron` 发送邮件。如果你希望
    `yum-cron` 将输出发送给你，请将 `emit_via` 的值更改为 `email`，并将 `email_to` 的值设置为你的电子邮件地址：
- en: '[PRE22]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '![How it works...](img/image_04_004.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理...](img/image_04_004.jpg)'
- en: yum-cron's configuration file lets us specify a specific update policy and notification
    options
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: yum-cron 的配置文件允许我们指定特定的更新策略和通知选项
- en: See also
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Refer to the following resources for more information on automating software
    updates:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考以下资源，了解有关自动化软件更新的更多信息：
- en: Configure automatic updates ([http://www.certdepot.net/rhel7-configure-automatic-updates](http://www.certdepot.net/rhel7-configure-automatic-updates))
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置自动更新 ([http://www.certdepot.net/rhel7-configure-automatic-updates](http://www.certdepot.net/rhel7-configure-automatic-updates))
- en: Enabling automatic updates in CentOS 7 and RHEL 7 ([http://linuxaria.com/howto/enabling-automatic-updates-in-centos-7-and-rhel-7](http://linuxaria.com/howto/enabling-automatic-updates-in-centos-7-and-rhel-7))
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用 CentOS 7 和 RHEL 7 中的自动更新 ([http://linuxaria.com/howto/enabling-automatic-updates-in-centos-7-and-rhel-7](http://linuxaria.com/howto/enabling-automatic-updates-in-centos-7-and-rhel-7))
- en: Verifying installed RPM packages
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 验证已安装的 RPM 包
- en: It's been said the safest system is one that's *"powered off, cast in a block
    of concrete, and sealed in a lead-lined room with armed guards."* (Gene Spafford)
    Your CentOS system is probably concrete-free, which means it's at the risk of
    attack. This recipe shows you how to audit your system using `rpm` to make sure
    its installed software hasn't been compromised by an attacker.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 有人说最安全的系统就是 *“关闭电源，浇筑在混凝土块中，并密封在一个有武装守卫的铅隔离室里。”*（Gene Spafford）你的 CentOS 系统可能没有混凝土保护，这意味着它存在被攻击的风险。本教程将展示如何使用
    `rpm` 审计系统，以确保已安装的软件没有被攻击者篡改。
- en: Getting ready
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: This recipe requires a CentOS system with a working network connection. Administrative
    privileges are also required, either by logging in with the `root` account or
    through the use of `sudo`.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 该教程需要一个具有工作网络连接的 CentOS 系统。还需要管理员权限，可以通过登录 `root` 账户或使用 `sudo` 来获得权限。
- en: How to do it...
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'It is important to first make a backup of the RPM database at `/var/lib/rpm`.
    There are many ways to do this, but for the sake of this example, we''ll make
    an ISO image of the directory which you can then archive or burn to disc:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 首先备份 `/var/lib/rpm` 目录中的 RPM 数据库非常重要。虽然有多种方法可以做到这一点，但为了这个例子，我们将创建该目录的 ISO 镜像，然后可以将其归档或刻录到光盘：
- en: 'Install the `genisoimage` and `wodim` packages for the necessary tools to create
    ISO images and to burn them to disc:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 `genisoimage` 和 `wodim` 软件包，获取创建 ISO 镜像和刻录光盘所需的工具：
- en: '[PRE23]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Create the ISO image with `genisoimage`:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `genisoimage` 创建 ISO 镜像：
- en: '[PRE24]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'If desired, burn the image with `wodim`:'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果需要，可以使用 `wodim` 刻录镜像：
- en: '[PRE25]'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: You can delete the ISO file after burning it to disc if you have no plans to
    use it in the future.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 如果以后不打算使用，可以在将 ISO 文件刻录到光盘后删除它。
- en: 'When the time comes to verify your system, follow these steps:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 当需要验证你的系统时，按照以下步骤操作：
- en: 'Make the backup database available. If you''ve burned the ISO file to disc,
    and assuming that it''s located at `/dev/cdrom`, use `mount` like this:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使备份数据库可用。如果你已经将 ISO 文件刻录到光盘，并且假设它位于 `/dev/cdrom`，使用 `mount` 如下：
- en: '[PRE26]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'If the backup is an ISO file, use `mount` like this:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果备份是 ISO 文件，使用 `mount` 如下：
- en: '[PRE27]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Verify the integrity of the installed `rpm` package against the backup copy
    of the database. `rpm` returns a list of the files that are different from the
    original package, so a successful audit should have no output:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证安装的 `rpm` 软件包与备份的数据库副本的完整性。`rpm` 会返回与原始软件包不同的文件列表，因此成功的审计应没有输出：
- en: '[PRE28]'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Verify the integrity of all of the packages installed on the system:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证系统上安装的所有软件包的完整性：
- en: '[PRE29]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: How it works...
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: An attacker can alter files and replace programs with malicious copies on your
    system. Luckily, we can identify these changes using `rpm` to verify the integrity
    of files installed from a package. But to do this, we also need a database that
    we can trust. The integrity of the database used to compare file details is important
    because a smart attacker may also think to make changes there as well. It's important
    to make a read-only backup of the database regularly, perhaps before and after
    every time you install a new package or install updates. Then you can compare
    the state of the system's software against a trusted backup and be fully confident
    with the results.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击者可以篡改文件并用恶意副本替换系统上的程序。幸运的是，我们可以使用 `rpm` 来验证从软件包安装的文件的完整性，从而识别这些更改。但是，为了做到这一点，我们还需要一个可以信任的数据库。用于比较文件详细信息的数据库的完整性非常重要，因为聪明的攻击者也可能会想到在那里进行修改。定期制作数据库的只读备份非常重要，或许在每次安装新软件包或更新之前和之后都应该进行备份。然后，你可以将系统软件的状态与可信备份进行比较，从而对结果充满信心。
- en: 'You can back up to any medium you wish: a removable USB thumb drive, a writable
    CD or DVD disc, remote storage, or even a high-capacity tape cartridge. The important
    thing is that it''s trustworthy. The recipe demonstrated making a backup of the
    `/var/lib/rpm` database as an ISO file, which can be burned to disc or copied
    around as-is and mounted read-only when needed.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将备份存储到任何介质上：可移动的 USB 闪存驱动器、可写的 CD 或 DVD 光盘、远程存储，甚至是高容量磁带盒。重要的是它是可信的。这个配方演示了如何将
    `/var/lib/rpm` 数据库备份为 ISO 文件，可以将其刻录到光盘上或按原样复制，必要时以只读模式挂载。
- en: '[PRE30]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Note
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Long-time Linux users may remember the `mkisofs` and `cdrecord` programs. `genisoimage`
    and `cdrecord` are clones, and the former still exists in CentOS in the form of
    symlinks pointing to `genisoimage` and `cdrecord`.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 长期使用 Linux 的用户可能会记得 `mkisofs` 和 `cdrecord` 程序。`genisoimage` 和 `cdrecord` 是它们的克隆程序，前者仍然以符号链接的形式存在于
    CentOS 中，指向 `genisoimage` 和 `cdrecord`。
- en: The `-o` argument gives the name of the ISO file that will be created. `-R`
    creates the indexes necessary to preserve the length and casing of the filenames
    in our image, and `-v` indicates that `genisoimage` should be verbose so that
    we can see its progress. When it's finished, we'll have the `rpm-db-backup.iso`
    file.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '`-o` 参数指定将创建的 ISO 文件的名称。`-R` 创建必要的索引以保留镜像中文件名的长度和大小写，而 `-v` 表示 `genisoimage`
    应以详细模式运行，以便我们能看到它的进度。完成后，我们将得到 `rpm-db-backup.iso` 文件。'
- en: Note
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '`rpm-db-bckup.iso` is a suitable name if you''re going to burn the file to
    disc and delete it. If you plan on archiving the ISO file instead, you''ll want
    to consider including a timestamp in the name of when the backup was taken so
    that you can keep things organized. For example, the following command uses `date`
    to include the date and time in the filename:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你打算将文件刻录到光盘并删除它，`rpm-db-bckup.iso` 是一个合适的名称。如果你打算将 ISO 文件归档，则应考虑在名称中包含备份创建的时间戳，以便保持有序。例如，以下命令使用
    `date` 将日期和时间包含在文件名中：
- en: '`**genisoimage -o rpm-db-bckup-$(date +"%Y-%m-%d_%H%M").iso -R -v /var/lib/rpm**`'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '`**genisoimage -o rpm-db-bckup-$(date +"%Y-%m-%d_%H%M").iso -R -v /var/lib/rpm**`'
- en: 'Next, the recipe showed how to use `wodim` to burn the ISO to disc:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，配方展示了如何使用 `wodim` 将 ISO 文件刻录到光盘：
- en: '[PRE31]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: The `-v` argument puts `wodim` in verbose mode and the `dev` argument identifies
    the CD/DVD drive. The recipe assumed that `/dev/cdrom` is the appropriate device
    and you may need to modify the command depending on your system's configuration.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '`-v` 参数将 `wodim` 设置为详细模式，`dev` 参数指定 CD/DVD 驱动器。配方假设 `/dev/cdrom` 是适当的设备，你可能需要根据系统的配置修改命令。'
- en: 'To make the trusted database available, we mounted the disc or ISO file. To
    mount the disc, we would place the disc in the drive and issue the following command
    (`/dev/cdrom` is the device and `/media` is the mount point its filesystem will
    be made available on):'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使可信数据库可用，我们挂载了光盘或 ISO 文件。要挂载光盘，我们将光盘放入驱动器并发出以下命令（`/dev/cdrom` 是设备，`/media`
    是文件系统将挂载的挂载点）：
- en: '[PRE32]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'To mount an ISO file, we issue the following command instead:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 要挂载 ISO 文件，我们发出以下命令：
- en: '[PRE33]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'After the trusted database was made available, we used `rpm` with the `-V`
    option, which verifies an installed package. By default, `rpm` uses the files
    in `/var/lib/rpm` as the database, so we used the `--dbpath` option to override
    this and instead point to our trusted copy:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在可信数据库可用后，我们使用带有 `-V` 选项的 `rpm`，该选项用于验证已安装的包。默认情况下，`rpm` 使用 `/var/lib/rpm` 中的文件作为数据库，因此我们使用
    `--dbpath` 选项覆盖这一设置，并指向我们的可信副本：
- en: '[PRE34]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'While we can provide one or more package names to check, the `-a` option will
    verify all of the packages installed on the system:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们可以提供一个或多个包名进行检查，`-a` 选项将会验证系统上所有已安装的包：
- en: '[PRE35]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '`rpm` runs through a series of tests, checking the size of files and their
    permissions, and reports those that fail one or more tests. No output means the
    files installed on your system are exactly as they were when they were first installed
    by the package(s). Otherwise, `rpm` displays a dot for those tests that pass and
    one of the following mnemonic indicators to show which tests fail:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '`rpm` 会通过一系列测试，检查文件的大小及其权限，并报告那些未通过测试的文件。没有输出表示系统上安装的文件与最初由包安装时完全一致。否则，`rpm`
    会显示一个点表示通过的测试，并使用以下记忆性指示符之一来显示哪些测试未通过：'
- en: '`S`: The size of the file has changed'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`S`：文件的大小已更改'
- en: '`M`: The file''s permissions have changed'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`M`：文件的权限已更改'
- en: '`5`: The MD5 checksum of the file does not match the expected checksum'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`5`：文件的 MD5 校验和与预期的校验和不匹配'
- en: '`L`: The symlink has changed'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`L`：符号链接已更改'
- en: '`D`: The device has changed'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`D`：设备已更改'
- en: '`U`: The user owner of the file has changed'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`U`：文件的用户所有者已更改'
- en: '`G`: The owning group of the file has changed'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`G`：文件的所属组已更改'
- en: '`T`: The file''s timestamp has changed'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`T`：文件的时间戳已更改'
- en: '`rpm` will also report if a file is missing.'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '`rpm` 还会报告如果文件丢失的情况。'
- en: 'However, not all discrepancies are bad. It''s up to us to know what changes
    are acceptable or not. Changes to a configuration file, for example, may be acceptable,
    but changes to a binary utility are certainly an indication of trouble. `rpm`
    differentiates configuration files by listing `c` next to the test results, which
    helps us differentiate them from other types of files:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，并不是所有的差异都是坏的。我们需要知道哪些更改是可接受的，哪些不是。例如，配置文件的更改可能是可接受的，但二进制工具的更改无疑是问题的指示。`rpm`
    通过在测试结果旁列出 `c` 来区分配置文件，这有助于我们将其与其他类型的文件区分开：
- en: '![How it works...](img/image_04_005.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![工作原理...](img/image_04_005.jpg)'
- en: Differences are reported when verifying the integrity of this system's packages
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在验证该系统包的完整性时，会报告差异
- en: See also
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: 'Refer to the following resources for more information on verifying the integrity
    of installed software:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 参考以下资源获取更多关于验证已安装软件完整性的信息：
- en: The `rpm` manual page (`man 8 rpm`)
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rpm` 手册页 (`man 8 rpm`)'
- en: Verifying files with Red Hat's RPM ([http://www.sans.org/security-resources/idfaq/rpm.php](http://www.sans.org/security-resources/idfaq/rpm.php))
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 验证文件与 Red Hat 的 RPM ([http://www.sans.org/security-resources/idfaq/rpm.php](http://www.sans.org/security-resources/idfaq/rpm.php))
- en: wodim cannot open SCSI drive ([http://www.linuxquestions.org/questions/linux-software-2/wodim-cdrecord-cannot-open-scsi-drive-4175544944/](http://www.linuxquestions.org/questions/linux-software-2/wodim-cdrecord-cannot-open-scsi-drive-4175544944/))
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: wodim 无法打开 SCSI 驱动器 ([http://www.linuxquestions.org/questions/linux-software-2/wodim-cdrecord-cannot-open-scsi-drive-4175544944/](http://www.linuxquestions.org/questions/linux-software-2/wodim-cdrecord-cannot-open-scsi-drive-4175544944/))
- en: Compiling a program from source
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从源代码编译程序
- en: Modern-day package managers make it easy to install software; with just a single
    command, we can install a program and its dependencies from any of our configured
    repositories. Yet an important value in the Linux community and free software
    movement is the ability to modify your software as you see fit (perhaps you want
    to fix a bug or add a new feature). For software written in a compiled language,
    such as C, this often means modifying the program's source code and compiling
    the code into an executable binary. This recipe walks you through compiling and
    installing the GNU Hello program.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 现代的包管理工具使得安装软件变得容易；只需一个命令，我们就能从任意配置的仓库中安装程序及其依赖项。然而，Linux 社区和自由软件运动中的一个重要价值是根据自己的需求修改软件（也许你想修复一个
    bug 或添加一个新功能）。对于用编译语言编写的软件，如 C，这通常意味着修改程序的源代码，并将代码编译成可执行的二进制文件。此教程将引导你完成编译并安装
    GNU Hello 程序的过程。
- en: Getting ready
  id: totrans-175
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 正在准备中
- en: This recipe requires a CentOS system with a working network connection. An unprivileged
    user account capable of escalating its privileges using `sudo` should also be
    available.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 本步骤要求CentOS系统有可用的网络连接，并且需要一个能够使用`sudo`提升权限的非特权用户账户。
- en: How to do it...
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Perform the following steps to compile and install the program from the source
    code:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤从源代码编译和安装程序：
- en: 'Using `sudo` to elevate your account''s privileges, install the `gcc` package:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`sudo`提升账户权限，安装`gcc`包：
- en: '[PRE36]'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Download the GNU Hello source code:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载GNU Hello源代码：
- en: '[PRE37]'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Enter the project''s directory:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入项目的目录：
- en: '[PRE38]'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Run the `configure` script using the `--help` argument to view the project''s
    build options. The output can be quite lengthy and you may find it beneficial
    to paginate the content using `less`:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`--help`参数运行`configure`脚本，以查看项目的构建选项。输出内容可能会非常长，您可能会发现使用`less`分页查看内容更为方便：
- en: '[PRE39]'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Run the `configure` script again, this time specifying any desired build options
    to generate a `Makefile` file:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次运行`configure`脚本，这次指定任何需要的构建选项来生成`Makefile`文件：
- en: '[PRE40]'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Invoke `make` which uses `Makefile` as a guide to compile the project:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用`make`，它使用`Makefile`作为指南来编译项目：
- en: '[PRE41]'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Using `sudo` to again escalate your privileges, install the program and its
    supporting files:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`sudo`再次提升权限，安装程序及其支持文件：
- en: '[PRE42]'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Now, we can run the `hello` program to display a friendly greeting:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以运行`hello`程序来显示友好的问候：
- en: '[PRE43]'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: How it works...
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: This recipe taught you the canonical `configure`, `make`, and `make install`
    route of compiling and installing software from the source code.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 本步骤向您展示了从源代码编译和安装软件的经典`configure`、`make`和`make install`过程。
- en: 'The minimal CentOS installation does not include a C compiler (a program that
    translates source code written in the C programming language into a binary, machine-executable
    format), so the first thing we did was install the GNU Compiler Collection. Because
    the package will be installed system-wide, elevated privileges were needed for
    `yum`:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 最小化的CentOS安装不包括C编译器（一个将C语言源代码翻译成二进制机器可执行格式的程序），因此我们做的第一件事就是安装GNU编译器集合。因为该软件包将在全系统范围内安装，所以需要使用提升的权限来运行`yum`：
- en: '[PRE44]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Note
  id: totrans-199
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Since the GNU Hello project is written in C and includes a pregenerated `configure`
    script, `gcc` is all we need. There may be other projects though for which you''ll
    need additional software, such as `autoconf`, to generate a `configure` scripts,
    or compiler support for other languages like Fortran, C++, Objective-C, and Go.
    For a more capable build environment, consider installing the `Development Tools`
    package group:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 由于GNU Hello项目是用C语言编写的，并且包括一个预生成的`configure`脚本，因此只需要`gcc`即可。不过，其他项目可能需要额外的软件，如`autoconf`来生成`configure`脚本，或其他语言（如Fortran、C++、Objective-C和Go）的编译器支持。为了获得更强大的构建环境，可以考虑安装`Development
    Tools`包组：
- en: '`**sudo yum groupinstall "Development Tools"**`'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '`**sudo yum groupinstall "Development Tools"**`'
- en: 'Next, we downloaded a copy of the project''s source code from its FTP server.
    The code is distributed as a compressed archive which we retrieved using `curl`.
    We omitted the `-O` argument that we used in previous recipes but piped the output
    directly to `tar` to decompress it. This results in the creation of a directory
    named `hello-2.10` that contains the project''s source code:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们从项目的FTP服务器下载了源代码的副本。该代码以压缩档案的形式分发，我们使用`curl`获取了该档案。我们省略了在之前的步骤中使用的`-O`参数，而是将输出直接传递给`tar`进行解压。这会创建一个名为`hello-2.10`的目录，里面包含项目的源代码：
- en: '[PRE45]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Quite often, a project will include several informative text files, so feel
    free to look around at the directory''s content. Some common files are:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 项目中通常会包含几个信息性文本文件，因此可以随意查看目录中的内容。一些常见的文件包括：
- en: '`README`: This gives a general overview of the project (name, version, description,
    and so on)'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`README`: 该文件提供了项目的概述（名称、版本、描述等）'
- en: '`CHANGELOG`: This lists the changes made in each release'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CHANGELOG`: 该文件列出了每个版本中的更改'
- en: '`INSTALL`: This contains installation instructions'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`INSTALL`: 该文件包含安装说明'
- en: '`LICENCE`: This contains license information governing the use and distribution
    of the project''s code'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LICENCE`: 该文件包含关于项目代码使用和分发的许可信息'
- en: If the project uses the GNU Autotools build system (which GNU Hello uses), we
    can expect to find a `configure` script in the collection of source files. The
    job of `configure` is to scan our system's build environment to ensure that any
    necessary tools and dependencies are available and to generate the `Makefile`
    file. `Makefile` will contain instructions that compile and install the program,
    and any options we pass to `configure` ultimately find their way into `Makefile`.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 如果项目使用GNU Autotools构建系统（如GNU Hello所用），我们可以预期在源文件集中找到`configure`脚本。`configure`的任务是扫描系统的构建环境，以确保任何必要的工具和依赖项可用，并生成`Makefile`文件。`Makefile`将包含编译和安装程序的指令，我们传递给`configure`的任何选项最终都会被包含进`Makefile`中。
- en: 'To see what options are available to us, we first ran `configure` with `--help`:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 为了查看我们可以使用的选项，我们首先运行`configure`并使用`--help`：
- en: '[PRE46]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Some of the options may be unique to the project while others are more general,
    having to do with setting paths and such as used in later parts of the build process.
    Some important general options are as follows:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 有些选项可能是项目特有的，而其他一些则更为通用，涉及设置路径等，这些将在构建过程的后续部分使用。以下是一些重要的通用选项：
- en: '`--prefix`: The base hierarchy in which the program and its files will be installed'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--prefix`：程序及其文件将安装的基础目录结构'
- en: '`--disable-FEATURE`: This compiles the program without enabling the target
    feature that would otherwise be enabled'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--disable-FEATURE`：在不启用目标功能的情况下编译程序，否则该功能将被启用'
- en: '`--enable-FEATURE`: This compiles the program with the optional target feature
    enabled'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--enable-FEATURE`：在编译程序时启用可选目标功能'
- en: '`--with-PACKAGE`: This links to a specific library needed for some feature'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--with-PACKAGE`：链接到某些功能所需的特定库'
- en: 'The second time we ran `configure`, we did so providing the `--prefix` option:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 第二次运行`configure`时，我们提供了`--prefix`选项：
- en: '[PRE47]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: The prefix value of `/usr/local` means that this directory will be prefixed
    to the various paths where the different files will be installed to. For example,
    when we install the program, the compiled `hello` file is copied to `PREFIX/bin`,
    which is `/usr/local/bin`, the project's manual page will be installed under `PREFIX/share/man`,
    which is `/usr/local/share/man`, and so on.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '`/usr/local`的前缀值意味着这个目录将被加到不同文件安装路径的前面。例如，当我们安装程序时，编译后的`hello`文件将被复制到`PREFIX/bin`，即`/usr/local/bin`，项目的手册页面将安装到`PREFIX/share/man`，即`/usr/local/share/man`，等等。'
- en: Note
  id: totrans-220
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'This recipe installs GNU Hello as a system-wide accessible program. But don''t
    forget, you can use the `--prefix` option to compile and install files to personal
    directories too:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程将GNU Hello作为系统范围内可访问的程序安装。但别忘了，你也可以使用`--prefix`选项将文件编译并安装到个人目录：
- en: '`**./configure --prefix=/home/tboronczyk/.personal**`'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '`**./configure --prefix=/home/tboronczyk/.personal**`'
- en: 'Once `configure` generated `Makefile`, we executed those statements with `make`
    to compile the project:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦`configure`生成了`Makefile`，我们就执行这些语句来用`make`编译项目：
- en: '[PRE48]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'By default, `make` looks for a file named `Makefile` in the current directory
    to run. If for whatever reason the target script is named differently, we can
    tell `make` which file to use with its `-f` option:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`make`会在当前目录中查找名为`Makefile`的文件并执行。如果由于某种原因目标脚本命名不同，我们可以通过`-f`选项告诉`make`使用哪个文件：
- en: '[PRE49]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Also, `Makefile` files often contain several sets of instructions or targets.
    Some common targets are as follows:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，`Makefile`文件通常包含多个指令集或目标。以下是一些常见的目标：
- en: '`all`: Compiles the program'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`all`：编译程序'
- en: '`check`: Runs any test suites that accompany the project to verify its proper
    functioning'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`check`：运行附带的测试套件，验证项目是否正常运行'
- en: '`clean`: Deletes any intermediate files created during the compilation process'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`clean`：删除在编译过程中创建的任何中间文件'
- en: '`distclean`: Deletes the files created during the configuration process or
    compilation process, leaving only those files in the original distribution'
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`distclean`：删除在配置过程或编译过程中创建的文件，仅保留原始发行版中的文件'
- en: '`dist`: Creates an archive to distribute the program'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dist`：创建一个归档文件以分发程序'
- en: '`install`: Installs the compiled program and any other necessary files to their
    final home on the system'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`install`：将编译后的程序和其他必要文件安装到系统的最终位置'
- en: '`uninstall`: Deletes files that were installed by `install`'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`uninstall`：删除`install`安装的文件'
- en: The default target if none are provided is `all`.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未提供目标，默认目标是`all`。
- en: Ideally, we don't want to compile software as `root` because it's possible for
    a `Makefile` to create arbitrary files in any location, something which can be
    taken advantage of by an attacker. Executing the file as a standard user blocks
    this attack vector simply because the unprivileged account doesn't have write-access
    to sensitive directories. This is why we used `sudo` only for the `install` target
    when we moved the program and its files to the directories under `/usr/local`.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 理想情况下，我们不希望以`root`身份编译软件，因为`Makefile`可以在任何位置创建任意文件，这是攻击者可以利用的一个点。以普通用户身份执行文件可以简单地阻止此攻击向量，因为非特权帐户没有对敏感目录的写访问权限。这就是为什么在将程序及其文件移动到`/usr/local`目录下时，我们仅为`install`目标使用`sudo`的原因。
- en: See also
  id: totrans-237
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: 'Refer to the following resources for more information on building software:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 有关构建软件的更多信息，请参考以下资源：
- en: GNU Hello ([http://www.gnu.org/software/hello](http://www.gnu.org/software/hello))
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GNU Hello ([http://www.gnu.org/software/hello](http://www.gnu.org/software/hello))
- en: RHEL7 Developer Guide ([https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Developer_Guide/index.html](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Developer_Guide/index.html))
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RHEL7 开发者指南 ([https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Developer_Guide/index.html](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Developer_Guide/index.html))
- en: Autotools Mythbuster ([http://autotools.io/](http://autotools.io/))
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Autotools Mythbuster ([http://autotools.io/](http://autotools.io/))
- en: 'CentOS Wiki: Set up an RPM Build Environment ([http://wiki.centos.org/HowTos/SetupRpmBuildEnvironment](http://wiki.centos.org/HowTos/SetupRpmBuildEnvironment))'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'CentOS Wiki: 设置 RPM 构建环境 ([http://wiki.centos.org/HowTos/SetupRpmBuildEnvironment](http://wiki.centos.org/HowTos/SetupRpmBuildEnvironment))'
