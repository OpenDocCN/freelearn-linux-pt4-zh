- en: Chapter 6. File Sharing with NFS
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章 NFS文件共享
- en: 'File sharing with **Network File System** (**NFS**) is the traditional way
    on Unix and Linux for remote hosts to be able to mount filesystems over a network
    and interact with them as if they were mounted locally. Although RHEL 7 supports
    both NFSv3 and NFSv4, there is no longer any support for NFSv2\. The RHEL 7 client
    will default to NFSv4 and falls back to NFSv3 if a connection cannot be established.
    Using NFSv4 simplifies location of services behind a firewall with only the TCP
    port `2049` required for client access; however, we will demonstrate both the
    NFSv4 and v3 firewall configurations. During this chapter, the following topics
    will be covered:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**网络文件系统**（**NFS**）共享文件是Unix和Linux上远程主机能够通过网络挂载文件系统并像本地挂载一样与之交互的传统方式。虽然RHEL
    7支持NFSv3和NFSv4，但不再支持NFSv2。RHEL 7客户端默认使用NFSv4，如果无法建立连接，则会回退到NFSv3。使用NFSv4简化了在防火墙后定位服务的过程，仅需要TCP端口`2049`供客户端访问；然而，我们将演示NFSv4和v3的防火墙配置。本章将涉及以下内容：
- en: Overview of NFS
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NFS概述
- en: Overview of the lab environment
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实验环境概述
- en: The NFS server configuration
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NFS服务器配置
- en: Using `exportfs`
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`exportfs`
- en: Hosting NFSv4 behind a firewall
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在防火墙后托管NFSv4
- en: Hosting NFSv3 behind a firewall
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在防火墙后托管NFSv3
- en: The NFS client configuration
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NFS客户端配置
- en: Auto-mounting NFS with `autofs`
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`autofs`自动挂载NFS
- en: An overview of NFS
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NFS概述
- en: We have been used to NFSv4 being included with Red Hat Enterprise Linux 6\.
    RHEL 7 includes additional support for `pNFS` (Parallel NFS) with NFSv4.1\. `pNFS`,
    providing security and performance enhancements, which allow more efficient connections
    to clients behind firewalls and **Network Address Translation** (**NAT**) routers.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经习惯了NFSv4在Red Hat Enterprise Linux 6中默认包含。RHEL 7新增了对`pNFS`（并行NFS）版本4.1的支持。`pNFS`提供了安全性和性能增强，使得在防火墙和**网络地址转换**（**NAT**）路由器后更加高效地连接客户端。
- en: Support for NFSv2 is no longer available, which is no great loss, as it did
    not support file sizes above 2 GB and was not as robust as version 3 and 4.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 不再支持NFSv2，这并不是什么大损失，因为它不支持超过2GB的文件大小，并且没有版本3和4那样健壮。
- en: 'Using NFSv4, mounting and locking protocols are incorporated in a *batteries
    included* philosophy. This allows the use of just the one TCP port: `2049`. However,
    with NFSv3, we have to use `rpcbind` and set static ports for additional services
    so that a firewall can be configured. This simplifies the firewall configuration,
    which you will see later, as access only to the TCP port `2049` is required.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 使用NFSv4时，挂载和锁定协议都采用了*一切打包*的理念。这使得仅使用一个TCP端口`2049`就足够。然而，使用NFSv3时，我们必须使用`rpcbind`并为额外的服务设置静态端口，以便配置防火墙。这简化了防火墙配置，稍后您将看到，配置只需要访问TCP端口`2049`。
- en: 'Both the server and client tools are installed together from the `nfs-utils`
    package. This package includes tools for both the NFSv4 and V3 protocols. It also
    includes other useful tools such as `nfsiostat` that can be used to monitor NFS
    shares usage on an NFS server. To list the contents of an installed package, you
    can use the `rpm` command, as shown in the following command lines that can be
    run as a standard user:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器和客户端工具都来自`nfs-utils`包进行安装。此包包含NFSv4和v3协议的工具，还包括其他有用的工具，例如`nfsiostat`，可以用于监控NFS服务器上共享文件的使用情况。要列出已安装包的内容，可以使用`rpm`命令，以下命令行可以作为普通用户运行：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Overview of the lab environment
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实验环境概述
- en: For demonstrations is this chapter, we will use two virtual machines running
    in an **Oracle VirtualBox** virtualization environment. VirtualBox can be downloaded
    from [https://www.virtualbox.org/](https://www.virtualbox.org/) free of charge
    and is available for Windows, Mac OS X, Linux, and Solaris hosts.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 本章演示中，我们将使用在**Oracle VirtualBox**虚拟化环境中运行的两台虚拟机。VirtualBox可以从[https://www.virtualbox.org/](https://www.virtualbox.org/)免费下载，并且支持Windows、Mac
    OS X、Linux和Solaris主机。
- en: The NFS Server will be configured on the RHEL 7.1 host with the IP address of
    `192.168.10.10` and the hostname of `nfshost`. The NFS client will be configured
    on the RHEL 7.1 host with the IP address of `192.168.10.11` and the hostname of
    `nfsclient`.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: NFS服务器将在IP地址为`192.168.10.10`、主机名为`nfshost`的RHEL 7.1主机上配置。NFS客户端将在IP地址为`192.168.10.11`、主机名为`nfsclient`的RHEL
    7.1主机上配置。
- en: 'Both machines were installed with a minimal configuration; we have installed
    the `nfs-utils` package on both hosts, as shown in the following code:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 两台机器都以最小配置安装；我们在两台主机上都安装了`nfs-utils`包，如下所示：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Additionally, on the `nfshost` host, we have installed the net-tools package
    so that we can display open ports with the `netstat` command. The command to install
    `net-tools` is as follows:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在`nfshost`主机上，我们安装了net-tools软件包，以便我们可以使用`netstat`命令显示打开的端口。安装`net-tools`的命令如下：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The firewall is running the default setup and is managed with the `firewall-cmd`
    command. To allow NFSv4 connections to `nfshost`, we have additionally opened
    the TCP port `2049` using the following commands:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 防火墙正在运行默认设置，并通过`firewall-cmd`命令进行管理。为了允许NFSv4连接到`nfshost`，我们使用以下命令额外开放了TCP端口`2049`：
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Tip
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: We will cover more on firewall on RHEL 7 later in this chapter and also look
    at how to use the`firewall-cmd` and `firewalld` service in detail in [Chapter
    11](part0090.xhtml#aid-2LQIK1 "Chapter 11. Network Security with firewalld"),
    *Network Security with firewalld*, of this book.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章稍后介绍RHEL 7上的防火墙，并且会详细讲解如何在本书的[第11章](part0090.xhtml#aid-2LQIK1 "第11章. 使用firewalld进行网络安全")，*使用firewalld进行网络安全*一章中使用`firewall-cmd`和`firewalld`服务。
- en: NFS not only uses a firewall to protect the server, but also supports TCP wrappers
    to control access. The rights to access a service can be determined by the use
    of the `/etc/hosts.allow` and `/etc/hosts.deny` files.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: NFS不仅使用防火墙来保护服务器，还支持TCP包装器来控制访问。访问服务的权限可以通过使用`/etc/hosts.allow`和`/etc/hosts.deny`文件来决定。
- en: The NFS server configuration
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NFS服务器配置
- en: To configure the NFS server, we choose which directories we want to share. The
    terminology used in NFS to share a directory is *to export* the directory; therefore,
    shared directories are known as **exports**.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要配置NFS服务器，我们需要选择希望共享的目录。NFS中用于共享目录的术语是*导出*目录；因此，共享的目录被称为**导出**。
- en: 'To permanently export a directory, we add the configuration to the /`etc/exports`
    file. This file exists, but will be empty on a new system. The `nfs-server` service
    will read this file on startup to determine which directories should be available
    to the network client. If `/etc/exports` is changed, reloading the `nfs-server`
    service will force the service to reread the file, as shown in the following command
    line:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 要永久导出一个目录，我们需要将配置添加到/`etc/exports`文件中。该文件是存在的，但在新系统中会为空。`nfs-server`服务在启动时会读取此文件，以确定哪些目录应该对网络客户端可用。如果`/etc/exports`文件发生更改，重新加载`nfs-server`服务将强制该服务重新读取文件，如下所示的命令行：
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: To display the current exports on the server, we can use the `exportfs` or `showmount`
    command. We will now take a little time to start the required services and create
    our first simple export.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 要显示服务器上的当前导出，我们可以使用`exportfs`或`showmount`命令。现在我们将花一点时间来启动所需的服务并创建我们的第一个简单导出。
- en: 'Firstly, we will need to start the required services. We can start and enable
    each service independently, but in the spirit of automation, we will write a simple
    loop at Command Prompt to save some typing and time. We will use `sudo`; your
    user account will need to be listed within the `sudoers` file. Once you are sure
    that you have access to `sudo`, the command will be executed as follows:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要启动所需的服务。我们可以独立启动并启用每个服务，但为了自动化的精神，我们将在命令提示符下编写一个简单的循环，以节省一些打字和时间。我们将使用`sudo`；你的用户账户需要在`sudoers`文件中列出。一旦确保你有权限使用`sudo`，命令将如下执行：
- en: '[PRE5]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'If it makes the syntax clearer to you, the following screenshot shows the command
    as executed on `nfshost`:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这使语法对你来说更清晰，下面的截图显示了在`nfshost`上执行的命令：
- en: '![The NFS server configuration](img/image00254.jpeg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![NFS服务器配置](img/image00254.jpeg)'
- en: Simple exports
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简单的导出
- en: 'Without editing the `/etc/exports` file, we cannot export anything on the filesystem.
    As a result, there will be no output when we display the local exports using `exportfs`,
    as shown in the following command line:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不编辑`/etc/exports`文件，我们无法导出文件系统中的任何内容。因此，当我们使用`exportfs`显示本地导出时，将没有输出，如下所示的命令行：
- en: '[PRE6]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We will have little luck with the `showmount` command, as shown in the following
    screenshot:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在使用`showmount`命令时将不会有太多运气，如下图所示：
- en: '![Simple exports](img/image00255.jpeg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![简单导出](img/image00255.jpeg)'
- en: As you can see, the `showmount` command will show the export list heading, but,
    of course, the list is empty until we explicitly define some exported directories.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，`showmount`命令会显示导出列表的标题，但当然，列表为空，直到我们明确地定义一些导出的目录。
- en: Tip
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The `showmount` command can be used on remote hosts, such as the `nfsclient`,
    to list exported directories, but this will depend on additional services. So,
    the firewall on `nfshost` will need to be configured for NFSv3\. We will discuss
    this later in this chapter.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`showmount` 命令可以在远程主机上使用，比如 `nfsclient`，以列出已导出的目录，但这将依赖于额外的服务。因此，`nfshost`
    的防火墙需要为 NFSv3 配置。我们将在本章后面讨论这一点。'
- en: 'I accept that sharing nothing, nada, zilch is not the most exciting feature
    that you will find in this book, at least we have discovered some useful tools
    such as `exportfs` and `showmount`. We will now export an existing directory just
    to get used to NFS. To do this, we will need to edit as root the `/etc/exports`
    file; we can do this using `sudo`. You can log in as root directly or with the
    `su` command. We will add the following line to export or share the `/usr/share/doc`
    directory. This is just a simple test. We will add our own directories and content
    later. For our demonstration, we will stick to using `vi` in order to edit the
    file; however, you are welcome to use your favorite editor:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我承认什么都不共享，什么也没有，可能不是本书中最令人兴奋的功能，但至少我们发现了一些有用的工具，如 `exportfs` 和 `showmount`。接下来，我们将导出一个现有目录，仅仅是为了熟悉
    NFS。为此，我们需要以 root 身份编辑 `/etc/exports` 文件；我们可以使用 `sudo` 来完成。你可以直接以 root 身份登录，也可以使用
    `su` 命令。我们将添加以下行以导出或共享 `/usr/share/doc` 目录。这只是一个简单的测试，稍后我们将添加自己的目录和内容。为了演示，我们将坚持使用
    `vi` 来编辑文件；不过，你也可以使用你喜欢的编辑器：
- en: '[PRE7]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'With the file open and without the contents on a new NFS server, we can add
    the following line to export the `/usr/share/doc` directory:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 打开文件后，在没有新 NFS 服务器内容的情况下，我们可以添加以下行来导出 `/usr/share/doc` 目录：
- en: '[PRE8]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Using the `cat` command, we can show the filename that we should be editing
    and the files'' content once the edit is complete, as shown in the following screenshot:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `cat` 命令，我们可以显示应编辑的文件名以及编辑完成后文件的内容，如以下截图所示：
- en: '![Simple exports](img/image00256.jpeg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![简单的导出](img/image00256.jpeg)'
- en: Having exported a directory, we should be able to see this using `exportfs`
    or `showmount`.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 导出一个目录后，我们应该能够通过 `exportfs` 或 `showmount` 来查看它。
- en: Tip
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The `exportfs` command requires administrative access, whereas `showmount` does
    not.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '`exportfs` 命令需要管理员权限，而 `showmount` 命令则不需要。'
- en: 'However, before we get ahead of ourselves, we need to recall that the `nfs-server`
    service reads this file when it starts up and is currently running. We can restart
    this service, but it will be better to reload the service. In this way, there
    is no need to bring the service down if the remote hosts currently have mounted
    exports. Running the following command will reload the service and then display
    the exports directory or directories:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在我们进一步讨论之前，我们需要回顾一下，`nfs-server` 服务在启动时会读取此文件，并且当前正在运行。我们可以重启该服务，但最好重新加载该服务。通过这种方式，如果远程主机当前已挂载了导出的目录，就无需停止该服务。运行以下命令将重新加载该服务，然后显示导出目录或多个目录：
- en: '[PRE9]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The output from both commands previously listed is now displayed in the following
    screenshot:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 之前列出的两个命令的输出现在显示在以下截图中：
- en: '![Simple exports](img/image00257.jpeg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![简单的导出](img/image00257.jpeg)'
- en: When we defined exports, we exported a directory to all hosts denoted with an
    asterix symbol; any options for the export are included within parenthesis. We
    specified the export as read only with the inclusion of the `ro` option.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们定义导出时，我们将一个目录导出到所有主机，这些主机用星号符号表示；任何导出的选项都包含在括号中。我们通过添加 `ro` 选项指定该导出为只读。
- en: 'As a simple test, we can now use the `nfsclient` host to access this export.
    From the console of the `nfsclient`, we can access the exported directory and
    mount it to the local `/mnt` directory on the `nfsclient` using the following
    command:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个简单的测试，我们现在可以使用 `nfsclient` 主机访问此导出。从 `nfsclient` 的控制台中，我们可以访问已导出的目录，并使用以下命令将其挂载到
    `nfsclient` 本地的 `/mnt` 目录：
- en: '[PRE10]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: We can use either the IP address or the hostname of the server as long as the
    hostname is resolvable via DNS, **mDNS** (**Multicast DNS**), or the localhost's
    file. The end of the server hostname or IP address must be denoted with a colon.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用服务器的 IP 地址或主机名，只要该主机名能够通过 DNS、**mDNS**（**多播 DNS**）或本地主机文件解析。服务器主机名或 IP
    地址的末尾必须以冒号表示。
- en: 'We can easily list the contents of the exported directory using the standard
    `ls` command against the `/mnt` directory. The truncated output from the ls command
    is shown in the following screenshot:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用标准的 `ls` 命令轻松列出导出目录的内容，针对的是 `/mnt` 目录。以下截图显示了 `ls` 命令的截断输出：
- en: '![Simple exports](img/image00258.jpeg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![简单导出](img/image00258.jpeg)'
- en: Advanced exports
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 高级导出
- en: We have seen how simple life can be for a Linux system administrator if only
    simple exporting of directories is all that is needed. However, although this
    option may fit some directory exports and servers, others may require a little
    more time and effort.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到，如果仅需要简单的目录导出，Linux 系统管理员的工作可以变得多么简单。然而，尽管这个选项可能适用于一些目录导出和服务器，但其他情况可能需要更多的时间和精力。
- en: 'The basic directive within the `/etc/exports` file is as follows:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '`/etc/exports` 文件中的基本指令如下：'
- en: '[PRE11]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The structure of these variables is as follows:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这些变量的结构如下：
- en: '`export`: This is the directory on the NFS server being exported or shared'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`export`：这是在 NFS 服务器上被导出或共享的目录。'
- en: '`host`: This is the host or network to which the exported directory is shared'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`host`：这是导出目录共享的主机或网络。'
- en: '`options`: These are specific options to be used by a host or network that
    proceeds the parenthesis'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`options`：这些是由主机或网络在括号后使用的特定选项。'
- en: 'It''s also possible to write a single entry to share one export with different
    options to different hosts or networks, as shown in the following example code:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以通过写一个单独的条目，将一个导出共享给不同的主机或网络，具有不同的选项，如下示例代码所示：
- en: '[PRE12]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Expanding this to actual values in place of the variables a working example
    to allow read/write access to `192.168.10.11` but read-only access to all other
    hosts, we can examine the following code:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 将这些变量扩展为实际值，替换后的工作示例如下：允许 `192.168.10.11` 具有读写访问权限，而对所有其他主机只有只读访问权限，我们可以查看以下代码：
- en: '[PRE13]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Options are comma-separated, and we have additionally added the `sync` option
    in the options for the `nfsclient 192.168.10.11`. The `sync` option will ensure
    that writes to this export are written to disk on demand, rather than waiting
    for write-buffers to be flushed to the disk. Linux uses a system of buffering
    that promotes the use of dirty-cache buffers. These are written to disk as numbers
    grow. The `sync` option ensures that these buffers are written to the disk immediately.
    This has a negative impact on performance, but can be more reliable as connections
    are not always maintained.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 选项是以逗号分隔的，我们在 `nfsclient 192.168.10.11` 的选项中额外添加了 `sync` 选项。`sync` 选项将确保对该导出的写入操作会即时写入磁盘，而不是等待写缓冲区被刷新到磁盘。Linux
    使用一种缓冲系统，促进脏缓存缓冲区的使用。这些缓冲区会随着数字的增长被写入磁盘。`sync` 选项确保这些缓冲区会立即写入磁盘。尽管这会对性能产生负面影响，但在连接不总是保持的情况下，它可以更可靠。
- en: If a single line in the `/etc/exports` file becomes too long, then it can be
    wrapped using the backslash (`\`) character. Within a file, each export must be
    represented with its own individual line. Additional blank lines are ignored and
    can be added for readability. Lines may be configured to be ignored by the server
    if they are commented with the line starting with the hash (`#`) character.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 `/etc/exports` 文件中的单行过长，则可以使用反斜杠（`\`）字符进行换行。在文件中，每个导出必须单独占一行。额外的空白行会被忽略，可以添加以提高可读性。如果行以井号（`#`）字符开头，则该行会被服务器忽略。
- en: Tip
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: If the read/write access is granted to the export and the filesystem is read
    only to the user, they still have read-only access. If the export is set to read
    only and the filesystem would normally allow read and write access to the user,
    they still have read-only access. Quite simply, when combining file and export
    permissions, the most restrictive permission is effective.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如果导出授予了读写访问权限，而文件系统对用户是只读的，那么他们仍然只有只读访问权限。如果导出设置为只读，而文件系统通常会允许用户的读写访问，那么他们仍然只有只读访问权限。简单来说，当结合文件和导出权限时，最严格的权限将生效。
- en: 'If we are to be 100 percent accurate, the options for an export are optional.
    If an option is not set, the default option will apply. We can then rewrite the
    previous example making use of the defaults as follows:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们要确保百分百准确，导出的选项是可选的。如果没有设置选项，将应用默认选项。然后我们可以重写之前的示例，利用默认值，如下所示：
- en: '[PRE14]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'From the modified example, you should be able to guess correctly that the `ro`
    and `sync` default options are no longer explicitly set, but they will still be
    effective. The effective options for an exported directory can be seen using the
    `exportfs` command with the `-v` option, as show in the following command:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 从修改后的示例中，您应该能够正确猜测，`ro` 和 `sync` 默认选项不再显式设置，但它们仍然有效。可以使用 `exportfs` 命令和 `-v`
    选项查看导出目录的有效选项，如以下命令所示：
- en: '[PRE15]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: If an option is not set and displayed in the output of the previous command,
    then you will see the default option.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有设置选项，并且在前一个命令的输出中没有显示该选项，则会看到默认选项。
- en: 'The default options for the NFS server include the following; more details
    can be found on the `man` page:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: NFS服务器的默认选项包括以下内容；更多详情请参阅`man`页面：
- en: '`ro`: This makes the exported filesystem as read only on the remote host.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ro`：这使得导出的文件系统在远程主机上变为只读。'
- en: '`sync`: The NFS server writes changes to the disk before responding to new
    requests.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sync`：NFS服务器在响应新请求之前会将更改写入磁盘。'
- en: '`wdelay`: This is used with the `sync` option; the NFS server will delay writing
    to the disk and more writes are anticipated imminently.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`wdelay`：与`sync`选项一起使用；NFS服务器将延迟写入磁盘，预计会有更多写入操作马上进行。'
- en: '`root_squash`:The remote users connecting as root or `UID 0` are changed to
    `nfsnobody` and as such, we will only be able to collect permissions granted to
    others. This effectively squashes the permissions of root access remotes, preventing
    unauthorized root access to exported filesystems.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`root_squash`：远程用户以root或`UID 0`身份连接时，会被更改为`nfsnobody`，因此我们将只能收集授予其他用户的权限。这有效地压制了root访问的权限，防止了未授权的root访问导出的文件系统。'
- en: 'We will now amend the `/etc/exports` file to represent two sets of hosts that
    we will export to and verify that we can connect from the designated host `192.168.10.11`.
    The export is set to `rw`, which supersedes the `ro` option set to all hosts with
    `*`. We will use `echo` to overwrite the `exports` file so that you can see the
    edit being made through to the file along with other commands. These commands
    are listed in the following example with a supporting screenshot to display export
    options:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将修改`/etc/exports`文件，以表示我们将导出到的两个主机集，并验证我们可以从指定的主机`192.168.10.11`连接。导出设置为`rw`，这将覆盖设置为所有主机`*`的`ro`选项。我们将使用`echo`命令覆盖`exports`文件，以便您可以看到文件中的编辑内容以及其他命令。以下示例列出了这些命令，并附有截图以展示导出选项：
- en: '[PRE16]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![Advanced exports](img/image00259.jpeg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![高级导出](img/image00259.jpeg)'
- en: From the preceding screenshot, we can see that the `192.168.10.11` host has
    read/write access, whereas `<world>` or all other hosts have read-only access.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的截图中，我们可以看到`192.168.10.11`主机具有读写访问权限，而`<world>`或其他所有主机仅具有只读访问权限。
- en: Tip
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Be cautious with spaces**'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '**小心空格**'
- en: 'The format of the `/etc/exports` file is very precise and no spaces should
    precede the host/network before the options for that host. The following entries
    have very different meanings:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '`/etc/exports`文件的格式非常精确，主机/网络前不应有空格，选项应紧跟其后。以下条目具有非常不同的含义：'
- en: '[PRE17]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Pseudo-root
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 伪根目录
- en: As you can see in the `/usr/share/doc` current export, it's normal for the complete
    path of the exported directory to be used when accessing it on the server. It's
    possible to simplify paths that are needed to access exported directories using
    a pseudo-root directory on the server. This is only an option for NFSv4 servers
    and clients. With the pseudo-root directory in place, we can mount other directories
    to that path. Let's take a look at this on our `nfshost`.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如您在`/usr/share/doc`当前导出中看到的那样，访问服务器时，导出目录的完整路径是正常的。通过在服务器上使用伪根目录，可以简化访问导出目录所需的路径。这仅适用于NFSv4服务器和客户端。伪根目录设置完成后，我们可以将其他目录挂载到该路径。让我们在`nfshost`上查看这一点。
- en: We will clear the current exported directory. This time, we will set up sharing
    from scratch with a little thought and planning.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将清空当前的导出目录。这一次，我们将从头开始设置共享，稍加思考和规划。
- en: 'Firstly, we will create a new directory on `nfshost` that will act as the pseudo-root
    directory:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将在`nfshost`上创建一个新的目录，作为伪根目录：
- en: '[PRE18]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: We can create this directory and set mode or permissions at the same time. Here,
    we set permissions to all users and include the sticky bit so that users can only
    delete the files that they own.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以同时创建该目录并设置模式或权限。在这里，我们设置了所有用户的权限，并包含了粘滞位，以便用户只能删除他们拥有的文件。
- en: 'Next, we will overwrite the current exports within the `/etc/exports` file
    with the newly created directory:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将在`/etc/exports`文件中覆盖当前的导出设置，使用新创建的目录：
- en: '[PRE19]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'These commands are run on `nfshost` and shown in the following screenshot:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这些命令在`nfshost`上运行，并显示在以下截图中：
- en: '![Pseudo-root](img/image00260.jpeg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![伪根目录](img/image00260.jpeg)'
- en: 'There are two new options that we implement here:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们实现了两个新选项：
- en: '`fsid=0`: This sets the directory as the root directory of the server when
    accessed over NFS. In this way, the `/var/export` directory is accessed from the
    remote client as `192.168.10.10:/`.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fsid=0`：这将该目录设置为通过NFS访问时服务器的根目录。这样，`/var/export`目录将从远程客户端以`192.168.10.10:/`的方式访问。'
- en: '`crossmnt`: This is the clever option that we need in order to allow access
    to directories that are mounted underneath this mount point. To mount directories
    to this export, we will use the `mount --bind` command. This will be covered very
    shortly.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`crossmnt`：这是我们需要的一个巧妙选项，用于允许访问挂载点下的目录。为了将目录挂载到该导出点，我们将使用`mount --bind`命令。稍后将详细介绍。'
- en: Setting the export option as read/write enables us to control access using file
    permissions on the `nfshost`. Any user will have full permission to the export
    when accessing from the `nfsclient`, so restrictions will need to be made in the
    filesystem.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 设置导出选项为读/写模式可以让我们通过`nfshost`上的文件权限来控制访问权限。任何用户在从`nfsclient`访问时都会拥有完全权限，因此需要在文件系统中进行限制。
- en: 'With the NFS root in place, we can make any directory within the filesystem
    available after this entry point. We will need to create subdirectories as mount
    points within the `/var/exports` directory and then mount the local targets to
    these mount points. We will add a central shared directory called `/home/marketing`
    and mount this and the existing `/usr/share/doc` directory after the newly created
    `exports` directory. The commands to achieve this are shown in the following command
    lines:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 设置好NFS根目录后，我们可以让文件系统中的任何目录在该入口点之后变得可用。我们需要在`/var/exports`目录中创建子目录作为挂载点，然后将本地目标挂载到这些挂载点。我们将添加一个名为`/home/marketing`的中央共享目录，并将其与现有的`/usr/share/doc`目录一起挂载到新创建的`exports`目录后面。实现这一操作的命令如下所示：
- en: '[PRE20]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The following bullet points explain the preceding command line steps:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 以下要点解释了前述命令行步骤：
- en: After working through the list of commands, we first create the central shared
    directory that we will add after the `/home` structure. This may be desired due
    to partitioning and quota settings that dictate that the marketing directory should
    be on the `/home` partition.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在执行完命令列表后，我们首先创建了一个中央共享目录，这个目录将在`/home`结构之后添加。这样做可能是由于分区和配额设置，要求`marketing`目录位于`/home`分区上。
- en: We add a document to this directory so that we are able to view some content.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们在此目录中添加一个文档，以便查看一些内容。
- en: The third command in the list creates both the doc and marketing directories.
    We will use these directories as mount points. These directories are created in
    the `/var/exports` NFS root.
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表中的第三条命令创建了`doc`和`marketing`目录。我们将把这些目录用作挂载点。这些目录是在`/var/exports`的NFS根目录中创建的。
- en: The final two commands mount the local directories to their export mount points.
    In this way, we can easily add any directory to be available directly after /var/exports.
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后的两条命令将本地目录挂载到其导出挂载点。通过这种方式，我们可以轻松地将任何目录直接添加到`/var/exports`之后可用。
- en: 'Listing the contents on the `/var/exports/marketing` directory should show
    the file we created in the `/home/marketing` directory. Refer to the following
    screenshot:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 列出`/var/exports/marketing`目录的内容应显示我们在`/home/marketing`目录中创建的文件。请参见以下截图：
- en: '![Pseudo-root](img/image00261.jpeg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![伪根](img/image00261.jpeg)'
- en: In the same way, looking at the contents of `/var/exports/doc` should show the
    contents of `/usr/share/doc`.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，查看`/var/exports/doc`的内容应该显示`/usr/share/doc`的内容。
- en: 'For permanency of local mounts, we will need to add them to the `/etc/fstab`
    file in the following format:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保本地挂载的持久性，我们需要将它们添加到`/etc/fstab`文件中，格式如下：
- en: '[PRE21]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'We will now edit the `fstab` file as root and add these two lines to the end
    of the file to ensure that the mount points are populated during boot:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将以root身份编辑`fstab`文件，并在文件末尾添加这两行，以确保在启动时挂载点被填充：
- en: '[PRE22]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'When you return to the `nfsclient` system, you will be able test both exports
    and permissions. The original `/home/marketing` directory is writable, whereas
    the `/usr/share/doc` directory is not:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 当你返回到`nfsclient`系统时，可以测试这两个导出和权限。原始的`/home/marketing`目录是可写的，而`/usr/share/doc`目录则不可写：
- en: 'From the `nfsclient` system we can issue the following commands:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在`nfsclient`系统上，我们可以执行以下命令：
- en: '[PRE23]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Now the file path is simpler, being able to access both folders with a single
    path from the server's NFS root. We should also note that although the exported
    directory is read/ write, we can write to the `marketing` directory using the
    first `touch` command, but the second `touch` command will fail as the target
    filesystem is read only.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 现在文件路径变得更简洁，能够通过服务器的NFS根目录使用单一路径访问两个文件夹。我们还需要注意，尽管导出的目录是读/写的，我们可以通过第一个`touch`命令写入`marketing`目录，但第二个`touch`命令会失败，因为目标文件系统是只读的。
- en: Using exportfs to create temporary exports
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`exportfs`创建临时导出
- en: 'It''s not always desirable to create permanent exports within the `/etc/exports`
    file. Should you want to define a new export temporarily, you can use the `exportfs`
    command. As we have already defined the NFS root to be `/var/exports`, all directories
    that we export must be after that structure. Let''s temporarily export `/var/export/doc`
    to all hosts. We can do so using the following command:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在`/etc/exports`文件中创建永久导出并不总是理想的。如果您想临时定义一个新的导出，可以使用`exportfs`命令。由于我们已经将NFS根目录定义为`/var/exports`，因此我们导出的所有目录都必须位于该结构之后。让我们临时将`/var/export/doc`导出到所有主机。可以使用以下命令：
- en: '[PRE24]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'On the next restart of `nfs-server`, this export will be lost; however, if
    you need to delete it ahead of this, you can implement the following command:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在下次重启`nfs-server`时，此导出将丢失；然而，如果您需要在此之前删除它，可以执行以下命令：
- en: '[PRE25]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Should you need to include export options with the temporary export, use the
    `-o` option in a similar manner, as shown in the following command:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要为临时导出添加导出选项，请像以下命令所示，使用`-o`选项进行配置：
- en: '[PRE26]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'To display the current exports, you can run `exportfs` by itself:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 要显示当前的导出信息，可以单独运行`exportfs`命令：
- en: '[PRE27]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Hosting NFSv4 behind a firewall
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在防火墙后托管NFSv4
- en: When you access the NFS server using v4 of the protocol on both the client and
    server, the firewall configuration is quite simple with only the TCP port `2049`
    required to be opened. The default firewall daemon on RHEL 7 is `firewalld` and
    is managed from the command line using `firewall-cmd`.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 当您使用v4协议访问NFS服务器时，客户端和服务器都使用v4协议，防火墙配置非常简单，只需要打开TCP端口`2049`。RHEL 7的默认防火墙守护进程是`firewalld`，并且可以通过命令行使用`firewall-cmd`进行管理。
- en: We have been running the standard firewall for our demonstrations thus far just
    opening the one additional port `2049`, as detailed in the lab overview earlier
    in this section.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们一直在使用标准防火墙进行演示，只打开了一个额外的端口`2049`，正如本节实验概述中所述。
- en: 'We can list the current firewall configuration using the following command:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用以下命令列出当前的防火墙配置：
- en: '[PRE28]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The output is shown in the following screenshot:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下截图所示：
- en: '![Hosting NFSv4 behind a firewall](img/image00262.jpeg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![在防火墙后托管NFSv4](img/image00262.jpeg)'
- en: 'Should you need to remove the port setting that we added, this can be done
    using the following commands:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要移除我们添加的端口设置，可以使用以下命令：
- en: '[PRE29]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Of course, a client can no longer access the NFS exports. We have the choice
    of adding ports or service entries. To add a service entry, the port and associated
    service needs to be defined in the `/etc/services` file. This can be easily checked
    using the `grep` command. An example is shown in the following command:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，客户端将无法再访问NFS导出。我们可以选择添加端口或服务条目。要添加服务条目，需要在`/etc/services`文件中定义端口及相关服务。可以使用`grep`命令轻松检查此文件。以下命令展示了一个例子：
- en: '[PRE30]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'We do have an entry for the port `2049` and the service is called `nfs`. To
    use the service name in the firewall configuration, you may use the following
    command:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 我们确实有一个`2049`端口的条目，且该服务被称为`nfs`。若要在防火墙配置中使用服务名称，可以使用以下命令：
- en: '[PRE31]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'This is illustrated with the following screenshot:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 这一点在下图中有所说明：
- en: '![Hosting NFSv4 behind a firewall](img/image00263.jpeg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![在防火墙后托管NFSv4](img/image00263.jpeg)'
- en: With the service now allowed in all firewall rules, we can continue to access
    the NFS export from `nfsclient`. If you want to use tools like `showmount` remotely
    or if you have NFSv3 clients, you will need to open more ports and set some ports
    statically.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，所有防火墙规则都允许该服务，我们可以继续从`nfsclient`访问NFS导出。如果您想远程使用`showmount`等工具，或者如果您有NFSv3客户端，则需要打开更多端口并静态设置一些端口。
- en: Hosting NFSv3 behind a firewall
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在防火墙后托管NFSv3
- en: 'If we try to use the `showmount` command from the `nfsclient`, we should be
    able to list exports on the remote NFS server. The syntax will be as follows:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们尝试从`nfsclient`使用`showmount`命令，我们应该能够列出远程NFS服务器上的导出。语法如下：
- en: '[PRE32]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The command and the corresponding error are shown in the following screenshot:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是命令和相应的错误截图：
- en: '![Hosting NFSv3 behind a firewall](img/image00264.jpeg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![防火墙后面的NFSv3托管](img/image00264.jpeg)'
- en: 'At this stage, we can choose from the following options:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在此阶段，我们可以选择以下选项：
- en: Pack our bags and go home, perhaps it will be better tomorrow
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收拾行李回家吧，也许明天会更好。
- en: Google the error
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google搜索错误
- en: Debug the error ourselves
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自行调试错误
- en: Diagnosing NFSv3 issues
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 诊断NFSv3问题
- en: 'Now, Google is often really good at helping us, but you fail to learn fault-finding
    techniques, so let''s opt out of option 3 and install the `tcpdump` command-line
    packet analyzer so that we can see what is happening. This can be installed on
    `nfsclient` using `yum` as follows:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，Google通常在帮助我们方面做得很好，但如果你不学习故障排查技巧，那就失败了。所以让我们放弃第三个选项，安装`tcpdump`命令行数据包分析器，这样我们就能看到发生了什么。这可以通过`yum`在`nfsclient`上安装，命令如下：
- en: '[PRE33]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'To capture network traffic between the `nfsclient` and the `nfshost` and to
    print port numbers that are being accessed, we can use the following command:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 要捕获`nfsclient`和`nfshost`之间的网络流量并打印被访问的端口号，我们可以使用以下命令：
- en: '[PRE34]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'The options to `tcpdump` used here are listed as follows:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 这里使用的`tcpdump`选项列出如下：
- en: '`-nn`: This shows the host IP addresses and port numbers and not their names.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-nn`：此选项显示主机的IP地址和端口号，而不是其名称。'
- en: '`-i`: This is the interface to be used. You will need to use the correct interface
    name, where we have used `enp0s8` as the interface we need to listen on.'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-i`：这是要使用的接口。你需要使用正确的接口名称，我们使用的是`enp0s8`，这是我们需要监听的接口。'
- en: '`host 192.168.10.10`: This displays traffic to and from this host. This is
    the IP address for the `nfshost`.'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`host 192.168.10.10`：这显示了该主机的进出流量。这是`nfshost`的IP地址。'
- en: 'From another console or the SSH session, try the `showmount` command again.
    While viewing the console where `tcpdump` is running, we should try to access
    the UDP port `111` on the server twice and report the error. The output is shown
    from my system in the following screenshot:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在另一个控制台或SSH会话中，再次尝试`showmount`命令。与此同时，在运行`tcpdump`的控制台中，我们应尝试两次访问服务器上的UDP端口`111`并报告错误。以下截图展示了我系统的输出：
- en: '![Diagnosing NFSv3 issues](img/image00265.jpeg)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![诊断NFSv3问题](img/image00265.jpeg)'
- en: The UDP Port `111` is not open in the firewall configuration of `nfshost`. If
    you recall, we have just displayed the allowed services and ports for the firewall
    and `111` was not among them.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: UDP端口`111`在`nfshost`的防火墙配置中未开放。如果你还记得，我们刚才显示了防火墙允许的服务和端口，而`111`不在其中。
- en: 'Port `111` is held open by the `portmapper` service run by `rpcbind` and shows
    as the `sunrpc` service in the `/etc/services` file. We can check this by running
    `netstat` on the `nfshost` as follows:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 端口`111`由`rpcbind`运行的`portmapper`服务保持开放，并在`/etc/services`文件中显示为`sunrpc`服务。我们可以通过在`nfshost`上运行`netstat`来检查此项，命令如下：
- en: '[PRE35]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The options to `netstat` used here are listed as follows:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 这里使用的`netstat`选项列出如下：
- en: '`-a`: This shows all and by all; by this we mean listening and established
    ports'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-a`：此选项显示所有端口，包括监听和已建立的端口'
- en: '`-u`: This displays UDP ports only'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-u`：此选项仅显示UDP端口'
- en: '`-n`: This displays port and network numbers rather than resolving them to
    names'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-n`：此选项显示端口和网络号，而不是将其解析为名称'
- en: '`-p`: This displays the process name holding the port or connection open'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-p`：此选项显示保持端口或连接开放的进程名称'
- en: To use the `-p` option, we must run as root (using `sudo`); otherwise, the process
    column will be left blank.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用`-p`选项，我们必须以root身份运行（使用`sudo`）；否则，进程列将保持空白。
- en: 'The theory behind the `rpcbind` service is that it will return the port address
    so that the required service is running to the requesting client. This is how
    NFSv3 works and the `showmount` command still makes use of this old protocol.
    The incoming request from `showmount` from the remote client asks for the address
    of the NFS Mount Daemon. This is the service running as the process: `rpc.mountd`.
    These services can run on dynamically-assigned ports. As such, it requires further
    configuration to reliably have them allowed through your firewall on a long term
    basis.'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '`rpcbind`服务的原理是它会返回端口地址，以便所需的服务能够对请求的客户端提供服务。这就是NFSv3的工作原理，而`showmount`命令仍然使用这个旧协议。来自远程客户端的`showmount`请求要求NFS挂载守护进程的地址。这是作为进程`rpc.mountd`运行的服务。这些服务可以运行在动态分配的端口上。因此，它需要进一步配置，以确保它们能够长期稳定地通过防火墙。'
- en: 'The pictorial process of what should be happening with `showmount` starts with
    the request for the `rpc.mountd` port, as shown in the following screenshot:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '`showmount`的处理过程如下图所示，首先是请求`rpc.mountd`端口：'
- en: '![Diagnosing NFSv3 issues](img/image00266.jpeg)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![诊断NFSv3问题](img/image00266.jpeg)'
- en: 'We can start by allowing the `rpcbind` traffic from the firewall to the `nfshost`:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从允许防火墙到`nfshost`的`rpcbind`流量开始：
- en: '[PRE36]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Tip
  id: totrans-189
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Don't forget to reload the firewall once you have added the port. It's all too
    easy to forget to complete this.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 别忘了在添加端口后重新加载防火墙。完成这个步骤是很容易被忽略的。
- en: 'Now that we can connect to the `rpcbind portmapper` service running on the
    UDP port `111`, we should go a little further. Remember that we are really trying
    to debug the process and learn some useful `tcpdump` analysis tricks. We can repeat
    the previous exercise running `tcpdump` on one console and `showmount` on the
    other (both consoles running on the `nfsclient`). The error reported from the
    `showmount` command should be slightly different now. To illustrate this, the
    following screenshot shows the current error, where we have the UDP port `111`
    open:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以连接到运行在UDP端口`111`上的`rpcbind portmapper`服务，接下来我们应该继续操作。记住，我们实际上是想调试这个过程，并学习一些有用的`tcpdump`分析技巧。我们可以重复前面的操作，一边在控制台上运行`tcpdump`，另一边在控制台上运行`showmount`（这两个控制台都运行在`nfsclient`上）。`showmount`命令报告的错误现在应该略有不同。为了说明这一点，以下截图显示了当前的错误，其中UDP端口`111`是开放的：
- en: '![Diagnosing NFSv3 issues](img/image00267.jpeg)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![诊断NFSv3问题](img/image00267.jpeg)'
- en: So, the error is slightly different now, we now no longer have the error number;
    however, we can see from the `tcpdump` output that we received the reply from
    the `nfshost`. Subsequently, we then try to make a TCP connection back to the
    host on the port `20048`.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，错误略有不同，我们不再看到错误代码；但是，我们可以从`tcpdump`的输出中看到已经收到了来自`nfshost`的回复。随后，我们尝试重新连接到`20048`端口上的主机。
- en: 'To identify the purpose of this port, we can again use `netstat`, but this
    time, we will replace `-u` with `-t` because we want to show the TCP ports. As
    we only need to see listening ports, we can replace `-a` with `-l`:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 要识别此端口的用途，我们可以再次使用`netstat`，但这次我们将`-u`替换为`-t`，因为我们想要显示TCP端口。由于我们只需要查看监听端口，可以将`-a`替换为`-l`：
- en: '[PRE37]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: We should see that the port we are trying to connect to is being held open by
    `rpc.mountd`. Of course, this is not allowed through the firewall.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该会看到我们尝试连接的端口是由`rpc.mountd`打开的。当然，这个端口不能通过防火墙访问。
- en: Tip
  id: totrans-197
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The port that `rpc.mountd` listens on may well be different to the port used
    on your system, so adjust the exercises to work with your `rpc.mountd` port and
    the port that is being used by your client.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '`rpc.mountd`监听的端口可能与您的系统上使用的端口不同，因此需要调整练习以适应您系统上的`rpc.mountd`端口以及客户端正在使用的端口。'
- en: 'The output from `tcpdump` is shown in the following screenshot. We can identify
    it as TCP traffic by additional properties, such as the sequence (`seq`) and window
    size (`win`), which we have highlighted in the following screenshot:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 从`tcpdump`获取的输出如下所示。我们可以通过附加的属性（如序列号`seq`和窗口大小`win`）将其识别为TCP流量，这些属性在下图中已被突出显示：
- en: '![Diagnosing NFSv3 issues](img/image00268.jpeg)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![诊断NFSv3问题](img/image00268.jpeg)'
- en: 'So now we can see that we also require the TCP port `20048` to be opened through
    the firewall on the NFS server; remember that the port may not be the same on
    your `nfshost`; we can remedy this very quickly using `firewall-cmd` from `nfshos`t
    again as follows:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以看到，我们还需要打开NFS服务器上的TCP端口`20048`，通过防火墙进行通信；记住，该端口在你的`nfshost`上可能不同；我们可以通过在`nfshost`上使用`firewall-cmd`快速解决这个问题，操作如下：
- en: '[PRE38]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Now, we can return to the `nfsclient` as the `showmount` command should work
    correctly now, as shown in the following screenshot:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以回到`nfsclient`，因为`showmount`命令应该已经能够正常工作，如下图所示：
- en: '![Diagnosing NFSv3 issues](img/image00269.jpeg)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
  zh: '![诊断NFSv3问题](img/image00269.jpeg)'
- en: Using static ports for NFSv3
  id: totrans-205
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用静态端口进行NFSv3
- en: The `portmapper` service is required for services that operate on non-static
    ports, which include the `rpc.mountd` and other NFSv3-based services. While configuring
    NFSv4 is simple because we only require access to the TCP port `2049` as the only
    requisite to the firewall, we still need access to more ports with v3 and most
    of these ports are non-static. Help is at hand though with the `/etc/sysconfig/nfs`
    file, where we can add entries enabling static ports for these services. The configuration
    is different on the RHEL 6 configuration. This is where search engines can often
    let you down with outdated documentations. This also includes the RHEL 7 documentation
    that is not up to date. Here, we show the correct settings that you will need
    in the `/etc/sysconfig/nfs` file to set static ports.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '`portmapper` 服务是必需的，它用于在非静态端口上操作的服务，包括 `rpc.mountd` 和其他基于 NFSv3 的服务。虽然配置 NFSv4
    很简单，因为我们只需要将 TCP 端口 `2049` 作为防火墙的唯一要求来访问，但使用 v3 时，我们仍然需要访问更多的端口，而这些端口大多数是非静态的。不过，通过
    `/etc/sysconfig/nfs` 文件可以提供帮助，在该文件中我们可以添加条目来为这些服务启用静态端口。RHEL 6 的配置与此不同。搜索引擎常常因提供过时文档而让你失望，其中包括
    RHEL 7 的文档，它并未更新。在这里，我们展示了你在 `/etc/sysconfig/nfs` 文件中设置静态端口所需的正确设置。'
- en: 'When you work on `nfshost` as root and use a text editor of your choice, you
    will need to edit the following lines:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 当你以 root 用户在 `nfshost` 上工作并使用你选择的文本编辑器时，你需要编辑以下行：
- en: '[PRE39]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: The ports used are nominal and you should choose ports that are not in use on
    your system. You can see that some services take the `-p` option to specify a
    port. The `rpc.lockd` utility has an actual port configuration. This was the RHEL
    6 way of configuring all ports, but has changed on RHEL 7.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 使用的端口是名义上的，你应选择在系统中未使用的端口。你可以看到一些服务使用 `-p` 选项来指定端口。`rpc.lockd` 工具有一个实际的端口配置。这是
    RHEL 6 配置所有端口的方式，但在 RHEL 7 中已发生变化。
- en: 'We will need to restart our services, and we can restart them individually
    or revisit the `for` loop that we used earlier. The edited loop is shown in the
    following code:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要重新启动服务，可以单独重启它们，或者重新访问我们之前使用的 `for` 循环。编辑后的循环如下所示：
- en: '[PRE40]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'We have now configured `nfshost` to use the static ports for these NFS services
    that will normally cause us an issue with dynamic ports. We still need the UDP
    port `111` configured in the firewall rules to allow access to `portmapper`, but
    we now know the ports that will be returned for other services and that they can
    be added. The final firewall configuration for NFSv3 using ports that we have
    configured are listed in the following command:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经配置了 `nfshost`，使其使用这些通常会因动态端口而导致问题的 NFS 服务的静态端口。我们仍然需要在防火墙规则中配置 UDP 端口
    `111` 以允许访问 `portmapper`，但我们现在知道将为其他服务返回的端口，并且这些端口可以添加到配置中。使用我们配置的端口的最终 NFSv3
    防火墙配置如下所示：
- en: '[PRE41]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: If we want to test the configuration fully with NFSv4, you will need to remove
    the `crossmnt` and `fsid` options from the exiting export definition because these
    are v4 options.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要完全测试 NFSv4 配置，你需要从现有的导出定义中移除 `crossmnt` 和 `fsid` 选项，因为这些是 v4 选项。
- en: Configuring the NFS client
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置 NFS 客户端
- en: 'When mounting filesystems from a client, the default protocol implemented is
    NFSv4 on RHEL 7\. We can explicitly set the protocol to v3 or v4, using the `-t`
    option to the mount command:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在从客户端挂载文件系统时，默认实现的协议是 NFSv4 在 RHEL 7 中。我们可以使用 `-t` 选项将协议显式设置为 v3 或 v4，如下所示：
- en: '[PRE42]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'In the following screenshot, you can see that we are able to connect from `nfsclient`
    using NFSv4 or NFSv3:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的截图中，你可以看到我们能够从 `nfsclient` 使用 NFSv4 或 NFSv3 进行连接：
- en: '![Configuring the NFS client](img/image00270.jpeg)'
  id: totrans-219
  prefs: []
  type: TYPE_IMG
  zh: '![配置 NFS 客户端](img/image00270.jpeg)'
- en: 'Other mount options can be applied with the `-o` option to the mount command.
    You may consider the following command options:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 其他挂载选项可以通过 `-o` 选项应用于 mount 命令。你可以考虑以下命令选项：
- en: '`bg`: This backgrounds the mount process'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bg`：将挂载过程放到后台'
- en: '`rsize=xxxx`: This specifies the maximum read size request in bytes'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rsize=xxxx`：指定最大读取请求大小（以字节为单位）'
- en: '`wsize=xxxx`: This specifies the maximum write buffer size in bytes'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`wsize=xxxx`：指定最大写入缓冲区大小（以字节为单位）'
- en: 'For more NFSv3 and NFSv4 mount options, these can be read in detail from the
    appropriate man page, as shown in the following command line:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多 NFSv3 和 NFSv4 的挂载选项，可以通过适当的手册页详细阅读，命令行如下所示：
- en: '[PRE43]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Auto-mounting NFS with autofs
  id: totrans-226
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动挂载 NFS 使用 autofs
- en: 'There is a client-side service called `autofs` that acts as an auto-mount service
    for both local and remote filesystems. This works with a kernel module and the
    user space service; as you enter a directory, the mount is created automatically.
    The `autofs` package needs to be installed along with the `nfs-utils` package
    if NFS mounts are to be made. The auto-mounting feature can work with other remote
    filesystems, not just NFS. To install `autofs`, use the following command:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个名为`autofs`的客户端服务，它充当本地和远程文件系统的自动挂载服务。它与内核模块和用户空间服务一起工作；当您进入某个目录时，挂载会自动创建。如果需要进行NFS挂载，还需要安装`autofs`软件包以及`nfs-utils`软件包。自动挂载功能不仅适用于NFS，还可以与其他远程文件系统一起工作。要安装`autofs`，请使用以下命令：
- en: '[PRE44]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'With this installed, the default behavior is to use the `/net` directory point
    for the network hosts. We can then access shares or exports on any host that we
    have access to, and enter a directory that matches the server name or IP address
    after the `/net` directory. We only need to create top level directories and do
    not need to create subdirectories. We can just change the directories to `/net/192.168.10.10`
    and this directory will be created. Listing the contents of the directory will
    list the root level of the exports on the `nfshost`. This may sound too good to
    be true, so let''s see this in action. First, we will create the directory and
    then start the service and enable it, as shown in the following command:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，默认行为是使用`/net`目录点来指向网络主机。然后，我们可以访问任何有权限访问的主机上的共享或导出目录，并在`/net`目录后输入与服务器名称或IP地址匹配的目录。我们只需要创建顶级目录，无需创建子目录。我们只需将目录更改为`/net/192.168.10.10`，该目录将自动创建。列出该目录的内容时，将列出`nfshost`上的导出根目录。这听起来可能过于完美，但让我们实际演示一下。首先，我们将创建目录，然后启动服务并启用它，如下命令所示：
- en: '[PRE45]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: With this in place, we can simply list the contents of the `/net/192.168.10.10`
    directory. We should see the top level of the export configuration. For us, this
    is currently the `/var` directory and the export directory is `/var/export`. If
    we have more top level directories exported, they too will show. The `/net/192.168.10.10`
    directory is created automatically and the default timeout for `autofs` is 300
    seconds or 5 minutes. After 5 minutes of inactivity, a filesystem that is mounted
    will be automatically unmounted and the directory will disappear until it's needed
    again. This is a typical safe value; however, a specific timeout can be configured.
    We will see this later.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 配置完成后，我们可以简单地列出`/net/192.168.10.10`目录的内容。我们应该会看到导出配置的顶级目录。对于我们来说，当前是`/var`目录，导出目录是`/var/export`。如果我们有更多导出的顶级目录，它们也会显示出来。`/net/192.168.10.10`目录会自动创建，且`autofs`的默认超时是300秒（即5分钟）。在5分钟不活动后，已挂载的文件系统将自动卸载，目录将消失，直到再次需要时才会出现。这是一个典型的安全值；不过，可以配置特定的超时设置。稍后我们将看到如何操作。
- en: 'The following screenshot shows the four commands executed in order and the
    listing of the the temporary automount directory:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了按顺序执行的四个命令以及临时自动挂载目录的列出内容：
- en: '![Auto-mounting NFS with autofs](img/image00271.jpeg)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![使用autofs自动挂载NFS](img/image00271.jpeg)'
- en: Auto-mounting directories on the client as they are required reduces the overhead
    on both the client and server, which is a really effective way of generating mounts.
    To define our own mounts points, we can edit the `/etc/auto.master` configuration
    file. We will add a top level directory as before.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 根据需要在客户端自动挂载目录，减少了客户端和服务器的负担，这是一种非常有效的挂载方式。要定义我们自己的挂载点，我们可以编辑`/etc/auto.master`配置文件。我们将像之前一样添加一个顶级目录。
- en: 'In `/etc/auto.master` file, we will add the following command:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 在`/etc/auto.master`文件中，我们将添加以下命令：
- en: '[PRE46]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'This setting in the `auto.master` file tells the `autofs` service that when
    entering the `/corp` directory, the configuration can be read from the `/etc/auto.corp`
    file. Additionally, we have doubled the default timeout to 10 minutes for this
    auto-mount. We will need to create the top-level directory as follows:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '`auto.master`文件中的此设置告诉`autofs`服务，当进入`/corp`目录时，可以从`/etc/auto.corp`文件读取配置。此外，我们还将默认超时设置增加到10分钟，用于此自动挂载。我们将需要按以下方式创建顶级目录：'
- en: '[PRE47]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'The configuration file for this directory should look similar to this in our
    case:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 对于该目录的配置文件，在我们的案例中应如下所示：
- en: '[PRE48]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'With this entry, we will be able to see the contents of the server export while
    entering the `/corp/redhat` directory. We do not create the `redhat` subdirectory.
    Before testing, you will need to restart the `autofs` service:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这个条目，我们将能够看到服务器导出的内容，并进入`/corp/redhat`目录。我们不会创建`redhat`子目录。在测试之前，你需要重启`autofs`服务：
- en: '[PRE49]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Now, we can access the `/corp` directory and it will be empty. This is shown
    in the following screenshot:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以访问`/corp`目录，它会是空的。以下是截图展示：
- en: '![Auto-mounting NFS with autofs](img/image00272.jpeg)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![自动挂载NFS与autofs](img/image00272.jpeg)'
- en: 'If we now access the `redhat` directory, this does not show yet; we will be
    able to list the contents of the server''s export. This is shown in the following
    screenshot:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们现在访问`redhat`目录，它还没有显示出来；但我们将能够列出服务器导出的内容。以下是截图展示：
- en: '![Auto-mounting NFS with autofs](img/image00273.jpeg)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
  zh: '![自动挂载NFS与autofs](img/image00273.jpeg)'
- en: I have been using this for years; it's still one of the most magical experiences
    on Linux.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经使用这个好几年了；它仍然是Linux上最神奇的体验之一。
- en: Summary
  id: totrans-248
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: I hope that you have found this chapter both intense and useful. There has been
    a lot of content to cover that has been made complicated by the need to cover
    both NFSv4 and NFSv3\. Similar to most technologies, legacy clients need to be
    supported for some time. The great advantage this gave us was diagnosing firewall
    issues and using `tcpdump` in anger.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望你能觉得这一章既紧凑又实用。内容比较多，而且由于需要同时讲解NFSv4和NFSv3，内容变得有些复杂。像大多数技术一样，遗留客户端在一段时间内仍然需要得到支持。这也给我们带来了一个巨大优势，那就是可以通过`tcpdump`有效诊断防火墙问题。
- en: 'The main point with NFS and firewalling is to use NFSv4 wherever possible because
    we then only need to open the one static port: the TCP port `2049`. For NFSv3,
    we need to assign static ports and often need to open both UDP and TCP ports to
    each protocol, depending on the client that connects.'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 使用NFS和防火墙的关键是尽可能使用NFSv4，因为这样我们只需要打开一个静态端口：TCP端口`2049`。而对于NFSv3，我们需要分配静态端口，并且通常需要为每个协议同时打开UDP和TCP端口，具体取决于连接的客户端。
- en: Finishing the chapter on `autofs` is a real high note because this is so simple
    and effective to use, auto-creating directories and mounting them as required.
    What more could we wish for!
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 完成`autofs`这一章是一个真正的高光时刻，因为它非常简单且有效，能够根据需要自动创建目录并挂载它们。还有什么可以更好的呢！
- en: In the next chapter, we will stay with file sharing, but investigate sharing
    to Windows systems using Samba 4.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将继续探讨文件共享，但会研究如何使用Samba 4将共享内容提供给Windows系统。
