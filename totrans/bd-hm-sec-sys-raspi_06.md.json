["```\n    $ sudo raspi-config\n\n    ```", "```\n$ raspistill –v -o test.img\n\n```", "```\n$ raspistill\n\n```", "```\n$ raspivid –o test.h264 –t 5000\n\n```", "```\n    $ sudo apt-get install gpac\n\n    ```", "```\n    $ MP4Box -fps 30 -add test.h264 test.mp4\n\n    ```", "```\n#!/bin/bash\n\n#set up port expander \nsudo i2cset –y 1 0x20 0x00 0xFF\n\n# loop forever\nwhile true\ndo\n  # read the GPA inputs\n  GPA=$(sudo i2cget –y 1 0x20 0x12)\n\n  # detect the zone on input 0\n  if [ $GPA == \"0x01\" ]\n  then\n    #circuit normally closed so zone is OK\n    #short delay\nsleep 0.5\n\n  else\n    #zone is activated so take a 20 sec video clip\n\n    #filename will be based on current timestamp\n    sDate='date +%d%m%y'\n    sTime='date +%T'\n    echo \"Zone 1 Activate at $sDate $sTime\"\n\n#take video clip\nraspivid –o $sDate$sTime.h264 –t 20000\n\n#convert to MP4\nMP4Box -fps 30 -add $sDate$sTime.h264 $sDate$sTime.mp4\n  fi\ndone\n```", "```\n    $ sudo apt-get update\n\n    ```", "```\n    $ sudo apt-get install ssmtp\n\n    ```", "```\n    $ sudo nano /etc/ssmtp/ssmtp.conf\n\n    ```", "```\n    root=<your-username>@gmail.com\n    mailhub=smtp.gmail.com:587\n    rewriteDomain=gmail.com\n    AuthUser=<your-username>@gmail.com\n    AuthPass=<your-password>\n    FromLineOverride=YES\n    UseSTARTTLS=YES\n    ```", "```\n    $ sudo apt-get install mailutils\n\n    ```", "```\n    $ echo \"Test Email\" | mail –s \"Test Pi-Mail\" me@mydomain.com\n\n    ```", "```\n$ sudo apt-get install mpack\n\n```", "```\n$ sudo mpack –s \"Security Photo\" test.jpg me@mydomain.com\n\n```", "```\n$ sudo apt-get install imagemagick\n\n```", "```\n$ convert test.jpg –fill red –pointsize 48 annotate +20+60 'Camera 1' annotated.jpg\n\n```", "```\n$ raspistill -o test.img –h 768 –w 1024 –q 25\n\n```", "```\n#!/bin/bash\n\n#set up the High Load GPIO pin\nsudo echo 17 > /sys/class/gpio/export\nsudo echo out > /sys/class/gpio/gpio17/direction\n\n#set up port expander Port A for inputs\nsudo i2cset –y 1 0x20 0x00 0xFF\n\n#clear the output by default to switch light off\nsudo echo 0 > /sys/class/gpio/gpio17/value\n\n# loop forever\nwhile true\ndo\n  # read the sensor state\n  SWITCH=$(sudo i2cget –y 1 0x20 0x12)\n\n  #PIR is normally closed so pin is held high\n  if [ $SWITCH != \"0x01\" ]\n  then\n    #PIR was triggered – pin taken low\n\n    #switch on lamp driver\n    sudo echo 1 > /sys/class/gpio/gpio17/value\n    sleep 0.5\n\n#take a still image\n    sudo raspistill –o –image.jpg –h 768 –w 1024 –q 25\n\n    #email the image\n    mpack –s \"Security Alert Photo\" test.jpg me@mydomain.com\n\n    #switch off the lamp driver\n    sudo echo 0 > /sys/class/gpio/gpio17/value\n\n  fi\n  #short delay\n  sleep 0.5\ndone\n```", "```\n$ lsusb\n\n```", "```\npi@raspberrypi ~ $ lsusb\nBus 001 Device 002: ID 0424:9514 Standard Microsystems Corp.\nBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\nBus 001 Device 003: ID 0424:ec00 Standard Microsystems Corp.\nBus 001 Device 006: ID 046d:08d8 Logitech, Inc. QuickCam for Notebook Deluxe\n```", "```\n$ sudo apt-get install fswebcam\n\n```", "```\n$ fswebcam test.jpg\n\n```", "```\n$ fswebcam frame.jpg -l 10\n\n```"]