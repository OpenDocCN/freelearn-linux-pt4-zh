["```\nsudo apt-get install cpu-checker\nsudo kvm-ok\n\n```", "```\nINFO: Your CPU does not support KVM extensions\nKVM acceleration can NOT be used\n\n```", "```\nINFO: /dev/kvm does not exist\nHINT: sudo modprobe kvm_intel\nINFO: Your CPU supports KVM extensions\nKVM acceleration can be used\n\n```", "```\nINFO: /dev/kvm exists\nKVM acceleration can be used\n\n```", "```\nauto eth0\niface eth0 inet dhcp\n\n```", "```\nauto eth0\niface eth0 inet manual\nauto br0\niface br0 inet dhcp\nbridge_ports eth0\nbridge_fd 9\nbridge_hello 2\nbridge_maxage 12\nbridge_stp off\n\n```", "```\nauto eth0\niface eth0 inet static\naddress 192.168.0.5\nnetwork 192.168.0.0\nnetmask 255.255.255.0\nbroadcast 192.168.0.255\ngateway 192.168.0.1\n```", "```\nauto eth0\niface eth0 inet manual\nauto br0\niface br0 inet static\naddress 192.168.0.5\nnetwork 192.168.0.0\nnetmask 255.255.255.0\nbroadcast 192.168.0.255\ngateway 192.168.0.1\nbridge_ports eth0\nbridge_fd 9\nbridge_hello 2\nbridge_maxage 12\nbridge_stp off\n\n```", "```\nsudo /etc/init.d/networking restart\n\n```", "```\nsudo apt-get install libvirt-bin kvm bridge-utils qemu-common qemu-kvm qemu-utils\n\n```", "```\nvirt-manager -c qemu+ssh://root@your-server-ip-or-name/system\n\n```", "```\nsudo apt-get install virt-manager\n\n```", "```\nsudo adduser <user_name> libvirtd\n\n```", "```\nsudo qemu-img create -f qcow2 /media/Data/ubuntuserver.qcow2 20G\n\n```", "```\nvirt-install --connect qemu:///system --name ubuntu_server15.04 \\\n--ram 1024 --disk path=/media/Data/ubuntuserver.qcow2,format=qcow2 \\\n--network=bridge:virbr0,model=virtio --vnc --os-type=linux \\\n--cdrom /media/Data/ISOs/ ubuntu-15.04-server-amd64.iso \\\n--noautoconsole --keymap=en-us\n\n```", "```\negrep \"(svm|vmx)\" /proc/cpuinfo\n\n```", "```\nsudo xm dmesg | grep VMX\n(XEN) HVM: VMX enabled\n(XEN) VMX: MSR intercept bitmap enabled\n\n```", "```\nsudo apt-get install xen-hypervisor\n\n```", "```\n(network-script network-bridge)\n(vif-script vif-bridge)\n\n```", "```\nservice xend restart\n\n```", "```\n    sudo apt-get install openxenmanager\n\n    ```", "```\n    sudo apt-get install xen-tools\n\n    ```", "```\nsudo xm create -c <path_to_the_conf_file>\n\n```", "```\nsudo xm create /dev/null ramdisk=initrd.img \\\nkernel=/boot/vmlinuz-2.6.12.6-xenU \\\nname=ramdisk vif='' vcpus=1 \\\nmemory=64 root=/dev/ram0\n\n```", "```\nsudo apt-get install docker.io\n\n```", "```\n    deb http://get.docker.io/ubuntu docker main\n\n    ```", "```\n    sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 \\ --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9\n    sudo apt-get update\n    sudo apt-get install lxc-docker\n\n    ```", "```\nsudo addgroup user docker\n\n```", "```\nservice docker start\n\n```", "```\ndocker search lamp\n\n```", "```\ndocker pull reinblau/lamp\n\n```", "```\ndocker run -d -p 80:80 -p 3306:3306 reinblau/lamp\n\n```", "```\nroot@xxxxxx#\n\n```", "```\nroot@xxxxxx# exit\ndocker commit xxxxxx image_name\n\n```", "```\ndocker images\n\n```", "```\ndocker ps -a\n\n```", "```\ndocker run -d container_name\n\n```", "```\ndocker stop JOB_ID\n\n```", "```\ndocker rm JOB-ID\ndocker rm container_id\n\n```", "```\ndocker export 2520aedc6bc5 > zimbra-after-install.tgz\n\n```", "```\ncat zimbra-after-install.tgz  | docker import - zimbra-after-install\n\n```", "```\nsudo sh -c \"echo 'deb http://download.opensuse.org \\\n/repositories/isv:/ownCloud:/community/ \\\nxUbuntu_15.04/ /' >> /etc/apt/sources.list.d/owncloud.list\nsudo apt-get update\nsudo apt-get install owncloud\n\n```", "```\nwget â€“nv \\ https://download.owncloud.org/download/repositories/stable/ \\ xUbuntu_15.04/Release.key -O Release.key\n\nsudo apt-key add - < Release.key\n\n```", "```\nsudo a2enmod ssl\nsudo a2ensite default-ssl\nsudo service apache2 reload\n\n```", "```\napt-get install python python-pip python-dev \\ software-properties-common\n\n```", "```\nsudo pip install fabric fabtools\n\n```", "```\nwget https://raw.githubusercontent. \\\ncom/cozy/cozy-setup/master/fabfile.py\n\n```", "```\nfab -H <user>@<ip_address> install\n\n```", "```\n    git clone https://git.openstack.org/openstack-dev/devstack\n\n    ```", "```\n    cd devstack; ./stack.sh\n\n    ```", "```\n    sudo add-apt-repository ppa:juju/stable\n    sudo add-apt-repository ppa:maas-maintainers/stable\n    sudo add-apt-repository ppa:cloud-installer/stable\n    sudo apt-get update\n\n    ```", "```\n    sudo apt-get install maas\n\n    ```", "```\n    sudo apt-get install openstack\n    sudo openstack-install\n\n    ```"]