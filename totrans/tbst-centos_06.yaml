- en: Chapter 6. Troubleshooting Shared Resources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In today's world, the need to share information is pervasive. From the home
    office to the small office, corporate and enterprise offices to public spaces,
    maintaining the ability to collaborate information is an important part of fulfilling
    the role provided by a troubleshooter. Without prejudice, sharing resources or
    providing access to remote locations is now viewed as an expectation across the
    spectrum, and it is the purpose of this chapter to discuss and highlight a selection
    of issues associated with access to shared resources over a network.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will:'
  prefs: []
  type: TYPE_NORMAL
- en: Discover how to provide NFS shares on a CentOS 7 server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learn more about NFS exports
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learn how to access NFS shared resources on a CentOS 7 client workstation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learn how to mount an external drive with CIFS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learn how to use `autofs` in order to provide a persistent mount
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Providing NFS shares on a CentOS 7 server
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: NFS shares have been with us for some time and, as in most matters of this type,
    troubleshooting a file sharing service is fundamentally based on your knowledge
    of the installation process, as you will spend much of your time reviewing permissions
    and the network environment, and diagnosing the failure of a service to start.
  prefs: []
  type: TYPE_NORMAL
- en: 'To begin, you should ensure that both the client workstation and server are
    able to ping each other:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'If `ping` is successful for both the server and client workstation, to proceed
    you will need to install the `nfs-utils` package on the server like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Having completed the installation, we will now want to create a permanent publication
    directory in the following way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'For example, one approach is to use the `/home` directory like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'As this location is where the client files will be stored, you will want to
    ensure the privileges are correct by typing:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Remember, if you do intend to use the `/home` directory on the server, be careful
    when modifying the permissions of the `/home` directory and target the appropriate
    subdirectory directly as you will not want to affect any other folders.
  prefs: []
  type: TYPE_NORMAL
- en: 'The next step is to start the relevant services in the following way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'At this point, we will now decide to share the NFS directory over the network
    by making a few additions to the following file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Where `XXX.XXX.XXX.XXX` is the IP address of the client workstation, add your
    network share points in the following way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Naturally, you can add as many publication directories as required to one or
    more users; and each user can have a unique directory based on their IP address.
    However, if you wish to create a global publication—that is, a single directory
    that serves all client workstations—then you should use the following syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Note that a star symbol (`*`) has replaced the IP address. On a production server
    or similar, you should avoid this practice and use the network/subnet you are
    trying to share. This is a particular point for troubleshooters to notice but,
    for the purpose of explaining the installation procedure, we will use this method
    for the simple reason that it is a common occurrence.
  prefs: []
  type: TYPE_NORMAL
- en: 'So, based on our original working example detailed here, the entry could look
    like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, you may need to account for the required firewall changes. To do this,
    add the following lines one at a time:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Then restart the NFS service as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: About NFS exports
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'At this stage I would like to approach the subject of NFS exports on CentOS
    7\. As it was noted in the preceding example, we used the following syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Here, most of the options will be obvious to you; `root_squash` will allow the
    root user on the client to both access and create files on the NFS server as root.
    Technically speaking, this option will force NFS to change the client's root to
    an anonymous ID and, in effect, this will increase security by preventing ownership
    of the root account on one system migrating to the other system. This is needed
    if you are hosting root filesystems on the NFS server (especially for diskless
    clients); with this in mind, it can be used (sparingly) for selected hosts, but
    you should not use `no_root_squash` unless you are aware of the consequences.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Other basic options for exports can include:**'
  prefs: []
  type: TYPE_NORMAL
- en: '`no_all_squash`: This option disables all squashing.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`rw`: This option enables the NFS server to use both read and write requests
    on a NFS volume.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ro`: This option enables the NFS server to use read-only requests on a NFS
    volume.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sync`: This option enables the NFS server to reply to requests only after
    the changes have been committed to stable storage.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`async`: This option enables the NFS server to violate the NFS protocol and
    reply to requests before any changes have been committed to stable storage.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`secure`: This option requires that requests originate on an Internet port.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`insecure`: This option accepts any or all ports.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`wdelay`: This option enables the NFS server to delay committing a write request
    to a disc if it suspects that another related write request may be in progress
    or may arrive soon.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`no_wdelay`: This option enables the NFS server to allow multiple write requests
    to be committed to disc within a single operation. This feature can improve performance,
    but if an NFS server receives many small requests, this behavior can serve to
    degrade performance. You should be aware that this option has no effect if `async`
    is also set.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`subtree_check`: This option enables `subtree` checking.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`no_subtree_check`: This option disables `subtree` checking, which has some
    implied security issues, but it can improve reliability.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`anonuid=UID`: These options explicitly set the `uid` and `gid` of the anonymous
    account; this can be useful when you want all requests to appear as though they
    are from a single user.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`anongid=GID`: This option will disable `anonuid=UID`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mounting NFS shares on a CentOS client
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Assuming that your server is currently providing NFS shares, we will now investigate
    the client workstation in order to ensure that everything is working correctly.
    This is a task that every troubleshooter needs to know and perfect.
  prefs: []
  type: TYPE_NORMAL
- en: 'To begin, the client must be using the `nfs-utils` package like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'Having completed the installation for the `nfs-utils` package, you must now
    create mount points in the following way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'For example, to suit your needs, the preceding command may read as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Now start the relevant services like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, we can now mount the NFS share on the client workstation in the following
    way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Here, `XXX.XXX.XXX.XXX` is the IP address of the NFS server and `:/path/to/folder`
    is the location of the shared resource. The `/path/to/mount/point` part represents
    the location of where the shared resource should be found on the client workstation.
  prefs: []
  type: TYPE_NORMAL
- en: 'A working example of this command may look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'In order to confirm that everything is now working, you may want to run the
    following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'Based on the working example provided here, the command output should result
    in showing the addition of one or more filesystems like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'Then you can easily confirm the read-write permissions of the NFS resource
    by creating a new text file in the following way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'Using the `ls` command, you should be able to see this file on both the server
    and the client workstation. However, as this is only a temporary solution, if
    you decide to make this a permanent or persistent mount, then you should open
    the following file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'Now add an entry for each mount point, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: Having completed these steps, you will now be able to reboot the client machine
    in the full knowledge that the NFS service will be available at all times.
  prefs: []
  type: TYPE_NORMAL
- en: Mounting an external drive with CIFS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Mounting an external drive on a CentOS 7 workstation or server is considered
    to be a relatively simple procedure and, in many respects, this will be a daily
    task for a seasoned troubleshooter. However, on some occasions the process itself
    does give rise to much confusion as to what steps are required and, with this
    in mind, it is our purpose to provide some much needed clarity.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will begin by confirming whether `cifs` is installed. To do this, type the
    following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'CIFS, also known as the Common Internet File System, is a file sharing protocol
    that enables a standard for remote file access across many filesystems. Based
    on **Server Message Block** (**SMB**) and running over TCP/IP, `cifs` provides
    typical file operations such as open, close, read, write, safe caching, and seek.
    It supports extended non-filesystem attributes, batch requests, and distributed
    replicated virtual volumes. However, if the system replies in the following way,
    you will know that `cifs` is not currently installed:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'To fix this issue, simply type the following command to install the `cifs`
    package:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'At this point, you will need to decide where you want to mount the device,
    a simple process that can be achieved in the following way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'Then use the `cifs-utils` package to mount the external drive by typing:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'However, if you want to pass a string or a series of variables such as a username
    and password, then the complete command should call the `-o` options like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: 'It is important to realize that this same process can be used to mount many
    different types of shared resources, and if the external resource contains spaces
    in the relevant folder names, then this can be accounted for in the usual way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: The type of string you use can also take advantage of other features that are
    addressed by the manual. However, the important point to remember is that the
    preceding solution will only maintain the mounted drive until the drive is unmounted,
    disconnected, or a reboot occurs. So, nothing at this stage is permanent or persistent.
  prefs: []
  type: TYPE_NORMAL
- en: Using autofs to mount an external drive
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If you wish to make the process of attaching an external drive (through `cifs`)
    permanent (persistent), then you will need to begin by installing the `autofs`
    package in the following way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'Having installed the package, you will then need to ensure that you start and
    enable the `autofs` service like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 'Having done this, and assuming we will be using the same mount point as discussed
    here, you should begin the configuration of the `autofs` service by creating a
    credentials file in your favorite text editor by typing this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, add the required network credentials like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'Having saved and closed this file, make sure that the permissions are modified
    to ensure system security:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'The next stage of this process is to open the `autofs` configuration file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: 'Add the following line at the end of this file, but be sure to customize the
    values shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: As you can see, we have used various options, where the `--timeout` option sets
    the idle time (in seconds) before unmounting the share if it is not accessed (the
    default period is 10 minutes). The use of the `--ghost` option is recommended
    as it creates a `ghost` or empty holding folder for the mount point during periods
    when it isn't mounted.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, create and edit the following mount file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: 'Add and customize the following line to suit your needs:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: 'The `Local-Name` used will be displayed in the mount point directory (`/path/to/mount/point/Local-Name`),
    while the arguments that follow simply call on the filesystem type, irrespective
    of whether you are providing read-write access and the expected access credentials.
    So, if you plan to provide read-only access, remember to swap out `rw` for `ro`.
    Moreover, given the structure of the customization made, you can see how multiple
    locations can be added (this also implies that multiple credentials can be called)
    in the following way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, if you wish to avoid the use of an IP address, then you should ensure
    that the hostname is mapped to your system via `/etc/hosts` or DNS in order for
    you to use the following syntax changes:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: 'Having completed these steps, the next task is to reboot your system but, as
    an alternative, you can simply restart the `autofs` service in order to enjoy
    the benefits of your work:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have considered a unique approach to the provision and access
    of shared resources across a network. From NFS to `cifs`, `fstab` to `autofs`,
    we have covered the process of making our mounts temporary or permanent and ensured
    we have argued the case to prove that CentOS can serve all operating systems.
    However, unlike the other chapters so far, instead of taking the direct approach
    to diagnosis, we have defined the role of a troubleshooter as a review of the
    installation process so that your understanding and appreciation of the problems
    typically associated with shared resources is based on the initial install rather
    than an event that happens post-installation. In this way, and by knowing the
    installation procedure, you will also know how to fix any issues associated with
    that service. With that in mind we will now move on to the subject of troubleshooting
    security issues.
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Red Hat customer portal: [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/)'
  prefs: []
  type: TYPE_NORMAL
