["```\n$ curl -H \"Content-Type:application/json\" -H \"Accept:application/json\" -X GET http://host/resource/name\n```", "```\n$ curl -H \"Content-Type:application/xml\" -H \"Accept:application/xml\" -X GET http://host/resource/name\n```", "```\n$ curl --data \"name1=value1&name2=value2\" http://host/resource/name\n```", "```\n$ curl -T \"{File,names,separated,by,comma}\" http://host/resource/name\n```", "```\n$ curl -sL https://imdb.com | xml2 | head\n```", "```\n$ mkdir -p data\n$ cd data\n$ wget -q -r -l5 -x 5  https://imdb.com\n$ cd ..\n$ grep -r -Po -h '(?<=href=\")[^\"]*' data/ > links.csv\n$ grep \"^http\" links.csv > links_filtered.csv\n$ sort -u links_filtered.csv > links_final.csv\n$ rm -rf data links.csv links_filtered.csv\n```", "```\n#!/bin/bash\nnick=\"blb$$\"\nchannel=testchannel\nserver=irc.freenode.net\nconfig=/tmp/irclog\n[ -n \"$1\" ] && channel=$1\n[ -n \"$2\" ] && server=$2\nconfig=\"${config}_${channel}\"\necho \"NICK $nick\" > $config\necho \"USER $nick +i * :$0\" >> $config\necho \"JOIN #$channel\" >> $config\ntrap \"rm -f $config;exit 0\" INT TERM EXIT\ntail -f $config | nc $server 6667 | while read MESSAGE\ndo\n    case \"$MESSAGE\" in\n        PING*) echo \"PONG${MESSAGE#PING}\" >> $config;;                                  *QUIT*) ;;\n        *PART*) ;;\n        *JOIN*) ;;\n        *NICK*) ;;\n        *PRIVMSG*) echo \"${MESSAGE}\" | sed -nr \"s/^:([^!]+).*PRIVMSG[^:]+:(.*)/[$(date '+%R')] \\1> \\2/p\";;\n        *) echo \"${MESSAGE}\";;\n    esac\ndone\n```", "```\n# grep \"Failed password\" /var/log/auth.log\n```", "```\n# cat /var/log/auth.log | grep \"Failed password\"\n```", "```\nsshd: 192.168.0.1/255.255.255.0\n```", "```\n$ play *mp3\n```", "```\n$ play file_name.mp3\n```", "```\n# set the default policy to DROP\niptables -P INPUT DROP\niptables -P OUTPUT DROP\niptables -P FORWARD DROP\n# to configure the system as a router, enable ip forwarding by\nsysctl -w net.ipv4.ip_forward=1\n# allow traffic from internal (eth0) to DMZ (eth2)\niptables -t filter -A FORWARD -i eth0 -o eth2 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT\niptables -t filter -A FORWARD -i eth2 -o eth0 -m state --state ESTABLISHED,RELATED -j ACCEPT\n# allow traffic from internet (ens33) to DMZ (eth2)\niptables -t filter -A FORWARD -i ens33 -o eth2 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT\niptables -t filter -A FORWARD -i eth2 -o ens33 -m state --state ESTABLISHED,RELATED -j ACCEPT\n#redirect incoming web requests at ens33 (200.0.0.1) of FIREWALL to web server at 192.168.20.2\niptables -t nat -A PREROUTING -p tcp -i ens33 -d 200.0.0.1 --dport 80 -j DNAT --to-dest 192.168.20.2 \niptables -t nat -A PREROUTING -p tcp -i ens33 -d 200.0.0.1 --dport 443 -j DNAT --to-dest 192.168.20.2\n#redirect incoming mail (SMTP) requests at ens33 (200.0.0.1) of FIREWALL to Mail server at 192.168.20.3\niptables -t nat -A PREROUTING -p tcp -i ens33 -d 200.0.0.1 --dport 25 -j DNAT --to-dest 192.168.20.3\n#redirect incoming DNS requests at ens33 (200.0.0.1) of FIREWALL to DNS server at 192.168.20.4\niptables -t nat -A PREROUTING -p udp -i ens33 -d 200.0.0.1 --dport 53 -j DNAT --to-dest 192.168.20.4\niptables -t nat -A PREROUTING -p tcp -i ens33 -d 200.0.0.1 --dport 53 -j DNAT --to-dest 192.168.20.4\n```", "```\n$ git https://github.com/torvalds/linux.git\n```", "```\n$ tar cvfz work.tar.gz /work\n```", "```\n#!/bin/bash\ngunzip /work/tar.gz\ntar uvf /work.tar /work/\ngzip /work.tar\n```", "```\n$ sudo evtest /dev/input/event3\n```", "```\nInput driver version is 1.0.1\nInput device ID: bus 0x11 vendor 0x2 product 0x13 version 0x6\nInput device name: \"VirtualPS/2 VMware VMMouse\"\nSupported events:\n Event type 0 (EV_SYN)\n Event type 1 (EV_KEY)\n Event code 272 (BTN_LEFT)\n Event code 273 (BTN_RIGHT)\n Event type 2 (EV_REL)\n Event code 0 (REL_X)\n Event code 1 (REL_Y)\n Event code 8 (REL_WHEEL)\nProperties:\n Property type 0 (INPUT_PROP_POINTER)\nTesting ... (interrupt to exit)\n```", "```\n$ sudo systemctl status tlp\n```", "```\n$ sudo tlp start\n```", "```\n$ sudo tlp-stat -s\n```", "```\n$ sudo tlp-stat -c\n```", "```\n$ sudo tlp-stat\n```", "```\n$ sudo tlp-stat -b\n```", "```\n$ sudo tlp-stat -t\n```", "```\n$ sudo tlp-stat -p\n```", "```\n$ bash -r\nor\n$ rbash\n```", "```\n$ cd work/\n```", "```\nls > log.txt\n```"]