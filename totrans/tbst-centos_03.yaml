- en: Chapter 3. Troubleshooting the Network Environment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三章 网络环境故障排除
- en: From ghost connections to packet errors, stream failures and connectivity errors
    to missing routes, troubleshooting a network environment can be a slow and arduous
    process that typically begins with the physical layer. However, once you have
    confirmed that the physical nodes are working, the next step is to consider and
    consult the many tools available to your system.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 从幽灵连接到数据包错误，从流失败到连接错误，再到缺少路由，故障排除网络环境可能是一个缓慢且艰难的过程，通常从物理层开始。然而，一旦你确认物理节点正常工作，下一步就是考虑和查阅你系统中可用的各种工具。
- en: 'In this chapter, we will:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将：
- en: Discover the basic tools that will help you troubleshoot a variety of issues
    related to the network environment. This discussion will include a round-trip
    tour of `ping`, `dig`, `host`, `traceroute`, and `mtr`.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解一些基本工具，这些工具将帮助你排查与网络环境相关的各种问题。本讨论将涵盖 `ping`、`dig`、`host`、`traceroute` 和 `mtr`
    的详细使用。
- en: Discover how to monitor network connections with the `ss` command.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解如何使用 `ss` 命令监控网络连接。
- en: Learn how to investigate packet transmissions with `tcpdump`.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何使用 `tcpdump` 检查数据包传输。
- en: Using ping, dig, host, traceroute, and mtr
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 ping、dig、host、traceroute 和 mtr
- en: Some of the most common tools available to a troubleshooter are `ping`, `dig`,
    `host`, `traceroute`, and `mtr`. Used collectively, these tools provide the troubleshooter
    with the evidence they need to make a judgment call with respect to almost any
    network-based issue. This is the basis of the network toolkit, but having said
    this, it is important to realize that these commands are used for different purposes,
    and for this reason, we will approach them individually.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 故障排除员最常用的一些工具有 `ping`、`dig`、`host`、`traceroute` 和 `mtr`。将这些工具一起使用，可以为故障排除员提供做出判断所需的证据，几乎可以解决任何网络相关的问题。这是网络工具包的基础，但需要强调的是，这些命令用于不同的目的，因此我们将分别介绍它们。
- en: The ping command
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ping 命令
- en: The `ping` command is a small utility that can be used to ascertain whether
    or not a specific IP address can be reached. The `ping` command is common to most
    computer systems, and it enables you to query an IP address or a fully qualified
    domain name in order to check whether there is an available connection.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '`ping` 命令是一个小型工具，可以用来确定是否可以访问特定的 IP 地址。`ping` 命令在大多数计算机系统中都是常见的，它允许你查询 IP 地址或完全限定的域名，以检查是否有可用的连接。'
- en: 'The basic syntax of the `ping` command is as follows:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '`ping` 命令的基本语法如下：'
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The `ping` command works by issuing an ICMP echo request to a specified destination
    in order to verify and check network connectivity, and it is the simplicity of
    this statement that makes this command such a useful tool when diagnosing any
    network-based connectivity issue.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '`ping` 命令通过向指定的目标发出 ICMP 回显请求来验证和检查网络连接，正是这一简单的命令使其成为诊断任何基于网络的连接问题时非常有用的工具。'
- en: 'For example, if you were to issue a ping request to Google (`# ping google.com`),
    then, depending on your networking environment and conditions, the output will
    look similar to this:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你向 Google 发出 ping 请求（`# ping google.com`），那么根据你的网络环境和条件，输出将类似于以下内容：
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: These results are an illustration of a successful ping, and it can be described
    as the journey of an echo request issued by a local computer system to `google.com
    (216.58.210.14)`.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这些结果展示了一个成功的 ping，可以描述为一个本地计算机系统向 `google.com (216.58.210.14)` 发出的回显请求的旅程。
- en: The request begins on the host computer; it is then sent over the local network
    and finally across the Internet. Once the request is successfully received, the
    target will then respond and the time taken to complete this process is measured
    in order to generate an average response or latency time. However, if there is
    no response, then it is likely that there is either a physical problem on the
    network itself, a fundamental issue such as the location is incorrect or non-functional,
    the target machine not honoring a ping request, or that the host routing table
    is incorrect.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 请求从主机计算机发起，然后通过本地网络传送，最后经过互联网。一旦请求成功接收，目标将进行响应，并且测量完成此过程所需的时间，以生成平均响应或延迟时间。但是，如果没有响应，则很可能是网络本身存在物理问题，或者是一些基本问题，如位置不正确或不可用，目标计算机未响应
    ping 请求，或者主机路由表错误。
- en: Note
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In online computer games, a ping request (also referred to as a "high ping"
    or "low ping") is typically associated with the measurement of speed from the
    local machine to the external game server. For example, a player with a low ping
    (10 ms for example) will have a better gaming experience than a player with a
    180 ms ping.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在在线游戏中，ping请求（也称为“高ping”或“低ping”）通常与从本地机器到外部游戏服务器的速度测量相关。例如，一个低ping（例如10毫秒）的玩家会比一个180毫秒ping的玩家拥有更好的游戏体验。
- en: Moreover, you should also be aware that, if you have a high ping of over 500ms,
    then it means that any request is taking over half a second to get to the server
    and back. This condition is noticeable as you will probably be experiencing "frame
    jitters" or "frame jumps"—a phenomenon known as "rubber banding" in the world
    of online gameplay.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你还应该意识到，如果你的ping值超过500毫秒，则意味着任何请求需要超过半秒才能到达服务器并返回。这个条件很明显，因为你可能会经历“帧抖动”或“帧跳跃”——在在线游戏中被称为“橡皮带现象”。
- en: The `ping` command is simple to use, but in its naked form, it will continue
    to execute until it is cancelled. In certain situations, this may prove useful,
    but it is generally easier to invoke the `-c` option in order to reduce the number
    of echo requests made and to be provided with a summary of the event.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '`ping` 命令很简单易用，但在其默认形式下，它会一直执行，直到被取消。在某些情况下，这可能会很有用，但通常更容易使用 `-c` 选项，以减少回显请求的次数，并获取事件的总结。'
- en: 'For example, if you wanted to restrict the number of echo requests made to
    4, you need to type the following command:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你想将回显请求的数量限制为4次，你需要输入以下命令：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'In the preceding example, the `ping` command will stop issuing echo requests
    after 4 cycles, and based on our previous example, the output will look similar
    to this:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，`ping` 命令将在4次循环后停止发出回显请求，基于我们之前的例子，输出会类似于此：
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now, just before we finish this introduction to the `ping` command, there are
    a few points regarding any ping requests that should be considered. These points
    may not necessarily represent a problem, but they will influence the results of
    a ping test:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们结束对 `ping` 命令的介绍之前，有几点关于任何ping请求需要考虑的事项。这些点可能不一定表示问题，但它们会影响ping测试的结果：
- en: '**Distance to the target**: Let''s say you live in the U.S., and you try to
    connect to a server in the EU. In this situation you should expect that the ping
    would be higher than if you tried to connect to an alternative U.S. server that
    is closer to you geographically. Further to this, you should expect that there
    could be speed differences across the various geographical locations.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**与目标的距离**：假设你住在美国，并尝试连接到欧洲的服务器。在这种情况下，你应该预期ping值会高于你尝试连接的另一台距离你更近的美国服务器。此外，你还应该预期，不同地理位置之间的速度可能会有所不同。'
- en: '**The Internet connection speed**: If you have a low-bandwidth Internet connection
    (that is, with a poor upload and download speed rating), the ping will take longer
    to come back to you than if you have a high-bandwidth broadband connection (that
    is, with a good upload and download speed rating).'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**互联网连接速度**：如果你的网络带宽较低（即上传和下载速度差），则ping请求的响应时间会比高速带宽的宽带连接（即上传和下载速度较好）更长。'
- en: '**The hop count**: The hop count is a generic term that refers to the route
    and servers the ping has to take to reach the destination and back. So, just like
    it is in the real world, if you live far away from the main train line, you will
    need to make additional "connections" or "hops" in order to reach the final destination.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**跳数**：跳数是一个通用术语，指的是ping请求必须经过的路线和服务器，以便到达目标并返回。因此，就像在现实生活中一样，如果你住得离主要火车线路较远，你就需要做更多的“连接”或“跳跃”，才能到达最终目的地。'
- en: The basic principle always states that a low ping is always desirable as it
    is critical for time-based instructions. However, when conducting a ping test,
    you must not only consider the total number of pings that actually made it to
    the target site, but you should also carefully note the average and standard deviation
    of the pings in question.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 基本原则始终表明，低ping始终是可取的，因为它对基于时间的指令至关重要。然而，在进行ping测试时，你不仅要考虑实际到达目标站点的ping总数，还要仔细记录相关ping的平均值和标准差。
- en: 'Look at it this way: if the pings do not arrive, this may indicate that there
    could be packet loss due to an unreliable Internet connection between your computer
    and the destination. However, if the ping rate is low but it shows a widening
    variable rate over a specific time period, then under certain circumstances, this
    type of environment is not always preferable when compared to a more constant
    rate during the same time period.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个角度看：如果ping请求没有到达，这可能表明由于你计算机和目标之间的互联网连接不稳定，可能会出现数据包丢失的情况。然而，如果ping率较低，但在特定时间段内显示出一个逐渐增大的变化率，那么在某些情况下，这种环境并不总是比同一时间段内的恒定速率更可取。
- en: The dig and host commands
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`dig`和`host`命令'
- en: 'The `dig` command can be used to verify DNS mappings, Internet connectivity,
    host addresses, and MX records, and to discover more about any potential reverse
    DNS issues that can give rise to spam and blacklisting. Made available through
    the `bind-utils` package, the information supplied by `dig` is available in four
    main parts. This includes a header section (a list of the options used), a question
    section (the query type), the answer section (the address of the location in question),
    and the query section (containing statistical information regarding the query
    time, nameservers, and more). The `dig` command was introduced to replace `nslookup`
    and the basic syntax is as follows:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '`dig`命令可以用来验证DNS映射、互联网连接、主机地址和MX记录，并且可以帮助发现与潜在的反向DNS问题相关的信息，这些问题可能导致垃圾邮件和被列入黑名单。通过`bind-utils`包提供的`dig`命令，返回的信息分为四个主要部分，包括：头部部分（使用的选项列表）、问题部分（查询类型）、答案部分（相关位置的地址）、查询部分（包含关于查询时间、名称服务器等的统计信息）。`dig`命令是为了替代`nslookup`而推出的，基本语法如下：'
- en: '[PRE4]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The results will look like this:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 结果将如下所示：
- en: '[PRE5]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'You will notice that there is a lot of information contained within such output,
    so let''s break this down by starting with the global options section:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到，这种输出中包含了大量信息，因此让我们从全局选项部分开始逐步解析：
- en: '[PRE6]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This is then followed by an output that reports on the answer:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 然后是一个输出，报告查询的答案：
- en: '[PRE7]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Following this, `dig` then repeats the original question:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 紧接着，`dig`会重复原始问题：
- en: '[PRE8]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The answer is provided as follows:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 答案如下所示：
- en: '[PRE9]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Finally, we are presented with some general statistics about the query itself:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将看到一些关于查询本身的一般统计数据：
- en: '[PRE10]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Also, by replacing `XXX.XXX.XXX.XXX` with a relevant IP address, you can query
    a specific nameserver like so:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，通过将`XXX.XXX.XXX.XXX`替换为相关的IP地址，你可以像这样查询特定的名称服务器：
- en: '[PRE11]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'So, if you run the following command:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，如果你运行以下命令：
- en: '[PRE12]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'You can expect to see the following results:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以期望看到以下结果：
- en: '[PRE13]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Moreover, where the default action of the `dig` command is to search for `A`
    records, you can manipulate the `dig` syntax in order to obtain information based
    on a specific record type as follows:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，`dig`命令的默认操作是查找`A`记录，你可以通过调整`dig`语法来获取基于特定记录类型的信息，方法如下：
- en: '[PRE14]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'As an alternative, and in order to generalize the results, you can implement
    the `ANY` query in order to obtain as much information as possible by typing:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 作为替代方法，并为了使结果更具普适性，你可以通过输入`ANY`查询来尽可能多地获取信息：
- en: '[PRE15]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Further to this, the `dig` command can be used to implement a reverse lookup
    in order to obtain relevant DNS information based on a specific IP address.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，`dig`命令还可以用来执行反向查找，以根据特定的IP地址获取相关的DNS信息。
- en: 'This can be achieved by typing:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以通过输入以下命令来实现：
- en: '[PRE16]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The preceding command will subsequently respond with an answer in the following
    way:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 前述命令随后会以以下方式响应：
- en: '[PRE17]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'So, as you can see, `dig` is a flexible command-line tool that will enable
    you to perform a valid DNS query. Its output is verbose, but it can be encapsulated
    with the `+short` switch to provide a reduced and concise answer like so:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，`dig`是一个灵活的命令行工具，它可以让你执行有效的DNS查询。它的输出非常详细，但可以通过`+short`开关来简化并提供一个简洁的答案，像这样：
- en: '[PRE18]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The above command should respond in the following way:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令应该以以下方式响应：
- en: '[PRE19]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The `dig` command is an incredibly useful tool for troubleshooting a network,
    and its success is primarily associated with its ability to return the question,
    answer, authority, and additional sections.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '`dig`命令是一个极其有用的网络故障排除工具，它的成功主要归功于它能够返回问题、答案、权威和附加部分的能力。'
- en: 'However, and having said that, the alternative is to use the `host` command
    in the following way:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，话虽如此，另一种选择是使用`host`命令，方法如下：
- en: '[PRE20]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The `host` command works in a similar way to the `dig` command but its output
    looks like this:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '`host` 命令的工作方式与 `dig` 命令类似，但其输出如下所示：'
- en: '[PRE21]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: As you can see, the `host` command serves a similar purpose to `dig` and yet
    it is far more succinct.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，`host` 命令与 `dig` 的作用类似，但它更加简洁。
- en: 'For example, a basic `host` query will be as follows:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，一个基本的 `host` 查询如下所示：
- en: '[PRE22]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The returned output will look like this:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 返回的输出将如下所示：
- en: '[PRE23]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Alternatively, you can specify a third-party DNS server in the following way:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，你也可以通过以下方式指定第三方 DNS 服务器：
- en: '[PRE24]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The output of this will report on the use of an alternative DNS server and
    look like this:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这将报告使用替代 DNS 服务器的情况，并显示如下内容：
- en: '[PRE25]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Finally, `host` can perform reverse lookups like this:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，`host` 可以执行反向查找，如下所示：
- en: '[PRE26]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'So, let''s say you run a reverse lookup against Red Hat''s Akamai Edge server
    with the following command:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，假设你对 Red Hat 的 Akamai Edge 服务器进行反向查找，使用以下命令：
- en: '[PRE27]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The output will look like this:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '[PRE28]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'So look at it this way: for the purpose of troubleshooting a network, you can
    use either `dig` or `host`. Both of the commands are similar in terms of what
    they can be used for and what they can achieve, but where `host` offers simplicity,
    `dig` serves to provide a more advanced and script-worthy option.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 那么从这个角度来看：为了故障排除网络，你可以使用 `dig` 或 `host`。这两个命令在用途和功能上是相似的，但 `host` 提供了简单性，而 `dig`
    则提供了更高级的、适合脚本使用的选项。
- en: The traceroute command
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`traceroute` 命令'
- en: 'The `traceroute` command is designed to show the pathway to a remote destination
    and the delays that occur at every stop. Most administrators are familiar with
    `traceroute` and it maintains three primary objectives that can be summarized
    as follows:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '`traceroute` 命令旨在显示到远程目的地的路径，以及每个停靠点发生的延迟。大多数管理员都熟悉 `traceroute`，它有三个主要目标，可以总结如下：'
- en: To provide details of the entire path that a packet will traverse
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供数据包将要经过的整个路径的详细信息
- en: To provide the names and the identity of the devices and routers found on that
    path
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供路径上找到的设备和路由器的名称及其身份
- en: To report on network latency as a result of assessing the time taken to send
    and receive data to each device on a given path
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 报告网络延迟的情况，评估在给定路径上向每个设备发送和接收数据所花费的时间
- en: 'In simple terms, the `traceroute` command is a tool that verifies the path
    your data will take without using any data, and the syntax used is based on the
    following:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 简单来说，`traceroute` 命令是一个工具，用于验证数据将要经过的路径，而不会使用任何数据，所使用的语法基于以下内容：
- en: '[PRE29]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The output will provide the specified host, the IP address for that domain,
    the maximum number of hops required, and the size of the packet that will be used.
    The subsequent lines then report the hop number, hostname, IP address, and packet
    round-trip times. Of course, you can also avoid reverse DNS with the use of the
    `-n` option in the following way:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将提供指定的主机、该域的 IP 地址、所需的最大跳数以及将使用的包大小。随后的行将报告跳数、主机名、IP 地址和数据包的往返时间。你当然也可以使用
    `-n` 选项以以下方式避免反向 DNS：
- en: '[PRE30]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: The `traceroute` command sends three packets with each TTL and will display
    the round-trip time (RTT), which indicates the time difference between the issuing
    of a probe and the receipt of a response packet. This is useful in discovering
    network bottlenecks, and if you begin to see asterisks (*), then this suggests
    that there is a potential problem routing to that host as the asterisks can indicate
    packet loss or a dropped packet. However, it is also important to realize that
    interpreting `traceroute` can rely on an understanding and appreciation of its
    inherent quirks.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '`traceroute` 命令每次发送三个包，带有每个 TTL，并将显示往返时间 (RTT)，这表示从发出探测到接收到响应包之间的时间差。这对于发现网络瓶颈非常有用，如果你开始看到星号（*），则表明路由到该主机可能存在问题，因为星号可能表示数据包丢失或丢弃数据包。然而，也需要认识到，解释
    `traceroute` 结果需要理解并接受它固有的特点。'
- en: The `traceroute` command is recognized to be the cornerstone of TCP/IP troubleshooting.
    It begins by issuing a UDP-based packet with a TTL value of 1\. If the packet
    reaches the target, then the gateway sends a response packet and reports its findings.
    However, if the packet does not reach the target, then the recipient gateway will
    decrease the TTL by the value of 1\. If the TTL value reaches 0, then the gateway
    will drop the packet and report the results after a new packet is issued with
    an increased value in order to circumvent the same gateway in the next phase.
    This process is repeated until the target host is reached or the maximum TTL value
    is reached.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '`traceroute`命令被认为是TCP/IP故障排除的基石。它开始时会发出一个基于UDP的数据包，TTL值为1。如果数据包到达目标，网关会发送响应包并报告其结果。然而，如果数据包没有到达目标，那么接收网关会将TTL值减少1。如果TTL值为0，则网关会丢弃数据包，并在发出一个增加了TTL值的新数据包后报告结果，以绕过下一个阶段的同一网关。这个过程会一直重复，直到到达目标主机或达到最大TTL值为止。'
- en: There are three different types of `traceroute` implementation that cover UDP,
    TCP, and ICMP.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 有三种不同类型的`traceroute`实现，分别涵盖UDP、TCP和ICMP。
- en: 'For example, if you wanted to use the ICMP variation, you will type:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你想使用ICMP变种，你可以输入：
- en: '[PRE31]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Again, you can bypass DNS with the `–n` option like this:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，你可以像这样使用`–n`选项绕过DNS：
- en: '[PRE32]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: This variation will work in a manner similar to the previous examples that use
    UDP in which the `traceroute` program will send echo requests, and the hops in
    between will reply. However, unlike the UDP version, the process will use ICMP.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这种变种的工作方式与之前使用UDP的示例类似，`traceroute`程序将发送回显请求，途中经过的每一跳都会做出回应。然而，与UDP版本不同的是，这个过程将使用ICMP。
- en: 'The final way is to use a TCP variation in the following way:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 最终的方法是使用以下方式的TCP变种：
- en: '[PRE33]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: In many respects, the TCP option is probably the most effective method, as most
    networks will allow for this traffic. This is particularly so if you are targeting
    port 80\. However, there are no hard and fast rules to determine which version
    of `traceroute` you can or want to use. The rules will be set by the network configuration,
    as some networks will block UDP requests by default (typically, ports 33434 to
    33534). So, based on this, why not try them all and see what provides the best
    results for your environment.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多方面，TCP选项可能是最有效的方法，因为大多数网络都会允许这种流量。如果你的目标是80端口，尤其如此。然而，没有硬性规定来确定你可以或想要使用哪种版本的`traceroute`。这些规则将由网络配置设定，因为某些网络默认会阻止UDP请求（通常是33434到33534端口）。所以，基于这一点，为什么不尝试所有版本，看看哪个最适合你的环境呢？
- en: 'Let''s look at it this way: knowing how `traceroute` works is winning only
    half the battle. If `traceroute` can reach the host, but not the target, then
    it is likely that the issue is with the target. However, if `traceroute` cannot
    reach the host, then it is likely that the issue lies with the route itself, which
    not only consists of some routers denying `traceroute` packets, but others that
    show remarkable differences in bandwidth and latency, firewalls, and a whole host
    of other traps that are filtering `traceroute` packets. In this situation, multiple
    targets should be selected (you should also consider sending your requests using
    UDP, ICMP, and TCP to circumvent any network issues), and given that the Internet
    is asymmetric by nature, it is generally a good idea to perform a `traceroute`
    action in both directions in order to judge the overall network efficiency.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们这样来看：了解`traceroute`的工作原理仅仅是赢得了半场胜利。如果`traceroute`可以到达主机，但无法到达目标，那么问题很可能出在目标上。然而，如果`traceroute`无法到达主机，那么问题可能出在路由本身，这不仅涉及到一些路由器拒绝`traceroute`数据包，还有其他一些路由器在带宽和延迟上表现出显著的差异、防火墙，以及过滤`traceroute`数据包的其他各种陷阱。在这种情况下，应选择多个目标（你还应该考虑使用UDP、ICMP和TCP发送请求，以绕过任何网络问题），并且考虑到互联网本质上是非对称的，通常最好在两个方向上执行`traceroute`操作，以便评估整体网络效率。
- en: On the whole, `traceroute` is an excellent tool, but it can be misleading, so
    be cautious in analyzing the results and always supplement your work with additional
    investigation.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，`traceroute`是一个很好的工具，但它可能会误导你，因此在分析结果时要小心，并始终用额外的调查来补充你的工作。
- en: The mtr command
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: mtr命令
- en: 'As an alternative to `traceroute`, there is the `mtr` command. On some Linux
    systems, you will need to run this as the root user or in conjunction with `sudo`,
    but whatever method you use, the syntax of this command is very simple and it
    works in the following way:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 作为`traceroute`的替代方案，有`mtr`命令。在某些Linux系统上，你需要以root用户身份运行此命令，或者与`sudo`一起使用，但无论你使用哪种方法，该命令的语法非常简单，并按如下方式工作：
- en: '[PRE34]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'The output may look similar to `traceroute`, but the display is in real-time,
    thereby enabling you to monitor trends and averages to reflect how network performance
    changes over time. So unlike `traceroute`, instead of merely taking a snapshot
    of a single journey, by using `mtr` you are able to check for intermittent packet
    issues by gathering data over a longer period of time. Moreover, as an alternative
    to real-time updates, `mtr` will also provide a reporting option that will issue
    the results of 10 packets to each hop encountered:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 输出可能类似于`traceroute`，但显示是实时的，从而使你能够监控趋势和平均值，反映网络性能随时间的变化。因此，与`traceroute`不同，`mtr`通过收集更长时间的数据，不仅能简单地拍摄一次旅程的快照，还能检查间歇性的数据包问题。此外，作为实时更新的替代方案，`mtr`还将提供一个报告选项，向每个遇到的跳点发出10个数据包的结果：
- en: '[PRE35]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: So, upon reflection, it can be argued that `mtr` is superior to `traceroute`
    at monitoring network connectivity. It certainly has many advantages and it can
    provide a significant amount of detail, but knowing that you cannot control how
    the world will work outside your internal network, the seasoned troubleshooter
    should always remain vigilant and choose to examine every tool at his disposal.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，经过反思，可以认为`mtr`在监控网络连接方面优于`traceroute`。它确实有许多优点，并且可以提供大量细节，但考虑到你无法控制外部网络的工作方式，经验丰富的故障排除人员应始终保持警觉，并选择检查所有可用的工具。
- en: Monitoring network connections with the ss command
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`ss`命令监控网络连接
- en: The socket statistics command (`ss`) is the successor to `netstat`; it is not
    only faster, but it is also able to display more information. However, unlike
    `netstat`, which obtains its information from the various files contained within
    the `/proc` directory, the `ss` command obtains its information directly from
    the kernel space.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 套接字统计命令（`ss`）是`netstat`的继任者；它不仅更快，而且能够显示更多的信息。然而，与通过`/proc`目录中的各种文件获取信息的`netstat`不同，`ss`命令直接从内核空间获取信息。
- en: 'The basic syntax of the `ss` command is as follows:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '`ss`命令的基本语法如下：'
- en: '[PRE36]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Using this syntax, we have simply called for an output of all TCP, UDP, and
    Unix socket connections with an optional pipe to `less` in order to ensure that
    the results can be seen on screen. Of course, this command can be combined with
    either the `-t`, `-u` or, `-x` option to restrict any output to show either TCP,
    UDP, or Unix socket connections respectively, but in order to make the output
    more informative, you will probably want to combine one of these additional options
    with the `-a` option in order to report on both connected and listening sockets
    like this:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种语法，我们只是调用了所有TCP、UDP和Unix套接字连接的输出，并可选择通过管道将其发送到`less`，以确保结果可以在屏幕上查看。当然，您可以将此命令与`-t`、`-u`或`-x`选项结合使用，以限制输出仅显示TCP、UDP或Unix套接字连接，但为了使输出更加信息丰富，你可能想要将这些附加选项与`-a`选项结合使用，以报告连接和监听套接字，如下所示：
- en: '[PRE37]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'As you will notice, in the preceding instance we are only reporting on the
    current TCP environment and it can be changed to suit UDP (`ss -ua`) or Unix socket
    connections (`ss -xa`) in a similar way. However, if you enjoy a degree of precision,
    you will be comforted to know that the `ss` command can be combined with a query
    by using the `–A` option like this:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所注意到的，在前面的例子中，我们只报告了当前的TCP环境，可以通过类似的方式将其更改为适用于UDP（`ss -ua`）或Unix套接字连接（`ss
    -xa`）。然而，如果你喜欢一定程度的精确性，你会欣慰地知道，`ss`命令可以通过使用`–A`选项与查询结合使用，如下所示：
- en: '[PRE38]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Restricting the output does serve to make the information far more concise,
    but to take this one stage further, additional filters can be applied using the
    following syntax:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 限制输出确实能使信息更加简洁，但要进一步提升，可以使用以下语法应用附加的过滤器：
- en: '[PRE39]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'For example, where all standard TCP states are accounted for, you can display
    all established IPv4 TCP sockets in the following way:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，考虑到所有标准的TCP状态，你可以以下列方式显示所有已建立的IPv4 TCP套接字：
- en: '[PRE40]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'You can show all closed TCP states like this:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以像这样显示所有关闭的TCP状态：
- en: '[PRE41]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Now, it can be argued that using the `ss` command will perform in a similar
    way to using `netstat -a`. This in part is true, but (and remember that you can
    replace `-t` with `-u` or `-x`) given the ability to increase the speed of execution
    by not resolving hostnames (`ss -nt`), show only listening sockets (`ss -ltn`),
    show socket memory usage (`ss -t -m`), show processes using particular sockets
    (`ss -t -p`), print the process name (`ss -ltp`), display either IPv4 or IPv6
    (`ss -tl4` or `ss -tl6`), and show time information (`ss -tn -o`), you will notice
    that we have merely scratched the surface of the `ss` command.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，可以说使用`ss`命令的效果与使用`netstat -a`类似。部分是正确的，但（记住你可以将`-t`替换为`-u`或`-x`）考虑到通过不解析主机名来提高执行速度（`ss
    -nt`），只显示监听套接字（`ss -ltn`），显示套接字内存使用情况（`ss -t -m`），显示使用特定套接字的进程（`ss -t -p`），打印进程名称（`ss
    -ltp`），显示IPv4或IPv6（`ss -tl4`或`ss -tl6`），并显示时间信息（`ss -tn -o`），你会发现我们才刚刚触及`ss`命令的表面。
- en: 'For example, you can even run a query to discover who was using port 22 (SSH)
    by using the following syntax:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你甚至可以运行查询，通过使用以下语法来发现谁在使用端口22（SSH）：
- en: '[PRE42]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Alternatively, you can use the following syntax to show all ports connected
    from a remote IP address:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，你可以使用以下语法来显示从远程IP地址连接的所有端口：
- en: '[PRE43]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Then filter the query to a specific port with the following variation:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 然后使用以下变体将查询过滤到特定端口：
- en: '[PRE44]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Remember, familiarity with your networking environment will always help, and
    armed with this command, you should be in a better position to recognize problematic
    connections before they take hold.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，熟悉你的网络环境总是会有所帮助，掌握了这个命令后，你应该能在问题连接发生之前就能识别它们。
- en: Packet analysis with tcpdump
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用tcpdump进行数据包分析
- en: The `tcpdump` command is a packet analyzer that is able to capture and provide
    a description of the traffic being transmitted across a network interface. It
    is common to most flavors of Linux, and it provides access to a unique view of
    the network at the packet level that can prove vital when troubleshooting the
    network environment.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '`tcpdump`命令是一种数据包分析工具，它能够捕获并提供通过网络接口传输的流量描述。它是大多数Linux发行版的标准工具，提供了一个独特的网络数据包层级视图，在网络故障排除时非常有用。'
- en: 'The basic syntax for using `tcpdump` is expressed in the following way:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`tcpdump`的基本语法如下：
- en: '[PRE45]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'You can also specify a protocol like this:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以像这样指定协议：
- en: '[PRE46]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'While a port value can be used in the following way:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 端口值可以按以下方式使用：
- en: '[PRE47]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Verbosity options can be issued by using `-v` or `-vv`, while DNS can be avoided
    with the `-n` option. However, because `tcpdump` will continue running until the
    request is cancelled, it is always preferable to use the `-c` option in order
    to capture a pre-determined number of events in the following way:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`-v`或`-vv`选项发出详细信息选项，而通过使用`-n`选项可以避免DNS解析。然而，由于`tcpdump`会一直运行，直到请求被取消，因此最好使用`-c`选项来捕获预定数量的事件，像这样：
- en: '[PRE48]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Taking this one step further, you can capture `10` packets from a specific
    IP address by calling either the `src` option (source) or the `dst` option (destination)
    like this:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 更进一步，你可以通过调用`src`选项（源）或`dst`选项（目的地）来从特定IP地址捕获`10`个数据包，像这样：
- en: '[PRE49]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'While the device name itself can be obtained by running the following option:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 设备名称本身可以通过运行以下选项获取：
- en: '[PRE50]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: The `tcpdump` command can be run in both the read and write modes. However,
    where the latter implies the use of the `-w` option that will cause `tcpdump`
    to save the packet data to a file for later analysis, the former, signified by
    the use of the `-r` option, will determine that `tcpdump` will read from a saved
    packet file only. As you will come to realize, when in the write mode you should
    specify the relevant device name (that is `eth0`), but in both cases, only packets
    that match an expression will be matched and displayed.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '`tcpdump`命令可以在读取模式和写入模式下运行。然而，后者意味着使用`-w`选项，这会导致`tcpdump`将数据包数据保存到文件中以供后续分析，而前者，通过使用`-r`选项，意味着`tcpdump`只会从已保存的数据包文件中读取。如你所知，在写入模式下你应该指定相关的设备名称（即`eth0`），但在这两种情况下，只有匹配表达式的数据包才会被匹配并显示出来。'
- en: 'For example, in read mode, the basic syntax of this commands looks like this:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在读取模式下，这个命令的基本语法如下：
- en: '[PRE51]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'While in write mode, you can send the entire Ethernet frame for further analysis
    in the following way:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在写入模式下，你可以以以下方式发送整个以太网帧进行进一步分析：
- en: '[PRE52]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: So as you can see, the most common application of `tcpdump` is to verify whether
    the process of two-way communication is working. The `tcpdump` command can be
    used to record network segments, and while recognizing this fact, we have merely
    scratched the surface of its flexibility.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，`tcpdump`最常见的应用是验证双向通信是否正常。`tcpdump`命令可以用来记录网络片段，在认识到这一点后，我们仅仅触及了它灵活性的表面。
- en: For this reason, I hope you can already see how this small utility can become
    an important tool when troubleshooting your networking environment.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我希望你能已经看到，当排查你的网络环境问题时，这个小工具可以成为一个重要的工具。
- en: Summary
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: The purpose of this chapter was to provide a starting point when attempting
    to troubleshoot areas of concern across the network environment. Of course, there
    is always more to learn, and knowing this will take you on a journey that goes
    far beyond the basic syntax of `dig`, `ping`, or even `tcpdump`. However, having
    toured a number of commands and utilities, you can now see how becoming an effective
    troubleshooter is quickly becoming an obtainable goal. To further our cause, we
    will now set our sights on the need to troubleshoot package management.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的目的是提供一个起点，以便在尝试排查网络环境中的问题时使用。当然，学习的内容总是有更多，而了解这些将带你踏上远超`dig`、`ping`甚至`tcpdump`基本语法的旅程。然而，通过学习多个命令和工具，你现在可以看到，成为一个有效的故障排除者正变成一个可以实现的目标。为了进一步推动这一目标，我们将把注意力转向包管理的故障排除需求。
- en: References
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: 'The TCP Wikipedia page: [http://en.wikipedia.org/wiki/Transmission_Control_Protocol](http://en.wikipedia.org/wiki/Transmission_Control_Protocol)'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TCP的维基百科页面：[http://en.wikipedia.org/wiki/Transmission_Control_Protocol](http://en.wikipedia.org/wiki/Transmission_Control_Protocol)
- en: 'The Ping Wikipedia page: [http://en.wikipedia.org/wiki/Ping_(networking_utility)](http://en.wikipedia.org/wiki/Ping_(networking_utility))'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ping的维基百科页面：[http://en.wikipedia.org/wiki/Ping_(networking_utility)](http://en.wikipedia.org/wiki/Ping_(networking_utility))
- en: 'The Traceroute Wikipedia page: [http://en.wikipedia.org/wiki/Traceroute](http://en.wikipedia.org/wiki/Traceroute)'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Traceroute的维基百科页面：[http://en.wikipedia.org/wiki/Traceroute](http://en.wikipedia.org/wiki/Traceroute)
- en: 'The `ss` command official page: [http://www.cyberciti.biz/files/ss.html](http://www.cyberciti.biz/files/ss.html)'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ss`命令的官方页面：[http://www.cyberciti.biz/files/ss.html](http://www.cyberciti.biz/files/ss.html)'
- en: 'The ARP Wikipedia page: [http://en.wikipedia.org/wiki/Address_Resolution_Protocol](http://en.wikipedia.org/wiki/Address_Resolution_Protocol)'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ARP的维基百科页面：[http://en.wikipedia.org/wiki/Address_Resolution_Protocol](http://en.wikipedia.org/wiki/Address_Resolution_Protocol)
- en: 'The `dig` command Wikipedia page: [http://en.wikipedia.org/wiki/Dig_(command)](http://en.wikipedia.org/wiki/Dig_(command))'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dig`命令的维基百科页面：[http://en.wikipedia.org/wiki/Dig_(command)](http://en.wikipedia.org/wiki/Dig_(command))'
- en: 'The `tcpdump` Wikipedia page: [http://en.wikipedia.org/wiki/Tcpdump](http://en.wikipedia.org/wiki/Tcpdump)'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tcpdump`的维基百科页面：[http://en.wikipedia.org/wiki/Tcpdump](http://en.wikipedia.org/wiki/Tcpdump)'
