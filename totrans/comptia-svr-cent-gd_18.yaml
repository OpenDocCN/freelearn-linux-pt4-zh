- en: Troubleshooting Methods
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we'll review standard troubleshooting methods and procedures
    and common server issues that are caused by hardware, software, network, storage
    devices, and security systems.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will review the general procedures and methods for identifying,
    isolating, recreating, applying, and testing a failure or fault in any general
    hardware, software, network, storage device, and security policies and devices.
    The following five chapters in this part of this book cover the specific troubleshooting
    processes for each of these subsystems, respectively. The topics in this chapter
    are a review of the troubleshooting procedures that apply to any troubleshooting
    situation, which are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Troubleshooting steps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identifying the problem
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Establishing and testing a theory of cause
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Developing a plan of action to resolve a problem
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Documenting findings and outcomes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Troubleshooting steps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Troubleshooting, in the context of computers, servers, and networking, is a
    structured process that's used to identify, isolate, and resolve a performance
    issue or a malfunctioning component. Regardless of the size, purpose, use, or
    location of the computer, its problems are important to its users, operators,
    and stakeholders. The computer repair technician's responsibilities are simple,
    actually—identify the problem, resolve the problem, and document both actions.
    Yes, there are a few more steps to this process, but they're mostly to verify
    assumptions and test the solution.
  prefs: []
  type: TYPE_NORMAL
- en: 'While there''s no real standard for the steps that are using in a troubleshooting
    process, the troubleshooting steps that are detailed in the Server+ exam''s objectives
    are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Identify the problem and determine the scope
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Establish a theory of probable cause
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Test the theory to determine cause
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Establish a plan of action to resolve the problem and notify impacted users
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Implement the solution or escalate as appropriate
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Verify full system functionality and, if applicable, implement preventive measures
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Document findings, actions, and outcomes throughout the process
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Understand that the application of these steps may or may not be necessary in
    every troubleshooting situation. For example, the failure of a common component
    is easy to identify, replace, test, and document. In other less obvious instances,
    each troubleshooting step is necessary and important.
  prefs: []
  type: TYPE_NORMAL
- en: The technician's knowledge of computer systems is an important tool for troubleshooting
    a computer problem. However, the technician's interpersonal skills can be as important,
    if not more important. The ability to interact with a frustrated or flustered
    end user, a supervisor, or a general stakeholder to learn more about the nature
    of the problem is an essential skill for a computer repair technician. In addition,
    the technician's work habits and ethics are on display throughout the troubleshooting
    and repair process. The work that's performed should be efficient, effective,
    and correct.
  prefs: []
  type: TYPE_NORMAL
- en: Identifying the problem
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Identifying the actual cause of a problem is the first step of a troubleshooting
    process. However, the first step of that first step should be verifying that there's
    a problem. Commonly, problems occur not long, if not immediately, after changes
    are made to the hardware or software. Or the user or stakeholder thinks that something
    happened, but can't recreate what they think they saw, heard, or smelled. To verify
    that a problem is real, recreate it—if possible—or take the time to question the
    user with open questions (ones that cannot have just yes or no as answers). Remember
    that a user, supervisor, or stakeholders don't usually have your knowledge or
    understanding of computer systems.
  prefs: []
  type: TYPE_NORMAL
- en: After you're sure that there is a problem, regardless of whether it's the one
    reported or another cause altogether, start the process of identifying the source,
    cause, and location of the problem. Most PC hardware problems are relatively obvious,
    but what can appear to be a hardware problem could very well be a software issue.
    Or the symptoms may relate to problems that are possible on several components,
    or one problem is showing up as several different problems.
  prefs: []
  type: TYPE_NORMAL
- en: Regardless of the source of a problem, if possible, you should back up the hard
    disk and document an inventory of the installed components, if for no other reason
    than you will be able to restore a problem-free system back to where you started.
  prefs: []
  type: TYPE_NORMAL
- en: Hardware or software?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While this may seem like a simple question, some problems may be difficult to
    pin down based only on its symptoms. The troubleshooting approach and possibly
    the tools you use are different for these two areas. If you clearly can't make
    a decision on the source of the problem, draw on your knowledge and experience
    to begin troubleshooting what you believe is the issue.
  prefs: []
  type: TYPE_NORMAL
- en: Hardware problems
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To determine whether a reported problem is a hardware issue or what appears
    to be a software issue that's really a hardware issue (for example, the **Blue
    Screen of Death** (**BSoD**)), a systematic approach is best. In fact, hardware
    issues are often related to loose connectors or jumpers, dirty fans and components,
    or a hardware component malfunctioning due to a software error. When troubleshooting
    a hardware issue, take care of any obvious issues first, regardless of whether
    you believe they have anything to do with the issue. A PC that isn't clean is
    much easier to work with when it's clean; dust can conduct electricity.
  prefs: []
  type: TYPE_NORMAL
- en: 'Common areas of hardware issues include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Main memory
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Power supply
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cooling fan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hard Disk Drive (HDD)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Video or graphics cards
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Expansion cards, slots, and ports
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cable connections
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Software problems
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Software problems are much more frequent than issues with hardware components.
    The software on a computer is one of three general types: system software (for
    example, an operating system), application software (for example, LibreOffice),
    and utility software (for example, device drivers). Each software type can have
    its own set of problems. Operating system problems are typically the result of
    improper or erroneous configuration, settings, or compatibility issues. An operating
    system problem may require a minor adjustment or a complete re-installation. Application
    software issues may have some of the same problems, but generally a serious problem
    can be resolved through an update, patch, or correcting the registry. Utility
    software issues are primarily version issues and can be easily solved with a replacement
    installation.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Some causes of common software issues are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Missing or corrupted system or configuration files
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Malware attacks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improperly installed or removed software
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Corrupted filesystems or registries
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Establishing a probable cause
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Identifying a problem is one thing, often obvious, but sometimes identifying
    the underlying cause can be more problematic. Establishing a probable cause is
    a process that identifies the possible causes of a problem, analyzes their probability
    of being a cause, and, in the end, identifying one or more causes to investigate
    further. The overall objective of this process is to identify the probable root
    causes of the problem. List the probable causes with the simpler or more obvious
    issues at the top and the more complex and less likely at the bottom.
  prefs: []
  type: TYPE_NORMAL
- en: Working from the prioritized list, top to bottom, begin testing each one to
    either prove or disprove the probable causes you identified. The possible causes
    at the top of the list should be the simplest to test. If one of the probabilities
    proves to be the cause of the problem, the next step is to develop a plan to resolve
    the issue. However, if after testing each of the probable causes in the list of
    possibilities none proved to be the exact cause of the problem, you should reconsider
    the problem and, if possible, develop another list of probable causes. If you
    exhaust all possible probable causes—at least the ones you can come up with—it
    may be necessary to escalate the investigation to a more skilled technician or
    perhaps the manufacturer.
  prefs: []
  type: TYPE_NORMAL
- en: Define a plan of action
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In a vast majority of cases, the plan to resolve the problem is simply one of
    removing a hardware component, applying a patch to an application, or resetting
    or re-configuring system settings or parameters. The basic process that's involved
    is to acquire the replacement part or software (if the resolution requires the
    replacement of a hardware component), make the workspace free of static electricity
    to prevent electrostatic damage to the internal components, gather the appropriate
    tools, make the required fix, and thoroughly test the revised system completely.
  prefs: []
  type: TYPE_NORMAL
- en: If you're resolving more than one issue, affect the repair and test each one
    separately. As you proceed, each subsequent test step retests each of the earlier
    fixes, so you want to consider the sequence of your work to be accumulatively
    compatible. If, after making the change or one of a series of changes, the problem
    remains or a new problem appears, you should reverse the changes that were made
    to that point and reconsider your solution. After completing the repair and successfully
    testing it, notify its user or stakeholder and brief him or her on the cause of
    the problem, how you identified the cause, what you did to resolve the problem,
    and how you tested the solution.
  prefs: []
  type: TYPE_NORMAL
- en: Verifying functionality
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: At this point, you've tested the repair or resolution that was made to alleviate
    the problem and it's time to fully test the functionality of the full system and,
    if appropriate, the interaction of the system with any devices with which it interacts.
    Preferably, the assigned user, a supervisor, or a knowledgeable stakeholder should
    do this testing. Should this test fail at any level, document the point of failure
    and restart the entire troubleshooting process, focusing on the new failure.
  prefs: []
  type: TYPE_NORMAL
- en: If the testing is successful and the system functions as it should, determine
    whether there are any possible preventive measures that could help to avoid the
    same or similar failures in the future. These preventive measures may be as simple
    as improvements to the backup procedures or adjusting the **Heating, Ventilating,
    and Air Conditioning** (**HVAC**) system, or as severe as planning to replace
    the entire system as soon as possible.
  prefs: []
  type: TYPE_NORMAL
- en: Documenting findings, actions, and outcomes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Beginning with the initial installation of a network server or host, comprehensive
    documentation should be as much a part of a system as any of its hardware and
    software. The documentation of individual computers and network and system-attached
    devices should record its repair and maintenance history. This record must detail
    any troubleshooting activities, successful or not, any repairs, upgrades, patches,
    fixes, additions to, and even removals from, each system. Its importance as a
    repair and maintenance record comes from the fact that, typically, only one technician
    performs nearly all computer or system troubleshooting, repair, and maintenance
    actions.
  prefs: []
  type: TYPE_NORMAL
- en: Complete documentation of the troubleshooting, repairs, and maintenance is more
    important to the next technician who is going to be working on the system than
    it may be to you or anyone else. Since the document contains a written record
    of any reported problems and their resolution, it reduces any guesswork for future
    technicians. The information that a complete documentation of repair and maintenance
    actions should include the date, location, and contact at the trouble site; the
    reported problem/reason for the technician's visit; a description of the troubleshooting
    performed; a description of the repair made and the identity of any components
    that were replaced, added, or removed; a description or the identity of any software
    changes, including updates, configurations, installation, or removals; a detailed
    description of the testing performed and the results from each test; and any suspected
    issues not covered in this visit or potential maintenance or repair issues for
    later attention.
  prefs: []
  type: TYPE_NORMAL
- en: Each of the chapters that follow from [Chapter 15](2c3ab014-0f7a-4383-919a-3b10463a5937.xhtml), *Common
    Hardware Issues,* to [Chapter 19](cf1f76b3-479e-4a17-b1cd-5036513a4e4a.xhtml),
    *Common Security Issues* focus on a single major subsystem or component category
    of a computer, its common repair and maintenance issues, and the steps of the
    troubleshooting process.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Troubleshooting is a structured process that's used to identify, isolate, and
    resolve a performance issue or a malfunctioning component. The troubleshooting
    steps in the Server+ objectives are first, identify the problem and its effects;
    identify one or more probable causes for the problem; choose the most likely cause
    of the problem and verify it as the cause; plan out the steps needed to solve
    the problem; explain the steps to be taken to any effected users; perform the
    resolution plan; test the corrections and the whole system; and, of course, document
    every step of this process and your actions. Knowledge of computer systems is
    important for troubleshooting, but interpersonal skills are just as important.
    A technician's good work habits and ethics, as well as his or her work should
    be efficient, effective, and correct.
  prefs: []
  type: TYPE_NORMAL
- en: Identifying the cause of a problem is the first step of troubleshooting, and
    the first step of that first step is to verify that there's a problem. Frequently,
    problems show up after changes to hardware or software. The user reports a problem
    but cannot recreate it. You can verify a problem by recreating it. Most PC hardware
    problems are obvious. However, what may appear to be a hardware problem may be
    a software issue. Back up the hard disk and document the installed components.
  prefs: []
  type: TYPE_NORMAL
- en: Common areas of hardware problems include main memory (RAM); power supply; cooling
    fans; hard disk drive; video or graphics cards; expansion cards, slots, and ports;
    and cables and connections. Computer software is system software, application
    software, and utility software. Common software issues include missing or corrupted
    system or configuration files; malware attacks; improperly installed software;
    and corrupted filesystems or registry entries.
  prefs: []
  type: TYPE_NORMAL
- en: Establishing a probable cause identifies the possible causes of a problem and
    their probability. Work from a prioritized list and test each possibility identified.
    Resolve the problem and test the revised system completely. Fully test the full
    system and involve the user. Documentation should include a complete record of
    the troubleshooting and work that was performed.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What diagnostic activity is a structured process that's used to identify and
    isolate a computer problem?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Maintenance
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Analysis
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Troubleshooting
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: System testing
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: What questioning technique is best for gaining information from a user that
    reported a problem about a computer?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: True/false
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Closed questioning
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Multiple choice
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Open questioning
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: In addition to technical knowledge about computer systems, what skill should
    a computer repair technician possess?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use of repair tools
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Interpersonal skills
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Interpersonal skills
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Use of diagnostic equipment
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: What's the first step in the process of determining the source or cause of a
    computer's performance issue?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Identify the problem
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Reboot the computer
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Shut down the computer
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Test a possible solution
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: The best way to verify that a reported problem exists is to do which of the
    following?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Determine whether the problem is hardware or software
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Remove the suspected hardware or software
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Recreate the problem
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Reboot the system
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Before starting any work on a computer to isolate and identify a problem, what
    cautionary action should you take?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open a Command Prompt window
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Back up the entire hard disk
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Remove the hard disk drive
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Boot the computer from a floppy disk
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which of the following is not a general category of computer software?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: System software
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Entertainment software
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Utility software
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Application software
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which of the following component categories are common hardware problem areas?
    Choose all that apply.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Main memory
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: System case
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Power supply
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: External connectors
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Cooling system
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Graphics card
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which of the following are common software issues? Choose all that apply.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Corrupted system files
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Improperly installed software
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Malware attacks
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: All of the above
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: None of the above
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: When performing a full system test after affecting a hardware or software change
    to a system, which of the following steps should you include?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Develop a test plan
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Involve the user
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Document the results
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: All of the above
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: None of the above
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
