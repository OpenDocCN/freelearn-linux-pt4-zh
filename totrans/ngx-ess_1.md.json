["```\n$ sudo apt-get install nginx\n\n```", "```\n$ sudo service nginx start\n\n```", "```\n# yum install nginx\n\n```", "```\n$ wget -q http://nginx.org/download/nginx-1.7.9.tar.gz\n\n```", "```\n$ tar xf nginx-1.7.9.tar.gz\n$ cd nginx-1.7.9\n\n```", "```\n$ ./configure\nchecking for OS\n + Linux 3.13.0-36-generic i686\nchecking for C compiler ... found\n+ using GNU C compiler\n[...]\n\n```", "```\n$ make\n\n```", "```\n# make install\n\n```", "```\n# sbin/nginx\n\n```", "```\n$ /usr/sbin/nginx -V\nnginx version: nginx/1.4.6 (Ubuntu)\nbuilt by gcc 4.8.2 (Ubuntu 4.8.2-19ubuntu1)\nTLS SNI support enabled\nconfigure arguments: --with-cc-opt='-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2' --with-ld-opt='-Wl,-Bsymbolic-functions -Wl,-z,relro' â€¦\n\n```", "```\ngzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;\n```", "```\ntypes {\n    text/html                            html htm shtml;\n    text/css                              css;\n    text/xml                              xml;\n    image/gif                            gif;\n    image/jpeg                         jpeg jpg;\n    application/x-javascript      js;\n    application/atom+xml        atom;\n    application/rss+xml            rss;\n}\n```", "```\nproxy_set_header Host $http_host;\n```", "```\nproxy_set_header Host ${http_host};\n```", "```\nproxy_set_header Host ${http_host}_squirrel;\n```", "```\n            location ~ /(.+)\\.php$ {\n                [...]\n                proxy_set_header X-Script-Name $1;\n            }\n    ```", "```\n            proxy_set_header X-Version-Name $arg_ver;\n    ```", "```\n/*\n * A simple relative inclusion. The target file's path\n * is relative to the location of the current configuration file.\n */\ninclude mime.types;\n\n/*\n * A simple inclusion using an absolute path.\n */\ninclude /etc/nginx/conf/site-defaults.conf;\n```", "```\n/*\n * A simple glob inclusion. This will include all files\n * ending on \".conf\" located in /etc/nginx/sites-enabled\n */\ninclude /etc/nginx/sites-enabled/*.conf;\n```", "```\n http {\n     [...]\n     server {\n         [...]\n     }\n }\n```", "```\n        location /images {\n            root /usr/local/html/images;\n        }\n```", "```\n        location = /images/empty.gif {\n            emptygif;\n        }\n```", "```\n        location ~ \\.php$ {\n            [...]\n        }\n```", "```\n    if ($file_present) {\n        limit_rate 256k;\n    }\n    ```", "```\n    if ( -d \"${path}\" ) {\n        try_files \"${path}/default.png\" \"${path}/default.jpg\";\n    }\n    ```", "```\nif ($http_user_agent ~ MSIE) {\n    rewrite ^(.*)$ /msie/$1 break;\n}\n```", "```\nif ($http_cookie ~* \"id=([^;]+)(?:;|$)\") {\n    set $id $1;\n}\n```", "```\nif ($request_method = POST) {\n    return 405;\n}\n```", "```\nif ($slow) {\n    limit_rate 10k;\n}\n```", "```\nlimit_except GET {\n    return 405;\n}\n```", "```\nlocation / {\n    # The outer section\n    root /var/www/example.com;\n    gzip on;\n\n    location ~ \\.js$ {\n        # Inner section 1\n        gzip off;\n\n    }\n    location ~ \\.css$ {\n        # Inner section 2\n    }\n    [...]\n}\n```", "```\nerror_log logs/error.log;\n\nevents {\n    use epoll;\n    worker_connections  1024;\n}\n\nhttp {\n    include           mime.types;\n    default_type      application/octet-stream;\n\n    server {\n        listen      80;\n        server_name example.org www.example.org;\n\n        location / {\n            proxy_pass http://localhost:8080;\n            include proxy_params;\n        }\n\n        location ~ ^(/images|/js|/css) {\n            root html;\n            expires 30d;\n        }\n    }\n}\n```"]