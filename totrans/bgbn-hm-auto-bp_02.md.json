["```\nroot@beaglebone:~# echo cape-bone-iio > /sys/devices/bone_capemgr.9/slots\n\n```", "```\npart_number 'cape-bone-iio', version 'N/A'\nslot #7: generic override\nbone: Using override eeprom data at slot 7\nslot #7: 'Override Board Name,00A0,Override Manuf,cape-bone-iio'\nslot #7: Requesting part number/version based 'cape-bone-iio-00A0.dtbo\nslot #7: Requesting firmware 'cape-bone-iio-00A0.dtbo' for board-name 'Override Board Name', version '00A0'\nslot #7: dtbo 'cape-bone-iio-00A0.dtbo' loaded; converting to live tree\nslot #7: #1 overlays\nbone-iio-helper helper.12: ready\nslot #7: Applied #1 overlays.\n\n```", "```\nroot@beaglebone:~# find /sys -name '*AIN*'\n/sys/devices/ocp.3/helper.12/AIN0\n/sys/devices/ocp.3/helper.12/AIN1\n/sys/devices/ocp.3/helper.12/AIN2\n/sys/devices/ocp.3/helper.12/AIN3\n/sys/devices/ocp.3/helper.12/AIN4\n/sys/devices/ocp.3/helper.12/AIN5\n/sys/devices/ocp.3/helper.12/AIN6\n/sys/devices/ocp.3/helper.12/AIN7\n\n```", "```\nroot@beaglebone:~# ./load_firmware.sh adc\n```", "```\nroot@beaglebone:~# cat /sys/devices/ocp.3/helper.12/AIN0\n1716\n\n```", "```\nroot@beaglebone:~# cat /sys/bus/iio/devices/iio:device0/in_voltage0_raw\n\n```", "```\nroot@beaglebone:~# cat /sys/devices/ocp.3/helper.12/AIN0\n29\n\n```", "```\nroot@beaglebone:~# echo 68 > /sys/class/gpio/export\nroot@beaglebone:~# echo out > /sys/class/gpio/gpio68/direction\nroot@beaglebone:~# echo 0 > /sys/class/gpio/gpio68/value \nroot@beaglebone:~# echo 1 > /sys/class/gpio/gpio68/value\n\n```", "```\nhub 1-0:1.0: state 7 ports 1 chg 0000 evt 0002\nusb 1-1: reset full-speed USB device number 2 using musb-hdrc\nhub 1-0:1.0: state 7 ports 1 chg 0000 evt 0002\nusb 1-1: cp210x converter now attached to ttyUSB0\n\n```", "```\nroot@beaglebone:~/chapter_02# ls -l /dev/ttyUSB0\ncrw-rw---T 1 root dialout 188, 0 Apr 23 20:28 /dev/ttyUSB0\n\n```", "```\nroot@beaglebone:~# stty -F /dev/ttyUSB0 9600\n\n```", "```\nroot@beaglebone:~# cat /dev/ttyUSB0\n126\n\n```", "```\n   fragment@1 {\n      target = <&ocp>;\n\n      __overlay__ {\n         c2_leds {\n            compatible      = \"gpio-leds\";\n            pinctrl-names   = \"default\";\n            pinctrl-0       = <&bb_led_pins>;\n\n            white_led {\n               label   = \"c2:white\";\n               gpios   = <&gpio3 6 0>;\n               linux,default-trigger = \"none\";\n               default-state = \"on\";\n            };\n\n            yellow_led {\n               label   = \"c2:yellow\";\n               gpios   = <&gpio3 7 0>;\n               linux,default-trigger = \"none\";\n               default-state = \"on\";\n            };\n\n            red_far_led {\n               label   = \"c2:red_far\";\n               gpios   = <&gpio3 2 0>;\n               linux,default-trigger = \"none\";\n               default-state = \"on\";\n            };\n\n            red_mid_led {\n               label   = \"c2:red_mid\";\n               gpios   = <&gpio3 3 0>;\n               linux,default-trigger = \"none\";\n               default-state = \"on\";\n            };\n\n            red_near__led {\n               label   = \"c2:red_near\";\n               gpios   = <&gpio3 5 0>;\n               linux,default-trigger = \"none\";\n               default-state = \"on\";\n            };\n         };\n      };\n   };\n```", "```\nroot@beaglebone:~# dtc -O dtb -o /lib/firmware/BB-LEDS-C2-00A0.dtbo -b 0 -@ BB-LEDS-C2-00A0.dts\n\n```", "```\nroot@beaglebone:~# echo BB-LEDS-C2 > /sys/devices/bone_capemgr.9/slots\n\n```", "```\npart_number 'BB-LEDS-C2', version 'N/A'\nslot #7: generic override\nbone: Using override eeprom data at slot 7\nslot #7: 'Override Board Name,00A0,Override Manuf,BB-LEDS-C2'\nslot #7: Requesting part number/version based 'BB-LEDS-C2-00A0.dtbo\nslot #7: Requesting firmware 'BB-LEDS-C2-00A0.dtbo' for board-name 'Override Board Name', version '00A0'\nslot #7: dtbo 'BB-LEDS-C2-00A0.dtbo' loaded; converting to live tree\nslot #7: #2 overlays\n...\nslot #7: Applied #2 overlays.\n\n```", "```\n-bash: echo: write error: File exists\n\n```", "```\noptargs=capemgr.disable_partno=BB-BONELT-HDMI,BB-BONELT-HDMIN\n\n```", "```\ncape_disable=capemgr.disable_partno=BB-BONELT-HDMI,BB-BONELT-HDMIN\n```", "```\nroot@beaglebone:~# ls -d /sys/class/leds/c2*\n/sys/class/leds/c2:red_far   /sys/class/leds/c2:white\n/sys/class/leds/c2:red_mid   /sys/class/leds/c2:yellow\n/sys/class/leds/c2:red_near\n\n```", "```\nroot@beaglebone:~# ls /sys/class/leds/c2\\:white\nbrightness  device  max_brightness  power  subsystem  trigger  uevent\n\n```", "```\nroot@beaglebone:~# cat /sys/class/leds/c2\\:white/trigger\n[none] nand-disk mmc0 mmc1 timer oneshot heartbeat backlight gpio cpu0 default-on transient\n\n```", "```\nroot@beaglebone:~# cat /sys/class/leds/c2\\:white/max_brightness\n255\nroot@beaglebone:~# cat /sys/class/leds/c2\\:white/brightness\n255\n\n```", "```\nroot@beaglebone:~/# echo 0 > /sys/class/leds/c2\\:white/brightness\n\n```", "```\nroot@beaglebone:~# echo timer > /sys/class/leds/c2\\:red_far/trigger\n\n```", "```\nroot@beaglebone:~# ls /sys/class/leds/c2\\:red_far\nbrightness  delay_on  max_brightness  subsystem  uevent\ndelay_off   device    power        trigger\n\n```", "```\nroot@beaglebone:~# echo 50 > /sys/class/leds/c2\\:red_far/delay_on \nroot@beaglebone:~# echo 50 > /sys/class/leds/c2\\:red_far/delay_off\n\n```", "```\ncase $mode in\n-1)\n   # Turn on the LED\n   echo none > /sys/class/leds/c2\\:$name/trigger\n   echo 255 > /sys/class/leds/c2\\:$name/brightness\n   ;;\n\n0)\n   # Turn off the LED\n   echo none > /sys/class/leds/c2\\:$name/trigger\n   echo 0 > /sys/class/leds/c2\\:$name/brightness\n   ;;\n\n*)\n   # Flash the LED\n   t=$((1000 / $mode / 2))\n\n   echo timer > /sys/class/leds/c2\\:$name/trigger\n   echo $t > /sys/class/leds/c2\\:$name/delay_on\n   echo $t > /sys/class/leds/c2\\:$name/delay_off\n   ;;\nesac\n```", "```\nroot@beaglebone:~# ./led_set.sh red_far -1\nroot@beaglebone:~# ./led_set.sh red_far 0\nroot@beaglebone:~# ./led_set.sh red_far 10\n\n```", "```\n# Ok, do the job\nwhile sleep .1 ; do\n   # Read the current distance from the sensor\n   d=$($d_fun)\n   dbg \"d=$d\"\n\n   # Manage the LEDs\n   leds_man $d\ndone\n```", "```\nfunction read_adc () {\n   n=$(cat $ADC_DEV)\n\n   d=$(bc -l <<< \"$k * 3.3 * $n/4095 / 0.00161\")\n   printf \"%.0f\\n\" $d\n}\n\nfunction read_tty () {\n   while read d < $TTY_DEV ; do\n      [[ \"$d\" =~ R[0-9]{2,3} ]] && break\n   done\n\n   # Drop the \"R\" character\n   d=${d#R}\n\n   # Drop the leading \"0\"\n   echo ${d#0}\n}\n```", "```\nroot@beaglebone:~# aptitude install bc\n\n```", "```\nfunction leds_man () {\n   d=$1\n\n   # Calculate the blinking frequency with the following\n   # fixed values:\n   #    f=1Hz  if d=100cm\n   #    f=25Hz if d=25cm\n   f=$((25 - 21 * ( d - 25 ) / 75))\n   [ $f -gt 25 ] && f=25\n   [ $f -lt 1 ] && f=1\n\n   if [ \"$d\" -gt 500 ] ; then\n      ./led_set.sh white     0\n      ./led_set.sh yellow    0\n      ./led_set.sh red_far   0\n      ./led_set.sh red_mid   0\n      ./led_set.sh red_near  0\n\n      return\n   fi\n\n   if [ \"$d\" -le 500 -a \"$d\" -gt 200 ] ; then\n      ./led_set.sh white    -1\n      ./led_set.sh yellow    0\n      ./led_set.sh red_far   0\n      ./led_set.sh red_mid   0\n      ./led_set.sh red_near  0\n\n      return\n   fi\n\n   if [ \"$d\" -le 200 -a \"$d\" -gt 100 ] ; then\n      ./led_set.sh white    -1\n      ./led_set.sh yellow   -1\n      ./led_set.sh red_far   0\n      ./led_set.sh red_mid   0\n      ./led_set.sh red_near  0\n\n      return\n   fi\n\n   if [ \"$d\" -le 100 -a \"$d\" -gt 50 ] ; then\n      ./led_set.sh white    -1\n      ./led_set.sh yellow   -1\n      ./led_set.sh red_far  $f\n      ./led_set.sh red_mid   0\n      ./led_set.sh red_near  0\n\n      return\n   fi\n\n   if [ \"$d\" -le 50 -a \"$d\" -gt 20 ] ; then\n      ./led_set.sh white    -1\n      ./led_set.sh yellow   -1\n      ./led_set.sh red_far  -1\n      ./led_set.sh red_mid  $f\n      ./led_set.sh red_near  0\n\n      return\n   fi\n\n   # if -le 20\n   ./led_set.sh white    -1\n   ./led_set.sh yellow   -1\n   ./led_set.sh red_far  -1\n   ./led_set.sh red_mid  -1\n   ./led_set.sh red_near -1\n}\n```", "```\n# Uncomment the following in case of buggy kernel in USB host management\n# cat /dev/bus/usb/001/001 > /dev/null ; sleep 1\n```", "```\nroot@beaglebone:~# ./distance_mon.sh -d -k 1.38 adc\ndistance_mon.sh: d_fun=read_adc k=1.38\ndistance_mon.sh: d=176\ndistance_mon.sh: d=175\ndistance_mon.sh: d=175\ndistance_mon.sh: d=175\ndistance_mon.sh: d=175\n...\n\n```", "```\nroot@beaglebone:~# ./distance_mon.sh -d serial\ndistance_mon.sh: d_fun=read_tty k=1\ndistance_mon.sh: d=151\ndistance_mon.sh: d=152\ndistance_mon.sh: d=151\ndistance_mon.sh: d=152\ndistance_mon.sh: d=152\n...\n\n```"]