- en: Chapter 6. Tips and Tricks for Ubuntu Server
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is the last chapter of this essential book. In this chapter, we will take
    a look at a collection of the best tips and tricks that every Ubuntu Server administrator
    needs to simplify their life when administering their servers based on Ubuntu.
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter is divided into the following three sections:'
  prefs: []
  type: TYPE_NORMAL
- en: General tips – a set of generic tips related to the CLI, configuration, and
    scripting
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Troubleshooting tips – helpful tips for troubleshooting tasks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Useful tools and utilities – a set of tricky programs with high added value
    to the system administrator
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: General tips
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we will explore some useful tips and tricks for Ubuntu Server.
    These are general tips related to the **command-line interface** (**CLI**), package
    management, and the customization of configurations.
  prefs: []
  type: TYPE_NORMAL
- en: Ubuntu Server CLI tips and tricks
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following are some useful CLI commands:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Get the reason behind installing a package, that is, check the reverse dependencies
    of the given package, by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'List all the users along with their respective last login time by executing
    the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To change the server time zone, you need to run the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Furthermore, to check whether the `timezone` has changed or not, you need to
    run the following command:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Also, don''t forget to restart `cron` so that it can pick up the `timezone`
    change, as follows:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'If you need to manually synchronize your server time, use the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'In case you want to install a time synchronization service, execute the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To update the hardware clock, run the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To list all the mounted and unmounted partitions on your server, use the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'If you just want to list the mounted partitions and the free space on each
    of these partitions, use the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'View the size of a particular file or folder by using the following code (this
    is very important when viewing the size of folders):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'As a file grows, you can view the appended data with the help of the following
    code (this is useful for monitoring and troubleshooting):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Get the system environment variables by using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To change the server hostname, execute the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To view information about the Linux distribution, you need to execute the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'To find out the OS installation date, run the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How to prevent server daemons from starting during installation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In some circumstances, we don''t want a server or daemon to start as part of
    a post-installation script when installing updates with `apt-get` or `dpkg`. To
    reach this goal, you need to create a file named `policy-rc.d` under the `/usr/sbin/`
    directory and put the following content in it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, give it the *755* rights by using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'When you finish, don''t forget to remove this file by using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: How to move or copy a directory
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The copy (`cp`) command only works for files. To copy a directory, you need
    to use the `-r` recursive flag, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'The move (`mv`) command works the same way. You need to use the `-r` recursive
    flag to move a directory, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: System resource limits
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The default behavior in Ubuntu Server is to not impose resource limits on user
    processes. This means that users are free to use all of the available memory on
    the machine or launch processes in an endless loop, thus rendering the system
    unusable in seconds. The best solution to this is limiting some user resources
    by editing the `/etc/security/limits.conf` file with the help of the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'The content of the file is well explained. Besides, there is a good `man` page
    for the configuration of this file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: For disk quotation, you need to install the quota package, as discussed in an
    earlier chapter of this book.
  prefs: []
  type: TYPE_NORMAL
- en: Running a command over and over
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Sometimes we need to run the same command again and again to either monitor
    the progress of an operation of copying a file, or troubleshoot the status of
    a server. Though you can run the same command over and over, a better method is
    to use the `watch` command. The `watch` program takes a command as an argument
    and then runs that command every two seconds, showing its output on the screen.
    So for instance, if we want to monitor the size of `ubuntu.iso`, we will type
    `watch "ls -l ubuntu.iso"`. The `watch` command accepts a few arguments, such
    as the `-n` argument, so that you can adjust how many seconds it will wait before
    it runs the program again.
  prefs: []
  type: TYPE_NORMAL
- en: Troubleshooting tips
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, you will find advanced tips related to the troubleshooting
    of tasks. They are a must for most Ubuntu Server administrators.
  prefs: []
  type: TYPE_NORMAL
- en: Customizing log rotation on Ubuntu Server
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The best starting point for troubleshooting a problem is reading the related
    service log. Logs are not saved infinitely; they are kept on the system and they
    follow a specific policy. After a span of time, the oldest logs are dropped. Thus,
    we keep only some of the latest log files. This is called **log rotation**; it
    is done on Ubuntu Server on two levels. The generic policy is configured in the
    `/etc/logrotate.conf` file, and a specific policy is configured for some services
    in a specific file under the `/etc/logrotate.d/` directory.
  prefs: []
  type: TYPE_NORMAL
- en: 'This specific file, named `/etc/logrotate.d/*` is not commented, but the `/etc/logrotate.conf`
    generic file is very expressive and well commented and has a syntax that is the
    same as that of the specific file. There is also good documentation about this
    on the `man` page, which can be viewed by executing the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'Some of the parameters that exist on these files by default are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: The **periodicity of log rotation**, rotation can be set in such a way that
    the log rotation is performed daily, weekly, monthly, and so on
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The **lifetime of each log file**, that is, the period for which a log file
    is kept on the system before being deleted, is expressed in weeks and associated
    with the `rotate` parameter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An **option to compress log files** is available with an aim to save space by
    using the `compress` parameter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Some of the other parameters that can be added manually are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: The `delaycompress` parameter postpones the compression of the previous log
    file to the next rotation cycle, thus allowing users to easily view last week's
    log without having to uncompressing it
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The `dateex` directive changes the default backlog file name from the default
    behavior (numerically naming the files: `logname.0`, `logname.1`, `logname.2`,
    and so on) to include the *YYYYMMDD* date pattern instead of 0, 1, 2, and so on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The main system log files
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: System log files are the pillar of every troubleshooting task. Going through
    them carefully often allows system administrators to discover in advance when
    something is wrong with the system and resolve most problems before they escalate.
  prefs: []
  type: TYPE_NORMAL
- en: Usually, logs files are stored under the `/var/log` directory; and for a server
    that has been running for a while, there are a lot of older versions of log files
    in that directory, and most of them are compressed with `gzip`.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are some log files of note:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The general system log: `/var/log/syslog`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The system authentication logs: `/var/log/auth.log`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The system e-mail logs: `/var/log/mail.log`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The general log messages: `/var/log/messages`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The kernel ring buffer messages, usually when the system boots up: `/var/log/dmesg`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Checking opened files
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Sometimes when troubleshooting we need to check for a specific file (check which
    process is running and currently opening it), or for a specific filesystem (which
    files are open on it and for which use). This information is provided by the `lsof`
    command. In the `lsof` output, you will see a list of all the processes along
    with the open files on that filesystem, their process IDs, the user, and the size
    of the resources allocated to them.
  prefs: []
  type: TYPE_NORMAL
- en: Getting information from /proc
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A good starting point for the troubleshooting of Ubuntu Server is getting information
    about the state of processes, hardware devices, kernel subsystems, and other attributes
    of Linux. This can be done via the `/proc` files.
  prefs: []
  type: TYPE_NORMAL
- en: Getting information from files in the `/proc` directory is simply done by using
    the `cat` command. Under `/proc`, you will see a separate directory for every
    running process (each has its PID as a name) containing information about that
    process. You will also find the `/proc` files that contain general data for all
    kinds of other measurements, such as the computer's CPU, software versions, disk
    partitions, memory usage, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here''s a list of examples that illustrate the information that you can get
    from your Ubuntu system''s `/proc` directory:'
  prefs: []
  type: TYPE_NORMAL
- en: To show the options that were used in the boot prompt, run `cat /proc/cmdline`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To show information related to the server processor, run `cat /proc/cpuinfo`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To show the existing character and block devices, run `cat /proc/devices`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To display disks, partitions, and statistics, run `cat /proc/diskstats`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To list the filesystem types in the current kernel, run `cat /proc/filesystems`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To show the physical memory addresses, run `cat /proc/iomem`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To show the virtual memory addresses, run `cat /proc/ioports`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To show the 1-, 5-, and 15-minute load averages, and the running processes/the
    total and the highest **Process Identification Number** (**PID**), run `cat /proc/loadavg`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To show the available RAM and swap memory, run `cat /proc/meminfo`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To show the loaded modules, memory size, instances loaded, dependencies' load
    state, and kernel memory, run `cat /proc/modules`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To show the mounted local/remote filesystem information, run `cat /proc/mounts`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To show the mounted local disk partitions, run `cat /proc/partitions`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To show the RAID status (when using RAID software), run `cat /proc/mdstat`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To show the kernel stats since the system was booted, run `cat /proc/stat`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To display information about swap space, run `cat /proc/swaps`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To display the kernel version and the related compiler, run `cat /proc/version`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Recovering the root password under Ubuntu Server
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Sometimes, server administrators can't remember the root password. On Ubuntu
    Server, recovering the root password can be done by booting the system under a
    specific mode called a **single user mode**, which is also called **runlevel 1**
    or the **Recovery Mode**.
  prefs: []
  type: TYPE_NORMAL
- en: So, the first step is to enter this mode by using the GRUB menu. Normally, on
    Ubuntu Server, you will find this entry automatically (it has the `Recovery Mode`
    tag between the parentheses after the GRUB entry name). If this is not the case,
    use GRUB to manually edit the proposed menu entry at the time of booting by adding
    the word "single" at the end of the line of the boot entry that you want.
  prefs: []
  type: TYPE_NORMAL
- en: The kernel should boot as usual, but you will get a root prompt (`sh#`) instead
    of the ordinary prompt (`sh$`).
  prefs: []
  type: TYPE_NORMAL
- en: 'At this point, we have gained root access to the filesystem. We can finally
    change the password. Now you have root access, when changing the password you
    will not be asked for your old password. So, on running the following command,
    you will be asked for your new password and its confirmation directly:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: Finally, you can now reboot your machine and gain root access again.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'By default, the filesystem is read-only in the recovery mode. It needs to be
    remounted as read/write mode in order to change the root password or do any other
    task that needs writing on the disk. To mount it with read/write access mode,
    enter the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'Note the spaces: you''ll get an error in case you ignore the spacesor add extra
    ones.'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have `/home`, `/boot, /tmp`, or any other mount point on a separate
    partition, you can mount them with the help of the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: However, you must do this just after the first remount step so that `/etc/mtab`
    is writable.
  prefs: []
  type: TYPE_NORMAL
- en: Useful tools and utilities
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we will have a look at some tools and utilities that help Ubuntu
    Server administrators to manage their systems in the best way needs so that systems
    usability is boosted to its maximum.
  prefs: []
  type: TYPE_NORMAL
- en: NetHogs, a network monitoring tool
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**NetHogs** is a network monitoring tool that helps you identify the program
    that consumes your bandwidth. It is a kind of `top` command, but it''s for network.
    This tool is very useful when you are troubleshooting network issues such as **what
    is hogging the Internet connection?**.'
  prefs: []
  type: TYPE_NORMAL
- en: To launch `nethogs`, you need to do it with root privileges by using `sudo`
    command, because it relies on `libpcap` to sniff the network, like most network
    monitoring tools.
  prefs: []
  type: TYPE_NORMAL
- en: 'The installation of `nethogs` is simple, you just need to run the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'After the installation, you can start using it via the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'Once the program is running, you can use the *M* key to switch between the
    following two modes:'
  prefs: []
  type: TYPE_NORMAL
- en: The real-time usage
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The total usage (different modes exist based on the size unit, such as KB, MB,
    and so on)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: vnStat, a network monitoring tool
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: While `nethogs`, the tool that we saw in the last section, allows you to monitor
    your network bandwidth usage in real time by collecting statistics at a given
    date/time, it cannot give you a hand if you wish to monitor bandwidth usage over
    an hour/day/week/month. This tricky function is provided by another network monitoring
    tool named `vnStat`. The `vnstat` daemon is a suite of programs that monitor network
    bandwidth usage.
  prefs: []
  type: TYPE_NORMAL
- en: 'To install `vnStat` on Ubuntu Server, you can use `apt-get`, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: 'The configuration of `vnStat` is done by editing the `/etc/vnstat.conf` file;
    just don''t forget to restart `itwith`, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: To start the `vnStat` daemon, execute the `vnstatd` command
  prefs: []
  type: TYPE_NORMAL
- en: Before using this tool, you need to wait for some time for data to be collected,
    and then run the `vnstat` command.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are a lot of helpful options that come with this tool. You can discover
    them by using the `man` page. The following are the most useful ones:'
  prefs: []
  type: TYPE_NORMAL
- en: '`vnstat -h`: This is used to see the summary of the hourly usage'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`vnstat -d`: This is used to see the summary of the daily usage'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`vnstat -w`: This is used to see the summary of the weekly usage'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`vnstat -m`: This is used to see the summary of the monthly usage'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`vnstat -t`: This shows the all-time top 10 traffic days.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`vnstat -tr 10`: This shows the usage over `X` seconds (default value is 5)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`vnstat -l`: This shows the live bandwidth usage'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`vnStat` is a useful little tool if you want to get a good overview of how
    much bandwidth you use on a hourly/daily/weekly/monthly basis, and it requires
    almost no resources to do so.'
  prefs: []
  type: TYPE_NORMAL
- en: Tailing multiple files using multitail
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In many cases, a system administrator needs to tail multiple files at the same
    time. There is a sweet Linux tool named `multitail` that provides this function.
    The `multitail` tool will let you tail multiple files at the same time within
    the same shell. Besides this main function, `multitail` allows you to run multiple
    commands and tail their outputs, which simplifies the lives of system administrations,
    especially for some advanced troubleshooting tasks.
  prefs: []
  type: TYPE_NORMAL
- en: 'To install this tool, you just need to run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: There are a lot of ways to use this command. You can refer to the `man` page,
    where there are different examples that explain how to better customize output.
  prefs: []
  type: TYPE_NORMAL
- en: The program cockpit – a remote manager for Ubuntu servers
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `cockpit` command is an interactive server administrator interface. It is
    easy to use and very lightweight. It allows an Ubuntu Server administrator to
    perform a lot of tasks, such as storage administration, journal and log inspection,
    and services management (starting and stopping) in a user-friendly interface.
  prefs: []
  type: TYPE_NORMAL
- en: 'To install `cockpit` on Ubuntu Server, you have to run the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 'To start the `cockpit` service, use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'If you want to start the `cockpit` service automatically when you reboot your
    server, use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, to access the `cockpit` GUI, use the following URL:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'Webmin: the famous system administration tool'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Webmin** is one of the most famous Unix administration tools. It is a web-based
    interface that provides a huge set of functionalities to easily manage server
    resources, including: the setting up of user accounts; the administration of services
    such as Apache, FTP, DNS, and so on; the management of sharing files; and a lot
    of other functions. All in all, it is a user-friendly interface.'
  prefs: []
  type: TYPE_NORMAL
- en: Installing `webmin` needs, before anything else, you to have a fully functional
    and running LAMP server. We discussed how to get this done in [Chapter 3](ch03.html
    "Chapter 3. Deploying Servers on Ubuntu"), *Deploying Servers on Ubuntu*, of this
    book.
  prefs: []
  type: TYPE_NORMAL
- en: 'After that, you need to install `webmin` from the APT repository. First of
    all, you need to add the `webmin` official repository to your server source list
    file. This is done by editing the `/etc/apt/sources.list` file using the `sudo
    vi /etc/apt/sources.list` command. Then add the following lines to `sources.list`
    file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: 'After doing this, you need to download the **GNU Privacy Guard** (**GPG**)
    key and add it to the APT keys by using the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, update the source list by using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, install `webmin` by using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: To access `webmin`, you need to go to `https://<server_ip>:10000`.
  prefs: []
  type: TYPE_NORMAL
- en: Using the uvtool program and extending the use of Cloud images
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `uvtool` program is provided by Canonical for the Ubuntu administrators
    who want to use the already-prepared Cloud images outside the Cloud infrastructure
    to create a virtual machine without the need of a complete installation of Cloud
    servers. This greatly facilitates the task of generating VMs using Cloud images.
  prefs: []
  type: TYPE_NORMAL
- en: 'Installing `uvtool` is simple, just use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The details as regard to using `uvtool` to find and synchronize Cloud images
    and create and manage VMs and the other functionalities provided by this powerful
    tool, that can be seen in the rich official documentation that is available at
    [https://help.ubuntu.com/lts/serverguide/cloud-images-and-uvtool.html](https://help.ubuntu.com/lts/serverguide/cloud-images-and-uvtool.html).
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the last chapter of this essential book, we had a look at some of the best
    tips and tricks that Ubuntu Server administrators need to manage their Ubuntu
    servers in an easy, efficient, and powerful way. At this point, you have the necessary
    knowledge and skills to fly high with one of the best OSes in the ICT world.
  prefs: []
  type: TYPE_NORMAL
