- en: Chapter 1. Basics of Troubleshooting CentOS
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章：CentOS故障排除基础
- en: '**CentOS**, the **Community Enterprise Operating System**, is known to be a
    robust, stable, and trouble-free platform that is particularly well suited to
    the role of a server. Used by organizations of all sizes, CentOS can be found
    in many mission-critical environments the world over. However, as servers are
    expected to work on demand and without interruption, there will be times when
    a calm but firm hand is required to restore a service or to make some final adjustments
    to an existing application in order to ensure that a "working state" can be resumed
    as quickly as possible:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**CentOS**，即**社区企业操作系统**，以其强大、稳定和无故障的特性而闻名，特别适合作为服务器操作系统。被各类组织广泛使用，CentOS在全球许多关键任务环境中都能找到其身影。然而，随着服务器需要按需运行且不中断地提供服务，某些时候，需要冷静但果断的手段来恢复服务，或对现有应用程序进行最后的调整，以确保能够尽快恢复到“正常工作状态”。'
- en: '*"The server has gone down and all hell is about to break loose."*'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*“服务器已经崩溃，所有的麻烦即将爆发。”*'
- en: In a less than perfect world, things can (and inevitably do) go wrong, but it
    is your overall understanding of CentOS 7 and the confidence it provides that
    will form the basis of your troubleshooting skills. Remember, troubleshooting
    is a process of investigation that ultimately leads to a diagnosis. All systems
    are different and every approach to the same situation can vary depending on the
    purpose of that system. So, with this in mind, it is important to realize that
    the premise of this book is not recipe-driven, but more about the tools that are
    used and the resources you will be expected to encounter and interact with.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个不完美的世界里，事情可能会出错（并且不可避免地出错），但正是你对CentOS 7的整体理解以及它所提供的信心，构成了你故障排除技能的基础。记住，故障排除是一个调查过程，最终会得出诊断结果。所有系统都是不同的，对同一情况的处理方法也会根据系统的目的有所不同。因此，考虑到这一点，重要的是要意识到本书的前提并不是基于具体的操作步骤，而是更多地关注使用的工具和你将要遇到并与之互动的资源。
- en: 'In this chapter, we will:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将：
- en: Learn how to install some basic tools on CentOS
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何在CentOS上安装一些基本工具
- en: Discover how to gather hardware-based system information using `lscpu` and `lspci`
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索如何使用`lscpu`和`lspci`收集基于硬件的系统信息
- en: Learn more about the importance of `dmesg` and how it interacts with the kernel
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进一步了解`dmesg`的重要性及其与内核的交互
- en: Learn about the more common log files and how they affect the log output
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解更常见的日志文件及其如何影响日志输出
- en: Learn how to manipulate files of any description using `grep`, `tail`, `cat`,
    `less`, `truncate`, and many more command-line functions
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何使用`grep`、`tail`、`cat`、`less`、`truncate`等命令行功能操作任何类型的文件
- en: Installing some basic tools
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装一些基本工具
- en: 'During the course of this book, it is assumed that you will already have access
    to the basic tools associated with troubleshooting your server. Some of the more
    obscure tools will be mentioned and instructions will be given; however, for those
    who may or may not have access to the basic toolbox, as the root user you may
    want to begin by running the following command:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本书假设你已经能够访问与服务器故障排除相关的基本工具。将提及一些较为冷僻的工具，并会提供相应的使用说明；然而，对于那些可能有或没有基本工具箱的读者，作为root用户，你可能想要从运行以下命令开始：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This action, if and when confirmed, will begin to download and install the common
    development tools, libraries, and base components of a CentOS server system. It
    also contains the relevant utilities required by RPM, additional text editors,
    and packages required to compile custom packages.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 该操作（如果确认执行）将开始下载并安装CentOS服务器系统的常用开发工具、库和基础组件。它还包含RPM所需的相关工具、额外的文本编辑器以及编译自定义包所需的包。
- en: Note
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The practice of installing these packages at the outset is optional and all
    of these packages can be installed individually (as and when required). However,
    in an environment where disaster recovery planning has a vital role to play, it
    is worth considering the notion that a server has everything in place before any
    issues arise.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始时安装这些软件包是可选的，所有这些软件包都可以根据需要单独安装。然而，在灾难恢复规划至关重要的环境中，考虑到服务器在任何问题发生之前就应具备一切所需，值得一提。
- en: So, having prepared the system with the necessary tools and utilities, we shall
    begin in earnest by taking a closer look at the hardware. To do this, it is recommended
    that you continue with root access to the system in question.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: Gathering hardware information
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As a matter of principle, most people will tend to suggest that all system information
    can be categorized as either hardware-or-software based. This approach certainly
    serves to simplify things, but throughout the course of this chapter I will go
    some way to infer that there are instances in which the interplay of both (hardware
    and software) can be the reason for the issues at hand.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: 'So, before you begin troubleshooting a system, always consider that the need
    gathering information about a system is the recommended approach to gaining additional
    insight and familiarity. Look at it this way: the practice of gathering hardware
    information is not necessarily required, but an investigation of this type may
    assist you in the search for an eventual diagnosis.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: 'To begin, we will start by running a simple CPU-based hardware report with
    the following command:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'As you will see, the purpose of this command is to output all information related
    to the CPU model, family, architecture, the cache, and much more. The `/proc`
    approach is always a good tradition, but using the following command is generally
    considered to be a better practice and far easier to use:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This command will query the system and output all relevant information associated
    with the CPU in the following manner:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'On the other hand, rather than querying absolutely everything, you can specify
    criteria by using `grep` (a subject that we will return to a little later in this
    chapter) in order to obtain any pertinent information, like this:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'So, having done this and recorded the results for future reference, we will
    now continue our investigation by running a simple hardware report with the `lspci`
    command in the following way:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The result of this command may output something similar to the following information:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The `lspci` command provides all the relevant information concerning the PCI
    devices of your server, which in turn, can be expanded by employing either the
    `-v` option or the alternative `-vv` / `-vvv` option(s), depending on the level
    of detail you require:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: By default, the above commands will provide all the information required by
    you to confirm whether a device is supported by any of the modules currently installed
    on your system or not. It is expected that you should only need to do this when
    hardware upgrades have been implemented, when the system has just been installed,
    or if you are attempting to familiarize yourself with a new environment. However,
    in order to simplify this exercise even further, you will be glad to know that
    a "tree view mode" is also available. The purpose of this facility is to output
    the associated device ID and show how these values are associated with the relevant
    bus.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: 'To do this, type the following command:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: As a troubleshooter, you will be aware that every device must maintain a unique
    identifier as CentOS, like all other operating systems, will use that identifier
    to bind a driver to that device. The `lspci` command works by scanning the `/sys`
    tree for all connected devices, which can also include the connection port, the
    device type, and class, to name but a few. Having done this, the `lspci` command
    will then consult `/usr/share/hwdata/pci.ids` to provide the human-readable entries
    it displays.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一名故障排除员，您会知道每个设备都必须维护一个唯一的标识符，因为CentOS与其他操作系统一样，将使用该标识符将驱动程序绑定到该设备。`lspci`命令通过扫描`/sys`树来检测所有连接的设备，这些设备可以包括连接端口、设备类型和类别，仅举几例。完成此操作后，`lspci`命令将查阅`/usr/share/hwdata/pci.ids`，以提供它所显示的可读条目。
- en: 'For example, you can display the kernel drivers/modules by typing the following
    `lspci` command with the `-k` option like this:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，您可以通过输入以下带有`-k`选项的`lspci`命令来显示内核驱动程序/模块，像这样：
- en: '[PRE9]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Naturally, during any hardware-based troubleshooting investigation you will
    want to review the system logs for additional clues, but as we have seen, both
    the `lscpu` and `lspci` commands are particularly useful when attempting to discover
    more about the necessary hardware information present on your system.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 自然，在任何基于硬件的故障排除调查中，您都会想查看系统日志以获取更多线索，但正如我们所看到的，`lscpu`和`lspci`命令在尝试发现系统中所需的硬件信息时尤其有用。
- en: 'You can learn more about these commands by reviewing the respective on-board
    manuals at any time:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以随时通过查看相应的车载手册来了解更多关于这些命令的信息：
- en: '[PRE10]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Meanwhile, if you want to practice more, a simple test would be to insert a
    USB thumb drive and to analyze the findings yourself by paying close attention
    to the enumeration found within `/var/log/messages`.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，如果您想要更多练习，一个简单的测试就是插入一个USB闪存驱动器，并通过仔细查看`/var/log/messages`中的枚举信息来分析您自己得到的结果。
- en: Note
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Remember, if you do try this, you are looking at how the system reacted once
    the USB drive was inserted; you are not necessarily looking at the USB drive itself;
    the information about which can be obtained with `lsusb`.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，如果您确实尝试了这个操作，您所看到的是系统在插入USB驱动器后的反应；您不一定是在查看USB驱动器本身；关于USB的信息可以通过`lsusb`获得。
- en: 'On the other hand, in the same way that we can use `grep` with `lscpu`, if
    you are already feeling comfortable with this type of investigation, then you
    may like to know that you can also use `grep` with the `lspci` command to discover
    more about your RAID controller in the following way:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，就像我们可以将`grep`与`lscpu`一起使用一样，如果您已经习惯了这种类型的调查，那么您可能会想知道，您还可以将`grep`与`lspci`命令一起使用，以下面这种方式来发现更多关于RAID控制器的信息：
- en: '[PRE11]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now, I am sure you will not be surprised to learn that there are many more
    commands associated with obtaining hardware information. This includes (but is
    not limited to) `lsmod`, `dmidecode` `hdparm`, `df -h`, or even `lsblk` and the
    many others that will be mentioned throughout the course of this book. All of
    them are useful, but for those who do not want to commit them to memory, a significant
    amount of information can be found by simply reading the files found within the
    `/proc` and `/sys` directories like this:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我相信您不会感到惊讶，知道还有许多与获取硬件信息相关的命令。这些包括（但不限于）`lsmod`、`dmidecode`、`hdparm`、`df
    -h`，甚至是`lsblk`，以及在本书中将提到的许多其他命令。它们都很有用，但对于那些不想记住它们的人，可以通过简单地阅读`/proc`和`/sys`目录中的文件找到大量信息，像这样：
- en: '[PRE12]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Consequently, and before we move on, you should now be aware that when you are
    dealing with hardware analysis, perfecting your skills is about practice and exposure
    to a server over the long term. My reason for stating this is based on the notion
    that a simple installation procedure can serve to identify these problems almost
    immediately, but without that luxury, and as time goes by, it is possible that
    the hardware will need replacing or servicing. RAID Battery packs will fail, memory
    modules will fail, and, on some occasions, it could be that a particular driver
    has not fully loaded during the most recent reboot. In this situation, you may
    find that the kernel is flooding the system with random messages to such an extent
    that it suggests an entirely different issue is causing the problem. So yes, hardware
    troubleshooting requires a good measure of patience and observation, and it is
    for this reason that a quick review of both the `lscpu` and `lspci` commands has
    formed our introduction to troubleshooting CentOS 7.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在我们继续之前，你现在应该知道，当你处理硬件分析时，提升你的技能是通过长时间接触服务器来实现的。我这么说的原因是基于这样一种观点：一个简单的安装过程几乎可以立即识别出这些问题，但没有这个便利的情况下，随着时间的推移，硬件可能需要更换或维护。RAID电池组会故障，内存模块会故障，有时可能是某个特定驱动程序在最近一次重启时没有完全加载。在这种情况下，你可能会发现内核正以如此高的频率向系统发送随机消息，以至于它表明一个完全不同的问题导致了故障。所以，是的，硬件故障排除需要耐心和观察力，这也是为什么对`lscpu`和`lspci`命令的快速回顾成为我们故障排除CentOS
    7的引言。
- en: Understanding dmesg
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解dmesg
- en: Before we dive into the subject of log files, I would like to begin by spending
    a few moments to discuss the importance of the `dmesg` command.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入探讨日志文件的主题之前，我想花几分钟时间讨论一下`dmesg`命令的重要性。
- en: The `dmesg` command is used to record messages from the kernel that are specifically
    related to the process of hardware detection and configuration. I will not go
    in too much technical detail at this point, but it is important to realize that
    these messages are derived from the kernel ring buffer; a condition that can not
    only prove to be of great assistance because it relates back to the subject of
    hardware troubleshooting, but one that provides evidence as to why an understanding
    of the system hardware can reflect in a possible software diagnosis and vice versa.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '`dmesg`命令用于记录与硬件检测和配置过程相关的内核消息。我此时不打算深入讲解技术细节，但重要的是要意识到，这些信息来源于内核环形缓冲区；这个条件不仅在硬件故障排除时非常有帮助，而且也为理解系统硬件如何反映在可能的软件诊断上提供了证据，反之亦然。'
- en: 'The `dmesg` file is located in the `/var/log/` directory, but unlike other
    files that reside in that directory, the basic syntax to view the contents of
    the `dmesg` file is as follows:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '`dmesg`文件位于`/var/log/`目录中，但与该目录中其他文件不同，查看`dmesg`文件内容的基本语法如下：'
- en: '[PRE13]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'You can page through the results in the usual way, but if you would like to
    make the timestamp a little easier to read, you may want to invoke the `-T` option
    like this:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以像往常一样翻页查看结果，但如果你希望让时间戳更容易阅读，你可能希望像这样调用`-T`选项：
- en: '[PRE14]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: These commands will now provide us with information related to all the hardware
    drivers loaded into the kernel during the boot sequence. This information will
    include their status (success or failure), and if a failure is recorded, it will
    even provide an error message describing why a failure took place. However, as
    this file can be quite overwhelming, you should use `grep` to query `dmesg` in
    order to streamline this information and simplify the output.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这些命令将向我们提供与启动过程中加载到内核中的所有硬件驱动程序相关的信息。这些信息将包括它们的状态（成功或失败），如果记录到失败，它甚至会提供一个错误消息，描述失败发生的原因。然而，由于该文件可能非常庞大，你应该使用`grep`查询`dmesg`以简化这些信息并简化输出。
- en: 'To do this, simply customize the following syntax to suit your needs:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，只需根据你的需求定制以下语法：
- en: '[PRE15]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: This command will now display all relevant information regarding the total memory
    available and shared memory details associated with the server. Of course, similar
    approaches can be made to read the specific information for USB devices, direct
    memory access (DMA), or even tty.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令将显示所有与服务器相关的总内存和共享内存细节的相关信息。当然，类似的方法也可以用来读取USB设备、直接内存访问（DMA）或甚至tty的具体信息。
- en: 'For example, you can query `dmesg` to display hardware information related
    to any Ethernet ports in the following way:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Depending on your system configuration, the output will look similar to this:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'To extend this approach, you can then modify the previous command in order
    to discover whether the kernel has detected a specific hard disk. To do this,
    type:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Alternatively, you can then use the `-i` option to ignore the effects of case
    sensitivity when searching for `tty` references:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: As you will see, the output of the `dmesg` file is verbose and the information
    contained within it can be used to troubleshoot almost anything from network cards
    to storage issues. The `demsg` file may not give you the answer you are looking
    for straightaway, but it does provide you with another piece of the puzzle when
    it is used in combination with the information found in some of the more common
    log files associated with the CentOS operating system.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: Understanding log files
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'By default, all CentOS system log files can be found in `/var/log` and a full
    inventory on your current server can be obtained by typing the following command:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'With that said, every system is different, and for overall simplicity, you
    will find that some of the more common log files (associated with a minimal installation
    of CentOS 7) will include:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: '`/var/log/messages`: This file contains information related to the many native
    services used by CentOS. This includes (but is not limited to) the kernel logger,
    the network manager, boot process, mail services, `cron` jobs, and many other
    services that do not have their own log files. In many respects, this record can
    be considered to be a global log file of sorts, and out of habit, it will probably
    become your first port of call in any troubleshooting process.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/var/log/boot.log`: This file contains information that is reported when the
    system boots.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/var/log/maillog`: This file contains information that is reported by the
    default mail server used by the system.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/var/log/secure`: This file contains information that is related to the associated
    authentication and authorization privileges.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/var/log/wtmp`: This file contains information related to user login records.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/var/log/btmp`: This file contains information related to failed login attempts.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/var/log/cron`: This file contains information related to cron (and anacron).'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/var/log/lastlog`: This file contains information related to the binary log
    that contains all of the last login information.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/var/log/yum.log`: This file contains information related to Yum and reports
    any activity related to the server''s package management tools.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, before we continue, I want to draw your attention towards the importance
    of these files as it is often a good idea to store `/var/log` in a separate partition
    to `/` (root).
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: A perfect system would maintain a separate partition for `/tmp`, `/usr`, and
    others, but yes, there may be situations where storing your log files on the same
    partition as `/` (root) is unavoidable. So remember, if and when the opportunity
    does arise, you may want to consider storing these directories on a separate filesystem
    and a separate physical volume (if possible), as this is considered to be good
    practice with regard to maintaining the overall security, integrity, and performance
    of the system in question.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 一个完美的系统应为`/tmp`、`/usr`等目录维护单独的分区，但确实也有可能在某些情况下，日志文件不得不与`/`（根）分区存储在同一分区上。因此，请记住，如果有这样的机会，您可能需要考虑将这些目录存储在一个独立的文件系统和独立的物理卷上（如果可能），因为这被认为是保持系统安全性、完整性和性能的良好实践。
- en: However, and having said that, it is also important to recognize that many other
    packages will create and store logs in other locations. You may even be required
    to specify these locations yourself, and for this reason, it should be remembered
    that not all logs are located in `/var/log`.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，话虽如此，仍然需要认识到，许多其他软件包会在其他位置创建和存储日志文件。您甚至可能需要自行指定这些位置，因此应该记住，并非所有日志都位于`/var/log`目录下。
- en: 'For example, if the server in question is hosting one or more websites and
    storing all the relevant Apache VirtualHost information in a specific `/home`
    directory, then the associated log files may be found in a location like this:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果相关服务器托管一个或多个网站，并将所有相关的Apache虚拟主机信息存储在特定的`/home`目录中，那么相关的日志文件可能会存储在如下位置：
- en: '[PRE21]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The same can be said of many other packages, and this issue arises because the
    packages may not have the required privileges to write to that directory, while
    others are designed to maintain all logging activity within their own installation
    directory. Therefore, and depending on the nature of your system, you may need
    to spend a few moments analyzing your server's installation structure in order
    to locate the appropriate log file(s).
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 许多其他软件包也面临同样的问题，原因在于这些软件包可能没有写入该目录所需的权限，而其他软件包则设计为将所有日志活动保存在其自己的安装目录中。因此，根据您的系统特性，您可能需要花些时间分析服务器的安装结构，以便找到适当的日志文件。
- en: Reading log files and affecting the output
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 阅读日志文件并影响输出
- en: 'Viewing or reading a log file is very easy and depending on your personal preferences,
    the basic syntax to view any of these files can be expressed in any of the following
    formats:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 查看或读取日志文件非常容易，且根据个人偏好，查看这些文件的基本语法可以用以下任意一种格式表达：
- en: '[PRE22]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Note
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Remember, depending on the system configuration, you may need root privileges
    to view a specific log file. The same can be said when you are attempting to make
    changes to any system files, and for this reason, we will continue as the root
    user. However, those who use `sudo` or `su` (switch user) should change the instructions
    accordingly.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，根据系统配置，您可能需要根用户权限才能查看特定的日志文件。试图更改任何系统文件时，也可能需要类似的权限，因此，我们将继续以根用户身份操作。然而，使用`sudo`或`su`（切换用户）的用户应相应地调整指令。
- en: Log files can vary between applications and services, but the general purpose
    of these files is to record the time and date of an event and the security level,
    and to provide a message or general description. Most messages will be general
    notices or warnings of one type or another, but on certain occasions, errors will
    also be trapped.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 日志文件在不同的应用程序和服务之间可能有所不同，但这些文件的主要目的是记录事件的时间和日期以及安全级别，并提供一条消息或一般描述。大多数消息将是某种类型的常规通知或警告，但在某些情况下，也会捕获错误。
- en: 'For example, you may see something like this:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，您可能会看到如下内容：
- en: '[PRE23]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Messages like this are quite ordinary and merely explain what is happening and
    when it happened. Yes, you can safely ignore them, but due to the number of messages
    you see, some may remark or feel that the system is acting a little oversensitive
    to the extent that a log file is being flooded with low-level information. This
    information may serve no real purpose to many, but in some circumstances, you
    may consider that the information supplied isn't sensitive enough, and more information
    is needed. In the end, only you can decide what best suits your needs. So, in
    order to take a case in point, let's increase log sensitivity for the purpose
    of troubleshooting the system.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: 'To do this, we will begin by running the following command:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The output of the preceding command enables you to view the current settings
    for the kernel, which, on a typical system, will look like this:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: There is a relationship at work here, and it is important that you understand
    that `printk` maintains four numeric values that control a number of settings
    related to the logging of error messages, while every error message in turn maintains
    its very own log level in order to define the importance of that message.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: 'The log level values can be summarized in the following way:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: '`0`: Kernel emergency'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`1`: Kernel alert; action must be taken immediately'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`2`: Condition of the kernel is considered critical'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`3`: General kernel, error condition'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`4`: General kernel, warning condition'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`5`: Kernel notice of a normal but significant condition'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`6`: Kernel informational message'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`7`: Kernel debug-level messages'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'So, based on the above information, the log level values of `4`, `4`, `1`,
    and `7` tell us that the following is now apparent:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: The first value (`4`) is called the console log level. This numeric value defines
    the lowest priority of any message printed to the console, thereby implying that
    the lower the priority, the higher the log level number.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The second value (`4`) determines the default log level for all messages that
    do not maintain an exclusive log level.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The third value (`1`) determines the lowest possible log level configuration
    for the overall console log level. The lower the priority, the higher the log
    level number.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The fourth and final value (`7`) determines the default value for the overall
    console log level. Again, the lower the priority, the higher the log level number.
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Consequently, you are now in a position to consider making changes to the log
    level through a configuration file found at `/etc/sysctl.conf`. This file enables
    you to make fine adjustments to default settings, and it can be accessed with
    your favorite text editor in the following manner:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'To make the required change use the following syntax:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Here, the actual value of `X` is a log level setting taken from the options
    described earlier.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, you can change the number of messages by adding the following
    line:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Of course, such a modification implies a change to the kernel, and for this
    reason a reboot would be warranted. So, having done this, you will find that the
    output of running `cat /proc/sys/kernel/printk` should now reflect the new values.
    However, and as a supplementary note of caution, having considered doing this
    (and yes, you can easily reverse any changes made), it is important to realize
    that there are many questions based on the validity of changing these settings.
    Look at it this way: it may not help you at all, so you should always read around
    the subject before making these changes in order to confirm that making this alteration
    will suit your general purposes.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: 'To view the onboard manual, simply use the following command:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: On the other hand, for the many other services and applications on your server,
    you will have additional avenues of investigation to consider and these are generally
    set by the service or application in question.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: 'A common example of this is Apache. So, if you are debugging a web-based issue
    related to this service, you may be inclined to open the `httpd` configuration
    file like this:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Look or search for the following line:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Then, replace the instruction with a more appropriate setting (before saving
    the file and restarting the service). In this case, you can use:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Fortunately, it is nice to know that most services and applications do support
    a form of debugging mode for an improved log output. This will make the log file
    much more descriptive and easier to work with when troubleshooting the server,
    but just before we leave this subject, here comes the small print…
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: When you are working with log files, you should be aware that the information
    contained within those log files will not always be enough to help you diagnose
    the issue at hand or discover the cause of a problem. Log files may not only lack
    the required information, but they can also contain unknown errors and misleading
    messages. After all, log files only contain a series of (mainly) predefined messages
    or break points in a package, and these messages have been designed by programmers
    to make a remark concerning a known event that could have, or has taken place.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Remember…**'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: When affecting the output of a log file, a verbose and detailed output may raise
    performance or security issues, while detailed logging can also place an undue
    burden on the CPU or disk I/O operations.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: Based on these circumstances, there are no hard and fast rules because we also
    know that log files have limitations. So, in the end you will rely on a keen eye
    for detail and a great deal of patience, and for these reasons alone, you must
    always learn to "listen to the server" as a whole.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s put it this way: the answer is there, but it may not be in the log files.
    Perseverance and a calm (but firm) hand will win the day, and it is this point
    of contention that will be echoed throughout the pages of this book.'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: Using tail to monitor log files
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So, armed with the previous information and knowing that log files tend to describe
    events by specifying the time of occurrence, a level of severity, and a preordained
    message, the key to success in any troubleshooting scenario is based on an ability
    to work with these records and manipulate them in such a way that they provide
    us with the information we require to get the job done.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: 'For the purpose of troubleshooting, one of the most useful commands you will
    use is known as `tail`. A command-line expression that can be used to read the
    last lines of a log file is as follows:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Similarly, `tail` can also be used to obtain the most recently added lines
    like this:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Using this command not only gives you the most recent view of the log file in
    question, but also ensures that all updates are displayed immediately, which provides
    an instant way to read log files in a live environment. This approach can be described
    as the perfect way to troubleshoot Apache, Postfix, Nginx, MySQL, and the many
    other applications or services your server may be using.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, you can view the Apache `access_log` like this:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'To take this feature one step further, let''s assume that you wanted to get
    the last 3,000 lines from a log file knowing that it will not fit within your
    shell window. To account for this requirement, you can pipe the results with the
    `less` command like this:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: In this situation, you can now page the results as required, but having used
    this technique a few times, I think you would agree that this is far more flexible
    than using the generic `cat` command; unless of course, you wanted to do something
    very specific.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: Using cat, less, and more
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The `cat` command has been with us for a long time and, returning to our previous
    discussion relating to hardware and the contents of the `/proc` directory, you
    can use the `cat` command to view detailed information about your server''s CPU:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'If you wish to know more about the server''s memory, you can use:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Then, there is always the chance to learn more about your devices by typing:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'As useful as `cat` is, it is also known for providing a dump of the entire
    content on the screen, a condition that can seem a little unwieldy if the file
    is greater than 1,000 lines long. So, in these circumstances, the other option
    is to use the `less` and `more` commands in order to page through specific (static)
    files in the following way:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: However, because `more` is relatively old, most will argue that `less` is far
    superior. The `less` command is similar to `more`, but `less` will allow you to
    navigate back and forth between paged results. So yes, it's an old joke, but from
    now on, and wherever possible, always know that `less` really does mean `more`.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, `less` allows you to search for a particular string. To do this,
    simply open the following file using `less` like this:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Now, in the lower left portion of the screen, type `/`, followed by a string
    value like this:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: The output will now be adjusted to highlight the search results, and if you
    are looking for a larger selection of options, simply hit the *H* key while `less`
    is open.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: Using grep
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now let's consider the need to search the server's log files for specific keywords.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: In this situation, you would use the command known as `grep`, which also becomes
    a very helpful technique to learn when you would like to perform an advanced string-based
    search of almost any file on your server.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s say you wanted to search for a specific e-mail address in the mail log
    file. To do this, you would use `grep` in the following way:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Taking this one step further, `grep` can also be used to search in a recursive
    pattern across one or more files at the same time.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, in order to search the log file directory for an IP address (`XXX.XXX.XXX.XXX`),
    you would use the `grep` command in combination with the `-R` option like this:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Similarly, you can add line numbers to the output with the `-n` option like
    this:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Moreover, you will also notice that, during a multi-file based search, the
    filename is made available for each search result, but by employing the `-h` option,
    this can be disabled in the following way:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'You can ignore case with the `-i` option in the following way:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Moving beyond this, `grep` can be used to sort the content of a search result
    by simply calling the `sort` command. An alphabetical sort order (a to z) can
    be achieved by simply adding `sort` at the end of your original command like this:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'A reverse alphabetical sort order (z to a) can be achieved by adding the `-r`
    option like this:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'And finally, if you wish to search for more than one value, you can invoke
    the `–E` argument like this (but do not include unnecessary white spaces between
    the pipes):'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Of course, `grep` can do so much more, but for the purpose of troubleshooting,
    I would now like to draw your attention to one final, but very useful command.
    Known as `diff`, this command can be very useful in determining the differences
    between two files.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: Using diff
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The `diff` command is not necessarily considered to be a tool that is associated
    with log files unless you are comparing backups for a specific purpose. However,
    the `diff` command is very useful when comparing changes across an application.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, `diff` will enable you to compare the differences between two
    Apache configuration files, but by using the `-u` option, you will be able to
    include additional information such as the time and date:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Now, depending on the size of the files in question and the speed of your server,
    it may take a few seconds (or even minutes) to complete the task, and yes, I do
    realize we were digressing from the context of log files, but in time, I think
    that you will find this command will prove to be very useful.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, you may want to compare the contents of two folders using the
    `–rq` option to make it recursive like this:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'To learn more about the `diff` command, simply review the manual by typing:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: Using truncation
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So, having been shown how easy it is to work with log files, we should always
    be mindful that records like this do grow in size, and for this precise reason,
    they can become difficult to work with as time passes. In fact, you should be
    aware, oversized log files can impact the system's performance. With this in mind,
    it is a good idea to monitor any log rotation process and adjust it (on a regular
    basis) according to need.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
- en: 'Moreover, where log rotation can be critical for a medium- to high-load environment,
    I would suggest that you manage this solution effectively. However, in situations
    where the effect of this process proves negligible, the following fail-safe technique
    will enable you to scrub a log file clean by typing either one of the following
    commands:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Or more appropriately, you can simply use the `truncate` command like this:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: This process is known as truncation, and as mentioned, this should remain something
    of a last resort, as the preceding command will remove all the data contained
    within the file in question. So remember, if the file contains important information
    that you may need to review at some time in the future, back it up before you
    use `truncate`.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter was intended to provide an introduction to the subject of troubleshooting
    CentOS 7 without the intention of burdening you with yet another list of rules,
    instructions, or procedures that would ill-suit your circumstances or immediate
    needs. As we know, troubleshooting is a journey, and where the first chapter has
    served to introduce you to a selection of concepts and methods, every page that
    follows will ensure that you are one step closer to being at ease with the server
    you are about to diagnose and repair. So yes, the journey has just begun, and
    we will now approach the subject of troubleshooting active processes.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
- en: References
  id: totrans-208
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Red Hat customer portal: [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/)'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Syslog Severity Levels: [http://en.wikipedia.org/wiki/Syslog#Severity_levels](http://en.wikipedia.org/wiki/Syslog#Severity_levels)'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The Dmesg Wikipedia page: [http://en.wikipedia.org/wiki/Dmesg](http://en.wikipedia.org/wiki/Dmesg)'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The Cat Wikipedia page: [http://en.wikipedia.org/wiki/Cat_(Unix)](http://en.wikipedia.org/wiki/Cat_(Unix))'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The Grep Wikipedia page: [http://en.wikipedia.org/wiki/Grep](http://en.wikipedia.org/wiki/Grep)'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The Diff Wikipedia page: [http://en.wikipedia.org/wiki/Diff_utility](http://en.wikipedia.org/wiki/Diff_utility)'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The Tail Wikipedia page: [http://en.wikipedia.org/wiki/Tail](http://en.wikipedia.org/wiki/Tail)'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The Less Wikipedia page: [http://en.wikipedia.org/wiki/Less_(Unix)](http://en.wikipedia.org/wiki/Less_(Unix))'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
