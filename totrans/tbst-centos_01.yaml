- en: Chapter 1. Basics of Troubleshooting CentOS
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章：CentOS故障排除基础
- en: '**CentOS**, the **Community Enterprise Operating System**, is known to be a
    robust, stable, and trouble-free platform that is particularly well suited to
    the role of a server. Used by organizations of all sizes, CentOS can be found
    in many mission-critical environments the world over. However, as servers are
    expected to work on demand and without interruption, there will be times when
    a calm but firm hand is required to restore a service or to make some final adjustments
    to an existing application in order to ensure that a "working state" can be resumed
    as quickly as possible:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**CentOS**，即**社区企业操作系统**，以其强大、稳定和无故障的特性而闻名，特别适合作为服务器操作系统。被各类组织广泛使用，CentOS在全球许多关键任务环境中都能找到其身影。然而，随着服务器需要按需运行且不中断地提供服务，某些时候，需要冷静但果断的手段来恢复服务，或对现有应用程序进行最后的调整，以确保能够尽快恢复到“正常工作状态”。'
- en: '*"The server has gone down and all hell is about to break loose."*'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*“服务器已经崩溃，所有的麻烦即将爆发。”*'
- en: In a less than perfect world, things can (and inevitably do) go wrong, but it
    is your overall understanding of CentOS 7 and the confidence it provides that
    will form the basis of your troubleshooting skills. Remember, troubleshooting
    is a process of investigation that ultimately leads to a diagnosis. All systems
    are different and every approach to the same situation can vary depending on the
    purpose of that system. So, with this in mind, it is important to realize that
    the premise of this book is not recipe-driven, but more about the tools that are
    used and the resources you will be expected to encounter and interact with.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个不完美的世界里，事情可能会出错（并且不可避免地出错），但正是你对CentOS 7的整体理解以及它所提供的信心，构成了你故障排除技能的基础。记住，故障排除是一个调查过程，最终会得出诊断结果。所有系统都是不同的，对同一情况的处理方法也会根据系统的目的有所不同。因此，考虑到这一点，重要的是要意识到本书的前提并不是基于具体的操作步骤，而是更多地关注使用的工具和你将要遇到并与之互动的资源。
- en: 'In this chapter, we will:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将：
- en: Learn how to install some basic tools on CentOS
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何在CentOS上安装一些基本工具
- en: Discover how to gather hardware-based system information using `lscpu` and `lspci`
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索如何使用`lscpu`和`lspci`收集基于硬件的系统信息
- en: Learn more about the importance of `dmesg` and how it interacts with the kernel
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进一步了解`dmesg`的重要性及其与内核的交互
- en: Learn about the more common log files and how they affect the log output
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解更常见的日志文件及其如何影响日志输出
- en: Learn how to manipulate files of any description using `grep`, `tail`, `cat`,
    `less`, `truncate`, and many more command-line functions
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何使用`grep`、`tail`、`cat`、`less`、`truncate`等命令行功能操作任何类型的文件
- en: Installing some basic tools
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装一些基本工具
- en: 'During the course of this book, it is assumed that you will already have access
    to the basic tools associated with troubleshooting your server. Some of the more
    obscure tools will be mentioned and instructions will be given; however, for those
    who may or may not have access to the basic toolbox, as the root user you may
    want to begin by running the following command:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本书假设你已经能够访问与服务器故障排除相关的基本工具。将提及一些较为冷僻的工具，并会提供相应的使用说明；然而，对于那些可能有或没有基本工具箱的读者，作为root用户，你可能想要从运行以下命令开始：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This action, if and when confirmed, will begin to download and install the common
    development tools, libraries, and base components of a CentOS server system. It
    also contains the relevant utilities required by RPM, additional text editors,
    and packages required to compile custom packages.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 该操作（如果确认执行）将开始下载并安装CentOS服务器系统的常用开发工具、库和基础组件。它还包含RPM所需的相关工具、额外的文本编辑器以及编译自定义包所需的包。
- en: Note
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The practice of installing these packages at the outset is optional and all
    of these packages can be installed individually (as and when required). However,
    in an environment where disaster recovery planning has a vital role to play, it
    is worth considering the notion that a server has everything in place before any
    issues arise.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始时安装这些软件包是可选的，所有这些软件包都可以根据需要单独安装。然而，在灾难恢复规划至关重要的环境中，考虑到服务器在任何问题发生之前就应具备一切所需，值得一提。
- en: So, having prepared the system with the necessary tools and utilities, we shall
    begin in earnest by taking a closer look at the hardware. To do this, it is recommended
    that you continue with root access to the system in question.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，在为系统准备好必要的工具和实用程序后，我们将正式开始，仔细查看硬件。为了做到这一点，建议你继续以 root 权限访问相关系统。
- en: Gathering hardware information
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 收集硬件信息
- en: As a matter of principle, most people will tend to suggest that all system information
    can be categorized as either hardware-or-software based. This approach certainly
    serves to simplify things, but throughout the course of this chapter I will go
    some way to infer that there are instances in which the interplay of both (hardware
    and software) can be the reason for the issues at hand.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 从原则上讲，大多数人倾向于建议将所有系统信息分为硬件或软件两类。这种方法确实有助于简化问题，但在本章中，我将通过一些方式推测，在某些情况下，硬件和软件的相互作用可能是问题的根源。
- en: 'So, before you begin troubleshooting a system, always consider that the need
    gathering information about a system is the recommended approach to gaining additional
    insight and familiarity. Look at it this way: the practice of gathering hardware
    information is not necessarily required, but an investigation of this type may
    assist you in the search for an eventual diagnosis.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在开始故障排除之前，始终考虑收集系统信息是获得更多洞察和熟悉度的推荐方法。这样来看：收集硬件信息的实践并不是必须的，但这种类型的调查可能有助于你寻找最终的诊断结果。
- en: 'To begin, we will start by running a simple CPU-based hardware report with
    the following command:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将通过以下命令运行一个简单的基于 CPU 的硬件报告：
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'As you will see, the purpose of this command is to output all information related
    to the CPU model, family, architecture, the cache, and much more. The `/proc`
    approach is always a good tradition, but using the following command is generally
    considered to be a better practice and far easier to use:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，此命令的目的是输出与 CPU 型号、家族、架构、缓存等相关的所有信息。`/proc` 方法一直是一个不错的传统，但使用以下命令通常被认为是更好的做法，并且更易于使用：
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This command will query the system and output all relevant information associated
    with the CPU in the following manner:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将查询系统，并以以下方式输出与 CPU 相关的所有信息：
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'On the other hand, rather than querying absolutely everything, you can specify
    criteria by using `grep` (a subject that we will return to a little later in this
    chapter) in order to obtain any pertinent information, like this:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，与其查询所有内容，你可以使用 `grep`（这是我们稍后会回到的主题）来指定条件，从而获取任何相关信息，像这样：
- en: '[PRE4]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'So, having done this and recorded the results for future reference, we will
    now continue our investigation by running a simple hardware report with the `lspci`
    command in the following way:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，完成这些操作并记录结果以备将来参考后，我们将继续进行调查，通过以下方式运行简单的硬件报告，使用 `lspci` 命令：
- en: '[PRE5]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The result of this command may output something similar to the following information:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令的输出可能类似于以下信息：
- en: '[PRE6]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The `lspci` command provides all the relevant information concerning the PCI
    devices of your server, which in turn, can be expanded by employing either the
    `-v` option or the alternative `-vv` / `-vvv` option(s), depending on the level
    of detail you require:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '`lspci` 命令提供有关服务器的 PCI 设备的所有相关信息，进一步的信息可以通过使用 `-v` 选项或其他 `-vv` / `-vvv` 选项来扩展，具体取决于你所需的详细程度：'
- en: '[PRE7]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: By default, the above commands will provide all the information required by
    you to confirm whether a device is supported by any of the modules currently installed
    on your system or not. It is expected that you should only need to do this when
    hardware upgrades have been implemented, when the system has just been installed,
    or if you are attempting to familiarize yourself with a new environment. However,
    in order to simplify this exercise even further, you will be glad to know that
    a "tree view mode" is also available. The purpose of this facility is to output
    the associated device ID and show how these values are associated with the relevant
    bus.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，上述命令将提供所有所需的信息，以便确认设备是否受到当前系统中任何模块的支持。预计你只需要在实施硬件升级后、新安装系统时，或者尝试熟悉新环境时执行此操作。然而，为了进一步简化此过程，你会高兴地知道，还可以使用“树状视图模式”。这个功能的目的是输出相关的设备
    ID，并展示这些值如何与相应的总线相关联。
- en: 'To do this, type the following command:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 要做到这一点，输入以下命令：
- en: '[PRE8]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: As a troubleshooter, you will be aware that every device must maintain a unique
    identifier as CentOS, like all other operating systems, will use that identifier
    to bind a driver to that device. The `lspci` command works by scanning the `/sys`
    tree for all connected devices, which can also include the connection port, the
    device type, and class, to name but a few. Having done this, the `lspci` command
    will then consult `/usr/share/hwdata/pci.ids` to provide the human-readable entries
    it displays.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一名故障排除员，您会知道每个设备都必须维护一个唯一的标识符，因为CentOS与其他操作系统一样，将使用该标识符将驱动程序绑定到该设备。`lspci`命令通过扫描`/sys`树来检测所有连接的设备，这些设备可以包括连接端口、设备类型和类别，仅举几例。完成此操作后，`lspci`命令将查阅`/usr/share/hwdata/pci.ids`，以提供它所显示的可读条目。
- en: 'For example, you can display the kernel drivers/modules by typing the following
    `lspci` command with the `-k` option like this:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，您可以通过输入以下带有`-k`选项的`lspci`命令来显示内核驱动程序/模块，像这样：
- en: '[PRE9]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Naturally, during any hardware-based troubleshooting investigation you will
    want to review the system logs for additional clues, but as we have seen, both
    the `lscpu` and `lspci` commands are particularly useful when attempting to discover
    more about the necessary hardware information present on your system.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 自然，在任何基于硬件的故障排除调查中，您都会想查看系统日志以获取更多线索，但正如我们所看到的，`lscpu`和`lspci`命令在尝试发现系统中所需的硬件信息时尤其有用。
- en: 'You can learn more about these commands by reviewing the respective on-board
    manuals at any time:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以随时通过查看相应的车载手册来了解更多关于这些命令的信息：
- en: '[PRE10]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Meanwhile, if you want to practice more, a simple test would be to insert a
    USB thumb drive and to analyze the findings yourself by paying close attention
    to the enumeration found within `/var/log/messages`.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，如果您想要更多练习，一个简单的测试就是插入一个USB闪存驱动器，并通过仔细查看`/var/log/messages`中的枚举信息来分析您自己得到的结果。
- en: Note
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Remember, if you do try this, you are looking at how the system reacted once
    the USB drive was inserted; you are not necessarily looking at the USB drive itself;
    the information about which can be obtained with `lsusb`.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，如果您确实尝试了这个操作，您所看到的是系统在插入USB驱动器后的反应；您不一定是在查看USB驱动器本身；关于USB的信息可以通过`lsusb`获得。
- en: 'On the other hand, in the same way that we can use `grep` with `lscpu`, if
    you are already feeling comfortable with this type of investigation, then you
    may like to know that you can also use `grep` with the `lspci` command to discover
    more about your RAID controller in the following way:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，就像我们可以将`grep`与`lscpu`一起使用一样，如果您已经习惯了这种类型的调查，那么您可能会想知道，您还可以将`grep`与`lspci`命令一起使用，以下面这种方式来发现更多关于RAID控制器的信息：
- en: '[PRE11]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now, I am sure you will not be surprised to learn that there are many more
    commands associated with obtaining hardware information. This includes (but is
    not limited to) `lsmod`, `dmidecode` `hdparm`, `df -h`, or even `lsblk` and the
    many others that will be mentioned throughout the course of this book. All of
    them are useful, but for those who do not want to commit them to memory, a significant
    amount of information can be found by simply reading the files found within the
    `/proc` and `/sys` directories like this:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我相信您不会感到惊讶，知道还有许多与获取硬件信息相关的命令。这些包括（但不限于）`lsmod`、`dmidecode`、`hdparm`、`df
    -h`，甚至是`lsblk`，以及在本书中将提到的许多其他命令。它们都很有用，但对于那些不想记住它们的人，可以通过简单地阅读`/proc`和`/sys`目录中的文件找到大量信息，像这样：
- en: '[PRE12]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Consequently, and before we move on, you should now be aware that when you are
    dealing with hardware analysis, perfecting your skills is about practice and exposure
    to a server over the long term. My reason for stating this is based on the notion
    that a simple installation procedure can serve to identify these problems almost
    immediately, but without that luxury, and as time goes by, it is possible that
    the hardware will need replacing or servicing. RAID Battery packs will fail, memory
    modules will fail, and, on some occasions, it could be that a particular driver
    has not fully loaded during the most recent reboot. In this situation, you may
    find that the kernel is flooding the system with random messages to such an extent
    that it suggests an entirely different issue is causing the problem. So yes, hardware
    troubleshooting requires a good measure of patience and observation, and it is
    for this reason that a quick review of both the `lscpu` and `lspci` commands has
    formed our introduction to troubleshooting CentOS 7.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在我们继续之前，你现在应该知道，当你处理硬件分析时，提升你的技能是通过长时间接触服务器来实现的。我这么说的原因是基于这样一种观点：一个简单的安装过程几乎可以立即识别出这些问题，但没有这个便利的情况下，随着时间的推移，硬件可能需要更换或维护。RAID电池组会故障，内存模块会故障，有时可能是某个特定驱动程序在最近一次重启时没有完全加载。在这种情况下，你可能会发现内核正以如此高的频率向系统发送随机消息，以至于它表明一个完全不同的问题导致了故障。所以，是的，硬件故障排除需要耐心和观察力，这也是为什么对`lscpu`和`lspci`命令的快速回顾成为我们故障排除CentOS
    7的引言。
- en: Understanding dmesg
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解dmesg
- en: Before we dive into the subject of log files, I would like to begin by spending
    a few moments to discuss the importance of the `dmesg` command.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入探讨日志文件的主题之前，我想花几分钟时间讨论一下`dmesg`命令的重要性。
- en: The `dmesg` command is used to record messages from the kernel that are specifically
    related to the process of hardware detection and configuration. I will not go
    in too much technical detail at this point, but it is important to realize that
    these messages are derived from the kernel ring buffer; a condition that can not
    only prove to be of great assistance because it relates back to the subject of
    hardware troubleshooting, but one that provides evidence as to why an understanding
    of the system hardware can reflect in a possible software diagnosis and vice versa.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '`dmesg`命令用于记录与硬件检测和配置过程相关的内核消息。我此时不打算深入讲解技术细节，但重要的是要意识到，这些信息来源于内核环形缓冲区；这个条件不仅在硬件故障排除时非常有帮助，而且也为理解系统硬件如何反映在可能的软件诊断上提供了证据，反之亦然。'
- en: 'The `dmesg` file is located in the `/var/log/` directory, but unlike other
    files that reside in that directory, the basic syntax to view the contents of
    the `dmesg` file is as follows:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '`dmesg`文件位于`/var/log/`目录中，但与该目录中其他文件不同，查看`dmesg`文件内容的基本语法如下：'
- en: '[PRE13]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'You can page through the results in the usual way, but if you would like to
    make the timestamp a little easier to read, you may want to invoke the `-T` option
    like this:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以像往常一样翻页查看结果，但如果你希望让时间戳更容易阅读，你可能希望像这样调用`-T`选项：
- en: '[PRE14]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: These commands will now provide us with information related to all the hardware
    drivers loaded into the kernel during the boot sequence. This information will
    include their status (success or failure), and if a failure is recorded, it will
    even provide an error message describing why a failure took place. However, as
    this file can be quite overwhelming, you should use `grep` to query `dmesg` in
    order to streamline this information and simplify the output.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这些命令将向我们提供与启动过程中加载到内核中的所有硬件驱动程序相关的信息。这些信息将包括它们的状态（成功或失败），如果记录到失败，它甚至会提供一个错误消息，描述失败发生的原因。然而，由于该文件可能非常庞大，你应该使用`grep`查询`dmesg`以简化这些信息并简化输出。
- en: 'To do this, simply customize the following syntax to suit your needs:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，只需根据你的需求定制以下语法：
- en: '[PRE15]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: This command will now display all relevant information regarding the total memory
    available and shared memory details associated with the server. Of course, similar
    approaches can be made to read the specific information for USB devices, direct
    memory access (DMA), or even tty.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令将显示所有与服务器相关的总内存和共享内存细节的相关信息。当然，类似的方法也可以用来读取USB设备、直接内存访问（DMA）或甚至tty的具体信息。
- en: 'For example, you can query `dmesg` to display hardware information related
    to any Ethernet ports in the following way:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你可以查询 `dmesg` 来以以下方式显示与任何以太网端口相关的硬件信息：
- en: '[PRE16]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Depending on your system configuration, the output will look similar to this:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你的系统配置，输出将类似于以下内容：
- en: '[PRE17]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'To extend this approach, you can then modify the previous command in order
    to discover whether the kernel has detected a specific hard disk. To do this,
    type:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 为了扩展这一方法，你可以修改之前的命令，以发现内核是否已检测到特定的硬盘。为此，请输入：
- en: '[PRE18]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Alternatively, you can then use the `-i` option to ignore the effects of case
    sensitivity when searching for `tty` references:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你可以使用 `-i` 选项忽略搜索 `tty` 引用时的大小写敏感性：
- en: '[PRE19]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: As you will see, the output of the `dmesg` file is verbose and the information
    contained within it can be used to troubleshoot almost anything from network cards
    to storage issues. The `demsg` file may not give you the answer you are looking
    for straightaway, but it does provide you with another piece of the puzzle when
    it is used in combination with the information found in some of the more common
    log files associated with the CentOS operating system.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你将看到的，`dmesg` 文件的输出非常冗长，文件中包含的信息可以用于故障排除几乎任何问题，从网络卡到存储问题。`dmesg` 文件可能不会直接给出你想要的答案，但它提供了一个拼图的另一部分，当与一些常见的
    CentOS 操作系统日志文件中的信息结合使用时，它会帮助你找到解决方案。
- en: Understanding log files
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解日志文件
- en: 'By default, all CentOS system log files can be found in `/var/log` and a full
    inventory on your current server can be obtained by typing the following command:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，所有 CentOS 系统日志文件都可以在 `/var/log` 中找到，可以通过输入以下命令获取当前服务器的完整清单：
- en: '[PRE20]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'With that said, every system is different, and for overall simplicity, you
    will find that some of the more common log files (associated with a minimal installation
    of CentOS 7) will include:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，每个系统都是不同的，为了简化操作，你会发现一些常见的日志文件（与 CentOS 7 最小化安装相关的）包括：
- en: '`/var/log/messages`: This file contains information related to the many native
    services used by CentOS. This includes (but is not limited to) the kernel logger,
    the network manager, boot process, mail services, `cron` jobs, and many other
    services that do not have their own log files. In many respects, this record can
    be considered to be a global log file of sorts, and out of habit, it will probably
    become your first port of call in any troubleshooting process.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/var/log/messages`：该文件包含与 CentOS 使用的许多本地服务相关的信息。包括（但不限于）内核日志、网络管理器、引导过程、邮件服务、`cron`
    任务以及许多没有自己日志文件的其他服务。在许多方面，这个记录可以被认为是某种全球性日志文件，出于习惯，它可能会成为你在任何故障排除过程中首先访问的文件。'
- en: '`/var/log/boot.log`: This file contains information that is reported when the
    system boots.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/var/log/boot.log`：该文件包含系统启动时报告的信息。'
- en: '`/var/log/maillog`: This file contains information that is reported by the
    default mail server used by the system.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/var/log/maillog`：该文件包含由系统默认邮件服务器报告的信息。'
- en: '`/var/log/secure`: This file contains information that is related to the associated
    authentication and authorization privileges.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/var/log/secure`：该文件包含与认证和授权权限相关的信息。'
- en: '`/var/log/wtmp`: This file contains information related to user login records.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/var/log/wtmp`：该文件包含与用户登录记录相关的信息。'
- en: '`/var/log/btmp`: This file contains information related to failed login attempts.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/var/log/btmp`：该文件包含与登录失败尝试相关的信息。'
- en: '`/var/log/cron`: This file contains information related to cron (and anacron).'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/var/log/cron`：该文件包含与 cron（和 anacron）相关的信息。'
- en: '`/var/log/lastlog`: This file contains information related to the binary log
    that contains all of the last login information.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/var/log/lastlog`：该文件包含与包含所有最后登录信息的二进制日志相关的信息。'
- en: '`/var/log/yum.log`: This file contains information related to Yum and reports
    any activity related to the server''s package management tools.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`/var/log/yum.log`：该文件包含与 Yum 相关的信息，并报告与服务器包管理工具相关的任何活动。'
- en: Now, before we continue, I want to draw your attention towards the importance
    of these files as it is often a good idea to store `/var/log` in a separate partition
    to `/` (root).
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在继续之前，我想提醒你这些文件的重要性，因为通常建议将 `/var/log` 存储在与 `/`（根目录）不同的分区中。
- en: A perfect system would maintain a separate partition for `/tmp`, `/usr`, and
    others, but yes, there may be situations where storing your log files on the same
    partition as `/` (root) is unavoidable. So remember, if and when the opportunity
    does arise, you may want to consider storing these directories on a separate filesystem
    and a separate physical volume (if possible), as this is considered to be good
    practice with regard to maintaining the overall security, integrity, and performance
    of the system in question.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 一个完美的系统应为`/tmp`、`/usr`等目录维护单独的分区，但确实也有可能在某些情况下，日志文件不得不与`/`（根）分区存储在同一分区上。因此，请记住，如果有这样的机会，您可能需要考虑将这些目录存储在一个独立的文件系统和独立的物理卷上（如果可能），因为这被认为是保持系统安全性、完整性和性能的良好实践。
- en: However, and having said that, it is also important to recognize that many other
    packages will create and store logs in other locations. You may even be required
    to specify these locations yourself, and for this reason, it should be remembered
    that not all logs are located in `/var/log`.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，话虽如此，仍然需要认识到，许多其他软件包会在其他位置创建和存储日志文件。您甚至可能需要自行指定这些位置，因此应该记住，并非所有日志都位于`/var/log`目录下。
- en: 'For example, if the server in question is hosting one or more websites and
    storing all the relevant Apache VirtualHost information in a specific `/home`
    directory, then the associated log files may be found in a location like this:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果相关服务器托管一个或多个网站，并将所有相关的Apache虚拟主机信息存储在特定的`/home`目录中，那么相关的日志文件可能会存储在如下位置：
- en: '[PRE21]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The same can be said of many other packages, and this issue arises because the
    packages may not have the required privileges to write to that directory, while
    others are designed to maintain all logging activity within their own installation
    directory. Therefore, and depending on the nature of your system, you may need
    to spend a few moments analyzing your server's installation structure in order
    to locate the appropriate log file(s).
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 许多其他软件包也面临同样的问题，原因在于这些软件包可能没有写入该目录所需的权限，而其他软件包则设计为将所有日志活动保存在其自己的安装目录中。因此，根据您的系统特性，您可能需要花些时间分析服务器的安装结构，以便找到适当的日志文件。
- en: Reading log files and affecting the output
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 阅读日志文件并影响输出
- en: 'Viewing or reading a log file is very easy and depending on your personal preferences,
    the basic syntax to view any of these files can be expressed in any of the following
    formats:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 查看或读取日志文件非常容易，且根据个人偏好，查看这些文件的基本语法可以用以下任意一种格式表达：
- en: '[PRE22]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Note
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Remember, depending on the system configuration, you may need root privileges
    to view a specific log file. The same can be said when you are attempting to make
    changes to any system files, and for this reason, we will continue as the root
    user. However, those who use `sudo` or `su` (switch user) should change the instructions
    accordingly.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，根据系统配置，您可能需要根用户权限才能查看特定的日志文件。试图更改任何系统文件时，也可能需要类似的权限，因此，我们将继续以根用户身份操作。然而，使用`sudo`或`su`（切换用户）的用户应相应地调整指令。
- en: Log files can vary between applications and services, but the general purpose
    of these files is to record the time and date of an event and the security level,
    and to provide a message or general description. Most messages will be general
    notices or warnings of one type or another, but on certain occasions, errors will
    also be trapped.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 日志文件在不同的应用程序和服务之间可能有所不同，但这些文件的主要目的是记录事件的时间和日期以及安全级别，并提供一条消息或一般描述。大多数消息将是某种类型的常规通知或警告，但在某些情况下，也会捕获错误。
- en: 'For example, you may see something like this:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，您可能会看到如下内容：
- en: '[PRE23]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Messages like this are quite ordinary and merely explain what is happening and
    when it happened. Yes, you can safely ignore them, but due to the number of messages
    you see, some may remark or feel that the system is acting a little oversensitive
    to the extent that a log file is being flooded with low-level information. This
    information may serve no real purpose to many, but in some circumstances, you
    may consider that the information supplied isn't sensitive enough, and more information
    is needed. In the end, only you can decide what best suits your needs. So, in
    order to take a case in point, let's increase log sensitivity for the purpose
    of troubleshooting the system.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这样的消息很普通，仅仅解释发生了什么以及何时发生。是的，你可以放心地忽略它们，但由于你看到的消息数量较多，有些人可能会觉得系统对一些事情过于敏感，导致日志文件被低级信息淹没。对于很多人来说，这些信息可能没有实际用途，但在某些情况下，你可能会认为提供的信息不够详细，可能需要更多的信息。最终，只有你能决定最适合你的需求。所以，为了举个例子，假设我们要提高日志敏感度来排查系统问题。
- en: 'To do this, we will begin by running the following command:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们将首先运行以下命令：
- en: '[PRE24]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The output of the preceding command enables you to view the current settings
    for the kernel, which, on a typical system, will look like this:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的命令输出允许你查看当前的内核设置，典型系统中会是如下所示：
- en: '[PRE25]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: There is a relationship at work here, and it is important that you understand
    that `printk` maintains four numeric values that control a number of settings
    related to the logging of error messages, while every error message in turn maintains
    its very own log level in order to define the importance of that message.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 这里存在一个关系，重要的是你理解`printk`维护着四个数值，这些数值控制与错误消息日志记录相关的多个设置，同时每个错误消息也有其专属的日志级别，用来定义该消息的重要性。
- en: 'The log level values can be summarized in the following way:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 日志级别值可以总结如下：
- en: '`0`: Kernel emergency'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`0`：内核紧急'
- en: '`1`: Kernel alert; action must be taken immediately'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`1`：内核警报；必须立即采取行动'
- en: '`2`: Condition of the kernel is considered critical'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`2`：内核状态被认为是关键的'
- en: '`3`: General kernel, error condition'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`3`：一般内核，错误条件'
- en: '`4`: General kernel, warning condition'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`4`：一般内核，警告条件'
- en: '`5`: Kernel notice of a normal but significant condition'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`5`：内核正常但重要的情况通知'
- en: '`6`: Kernel informational message'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`6`：内核信息性消息'
- en: '`7`: Kernel debug-level messages'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`7`：内核调试级别消息'
- en: 'So, based on the above information, the log level values of `4`, `4`, `1`,
    and `7` tell us that the following is now apparent:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，基于以上信息，`4`、`4`、`1` 和 `7` 的日志级别值告诉我们，接下来显而易见的是：
- en: The first value (`4`) is called the console log level. This numeric value defines
    the lowest priority of any message printed to the console, thereby implying that
    the lower the priority, the higher the log level number.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个值（`4`）称为控制台日志级别。这个数值定义了打印到控制台的消息的最低优先级，意味着优先级越低，日志级别数字越高。
- en: The second value (`4`) determines the default log level for all messages that
    do not maintain an exclusive log level.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二个值（`4`）确定了所有没有专属日志级别的消息的默认日志级别。
- en: The third value (`1`) determines the lowest possible log level configuration
    for the overall console log level. The lower the priority, the higher the log
    level number.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三个值（`1`）确定了整体控制台日志级别的最低可能日志级别配置。优先级越低，日志级别数字越高。
- en: The fourth and final value (`7`) determines the default value for the overall
    console log level. Again, the lower the priority, the higher the log level number.
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第四个也是最后一个值（`7`）确定了整体控制台日志级别的默认值。同样，优先级越低，日志级别数字越高。
- en: 'Consequently, you are now in a position to consider making changes to the log
    level through a configuration file found at `/etc/sysctl.conf`. This file enables
    you to make fine adjustments to default settings, and it can be accessed with
    your favorite text editor in the following manner:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，你现在可以考虑通过配置文件`/etc/sysctl.conf`来修改日志级别。这个文件使你能够对默认设置进行细微调整，并且可以通过你喜欢的文本编辑器以以下方式访问：
- en: '[PRE26]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'To make the required change use the following syntax:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 要进行所需的更改，请使用以下语法：
- en: '[PRE27]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Here, the actual value of `X` is a log level setting taken from the options
    described earlier.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，`X`的实际值是从前面描述的选项中获取的日志级别设置。
- en: 'For example, you can change the number of messages by adding the following
    line:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你可以通过添加以下行来改变消息数量：
- en: '[PRE28]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Of course, such a modification implies a change to the kernel, and for this
    reason a reboot would be warranted. So, having done this, you will find that the
    output of running `cat /proc/sys/kernel/printk` should now reflect the new values.
    However, and as a supplementary note of caution, having considered doing this
    (and yes, you can easily reverse any changes made), it is important to realize
    that there are many questions based on the validity of changing these settings.
    Look at it this way: it may not help you at all, so you should always read around
    the subject before making these changes in order to confirm that making this alteration
    will suit your general purposes.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这样的修改意味着对内核的更改，因此重启是必要的。所以，完成这一步后，你会发现运行`cat /proc/sys/kernel/printk`的输出现在应该反映新的值。然而，作为补充的警告，考虑到执行此操作（是的，你可以轻松地撤销任何已做的更改），重要的是要意识到关于更改这些设置的有效性存在许多问题。换个角度看：这可能完全不帮助你，因此在进行这些更改之前，你应始终阅读相关资料，以确认做出这一修改是否符合你的总体目的。
- en: 'To view the onboard manual, simply use the following command:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看内建的手册，只需使用以下命令：
- en: '[PRE29]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: On the other hand, for the many other services and applications on your server,
    you will have additional avenues of investigation to consider and these are generally
    set by the service or application in question.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，对于服务器上许多其他服务和应用程序，你将有额外的调查途径需要考虑，这些途径通常是由相关服务或应用程序本身设置的。
- en: 'A common example of this is Apache. So, if you are debugging a web-based issue
    related to this service, you may be inclined to open the `httpd` configuration
    file like this:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 一个常见的例子是 Apache。因此，如果你在调试与该服务相关的 Web 问题时，你可能会倾向于打开`httpd`配置文件，如下所示：
- en: '[PRE30]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Look or search for the following line:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 查找或搜索以下行：
- en: '[PRE31]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Then, replace the instruction with a more appropriate setting (before saving
    the file and restarting the service). In this case, you can use:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，替换该指令为更合适的设置（在保存文件并重启服务之前）。在这种情况下，你可以使用：
- en: '[PRE32]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Fortunately, it is nice to know that most services and applications do support
    a form of debugging mode for an improved log output. This will make the log file
    much more descriptive and easier to work with when troubleshooting the server,
    but just before we leave this subject, here comes the small print…
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，知道大多数服务和应用程序确实支持一种调试模式，以改善日志输出，这是一件好事。这将使日志文件更加详细并且在排除服务器故障时更容易处理，但在我们结束这个话题之前，有一个小的注意事项……
- en: When you are working with log files, you should be aware that the information
    contained within those log files will not always be enough to help you diagnose
    the issue at hand or discover the cause of a problem. Log files may not only lack
    the required information, but they can also contain unknown errors and misleading
    messages. After all, log files only contain a series of (mainly) predefined messages
    or break points in a package, and these messages have been designed by programmers
    to make a remark concerning a known event that could have, or has taken place.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 当你处理日志文件时，应该意识到这些日志文件中包含的信息并不总是足以帮助你诊断当前的问题或发现问题的根本原因。日志文件不仅可能缺少必要的信息，还可能包含未知的错误和误导性的消息。毕竟，日志文件仅包含一系列（主要是）预定义的消息或包中的断点，这些消息是由程序员设计的，用于备注可能发生过或已经发生的已知事件。
- en: Note
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Remember…**'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '**记住……**'
- en: When affecting the output of a log file, a verbose and detailed output may raise
    performance or security issues, while detailed logging can also place an undue
    burden on the CPU or disk I/O operations.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在影响日志文件输出时，详细的输出可能会引发性能或安全问题，而详细的日志记录还可能对 CPU 或磁盘 I/O 操作造成不必要的负担。
- en: Based on these circumstances, there are no hard and fast rules because we also
    know that log files have limitations. So, in the end you will rely on a keen eye
    for detail and a great deal of patience, and for these reasons alone, you must
    always learn to "listen to the server" as a whole.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 根据这些情况，没有固定的规则，因为我们也知道日志文件是有局限性的。所以，最终你将依赖于敏锐的观察力和大量的耐心，仅仅基于这些原因，你必须始终学会“整体倾听服务器”。
- en: 'Let''s put it this way: the answer is there, but it may not be in the log files.
    Perseverance and a calm (but firm) hand will win the day, and it is this point
    of contention that will be echoed throughout the pages of this book.'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 这样说吧：答案在那儿，但可能不在日志文件中。坚持不懈和冷静（但坚定）的态度将最终胜出，而这一点将贯穿本书的每一页。
- en: Using tail to monitor log files
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 tail 监控日志文件
- en: So, armed with the previous information and knowing that log files tend to describe
    events by specifying the time of occurrence, a level of severity, and a preordained
    message, the key to success in any troubleshooting scenario is based on an ability
    to work with these records and manipulate them in such a way that they provide
    us with the information we require to get the job done.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，掌握了之前的信息，并且知道日志文件通常通过指定事件发生的时间、严重程度和预定的消息来描述事件，成功的关键在于能够处理这些记录并以某种方式操作它们，使它们为我们提供完成任务所需的信息。
- en: 'For the purpose of troubleshooting, one of the most useful commands you will
    use is known as `tail`. A command-line expression that can be used to read the
    last lines of a log file is as follows:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在故障排除过程中，你将使用的最有用的命令之一是 `tail`。以下是一个命令行表达式，可以用来读取日志文件的最后几行：
- en: '[PRE33]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Similarly, `tail` can also be used to obtain the most recently added lines
    like this:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，`tail` 也可以用来获取最近添加的行，像这样：
- en: '[PRE34]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Using this command not only gives you the most recent view of the log file in
    question, but also ensures that all updates are displayed immediately, which provides
    an instant way to read log files in a live environment. This approach can be described
    as the perfect way to troubleshoot Apache, Postfix, Nginx, MySQL, and the many
    other applications or services your server may be using.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此命令不仅可以为你提供日志文件的最新视图，还能确保所有更新立即显示，这为你提供了一种在实时环境中阅读日志文件的即时方式。这种方法可以被描述为解决 Apache、Postfix、Nginx、MySQL
    以及你的服务器可能使用的其他许多应用程序或服务故障的完美方式。
- en: 'For example, you can view the Apache `access_log` like this:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你可以像这样查看 Apache 的 `access_log`：
- en: '[PRE35]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'To take this feature one step further, let''s assume that you wanted to get
    the last 3,000 lines from a log file knowing that it will not fit within your
    shell window. To account for this requirement, you can pipe the results with the
    `less` command like this:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步拓展这个功能，假设你想获取日志文件中的最后 3,000 行，知道它将无法适应你的 shell 窗口。为了满足这个需求，你可以像这样使用管道将结果与
    `less` 命令结合：
- en: '[PRE36]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: In this situation, you can now page the results as required, but having used
    this technique a few times, I think you would agree that this is far more flexible
    than using the generic `cat` command; unless of course, you wanted to do something
    very specific.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，你现在可以根据需要分页结果，但使用这种技术几次后，我想你会同意，它比使用通用的 `cat` 命令要灵活得多；除非，当然，你想做一些非常具体的事情。
- en: Using cat, less, and more
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 `cat`、`less` 和 `more`
- en: 'The `cat` command has been with us for a long time and, returning to our previous
    discussion relating to hardware and the contents of the `/proc` directory, you
    can use the `cat` command to view detailed information about your server''s CPU:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '`cat` 命令已经陪伴我们很长时间了，回到之前我们讨论的硬件和 `/proc` 目录的内容，你可以使用 `cat` 命令查看服务器 CPU 的详细信息：'
- en: '[PRE37]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'If you wish to know more about the server''s memory, you can use:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多关于服务器内存的信息，你可以使用：
- en: '[PRE38]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Then, there is always the chance to learn more about your devices by typing:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你总是可以通过输入以下命令来了解更多关于你的设备的信息：
- en: '[PRE39]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'As useful as `cat` is, it is also known for providing a dump of the entire
    content on the screen, a condition that can seem a little unwieldy if the file
    is greater than 1,000 lines long. So, in these circumstances, the other option
    is to use the `less` and `more` commands in order to page through specific (static)
    files in the following way:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 `cat` 非常有用，但它也因将整个内容输出到屏幕上而闻名，如果文件超过 1,000 行，可能会显得有些笨拙。因此，在这种情况下，另一种选择是使用
    `less` 和 `more` 命令，以分页的方式查看特定的（静态）文件，如下所示：
- en: '[PRE40]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: However, because `more` is relatively old, most will argue that `less` is far
    superior. The `less` command is similar to `more`, but `less` will allow you to
    navigate back and forth between paged results. So yes, it's an old joke, but from
    now on, and wherever possible, always know that `less` really does mean `more`.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，由于 `more` 命令相对较旧，大多数人会认为 `less` 更加优越。`less` 命令类似于 `more`，但 `less` 允许你在分页结果之间前后导航。所以，是的，这是一个老笑话，但从现在起，并且在任何可能的情况下，始终记住，`less`
    确实意味着 `more`。
- en: 'For example, `less` allows you to search for a particular string. To do this,
    simply open the following file using `less` like this:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`less` 允许你搜索特定的字符串。为此，只需像这样使用 `less` 打开以下文件：
- en: '[PRE41]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Now, in the lower left portion of the screen, type `/`, followed by a string
    value like this:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在屏幕的左下角，输入 `/`，后面跟着一个字符串值，像这样：
- en: '[PRE42]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: The output will now be adjusted to highlight the search results, and if you
    are looking for a larger selection of options, simply hit the *H* key while `less`
    is open.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 输出现在将调整为突出显示搜索结果，如果你想查看更多选项，只需在 `less` 打开时按 *H* 键。
- en: Using grep
  id: totrans-169
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 grep
- en: Now let's consider the need to search the server's log files for specific keywords.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们考虑一下需要在服务器的日志文件中查找特定关键字的情况。
- en: In this situation, you would use the command known as `grep`, which also becomes
    a very helpful technique to learn when you would like to perform an advanced string-based
    search of almost any file on your server.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，你将使用名为 `grep` 的命令，这也是当你想对服务器上的几乎任何文件执行高级基于字符串的搜索时，非常有用的技巧。
- en: 'Let''s say you wanted to search for a specific e-mail address in the mail log
    file. To do this, you would use `grep` in the following way:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你想在邮件日志文件中查找一个特定的电子邮件地址。为此，你可以如下使用 `grep` 命令：
- en: '[PRE43]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Taking this one step further, `grep` can also be used to search in a recursive
    pattern across one or more files at the same time.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 更进一步，`grep` 还可以用于递归地搜索一个或多个文件中的内容。
- en: 'For example, in order to search the log file directory for an IP address (`XXX.XXX.XXX.XXX`),
    you would use the `grep` command in combination with the `-R` option like this:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果你想要在日志文件目录中查找一个 IP 地址（`XXX.XXX.XXX.XXX`），你可以将 `grep` 命令与 `-R` 选项结合使用，如下所示：
- en: '[PRE44]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Similarly, you can add line numbers to the output with the `-n` option like
    this:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，你可以通过 `-n` 选项为输出添加行号，如下所示：
- en: '[PRE45]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Moreover, you will also notice that, during a multi-file based search, the
    filename is made available for each search result, but by employing the `-h` option,
    this can be disabled in the following way:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你还会注意到，在多文件搜索时，每个搜索结果都会显示文件名，但通过使用 `-h` 选项，你可以禁用此功能，如下所示：
- en: '[PRE46]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'You can ignore case with the `-i` option in the following way:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过 `-i` 选项忽略大小写，如下所示：
- en: '[PRE47]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Moving beyond this, `grep` can be used to sort the content of a search result
    by simply calling the `sort` command. An alphabetical sort order (a to z) can
    be achieved by simply adding `sort` at the end of your original command like this:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 更进一步，`grep` 还可以用来对搜索结果的内容进行排序，只需在原始命令末尾添加 `sort` 命令即可实现按字母顺序（从 a 到 z）排序，如下所示：
- en: '[PRE48]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'A reverse alphabetical sort order (z to a) can be achieved by adding the `-r`
    option like this:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 通过添加 `-r` 选项，你可以实现反向字母排序（从 z 到 a），如下所示：
- en: '[PRE49]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'And finally, if you wish to search for more than one value, you can invoke
    the `–E` argument like this (but do not include unnecessary white spaces between
    the pipes):'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，如果你希望搜索多个值，你可以像这样使用 `–E` 参数（但不要在管道符之间包含不必要的空格）：
- en: '[PRE50]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Of course, `grep` can do so much more, but for the purpose of troubleshooting,
    I would now like to draw your attention to one final, but very useful command.
    Known as `diff`, this command can be very useful in determining the differences
    between two files.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，`grep` 的功能远不止这些，但为了故障排除的目的，我现在想要引起你注意的最后一个命令，`diff` 命令，在确定两个文件之间的差异时非常有用。
- en: Using diff
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 diff
- en: The `diff` command is not necessarily considered to be a tool that is associated
    with log files unless you are comparing backups for a specific purpose. However,
    the `diff` command is very useful when comparing changes across an application.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '`diff` 命令通常不被认为是与日志文件相关的工具，除非你是在为特定目的比较备份文件。然而，`diff` 命令在比较应用程序的变化时非常有用。'
- en: 'For example, `diff` will enable you to compare the differences between two
    Apache configuration files, but by using the `-u` option, you will be able to
    include additional information such as the time and date:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`diff` 命令可以让你比较两个 Apache 配置文件之间的差异，但通过使用 `-u` 选项，你还可以包含额外的信息，比如时间和日期：
- en: '[PRE51]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Now, depending on the size of the files in question and the speed of your server,
    it may take a few seconds (or even minutes) to complete the task, and yes, I do
    realize we were digressing from the context of log files, but in time, I think
    that you will find this command will prove to be very useful.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，根据文件的大小和服务器的速度，任务可能需要几秒钟（甚至几分钟）才能完成。是的，我知道我们有点偏离了日志文件的主题，但我相信随着时间的推移，你会发现这个命令非常有用。
- en: 'For example, you may want to compare the contents of two folders using the
    `–rq` option to make it recursive like this:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你可能想要使用 `–rq` 选项来比较两个文件夹的内容，这样可以让比较变得递归，如下所示：
- en: '[PRE52]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'To learn more about the `diff` command, simply review the manual by typing:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于 `diff` 命令的信息，只需输入以下命令查看手册：
- en: '[PRE53]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: Using truncation
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用截断
- en: So, having been shown how easy it is to work with log files, we should always
    be mindful that records like this do grow in size, and for this precise reason,
    they can become difficult to work with as time passes. In fact, you should be
    aware, oversized log files can impact the system's performance. With this in mind,
    it is a good idea to monitor any log rotation process and adjust it (on a regular
    basis) according to need.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，既然我们已经展示了处理日志文件的简便性，我们应该始终记住，像这样的记录会随着时间的推移而增长，正因如此，它们可能会变得难以处理。事实上，你应该意识到，过大的日志文件可能会影响系统性能。考虑到这一点，监控任何日志轮换过程并根据需要定期调整是一个好主意。
- en: 'Moreover, where log rotation can be critical for a medium- to high-load environment,
    I would suggest that you manage this solution effectively. However, in situations
    where the effect of this process proves negligible, the following fail-safe technique
    will enable you to scrub a log file clean by typing either one of the following
    commands:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，考虑到日志轮换在中高负载环境中的重要性，我建议你有效地管理这个过程。然而，在这种过程中影响较小的情况下，下面的防护技术将允许你通过键入以下任一命令来清理日志文件：
- en: '[PRE54]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Or more appropriately, you can simply use the `truncate` command like this:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 或者更准确地说，你可以像这样使用`truncate`命令：
- en: '[PRE55]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: This process is known as truncation, and as mentioned, this should remain something
    of a last resort, as the preceding command will remove all the data contained
    within the file in question. So remember, if the file contains important information
    that you may need to review at some time in the future, back it up before you
    use `truncate`.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程被称为截断，如前所述，这应该是最后的手段，因为之前的命令会删除文件中包含的所有数据。所以记住，如果文件包含你未来可能需要查看的重要信息，请在使用`truncate`之前先进行备份。
- en: Summary
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter was intended to provide an introduction to the subject of troubleshooting
    CentOS 7 without the intention of burdening you with yet another list of rules,
    instructions, or procedures that would ill-suit your circumstances or immediate
    needs. As we know, troubleshooting is a journey, and where the first chapter has
    served to introduce you to a selection of concepts and methods, every page that
    follows will ensure that you are one step closer to being at ease with the server
    you are about to diagnose and repair. So yes, the journey has just begun, and
    we will now approach the subject of troubleshooting active processes.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 本章旨在介绍故障排除 CentOS 7 的主题，目的是让你了解这一主题，而不是让你背负一堆不适合你当前情况或需求的规则、指令或流程。我们知道，故障排除是一个过程，第一章已经帮助你了解了一些概念和方法，接下来的每一页都会确保你更接近于轻松应对你即将诊断和修复的服务器。所以，是的，旅程刚刚开始，我们现在将讨论如何排查正在运行的进程。
- en: References
  id: totrans-208
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考资料
- en: 'The Red Hat customer portal: [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/)'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Red Hat 客户门户: [https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/)'
- en: 'Syslog Severity Levels: [http://en.wikipedia.org/wiki/Syslog#Severity_levels](http://en.wikipedia.org/wiki/Syslog#Severity_levels)'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Syslog 严重性级别: [http://en.wikipedia.org/wiki/Syslog#Severity_levels](http://en.wikipedia.org/wiki/Syslog#Severity_levels)'
- en: 'The Dmesg Wikipedia page: [http://en.wikipedia.org/wiki/Dmesg](http://en.wikipedia.org/wiki/Dmesg)'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Dmesg 维基页面: [http://en.wikipedia.org/wiki/Dmesg](http://en.wikipedia.org/wiki/Dmesg)'
- en: 'The Cat Wikipedia page: [http://en.wikipedia.org/wiki/Cat_(Unix)](http://en.wikipedia.org/wiki/Cat_(Unix))'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Cat 维基页面: [http://en.wikipedia.org/wiki/Cat_(Unix)](http://en.wikipedia.org/wiki/Cat_(Unix))'
- en: 'The Grep Wikipedia page: [http://en.wikipedia.org/wiki/Grep](http://en.wikipedia.org/wiki/Grep)'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Grep 维基页面: [http://en.wikipedia.org/wiki/Grep](http://en.wikipedia.org/wiki/Grep)'
- en: 'The Diff Wikipedia page: [http://en.wikipedia.org/wiki/Diff_utility](http://en.wikipedia.org/wiki/Diff_utility)'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Diff 维基页面: [http://en.wikipedia.org/wiki/Diff_utility](http://en.wikipedia.org/wiki/Diff_utility)'
- en: 'The Tail Wikipedia page: [http://en.wikipedia.org/wiki/Tail](http://en.wikipedia.org/wiki/Tail)'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Tail 维基页面: [http://en.wikipedia.org/wiki/Tail](http://en.wikipedia.org/wiki/Tail)'
- en: 'The Less Wikipedia page: [http://en.wikipedia.org/wiki/Less_(Unix)](http://en.wikipedia.org/wiki/Less_(Unix))'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Less 维基页面: [http://en.wikipedia.org/wiki/Less_(Unix)](http://en.wikipedia.org/wiki/Less_(Unix))'
