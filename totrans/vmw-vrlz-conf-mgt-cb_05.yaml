- en: Chapter 5. Software Provisioning for Windows
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: Installing a software repository on Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deploying additional components on agents
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating software packages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Publishing software packages to a repository
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding a repository to VCM
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding repository sources to package managers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deploying a package
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: VCM's software provisioning provides tools, resources, and mechanisms for creating
    and managing packages for the software you plan to distribute and finally installing
    the software on managed machines. VCM's software distribution works only with
    Windows and not other OSes.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will be looking at a software provisioning overview and
    the steps required for installing software on managed machines via VCM.
  prefs: []
  type: TYPE_NORMAL
- en: Software provisioning is the process by which we can create software packages,
    publish those packages to repositories, and then install them on target machines.
  prefs: []
  type: TYPE_NORMAL
- en: 'To support the provisioning process, the VCM software provisioning components
    consist of the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Software package repositories
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Package manager
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VMware vCenter Configuration Manager Package Studio
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Windows software repository
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Windows software repository is the shared location to which packages are
    published by **Package Studio** and the location from which package manager downloads
    packages for installation.
  prefs: []
  type: TYPE_NORMAL
- en: Package manager for Windows
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Package manager is the application installed on each machine to manage the installation
    and removal of the software contained in packages. Package manager is configured
    to use one or more repositories as a source for packages.
  prefs: []
  type: TYPE_NORMAL
- en: 'This figure shows the relationship between the VCM Collector server, software
    repositories, and package manager instances:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Package manager for Windows](img/image_05_001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The definitions and figure are taken from the vCenter Configuration Manager
    administration guide ([http://www.vmware.com/pdf/vcenter-configuration-manager-57-administration-guide.pdf](http://www.vmware.com/pdf/vcenter-configuration-manager-57-administration-guide.pdf)).
  prefs: []
  type: TYPE_NORMAL
- en: VMware vCenter Configuration Manager Package Studio
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Package Studio is the application used to build software packages for installation
    on target Windows servers and workstations.
  prefs: []
  type: TYPE_NORMAL
- en: A software package provides the files and metadata necessary to install and
    remove programs. One of the most useful features of a package is the metadata
    regarding dependencies, conflicts, and other relationships, which are not represented
    by software installation files. This metadata is used to determine whether the
    necessary dependencies are in place so that an installation is successful, and
    if not, what is necessary to make it successful.
  prefs: []
  type: TYPE_NORMAL
- en: After a package has been created and is ready for distribution, it is published
    to a software repository. We then use package manager to download the package
    from the repository to the local machine and install it on Windows systems.
  prefs: []
  type: TYPE_NORMAL
- en: Installing a software repository on Windows
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The software repository is installed on at least one Windows machine in the
    infrastructure, and Package Studio needs to be on the same machine, with the repository
    being installed before installing Package Studio.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As the repositories are installed on the Collector server by default, if we
    need another repository, then we need to install another Windows server with IIS.
    IIS requirements are the same as that of the Collector server, mentioned in [Chapter
    1](ch01.html "Chapter 1. Installing VCM"), *Installing VCM*, in the *Preparing
    our VCM deployment - installing and configuring IIS* recipe.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To deploy a software repository on any other server, follow this process:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we locate `Repository.msi` at the following location:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: When we double-click on the `Repository.msi` file, it will launch the wizard,
    and after accepting the EULA and selecting the installation location, it will
    ask you to provide a virtual directory:![How to do it...](img/image_05_002.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We can either go with the default name or change it.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Follow the wizard to finish the installation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A repository is used by Package Studio to store created packages that will be
    used to provision the managed machines. We can create multiple repositories and
    keep them close to the managed machines to avoid bandwidth consumption over WAN;
    also, local provisioning will be much faster.
  prefs: []
  type: TYPE_NORMAL
- en: As repositories will be used to store the installer, you need to provision enough
    disk space, depending on how many and which applications you are planning to distribute.
    This acts like a file server, from where all the VCM-managed machines will copy
    the packages and then install them. A server with two vCPUs and 8 GB of RAM should
    be enough to cater to the needs of a dedicated software repository.
  prefs: []
  type: TYPE_NORMAL
- en: Deploying additional components on agents
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Package manager, which is installed on the target machines, manages the installation
    of software packages. It does not contain the software packages, only pointers
    to the packages in the repository sources of which it is aware. When directed
    to install, the package is copied from the repository to the `cratecache` folder
    on the target machines. Package manager unzips the files to the `%TMP%` directory
    and runs the configured installation.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This is applicable for VCM 5.7.3 or earlier; ignore this if you are already
    at 5.8.0 or later.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For this recipe, we need a working VCM server and managed machines where VCM
    agents are installed.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We will follow the process to check whether agent extensions for provisioning
    are installed or not. If they aren't, we will install them.
  prefs: []
  type: TYPE_NORMAL
- en: 'This only applies to VCM 5.7.3 or earlier. The steps are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Once logged in to VCM with admin privileges, go to **Administration** | **Machines
    Manager** | **Licensed Machines** | **Licensed Windows Machines**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the data grid, locate the machines on which you are verifying the existence
    of the necessary agent extensions, and verify that the **Agent Ext. For Prov.
    Version **column contains a value of 5.3 or later.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You need to scroll right to see the **Agent Ext. for Prov. Version** column:![How
    to do it...](img/image_05_003.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If it does not, you need to either install or upgrade the VCM agent from the
    VCM console. Follow the *Upgrading VCM agents* recipe from [Chapter 7](ch07.html
    "Chapter 7. Maintenance of VCM"), *Maintenance of VCM.*
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Agent extensions for provisioning are required to be installed on the managed
    machine where we need to provision the software. By following this process, we
    make sure they are there, and if they're missing, we take the necessary action
    to install them.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Note that package manager is installed on target machines while the VCM agent
    version 5.3 or later *is installed from the Collector.*
  prefs: []
  type: TYPE_NORMAL
- en: Creating software packages
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Package Studio is the application used to build software packages for installation
    on target Windows machines managed by VCM.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Note that the software we want to create a package for must be able to install
    and uninstall without user interaction. This is referred to as **quiet or silent
    installation**. Typically, command-line options are used.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before we start with this, we need a completely installed VCM server and the
    package manager tool installed in order to create the package.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this recipe, we will create a package for `WinRAR.exe`, downloaded from [http://www.rarlab.com](http://www.rarlab.com/).
  prefs: []
  type: TYPE_NORMAL
- en: To do so, follow these steps.
  prefs: []
  type: TYPE_NORMAL
- en: Start VMware vCenter Configuration Manager Package Studio. Go to **Start** | **VMware
    vCenter Configuration Manager** | **Package Studio** .
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Note that for running Package Studio on a Windows 2008 server, we must run the
    application as an administrator.
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on **Manage Packages**, and configure the package contents based on the
    options in the following tabs:'
  prefs: []
  type: TYPE_NORMAL
- en: Click on **Properties** and type a **Name**, **Version**, and **Description**,
    and select the **Architecture**. These fields are required. You have the option
    of updating the other fields, depending on you requirements:![How to do it...](img/image_05_004.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on **Files**, import the installation files, and configure the command,
    as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Select Folder** and go to the location where the installer is kept.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Import** Files.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Set Command**, and then, in the **Command** textbox, a command will
    be created. In our case, it will be `winrar-x64-530.exe`.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Provide any additional arguments; in this case, `/s` is used for a silent installation
    of winrar.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You can get the required options from the vendor of the software you are trying
    to install, or you can visit sites such as [www.itninja.com](http://www.itninja.com/)
    .
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Refer to the blog at [http://www.itninja.com/question/what-switches-to-use-with-exe-files-in-silent-mode](http://www.itninja.com/question/what-switches-to-use-with-exe-files-in-silent-mode)
    .
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'We have two options: **Installation** or **Removal**. In this case, we will
    choose **Installation**:![How to do it...](img/image_05_005.jpg)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Save **to save the project file so that, if required, we can come
    back and edit it:![How to do it...](img/image_05_006.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Generate**; this will generate a `.crate` file, which will be used
    to provision winrar on managed machines:![How to do it...](img/image_05_007.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This is how we can create a software package that can be used for provisioning.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: By following this recipe, we can create a software package in a VCM-recognized
    format (`.crate`), which will be published on multiple repositories and then downloaded
    and processed by the VCM agents on the managed machines in order to install the
    actual software.
  prefs: []
  type: TYPE_NORMAL
- en: Publishing software packages to a repository
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous recipe, we created a package in the `.crate` format. The first
    thing to do after this is distribute the package to the repositories and from
    there to the managed machines' temporary folders to get it installed.
  prefs: []
  type: TYPE_NORMAL
- en: Now, we will publish the package we created in the previous recipe to the repositories
    for further processing.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We need a package created in Package Studio, such as the one we created in the
    previous recipe, and a repository installed by following the *Installing a software
    repository on Windows* recipe in order to complete this recipe.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We can continue where we left off in the previous recipe or relaunch Package
    Studio and open the previously created project file.
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these steps to publish the package to your repository:'
  prefs: []
  type: TYPE_NORMAL
- en: Click on the **Manage Repositories** button on the left-hand side. Once on the
    **Repository** page, click on **Add Platform**. Basically, this is how we can
    determine which package goes in which folder. These platforms and sections are
    assigned to managed machines (or package manager in the following recipes).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We can create multiple platforms, such as Windows Server 2008 or Windows Server
    2012:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![How to do it...](img/image_05_008.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Each platform has multiple sections; we can add any number of sections and name
    them as we want. It is recommended you name them x86 and x64 to categorize your
    software accordingly:![How to do it...](img/image_05_009.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the sections have been added, select the appropriate section - either `x86`
    or `x64` - and hit **Publish Package**. Browse to the location of the `.crate`
    file and select it:![How to do it...](img/image_05_010.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose the section(s):![How to do it...](img/image_05_011.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We are now good to go:![How to do it...](img/image_05_012.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You can check whether the package has been published or not by doing either
    or both of the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to `X:\Program Files(x86)\VMware\VCM\Tools\Repository\Crates\`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will find a folder with a single-letter name. The letter will be the first
    letter of our `.crate` file.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'There, you will find a `.crate` file ready for deployment:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![How to do it...](img/image_05_013.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: From Internet Explorer, go to `http://<Repository Server name/ IP>/SoftwareRepository/Crates/X`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Again, *X* is a letter, which is the first letter of the `.crate` filename.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![How to do it...](img/image_05_014.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this recipe, VCM copies the `.crate` files to the proper locations on the
    repository server so that they can be accessed by package manager when it tries
    to deploy the published package.
  prefs: []
  type: TYPE_NORMAL
- en: '**About platforms**: The platform value can be used to define the operating
    system architecture on which the package can be installed. We can create and use
    platforms to help manage our software package distribution based on the operating
    system platforms on which they can be installed. When we use a greater level of
    specificity, it results in smaller groups of packages and increases the predictability
    of which packages are installed.'
  prefs: []
  type: TYPE_NORMAL
- en: '**About sections**: Sections are used to further refine how your packages are
    organized on each platform. They are used to specify the repository sources for
    package manager, allowing us to control which packages are available to which
    machines. How you use sections can be adapted to your particular business needs.
    The following are examples of how you can use sections:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Line-of-business groups**: Marketing, sales, HRD, and engineering'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Development state**: Development, acceptance, and production'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**IT software management structure**: Software publishers, departments, and
    business groups'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding a repository to VCM
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once a package has been created and published on the repository, we need to
    assign the repository to managed machines so that they can download and install
    the package.
  prefs: []
  type: TYPE_NORMAL
- en: To view information about packages and package manager in VCM, we must collect
    package manager data from managed machines.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We need the agents ready with package manager installed, that is, we need to
    follow the *Deploying additional components on agents* recipe, and the repository
    should be published with the software we plan to provision by following the previous
    recipe.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This is a two-step process. In the first step, we will collect data from all
    the managed machines that need the software to be provisioned and check their
    status, and in the second step, we will collect data from the repository servers
    to check which packages are available for provisioning.
  prefs: []
  type: TYPE_NORMAL
- en: Collecting software provisioning package manager data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We need to run this against all the machines on which we need to provision
    the software and on which package manager has been installed. Follow these steps
    to collect data:'
  prefs: []
  type: TYPE_NORMAL
- en: Once logged in to VCM as an administrator, click on **Collect** in the top-left
    corner of the VCM console:![Collecting software provisioning package manager data](img/image_05_015.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This will launch the wizard; select **Machine Data**, and in the next step,
    select all the machines from which you need to collect the details.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Under **Data Types**, make sure **Software Provisioning - Package Managers**
    has been selected:![Collecting software provisioning package manager data](img/image_05_016.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Make sure there are no conflicts, and let the job finish.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You can go to **Administration** | **Job****Manager** | **History** | **Instant****Collection** | **Past
    24 Hours** and check for the job status. It should be successful. You can look
    at more details by clicking on **View Details**:![Collecting software provisioning
    package manager data](img/image_05_017.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the data has been collected, the details can be viewed by going to **Console
    | ****Operating ****System | ****Windows | ****Software ****Provisioning | ****Package ****Manager**:![Collecting
    software provisioning package manager data](img/image_05_018.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Collecting software repository data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Collect the repository data to identify which software packages are in which
    repositories. From the collected information, you can determine which repositories
    to assign to machines based on the available packages.
  prefs: []
  type: TYPE_NORMAL
- en: We need to run this against the machines that have software repositories created.
  prefs: []
  type: TYPE_NORMAL
- en: 'The process is similar to the previous step, but with two differences:'
  prefs: []
  type: TYPE_NORMAL
- en: We run this against all the repository servers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The **Data Types** value is changed to **Software Provisioning - Repositories**
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Collecting software repository data](img/image_05_019.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'You can go to **Administration | ** **Job Manager | ** **History | ** **Instant **
    **Collection | ** **Past ** **24 ** **Hours ** and check the status of the job.
    It should be successful:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Collecting software repository data](img/image_05_020.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This is how it looks under **Console | Operating System | Windows |Software
    Provisioning | Package Manager | Repositories.**
  prefs: []
  type: TYPE_NORMAL
- en: '![Collecting software repository data](img/image_05_021.jpg)'
  prefs: []
  type: TYPE_IMG
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this two-step process, we are collecting data both from the managed machines
    and software repositories. In the first step, we collect details from all the
    managed machines to obtain the data about packages and package manager in VCM.
  prefs: []
  type: TYPE_NORMAL
- en: In the second step, we collect the repository data to identify which software
    packages are in which repositories. This information comes in handy when we need
    to assign repositories to machines based on the availability of packages.
  prefs: []
  type: TYPE_NORMAL
- en: Adding repository sources to package manager
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Repository sources are the locations from where package manager will be able
    to download and install packages. We need to manually define those locations in
    the package manager (managed machines), and we can define more than one. Then,
    VCM package manager will follow its process to download the packages.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We need the repository published to VCM, by following the *Adding a repository
    to VCM* recipe, and package manager data collected, in order to assign repositories
    to it.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Adding a source gives the package manager instance on the selected machines
    access to the packages available in a specified section. The sources are numbered
    by priority. When you add a new one, you can specify whether to add it to the
    beginning or to the end of the list. You can also remove sources.
  prefs: []
  type: TYPE_NORMAL
- en: 'By following these steps, we can add sources to package manager:'
  prefs: []
  type: TYPE_NORMAL
- en: Log on to VCM Server with administrative privileges and go to **Console** |
     **Windows** | **Operating ****System** | **Software ****Provisioning** | **Package ****Managers**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Add Source**:![How to do it...](img/image_05_022.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This will launch a wizard.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: On the **Select Machines** page, verify that the machines displayed in the lower
    pane are the machines to which you want to add the source, and click on Next.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the **Browse Source** page, select **VCM Managed Repositories**, select the
    repository, and click on **OK**:![How to do it...](img/image_05_023.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If there are multiple repositories, either select **Add source at the beginning
    of existing source lists** or **Add source at the end of the existing source lists**,
    depending on the proximity between package manager and the repository.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Verify that the platform name and the section name are exactly the same as those
    used in the repository when publishing the package:![How to do it...](img/image_05_024.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the **Schedule** page, select one of the scheduling options and configure
    it as needed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the **Confirmation** page, review the information and click on **Finish**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The added source is displayed in the **Package Managers – Sources** data grid.![How
    to do it...](img/image_05_025.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Instead of depending on the location from where package manager downloads published
    packages, we simply assign the repositories and decide the order of the locations
    from which they can be fetched.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once a repository has been added to package manager, the only thing left is
    to install the package.
  prefs: []
  type: TYPE_NORMAL
- en: Deploying a package
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Finally, we are ready to deploy the package–in other words, we are ready to
    provision the software.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We need to complete all the previous recipes in this chapter in order to work
    on this recipe.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To provision the software on managed machines, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log on to VCM Server with administrative privileges and go to **Console** | **Windows **| **Operating
    System** | **Software Provisioning** | **Package Managers** | **Packages**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the package you want to install and click on **Install Package**:![How
    to do it...](img/image_05_026.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Follow the wizard and add more machines on which you want to install the selected
    package (winrar in our case) if required, or click on **Next**:![How to do it...](img/image_05_027.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As we have not signed the package, accept the warning and allow the unsigned
    package:![How to do it...](img/image_05_028.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Schedule the action or select **Run Action Now**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Accept the confirmation, and you are good to go:![How to do it...](img/image_05_029.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This will start the package installation process immediately if you selected
    **Run Action Now** or at a later time if you set a schedule.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have followed everything, then you will have understood the relationship
    between various VCM components for software provisioning, created and published
    a software repository, created and published a software package, and added the
    repository source to package manager.
  prefs: []
  type: TYPE_NORMAL
- en: Let's look at the final step of installing a package.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `.crate` file is copied to `C:\Program Files (x86)\VMware\VCM\Tools\Cratecache`
    on the managed machine:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works...](img/image_05_030.jpg)'
  prefs: []
  type: TYPE_IMG
- en: From here, package manager unzips the `.crate` file and uses the installation
    command and the arguments provided while creating the package to install the application.
  prefs: []
  type: TYPE_NORMAL
- en: 'The application can be seen installed in **Programs and Features**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![How it works...](img/image_05_031.jpg)'
  prefs: []
  type: TYPE_IMG
- en: This concludes our exploration of software provisioning using VCM.
  prefs: []
  type: TYPE_NORMAL
