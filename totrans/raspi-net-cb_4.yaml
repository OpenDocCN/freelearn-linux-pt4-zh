- en: Chapter 4. File Sharing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover:'
  prefs: []
  type: TYPE_NORMAL
- en: Mounting USB disks (`pmount`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Accessing another computer's files (`smbclient`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sharing folders from other computers (`mount.cifs`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Auto-mounting USB disks at boot (`/etc/fstab`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Auto-mounting a shared folder at boot
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a file server (Samba)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sharing an attached USB disk (Samba)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Raspberry Pi recipes in this chapter are for sharing files with other computers
    on the same local network.
  prefs: []
  type: TYPE_NORMAL
- en: The chapter begins with a recipe for mounting USB disks that are attached to
    the Raspberry Pi. The next recipes show how files are exchanged with other computers
    using the SMB (CIFS) protocol. Then, there are two recipes showing how disks can
    be automatically mounted during boot. The chapter ends with a couple of recipes
    for setting up the Raspberry Pi as a file server.
  prefs: []
  type: TYPE_NORMAL
- en: After completing the recipes in this chapter, you will be able to automatically
    mount local USB disks and exchange files between the Raspberry Pi and other computers
    using the SMB (CIFS) protocol.
  prefs: []
  type: TYPE_NORMAL
- en: Mounting USB disks (pmount)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This recipe installs and applies `pmount`, a command that mounts USB disks attached
    directly to the Raspberry Pi in the same manner as the desktop file manager.
  prefs: []
  type: TYPE_NORMAL
- en: If a disk is connected to the Raspberry Pi via a USB port when using the Raspberry
    Pi's **graphical user interface** (**GUI**), the desktop file manager will ask
    the user's permission to mount the disk. However, when using a Raspberry Pi remotely
    (or when the Raspberry Pi has been booted in text mode), there is no GUI to ask
    if a file should be mounted.
  prefs: []
  type: TYPE_NORMAL
- en: This recipe does not rely on the Raspberry Pi GUI or the desktop file manager
    to mount a disk. Instead, the command-line utility `pmount` is used to mount a
    USB drive in the same way that the GUI would—in the `/media` directory.
  prefs: []
  type: TYPE_NORMAL
- en: Once you've completed this recipe, you will be able to use both large USB storage
    devices and small USB flash drives to exchange files with other computers without
    relying on the Raspberry Pi graphical user interface or the desktop file manager.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here are the ingredients used in this recipe:'
  prefs: []
  type: TYPE_NORMAL
- en: An initial setup or basic networking setup for the Raspberry Pi that has been
    powered on. You have also logged in as the user `pi` (see the recipes in [Chapter
    1](ch01.html "Chapter 1. Installation and Setup"), *Installation and Setup*, for
    how to boot and log in and the recipes in [Chapter 2](ch02.html "Chapter 2. Administration"),
    *Administration*, for how to log in remotely).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A powered USB hub (recommended).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: At least one USB disk drive.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This recipe does not require the desktop GUI and could either be run from the
    text-based console or from within an LXTerminal.
  prefs: []
  type: TYPE_NORMAL
- en: If the Raspberry Pi's Secure Shell server is running, this recipe can be completed
    remotely using a Secure Shell client (see the *Remote Access (SSH)* recipe in
    [Chapter 2](ch02.html "Chapter 2. Administration"), *Administration*).
  prefs: []
  type: TYPE_NORMAL
- en: 'The examples in this recipe use two USB drives: a 32 GB flash drive and a 500
    GB disk.'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Beware! The Raspberry Pi has power limits.
  prefs: []
  type: TYPE_NORMAL
- en: The Raspberry Pi does not have enough internal power to reliably power a large
    USB disk that has been directly connected to the Raspberry Pi's USB ports.
  prefs: []
  type: TYPE_NORMAL
- en: To ensure that the Raspberry Pi continues to function optimally, you should
    attach any device that requires power (including USB disks) indirectly to the
    Raspberry Pi via a powered USB hub.
  prefs: []
  type: TYPE_NORMAL
- en: A powered USB hub provides enough power to run several large USB drives without
    draining extra power from the Raspberry Pi.
  prefs: []
  type: TYPE_NORMAL
- en: If you see a large colorful square glowing in the top-right corner of the GUI,
    it is a warning that your Raspberry Pi does not have enough power.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The steps to mount USB disks are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to the Raspberry Pi either directly or remotely.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use `apt-get` to install the `pmount` command.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The `apt-get install` command downloads and installs `pmount`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Connect one or more USB disks to the Raspberry Pi. The example includes two
    disks: a 32 GB flash drive and a 500 GB disk.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use the `fdisk –l` command to list the disks that are currently attached to
    the Raspberry Pi.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The `fdisk` command displays information about the disks that are attached to
    the Raspberry Pi.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The command output in the preceding example shows three disks:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`/dev/mmcblk0`: The 31.9 GB SD card (the boot disk) has two partitions: `/dev/mmcblk0p1`
    and `/dev/mmcblk0p2`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/dev/sda`: The 128 MB flash drive has one partition'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/dev/sdb`: The 500.1 GB disk also has one partition'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Use the freshly installed `pmount` command to mount the primary partition of
    the flash drive (`/dev/sda1`) and the primary partition of the USB disk (`/dev/sdb1`).
    The `sudo` command is not required.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The preceding command output shows the contents of the `/media` directory before
    and after the `pmount` command is used to mount the two disks. After the `pmount`
    command is executed, each disk appears in the `/media` directory.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The `df –h` command can also be used to display a list of the currently mounted
    disks with their mount points. In the following command output, the two disks,
    `/dev/sda1` and `/dev/sdb1`, are shown mounted on `/media/sda1` and `/media/sdb1`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'After logging in to the Raspberry Pi, the `pmount` command is installed, the
    two disk drives are attached, and the command `fdisk –l` is used to display the
    partition tables of the disks attached to the Raspberry Pi. In the example, three
    disks are displayed:'
  prefs: []
  type: TYPE_NORMAL
- en: '`/dev/mmcblk0` is the boot disk'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/dev/sda` is the 128 MB flash drive'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/dev/sdb` is the 500 GB disk'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The flash drive has one partition (`/dev/sda1`) and so does the disk (`/dev/sdb1`).
    Within disk partitions, is where files are stored.
  prefs: []
  type: TYPE_NORMAL
- en: The `pmount` command is used to mount disk partitions. The disk partitions are
    mounted in the `/media` directory. The `ls –l` command is used before and after
    the disks are mounted to show where the disk partitions appear once they have
    been mounted.
  prefs: []
  type: TYPE_NORMAL
- en: The mount points in the `/media` directory are given names that correspond to
    the disk partitions that have been mounted there. The disk partition of the flash
    drive, `/dev/sda1`, is mounted on `/media/sda1` and the disk partition of the
    500 GB disk, `/dev/sdb1`, is mounted on `/media/sdb1`.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, the `df –h` command is used to demonstrate another way of seeing where
    the disk partitions have been mounted. The `df` command also shows the amount
    of free disk space that is available on each of the mounted disks. The `–h` option
    tells `df` to display the size of each disk in bytes, instead of in disk blocks.
    The 500 GB disk is 40% full; it has 264 GB available. The flash drive is 58% full
    with only 53 MB available.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let's learn something more about the disks.
  prefs: []
  type: TYPE_NORMAL
- en: Device files
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As each disk or disk partition is mounted, a device file is created for it and
    stored in the `/dev` directory. The names of each of these device files are assigned
    sequentially as the disks are mounted.
  prefs: []
  type: TYPE_NORMAL
- en: The assigned names of USB drives all begin with the characters `sd`. The first
    USB disk drive is assigned the device file `/dev/sda`, the second `/dev/sdb`,
    and so on.
  prefs: []
  type: TYPE_NORMAL
- en: The assigned names of the SD card drives begin with `mmcblk`, and a digit is
    added for each unique device starting with `0` (zero). The only SD card drive
    in the Raspberry Pi (the boot disk) has its device file located at `/dev/mmcblk0`.
  prefs: []
  type: TYPE_NORMAL
- en: For each disk partition discovered in a disk's partition table, a device file
    is also created. Each of these disk partition device files has the same name as
    the disk's device file with a digit attached corresponding to its location in
    the partition table.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the example, the 32 GB SD card is assigned the device file `/dev/mmcblk0`.
    It has two partitions: `/dev/mmcblk0p1` and `/dev/mmcblk0p2`. If the SD card had
    yet another partition, the third partition''s device file would be `/dev/mmcblk0p3`.'
  prefs: []
  type: TYPE_NORMAL
- en: When a disk has a partition table, each partition needs to be mounted separately.
    Use the `pmount` command with the partition's device file, not the disk device
    file. The 500 GB disk in the example has one partition that is mounted with the
    command `pmount /dev/sdb1`.
  prefs: []
  type: TYPE_NORMAL
- en: When a disk has no partition table, use the `pmount` command with the device
    file assigned to the disk drive.
  prefs: []
  type: TYPE_NORMAL
- en: Mount points
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When disk partitions are mounted, by default a mount point is created for each
    partition in the `/media` directory. The name of the default mount point is the
    same as the name of the device file used to mount the disk partition.
  prefs: []
  type: TYPE_NORMAL
- en: The only partition of the 128 MB flash drive was assigned the device file `/dev/sda1`,
    so by default its mount point is `/media/sda1`. The 500 GB disk also has one partition,
    `/dev/sdb1`, mounted at `/media/sdb1`.
  prefs: []
  type: TYPE_NORMAL
- en: 'To create a mount point under the `/media` directory with a name other than
    the default name, you need to pass the desired mount point as a second parameter
    of the `pmount` command, as in the following example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Unmounting disks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Use the `pumount` command to unmount the disks (there is no `n` in the command
    name). After the disks are unmounted, their mount points are deleted from the
    `/media` directory.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: As shown in the preceding example, the `pumount` command accepts either the
    disk device (`/dev/sda1`) or the mount point (`/media/mydisk`).
  prefs: []
  type: TYPE_NORMAL
- en: The plugdev group
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Use of the `pmount` command does not require super user privileges. However,
    it does require some privileges. The privilege to execute the `pmount` command
    is reserved for members of the system group `plugdev`. Users who are not in the
    group `plugdev` cannot execute the `pmount` command.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: On Raspbian, the default user, `pi`, is already a member of the `plugdev` group.
  prefs: []
  type: TYPE_NORMAL
- en: Other mount commands
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The system command `mount` requires super user privileges. During the boot process,
    the mount command is used to automatically mount disks like the SD card from which
    the Raspberry Pi boots. The next recipe shows how to configure the Raspberry Pi
    to automatically mount attached drives when it boots.
  prefs: []
  type: TYPE_NORMAL
- en: The file manager included with the Raspberry Pi desktop, PCManFM, will also
    mount disks in the `/media` directory. However, the PCManFM file manager uses
    the disk's label instead of the disk's device name as the name of the mount point.
  prefs: []
  type: TYPE_NORMAL
- en: Disk performance
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A Class 10 SD card has a transfer rate of 10 MB per second, yet an external
    hard disk can transfer data to the computer at 300 MB/sec. The hard disk is almost
    30x faster than an SD card!
  prefs: []
  type: TYPE_NORMAL
- en: Even though SD cards can be purchased in increasingly large sizes, they are
    not the best choice for high-speed performance. Even the Ultra High Speed SD cards
    at 30 MB/sec are 10x slower than a hard disk. Most of the recipes in this book
    will perform better if the data that they depend on is stored on an external hard
    disk.
  prefs: []
  type: TYPE_NORMAL
- en: The Raspberry Pi's power is limited
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: External disks and flash drives that have no power supply of their own draw
    power from the Raspberry Pi's USB connection. The power needed by devices without
    their own power supply is taken from the Raspberry Pi. The Raspberry Pi's power
    is limited; it cannot reliably support larger USB devices if the devices have
    no power supply of their own.
  prefs: []
  type: TYPE_NORMAL
- en: The amount of power needed by an external USB device could easily exceed the
    amount of power that is available from the Raspberry Pi. If too much power is
    drawn from the Raspberry Pi, other USB devices, including the network interface
    (which internally uses the USB bus), may cease to function properly or they may
    cease to function at all.
  prefs: []
  type: TYPE_NORMAL
- en: For best performance and reliability, it is recommended that all USB devices,
    including external disk drives and flash drives, be connected *indirectly* to
    the Raspberry Pi via a powered USB hub instead of being connected to the Raspberry
    Pi directly.
  prefs: []
  type: TYPE_NORMAL
- en: A powered USB hub is the power source for all of the USB devices that are connected
    to it. Only data is transferred to the Raspberry Pi. A powered USB hub does not
    draw power from the Raspberry Pi. Instead, it protects the Raspberry Pi from the
    power drain of other devices. By connecting USB devices *indirectly* via a powered
    USB hub, the Raspberry Pi can perform optimally and reliably.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Hard disk drive** ([http://en.wikipedia.org/wiki/Hard_disk_drive](http://en.wikipedia.org/wiki/Hard_disk_drive)):
    This Wikipedia article has more information about disk drives.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**USB flash drive** ([http://en.wikipedia.org/wiki/USB_flash_drive](http://en.wikipedia.org/wiki/USB_flash_drive)):
    This Wikipedia article provides detailed information about USB drives.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SD cards** ([http://en.wikipedia.org/wiki/Secure_Digital](http://en.wikipedia.org/wiki/Secure_Digital)):
    This Wikipedia article is about the **Secure Digital** (**SD**) card format.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**mount (Unix)** ([http://en.wikipedia.org/wiki/Mount_(Unix)](http://en.wikipedia.org/wiki/Mount_(Unix))):
    This Wikipedia article is about the `mount` command.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**df – report filesystem disk space usage** ([http://manpages.debian.net/cgi-bin/man.cgi?query=df](http://manpages.debian.net/cgi-bin/man.cgi?query=df)):
    The Debian man page for `df` has more information about the command and its options.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**fdisk – partition table manipulator for Linux** ([http://manpages.debian.net/cgi-bin/man.cgi?query=fdisk](http://manpages.debian.net/cgi-bin/man.cgi?query=fdisk)):
    The Debian man page for `fdisk` has more information about the command.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**pmount – mount arbitrary hotpluggable devices as normal user** ([http://manpages.debian.net/cgi-bin/man.cgi?query=pmount](http://manpages.debian.net/cgi-bin/man.cgi?query=pmount)):
    The Debian man page for `pmount` has more information about the command.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**pumount – unmount arbitrary hotpluggable devices** ([http://manpages.debian.net/cgi-bin/man.cgi?query=pumount](http://manpages.debian.net/cgi-bin/man.cgi?query=pumount)):
    The Debian man page for `pumount` has more information about the command.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**udev – Linux dynamic device management** ([http://manpages.debian.net/cgi-bin/man.cgi?query=udev](http://manpages.debian.net/cgi-bin/man.cgi?query=udev)):
    The Debian man page for `udev` explains in more detail how devices are mounted.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Accessing another computer's files (smbclient)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The goal of this recipe is to transfer files between the Raspberry Pi and other
    computers using the command `smbclient`.
  prefs: []
  type: TYPE_NORMAL
- en: This recipe shows how to list the available network shared folders, to copy
    individual files, and how to copy entire directories of files from a computer
    with shared folders to the Raspberry Pi using the `smbclient` command.
  prefs: []
  type: TYPE_NORMAL
- en: After completing this recipe, you will be able to list the available file shares
    on the local network and transfer files directly between another computer and
    the Raspberry Pi using the SMB (CIFS) protocol.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here are the ingredients for this recipe:'
  prefs: []
  type: TYPE_NORMAL
- en: An initial setup or basic networking setup for the Raspberry Pi that has been
    powered on. You have also logged in as the user `pi` (see the recipes in [Chapter
    1](ch01.html "Chapter 1. Installation and Setup"), *Installation and Setup*, for
    how to boot and log in and the recipes in [Chapter 2](ch02.html "Chapter 2. Administration"),
    *Administration*, for how to log in remotely).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A network connection.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A client PC connected to the same network as the Raspberry Pi.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This recipe does not require the desktop GUI and could either be run from the
    text-based console or from within an LXTerminal.
  prefs: []
  type: TYPE_NORMAL
- en: If the Raspberry Pi's Secure Shell server is running, this recipe can be completed
    remotely using a Secure Shell client (see the recipe *Remote access (SSH)* in
    [Chapter 2](ch02.html "Chapter 2. Administration"), *Administration*).
  prefs: []
  type: TYPE_NORMAL
- en: The examples in this recipe will connect the Raspberry Pi to a local network
    computer, golden-mackbook, and a home file server, `terragolden`. Configuration
    for other computers using the SMB (CIFS) protocol will be similar.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The steps to accessing another computer''s files are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to the Raspberry Pi either directly or remotely.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use the command `apt-get install` to download and install the `smbclient` software
    package.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Use the command `smbclient` to list the services (`-L`) on the home file server,
    `terragolden`. No password is required (`-N`) for guest access.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: A list of SMB (CIFS) services from the home file server, `terrgolden`, is displayed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Use the command `smbclient` to list the services (`-L`) on the home computer,
    golden-macbook. A valid username (`-U`) and password is required for access.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: A list of SMB (CIFS) services from the golden-macbook is displayed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Now, use the `mkdir` command to create a new directory (`xfer`) on the Raspberry
    Pi, use the `cd` command to switch to the new directory, and then use the `ls`
    command to show that there are no files in the newly created directory (`~/xfer`).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Use the `smbclient` command to begin a conversation with the home file server,
    `terragolden`, about files in the file share `livemusic`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The command prompt, `smb: \>`, is displayed showing that the `smbclient` command
    is ready to converse with `terragolden`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use the `ls` command to list the files and folders in the `livemusic` share
    of `terragolden`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Use the `get` command to download the `catalog.txt` file from `terragolden`
    to the Raspberry Pi.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Now, use the `mget` command to download an entire directory of files, `particle2010-04-15`,
    from `terragolden` to the Raspberry Pi. The `mget` command first requires that
    the `tarmode`, `recurse`, and `prompt` options are set.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Use the `quit` command to end the SMB (CIFS) conversation with the `terragolden`
    home file server and return to the Raspberry Pi command prompt.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Use the `ls –l` command to display the contents of the current directory on
    the Raspberry Pi.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: After logging in to the Raspberry Pi, the software distribution package `smbclient`
    is installed using the `apt-get install` command. For more information on how
    the `apt-get` command works, see [Chapter 3](ch03.html "Chapter 3. Maintenance"),
    *Maintenance*.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Your software distribution may already have `smbclient` installed.
  prefs: []
  type: TYPE_NORMAL
- en: The `smbclient` software distribution package contains the command-line application
    `smbclient`. This application is used to communicate with other computers using
    the SMB protocol.
  prefs: []
  type: TYPE_NORMAL
- en: After the software distribution package is installed, the `smbclient` command
    is used to list the available services on a home file server named `terragolden`.
    The `–N` option tells the command that no password is required for the remote
    computer, and the `–L` option tells the command to just list the available shares
    and printers.
  prefs: []
  type: TYPE_NORMAL
- en: For comparison, the `smbclient` command is also used to list the available services
    on another computer attached to the local network, golden-macbook. This time,
    a username (`-U golden`) and a password (no `–N` option) are required for access
    to the computer and the `smbclient` command also requires the `--signing=off`
    option to turn off a security feature that the computer does not support.
  prefs: []
  type: TYPE_NORMAL
- en: Before the `smbclient` command is used to start a conversation with `terragolden`,
    a transfer directory (`xfer`) is created using the `mkdir` command to receive
    the transferred files and its (empty) contents are displayed using the `ls –l`
    command. The `–l` option tells the `ls` command to use the long listing format
    that includes a total count of files (`0`).
  prefs: []
  type: TYPE_NORMAL
- en: 'The command `smbclient –N //terragolden/livemusic` is used to start a conversation
    between the Raspberry Pi and the remote computer, `terragolden`, using the file
    share named `livemusic`. The command prompt changes to `smb: \>` telling the user
    that the conversation has begun.'
  prefs: []
  type: TYPE_NORMAL
- en: The `ls` command of `smbclient` is used to list the files on the home file server.
    The command `dir` could be used instead and will return the same result as the
    `ls` command.
  prefs: []
  type: TYPE_NORMAL
- en: The command `get catalog.txt` is used to transfer the file `catalog.txt` from
    the file server to the Raspberry Pi. The `smbclient` command reports that the
    file transferred has a size of 5119 bytes and was transferred at a rate of 208.3
    KB per second.
  prefs: []
  type: TYPE_NORMAL
- en: After the `catalog.txt` file has been transferred, three options are set to
    prepare for a multi-file transfer. The `tarmode` option is reset to its default
    setting to ensure that all files are transferred. The `recurse` option is toggled
    so that the upcoming `mget` command will copy subdirectories as well as files.
    And the `prompt` option is toggled so that the upcoming `mget` command does not
    prompt for validation before transferring each file.
  prefs: []
  type: TYPE_NORMAL
- en: Once the transfer options have been set, the `mget` command is used to transfer
    the `particle2010-04-15` directory of files to the Raspberry Pi. As each file
    is transferred, the size of the file and its rate of transfer are displayed.
  prefs: []
  type: TYPE_NORMAL
- en: After all of the files have been transferred, the `quit` command is used to
    tell the `smbclient` application that the conversation with the remote computer,
    `terragolden`, is now over.
  prefs: []
  type: TYPE_NORMAL
- en: The command prompt returns to `pi@raspberrypi ~ $` showing that the conversation
    is complete.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The `smbclient` application has its own rich set of commands for communicating
    with remote computers via the SMB protocol.
  prefs: []
  type: TYPE_NORMAL
- en: help
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The `help` command can be used to list the commands available from the `smb:
    \>` prompt.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Each of the `smbclient` application's commands has its own help page displayed
    using the `help` command. Type `help` followed by a command name to display more
    information about the command.
  prefs: []
  type: TYPE_NORMAL
- en: Changing remote directories
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The `cd` command in `smbclient` can be used to change directories on the remote
    computer in the same way `cd` is used to change directories on the Raspberry Pi.
    Notice that the current remote directory path is reflected in the `smbclient`
    command prompt.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: Fetching a single file
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If the location of a file on the remote computer is already known, it can be
    fetched directly with a single `smbclient` command.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: / versus \
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Notice that the SMB (CIFS) protocol uses `\` instead of `/` as a path separator.
  prefs: []
  type: TYPE_NORMAL
- en: The path separator is one of the major differences between the Windows operating
    system and Linux-based operating systems like Raspbian Linux, which is used by
    the Raspberry Pi.
  prefs: []
  type: TYPE_NORMAL
- en: Either character can be used within the `smbclient` application, if used consistently.
    However, it is much easier to use `/` as it is the path separator on the Raspberry
    Pi.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**cd – change the working directory** ([http://manpages.debian.net/cgi-bin/man.cgi?query=cd](http://manpages.debian.net/cgi-bin/man.cgi?query=cd)):
    The Debian manual page for `cd` has more information about the command and its
    options.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**smbclient – client to access SMB/CIFS resources on servers** ([http://manpages.debian.net/cgi-bin/man.cgi?query=smbclient](http://manpages.debian.net/cgi-bin/man.cgi?query=smbclient)):
    The Debian manual page for `smbclient` has more information about the command.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sharing folders from other computers (mount.cifs)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This recipe shows how to mount folders that have been shared from another computer.
  prefs: []
  type: TYPE_NORMAL
- en: Recent Linux kernels, including the kernel used by the Raspbian Linux distribution
    for the Raspberry Pi, have built-in support for mounting shared folders using
    the SMB (CIFS) protocol. This is the file sharing protocol used commonly by Windows
    computers and home file sharing devices. It is also used on OS X when sharing
    files.
  prefs: []
  type: TYPE_NORMAL
- en: This is the simplest recipe for mounting a shared folder from the command line
    on the Raspberry Pi.
  prefs: []
  type: TYPE_NORMAL
- en: Once you've completed this recipe, you will be able to share files with other
    computers on the same network using the SMB (CIFS) protocol.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: SMB and CIFS are synonyms for the same file sharing protocol.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here are the ingredients for this recipe:'
  prefs: []
  type: TYPE_NORMAL
- en: An initial setup or basic networking setup for the Raspberry Pi that has been
    powered on. You have also logged in as the user `pi` (see the recipes in [Chapter
    1](ch01.html "Chapter 1. Installation and Setup"), *Installation and Setup*, for
    how to boot and log in and the recipes in [Chapter 2](ch02.html "Chapter 2. Administration"),
    *Administration*, for how to log in remotely).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A powered USB hub (recommended).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: At least one USB disk drive.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This recipe does not require the desktop GUI and could either be run from the
    text-based console or from within an LXTerminal.
  prefs: []
  type: TYPE_NORMAL
- en: If the Raspberry Pi's Secure Shell server is running, this recipe can be completed
    remotely using a Secure Shell client (see the recipe *Remote access (SSH)* in
    [Chapter 2](ch02.html "Chapter 2. Administration"), *Administration*).
  prefs: []
  type: TYPE_NORMAL
- en: The examples in this recipe will connect the Raspberry Pi to a home file server
    named `terragolden` sharing one folder, `livemusic`, which is configured for guest
    access.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The steps to sharing folders from other computers are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to the Raspberry Pi either directly or remotely.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a mount point for the shared folder using the `mkdir` command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Use the `mount` command with the `guest` and `uid=pi options (-o)` to mount
    the remote file share `//terragolden/livemusic` on the local directory, `/media/livemusic`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Use the `ls –l` command to list the files in the folder `/media/livemusic`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: After logging in to the Raspberry Pi, the `mkdir` command is used to create
    a mount point for the shared folder in the `/media` directory. A mount point is
    an empty directory (`/media/livemusic`) that serves as a placeholder in the filesystem.
  prefs: []
  type: TYPE_NORMAL
- en: Then, the file share, `//terragolden/livemusic`, from the home file server,
    `terragolden`, is mounted at the newly created mount point (`/media/livemusic`).
    The options to the `mount` command (`–o guest,uid=pi`) tell the command that the
    share is to be accessed without a username or password (`guest`) and that the
    mounted files will belong to the user `pi` (`uid=pi`).
  prefs: []
  type: TYPE_NORMAL
- en: Finally, the files in the mount point (`/media/livemusic`) are listed using
    the command `ls -l` to verify that they are indeed identical to the files on the
    home file server.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let's look at some other aspects related to the sharing of folders.
  prefs: []
  type: TYPE_NORMAL
- en: Protected shares require a username and a password
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If a file share is password protected, then the options on the mount command
    need to be expanded to include `username=USER` and `password=PASS` options. `USER`
    and `PASS` should be replaced with the respective username and password of a user
    who has access to the file share.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: Unmounting disks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Use the `umount` command to unmount the disks (there is no `n` in the command
    name).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: After the disks are unmounted, the mount points remain under the `/media` directory;
    however, they are once again empty. The command `umount` is privileged (use `sudo`).
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Filesystem** ([http://en.wikipedia.org/wiki/Filesystem](http://en.wikipedia.org/wiki/Filesystem)):
    The Wikipedia article on filesystems explains the differences in more detail.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Server Message Block** ([http://en.wikipedia.org/wiki/Server_Message_Block](http://en.wikipedia.org/wiki/Server_Message_Block)):
    The Wikipedia article on the **Server Message** **Block** (**SMB**) protocol discusses
    the protocol''s use and its history.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Uniform Naming Convention** ([http://en.wikipedia.org/wiki/Uniform_Naming_Convention](http://en.wikipedia.org/wiki/Uniform_Naming_Convention)):
    The Wikipedia article on the **Uniform Naming Convention** (**UNC**) protocol
    shows how it supports the SMB (CIFS) protocol.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**mount – mount a filesystem** ([http://manpages.debian.net/cgi-bin/man.cgi?query=mount](http://manpages.debian.net/cgi-bin/man.cgi?query=mount)):
    The Debian manual page for `mount` explains the command and its options.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**mount.cifs – mount using the CIFS filesystem** ([http://manpages.debian.net/cgi-bin/man.cgi?query=mount.cifs](http://manpages.debian.net/cgi-bin/man.cgi?query=mount.cifs)):
    The Debian manual page for `mount.cifs` explains the command in more detail.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**umount – unmounts filesystems** ([http://manpages.debian.net/cgi-bin/man.cgi?query=umount](http://manpages.debian.net/cgi-bin/man.cgi?query=umount)):
    The Debian manual page for `umount` shows the command and its options.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Auto-mounting USB disks at boot (/etc/fstab)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This recipe shows how to configure the Raspberry Pi so that it automatically
    mounts attached USB disk drives during the boot process.
  prefs: []
  type: TYPE_NORMAL
- en: The goal of this recipe is to mount the example disks at boot time with the
    same configuration that is used by the command `pmount`.
  prefs: []
  type: TYPE_NORMAL
- en: The first few steps of this recipe use the `pmount` and `mount` commands to
    discover the correct filesystem table configuration parameters for two example
    disk drives. Once the correct configuration parameters are discovered, the filesystem
    table configuration file (`/etc/fstab`) is updated so that the disks are mounted
    when the Raspberry Pi boots.
  prefs: []
  type: TYPE_NORMAL
- en: This recipe does not provide details on the meaning of each configuration parameter.
    Instead, the recipe reuses the same configuration that is used by the `pmount`
    command. More detail on the configuration parameters can be found in the man pages
    for the `mount` command.
  prefs: []
  type: TYPE_NORMAL
- en: After completing this recipe, the Raspberry Pi will mount USB disk drives at
    boot time with a configuration that is consistent with the `pmount` utility.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here are the ingredients for this recipe:'
  prefs: []
  type: TYPE_NORMAL
- en: An initial setup or basic networking setup for the Raspberry Pi that has been
    powered on. You have also logged in as the user `pi` (see the recipes in [Chapter
    1](ch01.html "Chapter 1. Installation and Setup"), *Installation and Setup*, for
    how to boot and log in and the recipes in [Chapter 2](ch02.html "Chapter 2. Administration"),
    *Administration*, for how to log in remotely).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A Powered USB hub (recommended).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: At least one USB disk drive.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This recipe does not require the desktop GUI and could either be run from the
    text-based console or from within an LXTerminal.
  prefs: []
  type: TYPE_NORMAL
- en: If the Raspberry Pi's Secure Shell server is running, this recipe can be completed
    remotely using a Secure Shell client (see the recipe *Remote access (SSH)* in
    [Chapter 2](ch02.html "Chapter 2. Administration"), *Administration*).
  prefs: []
  type: TYPE_NORMAL
- en: 'The examples in this recipe use two USB drives: a 128 MB flash drive and a
    500 GB disk.'
  prefs: []
  type: TYPE_NORMAL
- en: The `pmount` command should already be installed (see the recipe *Mounting USB
    disks*).
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Be careful! A broken `/etc/fstab` may prevent the system from booting. Make
    sure that you've tested the configuration before rebooting!
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The steps to auto-mount USB disks at boot are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to the Raspberry Pi either directly or remotely.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use the `pmount` command to mount the 128 MB flash drive's primary partition
    `/dev/sda1` in the `/media` directory at the mount point `thumbdrive`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Use the `pmount` command to mount the 500 GB disk's primary partition `/dev/sdb1`
    in the `/media` directory at the mount point `bigdisk`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Show that the disks are mounted with the `ls –l` command.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Display the configuration used to mount the two disks with the `mount` command.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The `mount` command displays the filesystem table, including the mount parameters
    needed for each disk (or disk partition).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: After the disk configuration parameters have been displayed, use the `pumount`
    command to unmount the two disks.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Make a copy of the current filesystem configuration with the `cp` command. Files
    can only be created in (or copied into) the `/etc` directory by a privileged user
    (so use `sudo`).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Use the `vi` command to edit the filesystem configuration table `fstab`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The vi editor displays the contents of the `/etc/fstab` configuration file.
    Instructions for using the editor can be found in the vi man pages. See the recipe
    *Reading the built-in documentation* in [Chapter 2](ch02.html "Chapter 2. Administration"),
    *Administration*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Add the configuration parameters for each disk to the bottom of the configuration
    file. The parameters for each disk can be copied from the output of the `mount`
    command.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: Each disk configuration should be a single line with fields separated by spaces
    or tabs. The example does not fit the page width.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: After entering the configuration parameters for each disk, save the file and
    exit the editor.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Before the disks can be mounted, they need to have mount points. Create mount
    points using the `mkdir` command.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Use the `mount –a` command to mount all of the configured disks.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Use the `reboot` command to reboot the system, then log back in and use the
    `ls –l` command to display the contents of the two mount points `/media/thumdrive`
    and `/media/bigdisk`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The disks are now mounted automatically at boot!
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: After logging in to the Raspberry Pi, two example disks are mounted using the
    personal mount command, `pmount` (see the recipe *Mounting USB disks* for more
    information on the `pmount` command).
  prefs: []
  type: TYPE_NORMAL
- en: The 128 MB flash drive (`/dev/sda1`) is mounted at `/media/thumbdrive`.
  prefs: []
  type: TYPE_NORMAL
- en: The 500 GB disk (`/dev/sdb1`) is mounted at `/media/bigdisk`.
  prefs: []
  type: TYPE_NORMAL
- en: The system `mount` command is used to display the filesystem table configuration
    parameters of all the disks attached to the Raspberry Pi including the `bigdisk`
    and the `thumbdrive`.
  prefs: []
  type: TYPE_NORMAL
- en: After the configuration parameters are displayed, the two USB disks (`/dev/sda1`
    and `/dev/sdb1`) are unmounted using the `pumount` command. The `/media` directory
    is once again empty.
  prefs: []
  type: TYPE_NORMAL
- en: Before any changes are made to the filesystem configuration, the `cp` command
    is used to create a backup copy of `/etc/fstab`.
  prefs: []
  type: TYPE_NORMAL
- en: The vi editor is then used to add the configuration parameters for each disk
    to the bottom of the filesystem table configuration file (`/etc/fstab`).
  prefs: []
  type: TYPE_NORMAL
- en: Before the disks can be mounted, they first need to have mount points within
    the filesystem. The `mkdir` command is used to create a mount point for each of
    the USB disks at `/media/thumbdrive and /media/bigdisk`.
  prefs: []
  type: TYPE_NORMAL
- en: Once the mount points have been created, the `mount all disks` command, `mount
    –a`, is used to mount the example disks.
  prefs: []
  type: TYPE_NORMAL
- en: After the disks are mounted, the contents of the disks are displayed by using
    the `ls –l` command.
  prefs: []
  type: TYPE_NORMAL
- en: Everything looks good, so the Raspberry Pi is rebooted using the `reboot` command.
  prefs: []
  type: TYPE_NORMAL
- en: When the Raspberry Pi is finished rebooting, the user logs back in to the Raspberry
    Pi using the `ssh` command.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, the `ls –l` command is used once again to list the contents of the
    two disks' mount points, `/media/thumbdrive` and `/media/bigdisk`.
  prefs: []
  type: TYPE_NORMAL
- en: The disks have been mounted successfully during boot!
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We will look at how we can recover from an error.
  prefs: []
  type: TYPE_NORMAL
- en: Error recovery
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If the `mount` command displays an error, edit the `/etc/fstab` file again and
    look for typos and extra spaces. Correct any errors and try again.
  prefs: []
  type: TYPE_NORMAL
- en: 'If there are still errors, replace the configuration file with its original
    version using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: The fstab file format
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Each line of the `fstab` configuration file is used to configure where one
    disk (or disk partition) is mounted. Each line has six fields separated by blanks
    (or tabs):'
  prefs: []
  type: TYPE_NORMAL
- en: The first field is the device file. The device file is assigned automatically
    to each disk and can be discovered using the `fdisk –l` command (see the previous
    recipe). The 128 MB `thumbdrive` has one partition; its mountable device file
    is `/dev/sda1`. The 500 GB disk also has one partition with the mountable device
    file `/dev/sdb1`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The second field is the mount point. Mount points can be located anywhere in
    the filesystem; however, current convention is to locate them in the `/media`
    directory. The mount point for the 128 MB flash drive is `/media/thumbdrive`.
    The mount point for the 500 GB disk is `/media/bigdisk`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The third field is the type of filesystem on the device. The 128 MB flash drive
    has the `vfat` filesystem and the 500 GB drive has an `ext4` filesystem.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The fourth field is a comma-separated list of configuration parameters. They
    should be copied from the parenthetical list of parameters in the output of the
    `mount` command. There should be no spaces in this field and no parentheses.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The fifth field is a dump flag. It is usually zero (`0`), indicating that the
    filesystem does not need to be dumped. Both disks have `0` in this field.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The sixth field selects the boot phase in which the disk will be mounted. The
    disk mounted as the root filesystem (`/`) is mounted in phase one; all other disks
    should be mounted in phase two. The example disks will not be mounted as the root
    filesystem, so they both have `2` in this field.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For the 128 MB flash drive, the configuration parameters are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**The device file**: `/dev/sda1`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The mount point**: `/media/thumbdrive`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The filesystem type**: `vfat`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The mount options**: `rw,nosuid,nodev,noexec,relatime,uid=1001,gid=1004,fmask=0177,dmask=0077,codepage=437,iocharset=iso8859-1,shortname=mixed,quiet,utf8,errors=remount-ro`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Dump option**: (`0`)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Boot phase**: (`2`)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For the 500 GB USB disk, the configuration parameters are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**The device file**: `/dev/sdb1`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The mount point**: `/media/bigdisk`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The filesystem type**: `ext4`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The mount options**: `rw,nosuid,nodev,noexec,relatime,errors=remount-ro,data=ordered`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Dump option**: (`0`)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Boot phase**: (`2`)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**fstab – static information about the filesystems** ([http://manpages.debian.net/cgi-bin/man.cgi?query=fstab](http://manpages.debian.net/cgi-bin/man.cgi?query=fstab)):
    The Debian manual page for the `fstab` command has detailed information about
    the command and its options.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Auto-mounting a shared folder at boot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The goal of this recipe is to mount a shared folder from another computer at
    boot time.
  prefs: []
  type: TYPE_NORMAL
- en: The previous recipe showed how to configure `/etc/fstab` for mounting USB disks.
    This recipe shows how a similar configuration can be used to auto-mount a Windows
    share at boot time (or any other set of files shared using the SMB (CIFS) protocol).
  prefs: []
  type: TYPE_NORMAL
- en: At home or at the office, it is common for a local network to have some form
    of **Networked Attached Storage** (**NAS**) available to network users as shared
    folders using the SMB (CIFS) protocol. This recipe shows how the Raspberry Pi
    can be configured to automatically mount a shared folder at boot time.
  prefs: []
  type: TYPE_NORMAL
- en: After completing this recipe, a shared folder from another computer will be
    attached to the root filesystem every time the Raspberry Pi boots.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here are the ingredients:'
  prefs: []
  type: TYPE_NORMAL
- en: An initial setup or basic networking setup for the Raspberry Pi that has been
    powered on. You have also logged in as the user `pi` (see the recipes in [Chapter
    1](ch01.html "Chapter 1. Installation and Setup"), *Installation and Setup*, for
    how to boot and log in and the recipes in [Chapter 2](ch02.html "Chapter 2. Administration"),
    *Administration*, for how to log in remotely).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A network connection.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A client PC connected to the same network as the Raspberry Pi.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This recipe does not require the desktop GUI and could either be run from the
    text-based console or from within an LXTerminal.
  prefs: []
  type: TYPE_NORMAL
- en: If the Raspberry Pi's Secure Shell server is running, this recipe can be completed
    remotely using a Secure Shell client (see the recipe *Remote access (SSH)* in
    [Chapter 2](ch02.html "Chapter 2. Administration"), *Administration*).
  prefs: []
  type: TYPE_NORMAL
- en: The examples in this recipe will connect the Raspberry Pi to a home file-sharing
    device named `terragolden`. This file server has several shares available, including
    backups. The shared folder is configured for guest access so no username or password
    is required.
  prefs: []
  type: TYPE_NORMAL
- en: Configuration for other computers using the SMB (CIFS) protocol will be similar.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The steps for auto-mounting shared folders at boot are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to the Raspberry Pi either directly or remotely.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use the `cp` command to make a backup copy of the `/etc/fstab` configuration
    file named `/etc/fstab.orig`. Files can only be created in (or copied into) the
    `/etc` directory by a privileged user (so use `sudo`).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Execute the command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Edit the filesystem configuration table `fstab`. The file `fstab` may only be
    modified by a privileged user (use `sudo`).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Use the `vi` command to edit the filesystem configuration table `fstab`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The vi editor displays the contents of the `/etc/fstab` configuration file.
    Instructions for using the editor can be found in the vi man pages. See the recipe
    *Reading the built-in documentation* in [Chapter 2](ch02.html "Chapter 2. Administration"),
    *Administration*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'For the example home file server, the configuration is as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The network location is `//terragolden/backups`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The mount point is `/media/backups`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The filesystem type is `cifs`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The mount options are `guest,uid=pi`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The dump option is `0`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The boot phase is `2`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: After entering the configuration parameters for file share, save the file and
    exit the editor.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Before the file share can be mounted, it needs to have a mount point. Create
    a mount point at `/media/backups` using the `mkdir` command.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Use the `mount –a` command to mount all of the configured disks.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Use the `reboot` command to reboot the system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Log back in to the Raspberry Pi and then use the `ls –l` command to display
    the contents of the file share /media/backups.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The remote file share is now mounted automatically at boot!
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: After logging in to the Raspberry Pi, a backup is made of the filesystem table
    configuration file `/etc/fstab`. The configuration file is copied to `/etc/fstab.orig`.
  prefs: []
  type: TYPE_NORMAL
- en: The vi editor is used to add the configuration parameters for the shared folder
    to the bottom of the configuration file.
  prefs: []
  type: TYPE_NORMAL
- en: 'The configuration used in the example is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The first field is the network location: `//terragolden/xfer`. The second field
    is the mount point: `/media/backups`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The third field is the type of filesystem: `cifs`. This is the protocol used
    by the file server to share folders.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The fourth field is a comma-separated list of options: `guest,uid=pi`. Additional
    options include `user=` and `password=` for specifying the username and password
    when a shared folder is protected.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The fifth field is a dump flag. It is set to zero (`0`), indicating that the
    shared folder does not need to be dumped at boot.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The sixth field selects the boot phase in which the disk will be mounted. The
    disk mounted as the root filesystem (`/`) is mounted in phase one; all other disks
    should be mounted in phase two (`2`).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once the filesystem table configuration file (`/etc/fstab`) has been updated,
    the configuration is tested before rebooting the system. The `mount all disks`
    command, `mount –a`, is used to mount the example disks.
  prefs: []
  type: TYPE_NORMAL
- en: If there is no error, the system can be rebooted.
  prefs: []
  type: TYPE_NORMAL
- en: If the mount command displays an error, edit the `/etc/fstab` file again and
    look for typos and extra spaces. Correct any errors and try again.
  prefs: []
  type: TYPE_NORMAL
- en: 'If there are still errors, replace the configuration file with its original
    version using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Network Attached Storage** ([http://en.wikipedia.org/wiki/Network_Attached_Storage](http://en.wikipedia.org/wiki/Network_Attached_Storage)):
    Here is an interesting Wikipedia article on **Network Attached Storage** (**NAS**).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a file server (Samba)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This recipe shows how the Raspberry Pi can be configured to become a file server
    on the local network.
  prefs: []
  type: TYPE_NORMAL
- en: The Raspberry Pi, with attached file storage, functions well as a file server.
    Such a file server could be used as a central location for sharing files and documents,
    for storing backups of other computers, and for storing large media files, such
    as photo, music, and video files.
  prefs: []
  type: TYPE_NORMAL
- en: This recipe installs and configures samba and samba-common-bin. The Samba software
    distribution package, samba, contains a server for the SMB (CIFS) protocol used
    by modern computers for setting up *shared drives* or *shared folders*. The samba-common-bin
    package contains a small collection of utilities for managing access to shared
    files.
  prefs: []
  type: TYPE_NORMAL
- en: The recipe includes setting a file sharing password for the logged-in user and
    providing read/write access to the files in the user's home directory. However,
    it does not set up a new file share or show how to share a USB disk. The next
    recipe shows how to do that.
  prefs: []
  type: TYPE_NORMAL
- en: After completing this recipe, other computers on the local network can exchange
    files with the Raspberry Pi.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here are the ingredients for this recipe:'
  prefs: []
  type: TYPE_NORMAL
- en: An initial setup or basic networking setup for the Raspberry Pi that has been
    powered on. You have also logged in as the user `pi` (see the recipes in [Chapter
    1](ch01.html "Chapter 1. Installation and Setup"), *Installation and Setup*, for
    how to boot and log in and the recipes in [Chapter 2](ch02.html "Chapter 2. Administration"),
    *Administration*, for how to log in remotely.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A network connection.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A client PC connected to the same network as the Raspberry Pi.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This recipe does not require the desktop GUI and could either be run from the
    text-based console or from within an LXTerminal.
  prefs: []
  type: TYPE_NORMAL
- en: If the Raspberry Pi's Secure Shell server is running, this recipe can be completed
    remotely using a Secure Shell client (see the recipe *Remote access (SSH)* in
    [Chapter 2](ch02.html "Chapter 2. Administration"), *Administration*).
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The steps to creating a file server are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to the Raspberry Pi either directly or remotely.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use the `apt-get install` command to install the software packages samba and
    samba-common-bin.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Use the `vi` command to edit the Samba configuration file (`/etc/samba/smb.conf`).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The vi editor displays the contents of the `/etc/samba/smb.conf` file. Instructions
    for using the editor can be found in the vi man pages; see the recipe *Reading
    the built-in documentation* in [Chapter 2](ch02.html "Chapter 2. Administration"),
    *Administration*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Change the security `= user` line. Uncomment the line. (Remove the hash, `#`,
    from the beginning of the line.)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Change the `read only = yes` line to be `read only = no`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Save (`:w`) and exit (`:q`) the vi editor.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use the `/etc/init.d/samba` initialization script to tell the Samba server to
    reload its configuration file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Use the `smbpasswd –a` command to create an SMB (CIFS) password for the logged-in
    user, `pi`. Enter the password (twice).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The Raspberry Pi is now accessible as a file server!
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: From a Windows computer, use **Map network drive** to mount the Raspberry Pi
    as a network disk.![How to do it...](img/B04547_04_01.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The above screenshot shows the mapping of a network drive to the Raspberry Pi
    on Windows 7.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Enter the UNC address `\\raspberrypi\pi` as the network folder. Choose an appropriate
    drive letter. The following example uses the `R:` drive. Select **Connect using
    different credentials**. Click on **Finish**.![How to do it...](img/B04547_04_02.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The above screenshot finishes mapping a network drive to the Raspberry Pi.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Log in using the newly configured SMB (CIFS) password (from step 7).![How to
    do it...](img/B04547_04_03.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the screenshot, a dialog box is displayed for logging in to the Raspberry
    Pi with the SMB (CIFS) username and password.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The Raspberry Pi is now accessible as a Windows share! Only the home directory
    of the user `pi` is accessible at this point. The next recipe configures a USB
    disk for use as a shared drive.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'After logging in to the Raspberry Pi, the recipe installs two software distribution
    packages: samba and samba-common-bin, using the `apt-get install` command.'
  prefs: []
  type: TYPE_NORMAL
- en: The samba package contains an implementation of the **Server Message Block**
    (**SMB**) protocol (also known as the **Common Internet File System**, **CIFS**).
    For sharing files and printers, Microsoft Windows computers use the SMB (CIFS)
    protocol.
  prefs: []
  type: TYPE_NORMAL
- en: After the packages are installed, the Samba configuration file `/etc/samba/smb.conf`
    is updated. The file is updated to turn on user security (`security = user`) and
    to enable writing files to user home directories (`readonly = no`).
  prefs: []
  type: TYPE_NORMAL
- en: After the configuration file is updated, the Samba server is told to reload
    its configuration using the server's initialization file, `/etc/init.d/samba`.
  prefs: []
  type: TYPE_NORMAL
- en: At this point, the Raspberry Pi should be visible to other machines on the local
    network that are using the SMB protocol. However, the passwords for the authorized
    users have not yet been configured.
  prefs: []
  type: TYPE_NORMAL
- en: The `smbpasswd` command is used to add (`-a`) the user `pi` to the list of users
    authorized to share files with the Raspberry Pi using the SMB protocol. The passwords
    for file sharing are managed separately from the login passwords used to log in
    to the Raspberry Pi either directly or remotely.
  prefs: []
  type: TYPE_NORMAL
- en: After the password has been added for the user `pi`, the Raspberry Pi should
    be accessible from any machine on the local network that is configured for the
    SMB protocol.
  prefs: []
  type: TYPE_NORMAL
- en: The last steps of the recipe configure access to the Raspberry Pi from a Windows
    7 PC using a mapped network drive. The UNC name for the file share, `\\raspberrypi\pi`,
    could also be used to access the share directly from Windows Explorer.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This is a very simple configuration for sharing files. It enables file sharing
    for users with a login to the Raspberry Pi. However, it only permits the files
    in the user home directories to be shared. The next recipe describes how to add
    a new file share.
  prefs: []
  type: TYPE_NORMAL
- en: In addition to the SMB protocol server `smbd`, the Samba software distribution
    package also contains a NetBIOS name server, `nmbd`. The NetBIOS name server provides
    naming services to computers using the SMB protocol. The `nmbd` server broadcasts
    the configured name of the Raspberry Pi, `raspberrypi`, to other computers on
    the local network.
  prefs: []
  type: TYPE_NORMAL
- en: In addition to file sharing, a Samba server could also be used as a **Primary
    Domain Controller** (**PDC**)—a central network server that is used to provide
    logins and security for all computers on a LAN. More information on using the
    samba package as a PDC can be found in the following links.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Samba (software)** ([http://en.wikipedia.org/wiki/Samba_(software)](http://en.wikipedia.org/wiki/Samba_(software))):
    A Wikipedia article on the Samba software suite.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**nmbd – NetBIOS over IP naming service** ([http://manpages.debian.net/cgi-bin/man.cgi?query=nmbd](http://manpages.debian.net/cgi-bin/man.cgi?query=nmbd)):
    The Debian manual page for `nmbd`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**samba – a Windows SMB/CIFS file server for Unix** ([http://manpages.debian.net/cgi-bin/man.cgi?query=samba](http://manpages.debian.net/cgi-bin/man.cgi?query=samba)):
    The Debian man page for samba.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**smb.conf – the configuration file for the Samba suite** ([http://manpages.debian.net/cgi-bin/man.cgi?query=smb.conf](http://manpages.debian.net/cgi-bin/man.cgi?query=smb.conf)):
    The Debian manual page for `smb.conf`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**smbd – server to provide SMB/CIFS services to clients** ([http://manpages.debian.net/cgi-bin/man.cgi?query=smbd](http://manpages.debian.net/cgi-bin/man.cgi?query=smbd)):
    The Debian manual page for `smbd`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**smbpasswd – change a user''s SMB password** ([http://manpages.debian.net/cgi-bin/man.cgi?query=smbpasswd](http://manpages.debian.net/cgi-bin/man.cgi?query=smbpasswd)):
    The Debian manual page for `smbpasswd`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**System initialization** ([http://www.debian.org/doc/manuals/debian-reference/ch04.en.html](http://www.debian.org/doc/manuals/debian-reference/ch04.en.html)):
    The *Debian Reference Manual* article on system initialization.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Samba.org** ([http://www.samba.org](http://www.samba.org)): The Samba software
    website.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sharing an attached USB disk (Samba)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This recipe extends the default Samba configuration to include sharing a USB
    disk.
  prefs: []
  type: TYPE_NORMAL
- en: The previous recipe showed how to install Samba and set up basic file sharing.
    However, the Samba configuration used only shared files that are in the user's
    home directory. Other directories on the Raspberry Pi are not yet accessible via
    the SMB (CIFS) protocol.
  prefs: []
  type: TYPE_NORMAL
- en: This recipe extends the Samba configuration used in the previous recipe to include
    a new file share definition that points to a USB hard disk mounted on the Raspberry
    Pi.
  prefs: []
  type: TYPE_NORMAL
- en: After completing this recipe, the Raspberry Pi can be used as a file server
    for any computer that shares its files via the SMB (CIFS) protocol (for example,
    Windows, Mac, and Linux computers).
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Ingredients:'
  prefs: []
  type: TYPE_NORMAL
- en: An initial setup or basic networking setup for the Raspberry Pi that has been
    powered on. You have also logged in as the user `pi` (see the recipes in [Chapter
    1](ch01.html "Chapter 1. Installation and Setup"), *Installation and Setup*, for
    how to boot and log in and the recipes in [Chapter 2](ch02.html "Chapter 2. Administration"),
    *Administration*, for how to log in remotely).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A network connection (optional).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A client PC connected to the same network as the Raspberry Pi (optional).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A powered USB hub (recommended).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: At least one USB disk drive (the example uses a 500 GB USB disk).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This recipe does not require the desktop GUI and could either be run from the
    text-based console or from within an LXTerminal.
  prefs: []
  type: TYPE_NORMAL
- en: If the Raspberry Pi's Secure Shell server is running and it has a network connection,
    this recipe can be completed remotely using a Secure Shell client (see the preceding).
  prefs: []
  type: TYPE_NORMAL
- en: The example in this recipe uses a USB disk mounted at `/media/bigdisk` (see
    the recipe *Mounting USB disks* at the beginning of this chapter).
  prefs: []
  type: TYPE_NORMAL
- en: The example in this recipe also includes test access to the new file share from
    another computer on the local network, golden-macbook.
  prefs: []
  type: TYPE_NORMAL
- en: The Raspberry Pi should already have Samba installed (see the previous recipe).
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The steps for sharing an attached USB disk are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to the Raspberry Pi either directly or remotely.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use the `ls –l` command to list the disk drives that have been mounted in the
    `/media` directory.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Use the vi editor to edit the Samba configuration file, `/etc/samba/smb.conf`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The vi editor displays the contents of the configuration file. Instructions
    for using the editor can be found in the vi man pages; see the recipe *Reading
    the built-in documentation* in [Chapter 2](ch02.html "Chapter 2. Administration"),
    *Administration*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE63]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Add a new share configuration to the bottom of the file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE64]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE65]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Save and exit the vi editor.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use the `/etc/init.d/samba reload` command to tell the Samba server to reload
    its configuration file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE66]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The file share `\\raspberrypi\bigdisk` is now accessible from the local network!
    Connect as the user `pi`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE67]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: After logging in to the Raspberry Pi, the recipe lists the disks that have been
    mounted in the `/media` directory. This is the directory used by the Raspberry
    Pi desktop (GUI) when auto-mounting USB disks. It is also the directory used by
    the `pmount` command (and the recipe auto-mounting USB disks at boot).
  prefs: []
  type: TYPE_NORMAL
- en: Then, the vi editor is used to modify the Samba configuration file, `smb.conf`.
    The configuration for a new share `[bigdisk]` is added to the file.
  prefs: []
  type: TYPE_NORMAL
- en: '`[bigdisk]` starts a new section in the `config` file and sets the name of
    the share: `bigdisk`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Comment =` A really big disk! defines a comment to display when users browse
    the share from another computer'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Path = /media/bigdisk` is the location of the files on the Raspberry Pi'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`valid users = pi` declares that only the user `pi` can access the files'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`admin users = pi` gives the user `pi` administrative access to the files'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`read only = no` allows files to be written to and deleted from the share'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: After the configuration is saved and the vi editor has been exited, the Samba
    server is told to reload its configuration with the command `/etc/init.d/samba`
    reload.
  prefs: []
  type: TYPE_NORMAL
- en: Once the configuration file is reloaded, the Samba server is ready to share
    files from the `/media/bigdata` directory over the file share, `bigdata`, at the
    UNC address `\\raspberrypi\bigdata`.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, the `smbutil` command is used on another computer (golden-macbook)
    to validate that the new bigdisk share is accessible from the local network.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The files in the new share are protected and require that users on other computers
    connect to the share using the Samba password of the `pi` user.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Remember: the Samba password of a user is maintained separately from the login
    password.'
  prefs: []
  type: TYPE_NORMAL
- en: Use the `smbpasswd` command to create and manage Samba passwords (see the previous
    recipe, *Creating a file server for an example*).
  prefs: []
  type: TYPE_NORMAL
