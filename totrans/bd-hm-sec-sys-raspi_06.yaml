- en: Chapter 6. Adding Cameras to Our Security System
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第六章：向我们的安全系统添加摄像头
- en: Until now, we've been putting together the elements that will allow us to connect
    sensors to our alarm system to detect intrusions using either switches or passive
    infra-red motion detectors, which in turn will tell our Raspberry Pi that something
    has happened in a particular zone. These elements will all come together as a
    whole system later in this book.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们一直在组合能够将传感器连接到我们的报警系统的元素，使用开关或被动红外运动探测器来检测入侵，这些探测器将通知我们的树莓派在特定区域发生了某些事情。所有这些元素将在本书的后面结合成一个完整的系统。
- en: Our system is now going to become a whole lot more sophisticated with the addition
    of cameras to take pictures and video clips, and e-mail them to us straightaway
    when it detects something.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 随着相机的加入，我们的系统将变得更加复杂，可以拍摄图片和视频，并在检测到某些事件时立即通过电子邮件发送给我们。
- en: We'll also use e-mail to send us alerts on our smart phone when we're out and
    about when any of the sensors in the system are triggered.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将使用电子邮件，在我们外出时，当系统中的任何传感器被触发时，向我们的智能手机发送警报。
- en: 'In this chapter we will cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涉及以下主题：
- en: Setting up the Raspberry Pi camera module and learning how to capture stills
    and video images
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置树莓派相机模块并学习如何捕获静态图像和视频图像
- en: Learning how to overlay captured images with text and time-stamps
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何将捕获的图像叠加文本和时间戳
- en: Triggering image captures with a motion detector
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用运动探测器触发图像捕获
- en: E-mailing the image and video files to us in real time
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实时通过电子邮件发送图片和视频文件给我们
- en: Understanding the differences between capturing images during the day and during
    the night
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解白天和夜间拍摄图像的差异
- en: Switching on and off security lighting and other high-current devices when required
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在需要时开启和关闭安全照明及其他高电流设备
- en: Connecting a USB webcam instead of the native camera module
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接USB网络摄像头，替代原生相机模块
- en: Prerequisites
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前提条件
- en: 'You''ll need the following parts for this chapter, on top of the components
    used in the previous chapter:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 除了上一章使用的组件外，你还需要以下零件来完成本章内容：
- en: A Raspberry Pi standard camera module
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 树莓派标准相机模块
- en: A Raspberry Pi NoIR camera module
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 树莓派NoIR相机模块
- en: An Infra-Red LED array and/or visible LED array
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 红外LED阵列和/或可见LED阵列
- en: A USB webcam
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一台USB网络摄像头
- en: The Raspberry Pi camera module
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 树莓派相机模块
- en: The Raspberry Pi Camera Module is an official Raspberry Pi accessory that works
    with all models of the Pi, and can be used to take high-definition stills and
    video images. It connects directly to the Pi board's **camera serial interface**
    (**CSI**) port, which is dedicated to these modules to enable high-speed operation.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派相机模块是官方的树莓派配件，适用于所有型号的树莓派，可用于拍摄高清静态图片和视频图像。它直接连接到树莓派主板的**相机串行接口**（**CSI**）端口，这个端口专门用于这些模块以支持高速操作。
- en: The camera itself is a 5 megapixel fixed-focus sensor supporting 1080p, 720p,
    and VGA video modes and still captures.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 相机本身是一款500万像素固定焦距传感器，支持1080p、720p和VGA视频模式及静态图像拍摄。
- en: '![The Raspberry Pi camera module](img/B04579_06_01.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![树莓派相机模块](img/B04579_06_01.jpg)'
- en: The official Raspberry Pi Camera Module
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 官方树莓派相机模块
- en: You can also obtain housings for the camera modules, which, unless you're going
    to build your own enclosure for the camera system, I recommend you use.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以购买相机模块的外壳，除非你打算为相机系统制作自己的外壳，否则我建议你使用现成的外壳。
- en: '![The Raspberry Pi camera module](img/B04579_06_02.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![树莓派相机模块](img/B04579_06_02.jpg)'
- en: Raspberry Pi camera housings come in various colors and styles
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派相机外壳有多种颜色和款式
- en: Connecting the camera module
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 连接相机模块
- en: As previously mentioned, the module connects directly to the Raspberry Pi board
    via its dedicated camera interfaces, as shown in the following image. When connecting
    the camera, the contact side of the ribbon cable is toward the HDMI connector
    and the blue side of the cable is toward the network connector.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，该模块通过其专用的相机接口直接连接到树莓派主板，如下图所示。连接相机时，带状电缆的接触面朝向HDMI接口，电缆的蓝色面朝向网络接口。
- en: '![Connecting the camera module](img/B04579_06_03.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![连接相机模块](img/B04579_06_03.jpg)'
- en: Connect the camera module to the dedicated interface
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 将相机模块连接到专用接口
- en: As you can see in the following image, the ribbon connector is not that long,
    so the camera needs to be located close to the Raspberry Pi. By using a camera
    enclosure, you could actually mount the camera directly on top of the Raspberry
    Pi case itself, if that works for you.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在下面的图片中看到的那样，排线连接器并不长，因此相机需要放置在 Raspberry Pi 附近。通过使用相机外壳，你实际上可以将相机直接安装在 Raspberry
    Pi 机箱上，如果这种方式适合你。
- en: '![Connecting the camera module](img/B04579_06_04.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![连接相机模块](img/B04579_06_04.jpg)'
- en: The camera module, housed within an enclosure
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 相机模块，放置在外壳内
- en: Setting up the camera module
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置相机模块
- en: Before we can use the camera module, we need to enable camera support on the
    Raspberry Pi. To do this, we use the `raspi-config` tool, as we did with the I2C
    bus earlier in our journey.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们使用相机模块之前，我们需要在 Raspberry Pi 上启用相机支持。为此，我们使用 `raspi-config` 工具，就像我们在旅程中早些时候为
    I2C 总线所做的那样。
- en: Connect to your Raspberry Pi the lazy way from your sofa using SSH, or directly
    using a keyboard and monitor.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过 SSH 从沙发上懒洋洋地连接到你的 Raspberry Pi，或者直接使用键盘和显示器连接。
- en: 'Once you''ve logged in, launch the config tool with the following command:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你登录，使用以下命令启动配置工具：
- en: '[PRE0]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: And then, select `5 Enable Camera`.![Setting up the camera module](img/B04579_06_05.jpg)
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，选择 `5 启用相机`。![设置相机模块](img/B04579_06_05.jpg)
- en: You'll then be asked to confirm whether you want to enable camera support.![Setting
    up the camera module](img/B04579_06_06.jpg)
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，它会要求你确认是否要启用相机支持。![设置相机模块](img/B04579_06_06.jpg)
- en: Select `<Enable>`.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 `<Enable>`。
- en: Then, select **Finish** and reboot your Pi to enable the camera settings.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，选择 **Finish** 并重启你的 Pi 以启用相机设置。
- en: Testing the camera module
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试相机模块
- en: 'Once your Raspberry Pi has rebooted, your camera should be enabled. We can
    test this by taking a still image using the `raspistill` utility:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你的 Raspberry Pi 重启，相机应该已经启用。我们可以通过使用 `raspistill` 工具拍摄一张静态图像来测试：
- en: '[PRE1]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This will delay for 5 seconds then take a picture, while displaying various
    pieces of information, such as that shown in the following screenshot:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这将延迟 5 秒钟后拍照，并显示各种信息，如下图所示：
- en: '![Testing the camera module](img/B04579_06_07.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![测试相机模块](img/B04579_06_07.jpg)'
- en: Note
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The camera module needs at least 128 MB of GPU memory to operate properly on
    Raspian. If you experience any issues, first ensure that the the `gpu_mem` setting
    in the `/boot/config.txt` configuration file is set to at least `128`.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 相机模块在 Raspian 上需要至少 128 MB 的 GPU 内存才能正常运行。如果你遇到任何问题，首先确保 `/boot/config.txt`
    配置文件中的 `gpu_mem` 设置为至少 `128`。
- en: And if all goes well, you should find the file, `test.jpg`, in your home folder.
    As you're connected via the shell, you wouldn't have seen the 5 second preview
    image displayed when the command was running.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，你应该能在你的主文件夹中找到文件 `test.jpg`。由于你是通过 Shell 连接的，你不会看到命令运行时显示的 5 秒预览图像。
- en: If you download the image file to your PC, you should see a nice quality snap
    taken by the camera module.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你将图像文件下载到你的 PC 上，你应该能看到由相机模块拍摄的高质量照片。
- en: '![Testing the camera module](img/B04579_06_08.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![测试相机模块](img/B04579_06_08.jpg)'
- en: The test photo taken by the Raspberry Pi Camera Module
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Raspberry Pi 相机模块拍摄的测试照片
- en: Tip
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: If you find that raspistill outputs errors when you run it, ensure that it is
    connected properly at both ends of the ribbon cable. One other catch is that sometimes
    the ribbon that connects the actual camera lens component to the tiny connector
    on the camera board can come loose. Just ensure that this is securely connected
    too. I've had this issue a couple times after the camera modules have been taken
    out of my box of random test bits to be used.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你发现运行 `raspistill` 时输出错误，确保它在排线的两端都连接正确。另一个问题是，有时连接相机镜头组件与相机板上小连接器的排线可能会松动。只需确保它也牢固连接。我曾多次遇到这种问题，当相机模块从我的杂乱测试箱里拿出来时，连接会松动。
- en: 'The `raspistill` utility has loads of options for manipulating the images it
    captures, and we''ll use some of them a bit later in our capture script. In the
    meantime, to see the available options, run `raspistill` without any options and
    they will be listed:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '`raspistill` 工具有很多选项可以用来操作它捕获的图像，稍后我们将在捕获脚本中使用其中一些选项。与此同时，要查看可用选项，只需运行 `raspistill`
    而不带任何选项，选项会被列出：'
- en: '[PRE2]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Be a video star
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 成为视频明星
- en: 'Now that we know our camera module is working, we can try and capture some
    video. To do this, we''ll use the `raspivid` utility. The following command will
    take 5 seconds of high-definition video and save the file to your Raspberry Pi:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道我们的摄像头模块正常工作，可以尝试捕捉一些视频。为此，我们将使用 `raspivid` 工具。以下命令将拍摄 5 秒钟的高清视频并将文件保存在你的树莓派中：
- en: '[PRE3]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: You'll notice that file is called `test.h264`—this is because the video is captured
    as a raw **H.264** video stream. Unfortunately, not many media players will handle
    these files (although VLC player will—it rocks and handles practically anything
    you throw at it—get it on your PC at [www.videolan.org](http://www.videolan.org)).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到该文件名为 `test.h264`——这是因为视频是以原始 **H.264** 视频流的形式捕捉的。不幸的是，并不是很多媒体播放器可以处理这些文件（虽然
    VLC 播放器可以——它非常棒，几乎可以处理你投给它的任何文件——你可以在[www.videolan.org](http://www.videolan.org)下载它）。
- en: If you want to play the file on smartphones and conventional media players,
    then we will need to wrap it in a container format, such as MPEG-4, and give the
    file a `.mp4` extension.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望在智能手机和常规媒体播放器上播放该文件，我们需要将其封装成容器格式，比如 MPEG-4，并将文件扩展名更改为 `.mp4`。
- en: 'To do this, we''ll use the **GPAC** package, which is an open source multimedia
    framework. It comes with a utility called **MP4Box**, which is a tool we''ll use
    to create an MP4 container for our video file:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们将使用 **GPAC** 包，它是一个开源的多媒体框架。它附带了一个名为 **MP4Box** 的工具，我们将使用这个工具来为我们的视频文件创建一个
    MP4 容器：
- en: 'First, install the GPAC package:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，安装 GPAC 包：
- en: '[PRE4]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Once it''s installed, run the command to convert the test video we created:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，运行以下命令来转换我们创建的测试视频：
- en: '[PRE5]'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: You should now have the file, `test.mp4`, which you can download and play on
    your PC or smartphone.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你应该已经拥有了文件 `test.mp4`，你可以下载并在你的电脑或智能手机上播放。
- en: Tip
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Another popular conversion tool is **ffmpeg**, which I use a lot on Windows
    to convert video files; however, it can be quite complex and although there is
    a package for the Raspberry Pi, I actually couldn't get it to convert properly
    on the Pi. MP4Box is much more straightforward and fitting for our needs.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个常用的转换工具是 **ffmpeg**，我在 Windows 上经常使用它来转换视频文件；然而，它可能相当复杂，尽管树莓派上也有相应的包，但我实际上无法让它在树莓派上正确转换。MP4Box
    要简单得多，更适合我们的需求。
- en: Caught on camera
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 捕捉到画面
- en: So, we now have a method of capturing still images and video, which we can put
    to use in our security system. If we want to have this running constantly, we
    could write a script to take video constantly, but this would soon fill up our
    memory card and wouldn't be particularly efficient. So, we'll combine our camera
    system with the motion detectors we connected earlier.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，现如今我们已经有了捕捉静态图像和视频的方法，可以在我们的安全系统中使用。如果我们希望这一过程持续进行，可以编写脚本来持续拍摄视频，但这样很快就会填满我们的存储卡，并且效率不高。因此，我们将把摄像系统和之前连接的运动探测器结合起来。
- en: 'In the last chapter, we created an alarm zone which had a couple of sensors
    and a motion detector connected to our system on the input GPA0\. So, let''s write
    a script that will take a video clip whenever the motion detector is triggered:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们创建了一个报警区，里面有一些传感器和一个连接到我们系统的运动探测器，输入端口是 GPA0。那么，让我们编写一个脚本，每当触发运动探测器时，就拍摄一个视频片段：
- en: '[PRE6]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: You have new mail
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你有新的邮件
- en: Having the images stored on your Raspberry Pi is not really much use—ideally,
    you would want the images sent to you straightaway, as soon as they are captured,
    so that you can view them on your smartphone.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 将图像存储在你的树莓派上其实用处不大——理想情况下，你会希望图像在捕捉到的瞬间就直接发送给你，这样你就可以在智能手机上查看它们。
- en: An easy, quick, and reliable way to do this is to simply have them e-mailed
    to you. Hence we're going to add an e-mailing functionality to our home security
    system so that image captures are attached to a message and sent to your e-mail
    address straightaway, which you can access from your smartphone. The images can
    then be removed from your Raspberry Pi to prevent the SD card space from being
    clogged up with these reasonably large files.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 一种简单、快速、可靠的方法是直接将其通过电子邮件发送给你。因此，我们将为我们的家庭安全系统添加一个电子邮件功能，将图像捕捉到的内容作为附件发送到你的电子邮件地址，之后你可以通过智能手机访问。这些图像可以从你的树莓派中删除，以防止
    SD 卡空间被这些相对较大的文件占满。
- en: Setting up the e-mail sender client
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置电子邮件发送客户端
- en: 'Fortunately, there are some good packages available that will help us with
    this. Carry out the following steps to install the email packages we need:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，有一些很好的包可以帮助我们实现这一点。按照以下步骤安装我们所需的电子邮件包：
- en: 'Update the package installer with the following command:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令更新软件包安装器：
- en: '[PRE7]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Install and set up the SMTP client with the following command:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令安装并设置 SMTP 客户端：
- en: '[PRE8]'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: You'll now need to set up the client to send emails through your email account.
    In the following configuration file, I've assumed that you have a Gmail account.
    The settings may be different if you use another email provider.
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你现在需要设置客户端，通过你的电子邮件账户发送电子邮件。在以下配置文件中，我假设你使用的是 Gmail 账户。如果你使用其他邮件提供商，设置可能会有所不同。
- en: 'Open the `ssmtp` configuration file using **Nano** or another text editor:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 **Nano** 或其他文本编辑器打开 `ssmtp` 配置文件：
- en: '[PRE9]'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Replace the entries with the following configuration:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用以下配置替换条目：
- en: '[PRE10]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '`ssmtp` can be used on its own but can be a bit of a faff while automatically
    sending emails (by default, you manually type the email in with the command line,
    or create a text file), so we''re also going to install the `mailutils` package:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ssmtp` 可以单独使用，但在自动发送电子邮件时有点麻烦（默认情况下，你需要在命令行中手动输入电子邮件，或者创建一个文本文件），因此我们还需要安装
    `mailutils` 包：'
- en: '[PRE11]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Once it''s installed, we can use the `mail` command to send emails more easily.
    Send a test email through the (G)mail account that we set up earlier, using the
    following command to make sure your settings are working:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，我们可以使用 `mail` 命令更轻松地发送电子邮件。通过我们之前设置的 (G)mail 账户发送一封测试电子邮件，使用以下命令确保你的设置正常：
- en: '[PRE12]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: If all goes well, you should receive the test email in your mailbox within a
    few seconds or so.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，你应该能在几秒钟内收到测试电子邮件。
- en: Sending attachments
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发送附件
- en: 'Now that we can send basic emails from our home security system, let''s try
    sending the still image taken from our camera earlier. But first, we need to install
    yet another package to help us with this:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以从家庭安全系统发送基本电子邮件了，让我们尝试发送之前拍摄的静态图像。但首先，我们需要再安装一个包来帮助我们完成这项工作：
- en: '[PRE13]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Once that''s installed, you can send the test image file we took previously
    by using the following command:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完毕后，你可以使用以下命令发送我们之前拍摄的测试图像文件：
- en: '[PRE14]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: We now have all of the elements needed to send alerts and images from our home
    security system directly to our smartphone using email.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经具备了所有元素，能够通过电子邮件将警报和图像从家庭安全系统直接发送到我们的智能手机。
- en: Where was that taken?
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 那是在哪里拍的？
- en: 'Ordinarily, you could just annotate the email message with where and when the
    attached image was taken, but that wouldn''t be as cool as actually overlaying
    the image with some text, would it? So let''s do some magic with the help of `imagemagick`,
    which is a popular command-line image manipulation tool. Install it with the following
    line:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，你可以在电子邮件中注明附加图像的拍摄时间和地点，但这不如在图像上叠加一些文字酷吧？那么，让我们借助 `imagemagick` 来做一些魔法，它是一个流行的命令行图像处理工具。使用以下命令安装它：
- en: '[PRE15]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'We''ll now use the command line to take the test photo that we took earlier,
    overlay some text using one of the `imagemagick` utilities, and save it to another
    file:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将使用命令行来拍摄我们之前拍的测试照片，使用 `imagemagick` 工具之一叠加一些文字，并将其保存到另一个文件：
- en: '[PRE16]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: After a few seconds, this will have generated a file called `annotated.jpg`
    containing our image with **Camera 1** written in red in the top corner. When
    we put all of this together in our final system, we'll also overlay the image
    with a time stamp.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 几秒钟后，这将生成一个名为 `annotated.jpg` 的文件，文件中包含我们带有 **Camera 1** 红色文字的图像。当我们把这些元素组合到最终系统中时，我们还会在图像上叠加时间戳。
- en: '![Where was that taken?](img/B04579_06_09.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![那是在哪里拍的？](img/B04579_06_09.jpg)'
- en: Note
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: At the moment, the images generated by the `raspistill` tool are pretty large,
    being high resolution photos. This makes manipulating and sending them a bit time-consuming
    as far as processing time is concerned, so when we build our final system, we'll
    be using the `raspistill` options, `–w`, `–h` and, `–q`, to reduce the size and
    quality of the images to make the system more efficient.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，`raspistill` 工具生成的图像文件比较大，因为它们是高分辨率的照片。这使得处理和发送它们在处理时间上有些耗时，因此当我们构建最终系统时，我们将使用
    `raspistill` 的选项 `–w`、`–h` 和 `–q` 来减少图像的大小和质量，从而提高系统效率。
- en: 'To capture smaller image files, try using the following command:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 要捕获较小的图像文件，可以尝试使用以下命令：
- en: '[PRE17]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Night vision
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 夜视
- en: 'The standard Raspberry Pi camera is great for taking daytime snaps of people
    walking up the garden path, but when it comes to night time shots, it''s not really
    suitable. There are two ways of dealing with this: the first is to illuminate
    the capture area with a bright light when the PIR detector is triggered, and the
    second is to use the Raspberry Pi **NoIR camera module** and an infra-red LED
    array to let the camera see in the dark. More about that in a minute.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 标准的树莓派摄像头非常适合拍摄白天人们走在花园小道上的照片，但在夜间拍摄时，它并不适用。应对这一问题有两种方法：第一种是在 PIR 探测器触发时，用强光照亮拍摄区域；第二种是使用树莓派**NoIR
    摄像头模块**和红外 LED 阵列，让摄像头能够在黑暗中看见。稍后会详细介绍。
- en: '![Night vision](img/B04579_06_15.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![夜视](img/B04579_06_15.jpg)'
- en: The Raspberry Pi NoIR camera module; it looks similar to the standard model
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派 NoIR 摄像头模块；它看起来与标准型号相似
- en: An illuminating experience
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 照亮的体验
- en: In order to switch on a light or LED array from the Raspberry Pi GPIO or our
    port expander circuit, we need something that will allow us to drive higher currents
    and voltages than can be provided by the GPIO ports alone.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 为了通过树莓派 GPIO 或我们的端口扩展电路打开灯或 LED 阵列，我们需要一些能够提供比 GPIO 端口本身更高电流和电压的设备。
- en: A good candidate for this is the **TIP120** **Darlington transistor**, which
    will allow us to switch on and off loads of up to 80V and 5 A from our GPIO pins.
    In our full system later on, we're going to use Port B of our MCP23017 port expander
    to control outputs, but the principle stands for any of the GPIO outputs available
    to us.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 一个合适的选择是**TIP120** **达林顿晶体管**，它能让我们通过 GPIO 引脚开关最大 80V 和 5A 的负载。在稍后的完整系统中，我们将使用
    MCP23017 端口扩展器的 B 端口来控制输出，但这个原理适用于我们所有的 GPIO 输出端口。
- en: '![An illuminating experience](img/B04579_06_10.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![照亮的体验](img/B04579_06_10.jpg)'
- en: TIP120 transistors can be bought cheaply but can drive large loads
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: TIP120 晶体管价格便宜，但可以驱动大负载。
- en: The following circuit shows how we can drive big loads from our GPIO port outputs.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 以下电路展示了我们如何通过 GPIO 端口输出驱动大负载。
- en: '![An illuminating experience](img/B04579_06_11.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![照亮的体验](img/B04579_06_11.jpg)'
- en: In our example circuit, we're using a GPIO output pin to control the base of
    our transistor via a 220 ohm resistor. When the GPIO pin goes high, the transistor
    is switched on and allows the 12V circuit to flow through the LED array.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的示例电路中，我们使用一个 GPIO 输出引脚，通过一个 220 欧姆电阻控制晶体管的基极。当 GPIO 引脚为高电平时，晶体管被打开，允许 12V
    电路通过 LED 阵列。
- en: In the preceding circuit, there is no current limiting for the LEDs because
    they are connected in series, and so with nine of them, each dropping about 1.5V
    across, this is about right for a 12V supply (yes I know I've only included six
    LEDs here but it's just for illustration). Remember to adjust for your particular
    needs. This circuit could easily drive other loads, such as bulbs or sounders.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述电路中，LED 没有电流限制，因为它们是串联连接的，因此，九个 LED 每个大约降压 1.5V，这对于 12V 电源来说是合适的（是的，我知道这里仅包括了六个
    LED，但这只是为了示意）。记得根据你的具体需求调整。这个电路也能轻松驱动其他负载，例如灯泡或警报器。
- en: Note
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you intend to drive high power loads, you will probably need to attach the
    TIP120 to a heat sink that will dissipate any heat and prevent it from over-heating
    and burning out. In our circuit that was demonstrated previously, however, you
    probably won't need one as we're only driving a couple of hundred milliwatts at
    most.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你打算驱动大功率负载，可能需要将 TIP120 安装到散热器上，以散热防止过热和烧毁。然而，在我们之前展示的电路中，你可能不需要散热器，因为我们最多只驱动了几百毫瓦的功率。
- en: The Elaborate light switch re-visited
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 复杂的灯光开关重访
- en: Expanding once again on our elaborate light switch from previous chapters, we
    can once again write a Bash script that will switch on our camera light, take
    a snap with the camera, and e-mail it to us when a PIR detector is triggered.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 再次扩展我们在前几章中提到的复杂灯光开关，我们可以再次编写一个 Bash 脚本，在 PIR 探测器触发时打开摄像头灯，拍摄一张照片，并将其通过电子邮件发送给我们。
- en: 'For the following script, we''re assuming that the output controlling the TIP120
    transistor is the Raspberry PI GPIO17 pin (D0 or pin 11 of our connector), which
    replaces the LED in our earlier set-up. The input from the PIR trigger is, again,
    connected to the GPA0 (port A, data pin 0) of our MCP23017 port expander. All
    the other inputs are tied low, as before, using 10 K resistors:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 对于以下脚本，我们假设控制 TIP120 晶体管输出的是树莓派的 GPIO17 引脚（D0 或我们连接器的第 11 引脚），它替代了我们早期设置中的 LED。PIR
    触发器的输入再次连接到 MCP23017 端口扩展器的 GPA0（端口 A，数据引脚 0）。其他所有输入与之前一样，使用 10 K 电阻连接至低电平：
- en: '[PRE18]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '`pir-camera-trigger.sh`'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '`pir-camera-trigger.sh`'
- en: You'll now see that we've started developing the foundations of the software
    that will control our home security system.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以看到，我们已经开始开发控制家庭安防系统的软件基础。
- en: Is that a badger?
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 那是獾吗？
- en: If you don't want to illuminate an area before capturing an image, you can use
    **infra-red lighting** in conjunction with a compatible camera. The standard Raspberry
    Pi camera module won't work with infra-red lighting because it contains an infra-red
    filter, but we can use the NoIR version of the camera module instead.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不想在捕捉图像之前照亮某个区域，可以使用**红外照明**与兼容的摄像头配合使用。标准的树莓派摄像头模块无法与红外照明配合使用，因为它包含红外滤光片，但我们可以使用
    NoIR 版本的摄像头模块来代替。
- en: The Raspberry Pi NoIR camera module is exactly the same as the standard one,
    except that it doesn't have an infra-red filter built in, which means it will
    see in the dark with the aid of infra-red lighting. This makes it good for watching
    badgers at night as well as for use in our home security system.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派 NoIR 摄像头模块与标准模块完全相同，不同之处在于它没有内置红外滤光片，这意味着它在红外照明的帮助下能够在黑暗中看到。这使得它非常适合在夜间观察獾类动物，以及用于我们的家庭安防系统。
- en: You will need an infra-red LED array or cluster to invisibly illuminate the
    area you want to capture with the camera. These are readily available in various
    form factors and intensities, or you can build your own using individual infra-red
    LEDs purchased from an electronics store.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 你将需要一个红外 LED 阵列或聚光灯来不可见地照亮你希望用摄像头捕捉的区域。这些设备有各种外形和强度，或者你可以通过购买单个红外 LED 来自己制作，通常可以在电子商店找到。
- en: '![Is that a badger?](img/B04579_06_12.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![那是獾吗？](img/B04579_06_12.jpg)'
- en: The Kingbright infra-red LED cluster runs from a 6V supply, which means you
    can connect two in series—one on either side of the camera.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: Kingbright 红外 LED 聚光灯需要 6V 电源，这意味着你可以将两个串联连接——分别安装在摄像头的两侧。
- en: Connecting and driving the LED cluster modules works exactly the same as our
    illuminating light above, using the TIP120 driver circuit. The only difference
    is that we humans can't see when the LEDs are on.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 连接和驱动 LED 聚光灯模块的方式与上面提到的照明灯相同，都是使用 TIP120 驱动电路。唯一的区别是，我们人眼无法看到 LED 是否点亮。
- en: Using USB cameras
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 USB 摄像头
- en: Instead of using the Raspberry Pi Camera Module, it's also possible to use a
    standard USB **webcam** to take still images. You should be aware though that
    the dedicated camera module is far superior to a USB webcam in terms of image
    quality. Although, you may already have a webcam knocking about in your box of
    bits, so why not try it?
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 除了使用树莓派摄像头模块外，你还可以使用标准的 USB **网络摄像头**拍摄静态图像。不过需要注意的是，专用的摄像头模块在图像质量方面远优于 USB
    摄像头。尽管如此，你可能已经有一款闲置在杂物盒里的摄像头，为什么不试试呢？
- en: Installing the webcam
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装摄像头
- en: 'After you''ve connected your webcam to a USB port on your Pi, you can check
    whether it''s been recognized using the `lsusb` command:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在将摄像头连接到树莓派的 USB 端口后，你可以使用 `lsusb` 命令检查它是否已被识别：
- en: '[PRE19]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'I''m using a Logitech webcam that gets reported as follows with `lsusb` (Device
    006):'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 我正在使用一款 Logitech 网络摄像头，它在 `lsusb` 中显示如下（设备 006）：
- en: '[PRE20]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Note
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注释
- en: Not all webcams will work with the Raspberry Pi. Even though it may be recognized
    as a USB device, it might not actually work properly with the operating system
    and create a video device (for example, `/dev/video0`). For example, an old cheap
    Trust webcam I had appeared as a USB device but wouldn't capture any images.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 不是所有的网络摄像头都能与树莓派兼容。即使它被识别为一个 USB 设备，它也可能无法与操作系统正常工作并创建视频设备（例如，`/dev/video0`）。例如，我曾经使用的一款旧的便宜的
    Trust 摄像头虽然被识别为 USB 设备，但无法捕捉任何图像。
- en: You can check whether your webcam is likely to work with the Pi by checking
    your make and model at [http://elinux.org/RPi_USB_Webcams](http://elinux.org/RPi_USB_Webcams).
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过在 [http://elinux.org/RPi_USB_Webcams](http://elinux.org/RPi_USB_Webcams)
    上查看你的摄像头品牌和型号来检查它是否可能与树莓派兼容。
- en: So, now that the Pi knows that we have a webcam device attached, we can use
    the `fswebcam` utility to capture image frames. You can find out more about `fswebcam`
    from the developer's site at [http://www.sanslogic.co.uk/fswebcam](http://www.sanslogic.co.uk/fswebcam).
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，树莓派知道我们已经连接了一个网络摄像头设备，我们可以使用`fswebcam`工具来捕获图像帧。你可以在开发者网站上了解更多关于`fswebcam`的信息，网址为[http://www.sanslogic.co.uk/fswebcam](http://www.sanslogic.co.uk/fswebcam)。
- en: 'Install `fswebcam` with the following:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令安装`fswebcam`：
- en: '[PRE21]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Taking a snap
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 拍摄照片
- en: 'You can now test the webcam by capturing a still image, which can be done by
    running the following command:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以通过捕获一张静态图像来测试摄像头，这可以通过运行以下命令完成：
- en: '[PRE22]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'You should expect to see output similar to the following:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该期待看到类似以下的输出：
- en: '![Taking a snap](img/B04579_06_13.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![拍摄照片](img/B04579_06_13.jpg)'
- en: Note
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '`fswebcam` has lots of options for things like the resolution and quality of
    the image. Use the command `fswebcam` `-?` to get a list of all options.'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '`fswebcam`有很多选项可以调整图像的分辨率和质量。使用命令`fswebcam` `-?`可以查看所有选项。'
- en: Snap snap snap
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 拍摄，拍摄，拍摄
- en: '`fswebcam` doesn''t take video streams, but you can set it up to take a series
    of **frames** at regular intervals. For example, to take a snap every 10 seconds,
    you can use the following command:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '`fswebcam`不能接收视频流，但你可以将其设置为定期拍摄一系列**帧**。例如，为了每10秒拍一张照片，你可以使用以下命令：'
- en: '[PRE23]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: An example of how this would be useful can be demonstrated by setting the webcam
    to take a snap every few seconds in the background (the `–q` switch runs `fswebcam`
    in the background). When our security system is triggered, we could then take
    the latest image snapped with the webcam which could be looking down your pathway.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 一个如何实现这一功能的示例是通过设置网络摄像头每隔几秒钟拍一张照片（`–q`开关将`fswebcam`在后台运行）。当我们的安全系统被触发时，我们可以获取最新拍摄的照片，该照片可能是拍摄了你家门前的路径。
- en: For the purpose of putting together our entire system later in this book, we'll
    be focusing on the Raspberry Pi Camera Module, but you can always replace the
    code with the previous examples if you want to use USB webcams instead.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 为了后续在本书中组建我们的整个系统，我们将重点介绍树莓派相机模块，但如果你想使用USB网络摄像头，你始终可以将代码替换为前面的示例。
- en: You'll notice that `fswebcam`, unlike `raspistill`, has the ability to overlay
    the images with timestamp information, so you don't need to worry about overlaying
    text as we did previously. Look at the `fswebcam` command line options for more
    information.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到，`fswebcam`与`raspistill`不同，它能够在图像上叠加时间戳信息，因此你不需要像之前那样担心叠加文本。查看`fswebcam`命令行选项以获取更多信息。
- en: The multicamera setup
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多摄像头设置
- en: It may have occurred to you that the Raspberry Pi has only one camera module
    input. Now, this is obviously limiting if you want to have multiple cameras around
    your property that are triggered by motion detectors.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会想到，树莓派只有一个相机模块输入。如果你希望在你的财产周围放置多个由运动探测器触发的摄像头，这显然是一个限制。
- en: However, there is nothing stopping us from building standalone units that have
    a separate Raspberry Pi board with a PIR detector, Camera Module, and network
    connection, either using a Wi-Fi dongle or Ethernet.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，没人阻止我们构建独立的设备，这些设备配有单独的树莓派主板、PIR探测器、相机模块和网络连接，可以使用Wi-Fi加密狗或以太网连接。
- en: Because you only need a single input to the Raspberry Pi to detect when the
    PIR motion sensor is triggered, you can use the on-board GPIO port to connect
    the sensor, rather than using a port expander. The Raspberry Pi will email the
    alert over the network, and could alert the main controller Pi if required—making
    it a slave sensor device.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 由于你只需要一个输入端口来检测PIR运动传感器是否被触发，你可以使用树莓派的GPIO端口连接传感器，而不是使用端口扩展器。树莓派将通过网络发送警报，并在需要时可以警告主控制器Pi——使其成为一个从属传感器设备。
- en: You can readily obtain small PIR detectors, such as the Parallax one shown next,
    which you can mount onto a Raspberry Pi Case along with the camera module, creating
    a self-contained unit.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以轻松获取到小型PIR探测器，例如下图所示的Parallax探测器，你可以将其与相机模块一起安装在树莓派机箱上，创建一个自包含的设备。
- en: '![The multicamera setup](img/B04579_06_14.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![多摄像头设置](img/B04579_06_14.jpg)'
- en: A Parallax PIR motion sensor (type 555-28027)
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 一个Parallax PIR运动传感器（型号555-28027）
- en: The Slave driver
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从属驱动程序
- en: While it may seem quite elaborate to have a Raspberry Pi for each camera—think
    about it—you can actually build each camera unit with all of the components for
    around £50, which is significantly cheaper than buying a wireless *smart* camera.
    If you really want to be clever, you could also use this as a slave device to
    accept further sensor inputs local to the unit.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然为每个摄像头配备一个树莓派可能看起来相当复杂——想一想——但你实际上可以用大约50英镑的价格，购买包含所有组件的摄像头单元，这比购买一台无线*智能*摄像头便宜得多。如果你真的想变得聪明一点，还可以将其用作从本地单元接收进一步传感器输入的从设备。
- en: There is nothing to stop you from connecting a GPIO output pin on the slave
    unit to drive an input on the main controller and control the pin depending on
    the state of its local sensors. By running a 6-core cable between the units, you
    could even power the slave unit if your power supply is man enough (you'd need
    to have a supply of 5V @ 1A for the slave Pi running along the wire).
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 没有什么可以阻止你将从设备的GPIO输出引脚连接到主控制器的输入引脚，并根据其本地传感器的状态来控制该引脚。通过在单元之间运行一条6芯电缆，如果你的电源足够强大（你需要一个输出5V
    @ 1A的电源来为从设备树莓派供电），你甚至可以为从设备提供电力。
- en: I'm not going to go into any more detail about this configuration at this time,
    but you could set yourself a challenge to create a fully distributed home security
    system using multiple Raspberry Pis and the building blocks and concepts learned
    in this book.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 我目前不会进一步深入探讨这种配置，但你可以挑战自己，使用多台树莓派以及本书中学到的构建模块和概念，创建一个完全分布式的家庭安防系统。
- en: Summary
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned how to connect both Raspberry Pi camera modules
    and USB cameras to our Pi board in order to take image and video captures when
    required by our home security system. We also learned how to overlay our images
    with informative text and have the files immediately emailed to us.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何将树莓派摄像头模块和USB摄像头连接到我们的树莓派板上，以便在家庭安防系统需要时捕捉图像和视频。我们还学习了如何在图像上叠加信息性文本，并将文件立即通过电子邮件发送给我们。
- en: In order to capture images from our camera at night, we also looked at ways
    to illuminate the capture area using both visible and infra-red lighting, with
    the ability to switch the lighting on and off as required by using a high-current
    Darlington transistor driver.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在夜间捕捉摄像头图像，我们还研究了如何使用可见光和红外光照亮捕捉区域，并能够根据需要通过使用高电流达林顿晶体管驱动器来开关照明。
- en: In the next chapter, we're going to get down to the business of putting together
    modules by building a mobile-optimized web-based control panel for our home security
    system. We'll learn how to set up a Web server on our Raspberry Pi and manipulate
    files using our Web control panel, which means that we'll start to explore how
    all of the elements we've encountered so far can come together as part of our
    final system.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将开始实际搭建模块，构建一个针对移动设备优化的基于Web的家庭安防系统控制面板。我们将学习如何在树莓派上设置Web服务器，并使用我们的Web控制面板操作文件，这意味着我们将开始探索到目前为止我们遇到的所有元素如何结合在一起，成为最终系统的一部分。
