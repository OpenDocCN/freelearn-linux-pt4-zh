["```\n    rpm -ivh <jdk Installer filename>.rpm\n\n    ```", "```\n     rpm -ivh <jre Installer filename>.rpm\n\n    ```", "```\n    find / -iname US_export_policy.jar\n\n    ```", "```\n     mkdir /opt/SCR\n\n    ```", "```\n    tar -zxvf /tmp/SCR-vmware-6.1.21.tar.gz -c /opt/SCR\n\n    ```", "```\n     cd /opt/SCR/bin\n\n    ```", "```\n    ./lumension_encryptor_tool.sh\n\n    ```", "```\n              platform=LINUX\n    ```", "```\n              arch=X86, X86_64\n    ```", "```\n              dist=REDHAT\n    ```", "```\n              thirdparty=true or false\n    ```", "```\n              user=string\n    ```", "```\n              pwd=[encrypted password string]\n    ```", "```\n              configlog=config_log_file_path/filename.log\n    ```", "```\n              checkPayload=true or false\n    ```", "```\n              dependencyCheck= Valid values (not case sensitive): NONE, DIRECT,\n              and TRANSITIVE\n    ```", "```\n              channels=es-4, server-5\n    ```", "```\n              downloadPayload=true or false\n    ```", "```\n              cacheRequestFolder=path/CacheRequest.xml\n\n              /opt/SCR/cacherequest\n    ```", "```\n              proxyServer=IP_address\n    ```", "```\n              proxyPort=port_number\n    ```", "```\n              proxyPwd=string\n    ```", "```\n     java.lang.IllegalArgumentException: certificate cannot be null or\n              not \n    a file \n\n    ```", "```\n     certificate=/etc/pki/entitlement/5280746408908734973.pem \n              privateKey=/etc/pki/entitlement/5280746408908734973-key.pem\n\n    ```", "```\nsubscription-manager register --username <User_Name> --password <Pass_Word> -auto-attach\n\n```", "```\n./startup.sh redhat-rt\n\n```", "```\n     vi /opt/SCR/bin/start_all_nix_replication.sh\n\n    ```", "```\n              #echo Running startup.sh hp-rt \n              #./startup.sh hp-rt \n              #echo Running startup.sh osx-rt \n              #./startup.sh osx-rt \n              echo Running startup.sh redhat-rt \n              ./startup.sh redhat-rt             \n              #echo Running startup.sh solaris-rt \n              #./startup.sh solaris-rt \n              #echo Running startup.sh suse-rt \n              #./startup.sh suse-rt \n\n    ```", "```\n     chmod +x  /opt/SCR/bin/start_all_nix_replication.sh \n\n    ```", "```\n     cd /etc/cron.daily \n           touch /etc/cron.daily/SCR \n           chmod +x /etc/cron.daily/SCR\n\n    ```", "```\n     #!/bin/sh \n           cd /opt/SCR/bin \n           echo \"### Get all new Unix content\" \n           ./start_all_nix_replication.sh \n\n    ```", "```\n     cd /etc/cron.daily\n\n    ```", "```\n     ./SCR\n\n    ```", "```\n     du -sh /opt/vcmpatches\n\n    ```", "```\n     # yum install httpd\n\n    ```", "```\n     # systemctl enable httpd\n\n    ```", "```\n     # systemctl start httpd.service\n\n    ```", "```\n     # vi /etc/httpd/conf/httpd.conf\n\n    ```", "```\n           AccessFileName /vcmpatches/.htaccess \n\n    ```", "```\n# vi /opt/vcmpatches/.htaccess\n\n```", "```\nAuthType Basic \nAuthName \"Restricted Area\" \nAuthUserFile /opt/vcmpatches/.htpasswd \nrequire valid-user \n\n```", "```\n#  htpasswd -c /opt/vcmpatches/.htpasswd  httpuser\n\n```", "```\n# cat /opt/vcmpatches/.htpasswd \nhttpuser:$apr1$1UgtgyfY$ed2kr8fDOB7XVd6UoytgE0\n\n```", "```\n     rpm -ivh mod_ssl-2.2.15-29.e16_4.x86_64.rpm\n\n    ```", "```\n     mkdir /etc/httpd/ssl\n\n    ```", "```\n     Openssl req -x509 -nodes -days 1000 -newkey rsa:2048 -keyout \n     /etc/httpd/ssl/apache.key -out /etc/httpd/ssl/apache.crt\n\n    ```", "```\n     vi /etc/httpd/conf.d/ssl.conf\n\n    ```", "```\n              ## SSL Virtual Host Context \n              <VirtualHost *:443> \n                  ServerAdmin root@localhost \n                  DocumentRoot /var/www/html \n                  ServerName SCR Server FQDN \n                  ServerAlias SCR Server hostname \n                  SSLEngine on \n                  SSLCertificateFile /etc/httpd/ssl/apache.crt \n                  SSLCertificateKeyFile /etc/httpd/ssl/apache.key \n\n              </VirtualHost> \n              <VirtualHost _default_:443> \n\n    ```", "```\n     #systemctl restart httpd.service\n\n    ```"]