["```\n$ logger -f file_name\n```", "```\n#!/bin/bash\ndeclare -i H\ndeclare -i M\ndeclare -i cur_H\ndeclare -i cur_M\ndeclare -i min_left\ndeclare -i hour_left\necho -e \"What time do you Wake Up?\"\nread H\necho -e \"and Minutes?\"\nread  M\ncur_H=`date +%H`\ncur_M=`date +%M`\necho \"You Selected \"\necho \"$H:$M\"\necho -e \"\\nIt is Currently $cur_H:$cur_M\"\nif [  $cur_H -lt $H ]; then\n    hour_left=`expr $H - $cur_H`\n    echo \"$H - $cur_H means You Have: $hour_left hours still\"\nfi\nif [ $cur_H -gt $H ]; then\n    hour_left=`expr $cur_H - $H`\n    echo -e  \"\\n$cur_H - $H means you have $hour_left hours left \\n\"\nfi\nif [ $cur_H == $H ]; then\n    hour_left=0\n    echo -e \"Taking a nap?\\n\"\nfi\nif [ $cur_M -lt $M ]; then\n    min_left=`expr $M - $cur_M`\n    echo -e \"$M -$cur_M you have: $min_left minutes still\"\nfi\nif [ $cur_M -gt $M ]; then\n    min_left=`expr $cur_M - $M`\n    echo -e \"$cur_M - $M you have $min_left minutes left \\n\"\nfi\nif [ $cur_M == $M ]; then\n    min_left=0\n    echo -e \"and no minutes\\n\"\nfi\n\necho -e \"Sleeping for $hour_left hours and $min_left minutes \\n\"\nsleep $hour_left\\h\nsleep $min_left\\m\nmplayer ~/.alarm/alarm.mp3\n```", "```\n# create a file 01.txt and add some content in that file.\n# create another file 02.txt and add some content in that file.\n$ dd if=/home/student/work/01.txt of=/home/student/work/02.txt bs=512 count=1\n```", "```\n$ sudo dd if=/dev/sda2 of=/home/student/hdbackup.img\n```", "```\n$ sudo dd if=/home/student/work/1.sh\n```", "```\ndialog --yesno \"Do you wish to continue?\" 0 0\na=$?\nif [ \"${a}\" == \"0\" ]; then\n    echo Yes\nelse\n    echo No\nfi\n```", "```\ndialog --calendar \"Select a date... \" 0 0 1 1 2018\nval=$?\n```", "```\ndialog --stdout --checklist \"Enable the account options you want:\" 10 40 3 \\\n              1 \"Home directory\" on \\\n              2 \"Signature file\" off \\\n              3 \"Simple password\" off\n```", "```\nconvert -raise 5x5 mountain.png mountain-raised.png\n```", "```\n#!/bin/bash\nE_DIR_NOMATCH=50\nE_BAD_DBFILE=51\ndbfile=Filerec.md5\n# storing records.\nset_up_database ()\n{\n    echo \"\"$directory\"\" > \"$dbfile\"\n    # Write directory name to first line of file.\n    md5sum \"$directory\"/* >> \"$dbfile\"\n    # Append md5 checksums and filenames.\n}\ncheck_database ()\n{\n    local n=0\n    local filename\n    local checksum\n    if [ ! -r \"$dbfile\" ]\n    then\n        echo \"Unable to read checksum database file!\"\n        exit $E_BAD_DBFILE\n    fi\n\n    while read rec[n]\n    do\n        directory_checked=\"${rec[0]}\"\n        if [ \"$directory_checked\" != \"$directory\" ]\n        then\n            echo \"Directories do not match up!\"\n            # Tried to use file for a different directory.\n            exit $E_DIR_NOMATCH\n        fi\n        if [ \"$n\" -gt 0 ]\n        then\n            filename[n]=$( echo ${rec[$n]} | awk '{ print $2 }' )\n            # md5sum writes recs backwards,\n            #+ checksum first, then filename.\n            checksum[n]=$( md5sum \"${filename[n]}\" )\n            if [ \"${rec[n]}\" = \"${checksum[n]}\" ]\n            then\n                echo \"${filename[n]} unchanged.\"\n            else\n                echo \"${filename[n]} : CHECKSUM ERROR!\"\n            fi\n        fi\n        let \"n+=1\"\n        done <\"$dbfile\" # Read from checksum database file.\n}\nif [ -z \"$1\" ]\nthen\n    directory=\"$PWD\" # If not specified,\n else\n    directory=\"$1\"\nfi\nclear\nif [ ! -r \"$dbfile\" ]\nthen\n    echo \"Setting up database file, \\\"\"$directory\"/\"$dbfile\"\\\".\";\n    echo\n    set_up_database\nfi\ncheck_database\necho\nexit 0\n```", "```\n$ mount -t ext4 /directorytobemounted /directoryinwhichitismounted -o ro,noexec\n```", "```\n$ mount -t ext4 /directorytobemounted /directoryinwhichitismounted -o defaults\n```", "```\n$ scp *from_host_name*:filename ***/local_directory_name*** \n```", "```\n$ w3m google.com\n```", "```\n$ elinks google.com\n```", "```\n$ sudo tcpdump -i eth0\n```", "```\n$ sudo tcpdump -A -i eth0\n```", "```\n$ sudo tcpdump -c 10 -i eth0\n```", "```\n$ sudo tcpdump -XX -i eth0\n```", "```\n$ sudo tcpdump -w 111.pcap -i eth0\n```", "```\n$ sudo tcpdump -n -i eth0\n```", "```\n$ sudo tcpdump -r 111.pcap\n```", "```\n$ file binary_name\n```", "```\n$ strings binary_name\n```", "```\n$ od -tx1 binary_name\n```", "```\n$ nm binary_name\n```", "```\n$ ldd binary_name\n```", "```\nTZ=\":Antarctica/Casey\" date\nTZ=\":Atlantic/Bermuda\" date\nTZ=\":Asia/Calcutta\" date\nTZ=\":Europe/Amsterdam\" date\n```", "```\n$ echo \"Welcome to Bash Cookbook\" | openssl enc -base64\n```", "```\n$ echo \" V2VsY29tZSB0byBCYXNoIENvb2tib29rCg==\" | openssl enc -base64 -d\n```", "```\n$ openssl enc -aes-256-cbc -in /etc/services -out enc_services.dat\n```", "```\n$ openssl enc -aes-256-cbc -d -in enc_services.dat > services.txt\n```"]