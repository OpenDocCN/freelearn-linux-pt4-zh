["```\nroot@beaglebone:~# echo cape-bone-iio > /sys/devices/bone_capemgr.9/slots\n\n```", "```\nroot@beaglebone:~# ./load_firmware.sh adc\n```", "```\nroot@beaglebone:~# cat /sys/devices/ocp.3/helper.12/AIN0\n24\n\n```", "```\nroot@beaglebone:~# cat /sys/devices/ocp.3/helper.12/AIN0\n201\n\n```", "```\nroot@beaglebone:~# cat /sys/bus/iio/devices/iio:device0/in_voltage0_raw\n\n```", "```\nroot@beaglebone:~# cat /sys/devices/ocp.3/helper.12/AIN1\n386\n\n```", "```\nroot@beaglebone:~# cat /sys/devices/ocp.3/helper.12/AIN1\n528\n\n```", "```\nroot@beaglebone:~# cat /sys/devices/ocp.3/helper.12/AIN1\n79\n\n```", "```\nroot@beaglebone:~# ../bin/gpio_set.sh 68 out\nroot@beaglebone:~# ../bin/gpio_set.sh 69 out\nroot@beaglebone:~# echo 1 > /sys/class/gpio/gpio68/value\nroot@beaglebone:~# echo 1 > /sys/class/gpio/gpio69/value\n\n```", "```\n# Install the signals traps\ntrap sig_handler SIGTERM SIGINT\n\n# Start sampling the data till a signal occours\necho \"$NAME: collecting data into file sample.log...\"\n\ndo_exit=false\nt0=$(date '+%s.%N')\n( while ! $do_exit ; do\n        t=$(date '+%s.%N')\n        v=$(cat $AIN_PATH/$dev)\n\n        echo \"$(bc -l <<< \"$t - $t0\") $v\"\n\n        # Sleep till the next period\n        sleep $(bc -l <<< \".5 - $(date '+%s.%N') + $t\")\ndone ) | tee sample.log\n\n# Plot the data\necho \"$NAME: done. Now generate the plot...\"\n\ngnuplot <<EOF\nset terminal png size 800,600 enhanced font \"Helvetica,20\"\nset output 'sample.png'\nset autoscale\nset nokey\nset grid lw 1\nshow grid\nset xlabel \"\\nTime\"\nset ylabel 'sample'\nset xtics rotate\nplot \"sample.log\" using 1:2 with lines\nEOF\n\necho \"$NAME: done. Data plotted into file sample.png\"\n```", "```\nfunction sig_handler () {\n        do_exit=true\n}\n```", "```\nroot@beaglebone:~# ./sample.sh AIN0\nsample.sh: collecting data into file sample.log (press CTRL+C to stop)...\n.046822125 29\n.607965667 36\n1.168452792 27\n1.728863042 37\n2.290465209 31\n2.851453792 22\n3.417320167 25\n3.980918459 26\n4.541227334 324\n5.101803001 439\n5.662116709 452\n6.223465293 466\n6.783610585 631\n7.346517043 670\n7.910204543 600\n8.471078668 569\n9.032048168 677\n9.592383627 728\n10.153342335 708\n10.714916752 736\n11.275682627 769\n11.836266085 672\n12.396825252 308\n12.958963794 267\n13.520244377 20\n14.081049085 19\n14.641610585 20\n15.202588419 20\n15.762929794 19\n16.324602752 19\n16.885479836 25\n17.450904252 19\n^Csample.sh: done. Now generate the plot...\n\n Rectangular grid drawn at x y tics\n Major grid drawn with linetype 0 linewidth 1.000\n Minor grid drawn with linetype 0 linewidth 1.000\n Grid drawn at default layer\n\nsample.sh: done. Data plotted into file sample.png\n\n```", "```\nroot@beaglebone:~# ./sample.sh AIN1\nsample.sh: collecting data into file sample.log (press CTRL+C to stop)...\n.046757875 78\n.609375334 78\n1.169878875 78\n1.730529209 78\n2.291640417 78\n2.852100834 78\n3.412606126 78\n3.973172542 79\n4.534430834 77\n5.094665667 78\n5.655394084 463\n6.216107209 477\n6.777377459 484\n7.337617209 486\n7.898274043 486\n8.458853793 487\n9.023789835 486\n9.590632751 486\n10.154009085 486\n10.715376668 479\n11.275998293 479\n11.836406710 476\n12.397433502 403\n12.958216252 92\n13.519537710 79\n14.080658377 79\n14.641473210 79\n15.202038044 78\n15.762509877 78\n16.323857252 79\n16.884874669 78\n17.445492127 77\n18.006021794 78\n^Csample.sh: done. Now generate the plot...\n\n Rectangular grid drawn at x y tics\n Major grid drawn with linetype 0 linewidth 1.000\n Minor grid drawn with linetype 0 linewidth 1.000\n Grid drawn at default layer\n\nsample.sh: done. Data plotted into file sample.png\n\n```", "```\nroot@beaglebone:~# dtc -O dtb -o /lib/firmware/BB-LEDS-C5-00A0.dtbo -b 0 -@ BB-LEDS-C5-00A0.dts\n\n```", "```\nroot@beaglebone:~# echo BB-LEDS-C5 > /sys/devices/bone_capemgr.9/slots\n\n```", "```\nroot@beaglebone:~# ls -d /sys/class/leds/c5*\n/sys/class/leds/c5:yellow  /sys/class/leds/c5:red\n\n```", "```\nroot@beaglebone:~# aptitude install python python-dateutil python-argparse\n\n```", "```\nroot@beaglebone:~# pip install yowsup\n\n```", "```\nroot@beaglebone:~# yowsup-cli demos --help-config > yowsup-cli.config\n\n```", "```\nroot@beaglebone:~# cat yowsup-cli.config\n\n############# Yowsup Configuration Sample ###########\n#\n# ====================\n# The file contains info about your WhatsApp account. This is used during # registration and login.\n# You can define or override all fields in the command line args as well.\n#\n# Country code. See http://www.ipipi.com/help/telephone-country-codes.htm.\n # This is now required.\ncc=49\n#\n# Your full phone number including the country code you defined in 'cc', # without preceding '+' or '00'\nphone=491234567890\n#\n# You obtain this password when you register using Yowsup.\npassword=NDkxNTIyNTI1NjAyMkBzLndoYXRzYXBwLm5ldA==\n#######################################################\n\n```", "```\ncc=39\nphone=39XXXXXXXXXX\nid=\npassword=\n\n```", "```\nroot@beaglebone:~# yowsup-cli registration -r sms -c  yowsup-cli.config\n\n```", "```\nINFO:yowsup.common.http.warequest:{\"status\":\"sent\",\"length\":6,\"method\":\"sms\",\"retry_after\":1805}\n\nstatus: sent\nretry_after: 1805\nlength: 6\nmethod: sms\n\n```", "```\nroot@beaglebone:~# yowsup-cli registration -R 633-170 -c yowsup-cli.config\n\n```", "```\n{\"status\":\"ok\",\"login\":\"39XXXXXXXXXX\",\"pw\":\"Kwf07sjuSz2J0Qwm3sBEtVNeBIk=\",\"type\":\"new\",\"expiration\":1467142355,\"kind\":\"free\",\"price\":\"\\u20ac0,89\",\"cost\":\"0.89\",\"currency\":\"EUR\",\"price_expiration\":1438319298}\n\nstatus: ok\nkind: free\npw: Kwf07sjuSz2J0Qwm3sBEtVNeBIk=\nprice: â‚¬ 0,89\nprice_expiration: 1438319298\ncurrency: EUR\ncost: 0.89\nexpiration: 1467142355\nlogin: 393292571400\ntype: new\n\n```", "```\nroot@beaglebone:~# cat yowsup-cli.config\ncc=39\nphone=39XXXXXXXXXX\nid=\npassword=Kwf07sjuSz2J0Qwm3sBEtVNeBIk=\n\n```", "```\nroot@beaglebone:~# yowsup-cli demos -c yowsup-cli.config -s 39YYYYYYYYYY \"Hello, it's your BeagleBone Black writing! :)\"\nWARNING:yowsup.stacks.yowstack:Implicit declaration of parallel layers in a tuple is deprecated, pass a YowParallelLayer instead\nINFO:yowsup.demos.sendclient.layer:Message sent\n\nYowsdown\n\n```", "```\nSOUND_DEV=\"/sys/devices/ocp.3/helper.12/AIN0\"\nLIGHT_DEV=\"/sys/devices/ocp.3/helper.12/AIN1\"\n\nsource ../lib/logging.sh\nsource ./config.sh\n\n# Check the configuration settings. If not specified use default values\n[ -z \"$TIMEOUT\" ] && TIMEOUT=60\n[ -z \"$SOUND_TH\" ] && SOUND_TH=500\n[ -z \"$LIGHT_TH\" ] && LIGHT_TH=500\nif [ -z \"$WHATSAPP_USER\" ] ; then\n        err \"you must define WHATSAPP_USER!\"\n        exit 1\nfi\n```", "```\nfunction read_sound () {\n        ret=0\n\n        while [ -z \"$v\" ] ; do\n                v=$(cat $SOUND_DEV)\n        done\n        [ \"$v\" -gt $SOUND_TH ] && ret=1\n\n        echo -n $ret\n}\n```", "```\nfunction set_led () {\n        name=$1\n        val=$2\n\n        case $val in\n        on)\n                echo none > /sys/class/leds/c5\\:$name/trigger\n                echo 255 > /sys/class/leds/c5\\:$name/brightness\n                ;;\n\n        off)\n                echo none > /sys/class/leds/c5\\:$name/trigger\n                echo 0 > /sys/class/leds/c5\\:$name/brightness\n                ;;\n\n        blink)\n                t=$((1000 / 2))\n\n                echo timer > /sys/class/leds/c5\\:$name/trigger\n                echo $t > /sys/class/leds/c5\\:$name/delay_on\n                echo $t > /sys/class/leds/c5\\:$name/delay_off\n                ;;\n\n        *)\n                err \"invalid LED status! Abort\"\n                exit 1\n                ;;\n        esac\n}\n\nfunction signal_status () {\n        s=$1\n\n        case $s in\n        IDLE)\n                set_led yellow off\n                set_led red off\n                ;;\n\n        SOUND)\n                set_led yellow blink\n                set_led red off\n                ;;\n\n        RUNNING)\n                set_led yellow on\n                set_led red off\n                ;;\n\n        NO_SOUND)\n                set_led yellow on\n                set_led red blink\n                ;;\n\n        DONE)\n                set_led yellow on\n                set_led red on\n                ;;\n\n        LIGHT)\n                set_led yellow blink\n                set_led red on\n                ;;\n\n        ROOM)\n                set_led yellow off\n                set_led red on\n                ;;\n\n        NO_LIGHT)\n                set_led yellow off\n                set_led red blink\n                ;;\n        esac\n\n        return\n}\n```", "```\nfunction send_alert () {\n        msg=$1\n\n        dbg \"user=$WHATSAPP_USER msg=\\\"$1\\\"\"\n        yowsup-cli demos -c yowsup-cli.config -s $WHATSAPP_USER \"$msg\"\n\n        return\n}\n```", "```\nfunction change_status () {\n     status=$1\n     sound=$2\n     light=$3\n     t0=$4\n\n     t=$(date \"+%s\")\n\n     dbg \"status=$status sound=$sound light=$light t-t0=$(($t - $t0))\"\n\n     case $status in\n     IDLE)\n             if [ $sound -eq 1 ] ; then\n                     echo SOUND\n                     return\n             fi\n             ;;\n\n     SOUND)\n             if [ $sound -eq 1 -a $(($t - $t0)) -gt $TIMEOUT ] ; then\n                     echo RUNNING\n                     return\n             fi\n             if [ $sound -eq 0 ] ; then\n                     echo IDLE\n                     return\n             fi\n             ;;\n\n     RUNNING)\n             if [ $sound -eq 0 ] ; then\n                     echo NO_SOUND\n                     return\n             fi\n             ;;\n\n     NO_SOUND)\n             if [ $sound -eq 0 -a $(($t - $t0)) -gt $TIMEOUT ] ; then\n                     echo DONE\n                     return\n             fi\n             if [ $sound -eq 1 ] ; then\n                     echo RUNNING\n                     return\n             fi\n             ;;\n\n     DONE)\n             if [ $light -eq 1 ] ; then\n                     echo LIGHT\n                     return\n             fi\n             ;;\n\n     LIGHT)\n             if [ $light -eq 1 -a $(($t - $t0)) -gt $TIMEOUT ] ; then\n                     echo ROOM\n                     return\n             fi\n             if [ $light -eq 0 ] ; then\n                     echo DONE\n                     return\n             fi\n             ;;\n\n     ROOM)\n             if [ $light -eq 0 ] ; then\n                     echo NO_LIGHT\n                     return\n             fi\n             ;;\n\n     NO_LIGHT)\n             if [ $light -eq 0 -a $(($t - $t0)) -gt $TIMEOUT ] ; then\n                     echo IDLE\n                     return\n             fi\n             if [ $light -eq 1 ] ; then\n                     echo NO_LIGHT\n                     return\n             fi\n             ;;\n\n     *)\n             err \"invalid status! Abort\"\n             exit 1\n             ;;\n     esac\n\n     # No status change!\n     echo $status\n}\n```", "```\n# Ok, do the job\ndbg \"using TIMEOUT=$TIMEOUT SOUND_TH=$SOUND_TH LIGHT_TH=$LIGHT_TH\"\n\nstatus=\"IDLE\"\nt0=0\n\nsignal_status $status\nwhile sleep 1 ; do\n        dbg \"old-status=$status\"\n\n        # Read the sensors\n        sound=$(read_sound)\n        light=$(read_light)\n\n        # Change status?\n        new_status=$(change_status $status $sound $light $t0)\n        if [ \"$new_status\" != \"$status\" ] ; then\n                t0=$(date \"+%s\")\n\n                # Set the leds status\n                signal_status $new_status\n\n                # We have to send any alert?\n                case $new_status in\n                RUNNING)\n                        # Send the message during SOUND->RUNNING # transaction\n                        # only\n                        [ \"$status\" == SOUND ] && send_alert \"washing machine is started!\"\n                        ;;\n\n                DONE)\n                        # Send the message during NO_SOUND->DONE # transaction\n                        # only\n                        [ \"$status\" == NO_SOUND ] && send_alert \"washing machine has finished!\"\n                        ;;\n\n                *)\n                        # Nop\n                        ;;\n                esac\n        fi\n        dbg \"new-status=$new_status\"\n\n        status=$new_status\ndone\n```", "```\nroot@beaglebone:~# ./SYSINIT.sh\ndone!\n```", "```\nroot@beaglebone:~# cat config.sh\n# Set the timeout value\nTIMEOUT=5\n\n# Set the sound threshold\nSOUND_TH=200\n\n# Set the light threshold\nLIGHT_TH=200\n\n# Set the Whatsapp account\nWHATSAPP_USER=39YYYYYYYYYY\n\n```", "```\nroot@beaglebone:~# ./state_machine.sh -d -l\nstate_machine.sh: using TIMEOUT=5 SOUND_TH=200 LIGHT_TH=200\nstate_machine.sh: old-status=IDLE\nstate_machine.sh: status=IDLE sound=0 light=0 t-t0=1398295377\nstate_machine.sh: new-status=IDLE\nstate_machine.sh: old-status=IDLE\n\n```", "```\nstate_machine.sh: status=IDLE sound=0 light=0 t-t0=1398295379\n...\nstate_machine.sh: status=IDLE sound=1 light=0 t-t0=1398295381\nstate_machine.sh: new-status=SOUND\nstate_machine.sh: old-status=SOUND\n\n```", "```\nstate_machine.sh: status=SOUND sound=1 light=0 t-t0=1\n...\nstate_machine.sh: status=SOUND sound=0 light=0 t-t0=4\nstate_machine.sh: new-status=IDLE\nstate_machine.sh: old-status=IDLE\n\n```", "```\nstate_machine.sh: status=IDLE sound=1 light=0 t-t0=1\n...\nstate_machine.sh: old-status=SOUND\ncat: /sys/devices/ocp.3/helper.12/AIN0: Resource temporarily unavailable\n\n```", "```\nstate_machine.sh: status=SOUND sound=1 light=0 t-t0=4\n...\nstate_machine.sh: status=SOUND sound=1 light=0 t-t0=6\nstate_machine.sh: user=393492432127 msg=\"washing machine is started!\"\nWARNING:yowsup.stacks.yowstack:Implicit declaration of parallel layers in a tuple is deprecated, pass a YowParallelLayer instead\nINFO:yowsup.demos.sendclient.layer:Message sent\n\nYowsdown\nstate_machine.sh: new-status=RUNNING\nstate_machine.sh: old-status=RUNNING\n\n```", "```\nstate_machine.sh: status=RUNNING sound=1 light=0 t-t0=2\n...\nstate_machine.sh: new-status=RUNNING\nstate_machine.sh: old-status=RUNNING\nstate_machine.sh: status=RUNNING sound=0 light=0 t-t0=8\nstate_machine.sh: new-status=NO_SOUND\nstate_machine.sh: old-status=NO_SOUND\n\n```", "```\nstate_machine.sh: status=NO_SOUND sound=0 light=0 t-t0=1\n...\nstate_machine.sh: status=NO_SOUND sound=0 light=0 t-t0=6\nstate_machine.sh: user=393492432127 msg=\"washing machine has finished!\"\nWARNING:yowsup.stacks.yowstack:Implicit declaration of parallel layers in a tuple is deprecated, pass a YowParallelLayer instead\nINFO:yowsup.demos.sendclient.layer:Message sent\n\nYowsdown\nstate_machine.sh: new-status=DONE\nstate_machine.sh: old-status=DONE\n\n```", "```\nstate_machine.sh: status=DONE sound=0 light=0 t-t0=1\n...\nstate_machine.sh: status=DONE sound=0 light=1 t-t0=10\nstate_machine.sh: new-status=LIGHT\nstate_machine.sh: old-status=LIGHT\n\n```", "```\nstate_machine.sh: status=LIGHT sound=0 light=1 t-t0=1\n...\nstate_machine.sh: status=LIGHT sound=0 light=1 t-t0=6\nstate_machine.sh: new-status=ROOM\nstate_machine.sh: old-status=ROOM\n\n```", "```\nstate_machine.sh: status=ROOM sound=0 light=1 t-t0=1\n...\nstate_machine.sh: status=ROOM sound=0 light=0 t-t0=8\nstate_machine.sh: new-status=NO_LIGHT\nstate_machine.sh: old-status=NO_LIGHT\n\n```", "```\nstate_machine.sh: status=NO_LIGHT sound=0 light=0 t-t0=1\n...\nstate_machine.sh: status=NO_LIGHT sound=0 light=0 t-t0=6\nstate_machine.sh: new-status=IDLE\nstate_machine.sh: old-status=IDLE\nstate_machine.sh: status=IDLE sound=0 light=0 t-t0=1\nstate_machine.sh: new-status=IDLE\nstate_machine.sh: old-status=IDLE\n\n```"]