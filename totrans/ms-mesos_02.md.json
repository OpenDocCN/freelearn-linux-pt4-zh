["```\n    --resources='ports:[9200-9200,9300-9300]' ...\n\n    ```", "```\n    $ cat /etc/mesos-slave/resources\n    ports:[9200-9200,9300-9300]\n    $\n\n    ```", "```\n--roles = \"name1, name2, name3\"\n\n```", "```\n--roles = \"hdfs\"\n\n```", "```\necho hdfs > /etc/mesos-master/role\n\n```", "```\nsudo service mesos-master restart\n\n```", "```\n<property>\n  <name>mesos.hdfs.role</name>\n  <value>hdfs</value>\n  </property>\n```", "```\n--resources=\"cpus:6;mem:18432;cpus(hdfs):2;mem(hdfs):6144\"\n\n```", "```\nsudo service mesos-slave stop\n\n```", "```\nrm -f /tmp/mesos/meta/slaves/latest\n\n```", "```\nsudo service mesos-slave start\n\n```", "```\n{\n  \"id\": <offer_id>,\n  \"framework_id\": <framework_id>,\n  \"slave_id\": <slave_id>,\n  \"hostname\": <hostname>,\n  \"resources\": [\n    {\n      \"name\": \"cpus\",\n      \"type\": \"SCALAR\",\n      \"scalar\": { \"value\": 8 },\n      \"role\": \"*\",\n    },\n    {\n      \"name\": \"mem\",\n      \"type\": \"SCALAR\",\n      \"scalar\": { \"value\": 12288 },\n      \"role\": \"*\",\n    }\n  ]\n}\n```", "```\n{\n  \"type\": Offer::Operation::RESERVE,\n  \"reserve\": {\n    \"resources\": [\n      {\n        \"name\": \"cpus\",\n        \"type\": \"SCALAR\",\n        \"scalar\": { \"value\": 4 },\n        \"role\": <framework_role>,\n        \"reservation\": {\n          \"principal\": <framework_principal>\n        }\n      },\n      {\n        \"name\": \"mem\",\n        \"type\": \"SCALAR\",\n        \"scalar\": { \"value\": 6144 },\n        \"role\": <framework_role>,\n        \"reservation\": {\n          \"principal\": <framework_principal>\n        }\n      }\n    ]\n  }\n}\n```", "```\n{\n  \"id\": <offer_id>,\n  \"framework_id\": <framework_id>,\n  \"slave_id\": <slave_id>,\n  \"hostname\": <hostname>,\n  \"resources\": [\n    {\n      \"name\": \"cpus\",\n      \"type\": \"SCALAR\",\n      \"scalar\": { \"value\": 4 },\n      \"role\": <framework_role>,\n      \"reservation\": {\n        \"principal\": <framework_principal>\n      }\n    },\n    {\n      \"name\": \"mem\",\n      \"type\": \"SCALAR\",\n      \"scalar\": { \"value\": 6144 },\n      \"role\": <framework_role>,\n      \"reservation\": {\n        \"principal\": <framework_principal>\n      }\n    },\n  ]\n}\n```", "```\n{\n  \"id\": <offer_id>,\n  \"framework_id\": <framework_id>,\n  \"slave_id\": <slave_id>,\n  \"hostname\": <hostname>,\n  \"resources\": [\n    {\n      \"name\": \"cpus\",\n      \"type\": \"SCALAR\",\n      \"scalar\": { \"value\": 4 },\n      \"role\": <framework_role>,\n      \"reservation\": {\n        \"principal\": <framework_principal>\n      }\n    },\n    {\n      \"name\": \"mem\",\n      \"type\": \"SCALAR\",\n      \"scalar\": { \"value\": 6144 },\n      \"role\": <framework_role>,\n      \"reservation\": {\n        \"principal\": <framework_principal>\n      }\n    },\n  ]\n}\n```", "```\n{\n  \"type\": Offer::Operation::UNRESERVE,\n  \"unreserve\": {\n    \"resources\": [\n      {\n        \"name\": \"cpus\",\n        \"type\": \"SCALAR\",\n        \"scalar\": { \"value\": 4 },\n        \"role\": <framework_role>,\n        \"reservation\": {\n          \"principal\": <framework_principal>\n        }\n      },\n      {\n        \"name\": \"mem\",\n        \"type\": \"SCALAR\",\n        \"scalar\": { \"value\": 6144 },\n        \"role\": <framework_role>,\n        \"reservation\": {\n          \"principal\": <framework_principal>\n        }\n      }\n    ]\n  }\n}\n```", "```\n$ curl -i \\\n  -u <operator_principal>:<password> \\\n  -d slaveId=<slave_id> \\\n  -d resources='[ \\\n    { \\\n      \"name\": \"cpus\", \\\n      \"type\": \"SCALAR\", \\\n      \"scalar\": { \"value\": 4 }, \\\n      \"role\": <framework_role>, \\\n      \"reservation\": { \\\n        \"principal\": <operator_principal> \\\n      } \\\n    }, \\\n    { \\\n      \"name\": \"mem\", \\\n      \"type\": \"SCALAR\", \\\n      \"scalar\": { \"value\": 6144 }, \\\n      \"role\": <framework_role>,\\\n      \"reservation\": { \\\n        \"principal\": <operator_principal> \\\n      } \\\n    } \\\n  ]' \\\n  -X POST http://<ip>:<port>/master/reserve\n```", "```\n$ curl -i \\\n  -u <operator_principal>:<password> \\\n  -d slaveId=<slave_id> \\\n  -d resources='[ \\\n    { \\\n      \"name\": \"cpus\", \\\n      \"type\": \"SCALAR\", \\\n      \"scalar\": { \"value\": 4 }, \\\n      \"role\": <framework_role>, \\\n      \"reservation\": { \\\n        \"principal\": <operator_principal> \\\n      } \\\n    }, \\\n    { \\\n      \"name\": \"mem\", \\\n      \"type\": \"SCALAR\", \\\n      \"scalar\": { \"value\": 6144 }, \\\n      \"role\": <framework_role>\\\n      \"reservation\": { \\\n        \"principal\": <operator_principal> \\\n      } \\\n    } \\\n  ]' \\\n  -X POST http://<ip>:<port>/master/unreserve\n```", "```\nFrameworkInfo framework;\nframework.set_name(\"Revocable framework\");\n\nframework.add_capabilities()->set_type(\n  FrameworkInfo::Capability::REVOCABLE_RESOURCES);\n```", "```\n{\n  \"id\": <offer_id>,\n  \"framework_id\": <framework_id>,\n  \"slave_id\": <slave_id>,\n  \"hostname\": <hostname>,\n  \"resources\": [\n    {\n      \"name\": \"cpus\",\n      \"type\": \"SCALAR\",\n      \"scalar\": {\n        \"value\": 4\n      },\n      \"role\": \"*\"\n    }, {\n      \"name\": \"mem\",\n      \"type\": \"SCALAR\",\n      \"scalar\": {\n        \"value\": 6144\n      },\n      \"role\": \"*\"\n    },\n    {\n      \"name\": \"cpus\",\n      \"type\": \"SCALAR\",\n      \"scalar\": {\n        \"value\": 1\n      },\n      \"role\": \"*\",\n      \"revocable\": {}\n    }\n  ]\n}\n```", "```\nclass ResourceEstimator \n{ \npublic: \n  virtual Try initialize(const lambda::function<process::Future()>& usage) = 0; \n  virtual process::Future oversubscribable() = 0;\n};\n```", "```\nclass QoSController \n{ \npublic: \n  virtual Try initialize(const lambda::function<process::Future()>& usage) = 0; \n  virtual process::Future<std::list> corrections() = 0;\n};\n```", "```\n    {\n      \"libraries\": [\n        {\n          \"file\": \"/path/to/example.so\",\n          \"modules\": [\n            {\n              \"name\": \"org_apache_mesos_X\",\n            },\n            {\n              \"name\": \"org_apache_mesos_Y\"\n            }\n          ]\n        }\n      ]\n    }\n    ```", "```\n    {\n      \"libraries\": [\n        {\n          \"name\": \"example\",\n          \"modules\": [\n            {\n              \"name\": \"org_apache_mesos_X\"\n              \"parameters\": [\n                {\n                  \"key\": \"A\",\n                  \"value\": \"B\",\n                }\n              ]\n            },\n            {\n              \"name\": \"org_apache_mesos_Y\"\n            }\n          ]\n        }\n      ]\n    }\n    ```", "```\n    --modules='{\"libraries\":[{\"file\":\"/path/to/example.so\", \"modules\":[{\"name\":\"org_apache_mesos_X\"}]}]}'\n\n    ```", "```\ng++ -lmesos -fpic -o test_module.o test_module.cpp\n$ gcc -shared -o libtest_module.so test_module.o\n\n```", "```\n./bin/mesos-master.sh --work_dir=m/work --modules=\"file://<modules-including-allocator>.json\" --allocator=ExternalAllocatorModule\n```", "```\nmessage Reconcile {\n  repeated TaskStatus statuses = 1; // Should be non-terminal only.\n}\n```", "```\n{\n  \"id\" : <offer_id>,\n  \"framework_id\" : <framework_id>,\n  \"slave_id\" : <slave_id>,\n  \"hostname\" : <hostname>,\n  \"resources\" : [\n    {\n      \"name\" : \"disk\",\n      \"type\" : \"SCALAR\",\n      \"scalar\" : { \"value\" : 6144 },\n      \"role\" : <framework_role>,\n      \"reservation\" : {\n        \"principal\" : <framework_principal>\n      }\n    }\n  ]\n}\n```", "```\n{\n  \"type\" : Offer::Operation::CREATE,\n  \"create\": {\n    \"volumes\" : [\n      {\n        \"name\" : \"disk\",\n        \"type\" : \"SCALAR\",\n        \"scalar\" : { \"value\" : 6144 },\n        \"role\" : <framework_role>,\n        \"reservation\" : {\n          \"principal\" : <framework_principal>\n        },\n        \"disk\": {\n          \"persistence\": {\n            \"id\" : <persistent_volume_id>\n          },\n          \"volume\" : {\n            \"container_path\" : <container_path>,\n            \"mode\" : <mode>\n          }\n        }\n      }\n    ]\n  }\n}\n```", "```\n{\n  \"id\" : <offer_id>,\n  \"framework_id\" : <framework_id>,\n  \"slave_id\" : <slave_id>,\n  \"hostname\" : <hostname>,\n  \"resources\" : [\n    {\n      \"name\" : \"disk\",\n      \"type\" : \"SCALAR\",\n      \"scalar\" : { \"value\" : 6144 },\n      \"role\" : <framework_role>,\n      \"reservation\" : {\n        \"principal\" : <framework_principal>\n      },\n      \"disk\": {\n        \"persistence\": {\n          \"id\" : <persistent_volume_id>\n        },\n        \"volume\" : {\n          \"container_path\" : <container_path>,\n          \"mode\" : <mode>\n        }\n      }\n    }\n  ]\n}\n```", "```\n{\n  \"id\" : <offer_id>,\n  \"framework_id\" : <framework_id>,\n  \"slave_id\" : <slave_id>,\n  \"hostname\" : <hostname>,\n  \"resources\" : [\n    {\n      \"name\" : \"disk\",\n      \"type\" : \"SCALAR\",\n      \"scalar\" : { \"value\" : 2048 },\n      \"role\" : <framework_role>,\n      \"reservation\" : {\n        \"principal\" : <framework_principal>\n      },\n      \"disk\": {\n        \"persistence\": {\n          \"id\" : <persistent_volume_id>\n        },\n        \"volume\" : {\n          \"container_path\" : <container_path>,\n          \"mode\" : <mode>\n        }\n      }\n    }\n  ]\n}\n```", "```\n{\n  \"type\" : Offer::Operation::DESTROY,\n  \"destroy\" : {\n    \"volumes\" : [\n      {\n        \"name\" : \"disk\",\n        \"type\" : \"SCALAR\",\n        \"scalar\" : { \"value\" : 6144 },\n        \"role\" : <framework_role>,\n        \"reservation\" : {\n          \"principal\" : <framework_principal>\n        },\n        \"disk\": {\n          \"persistence\": {\n            \"id\" : <persistent_volume_id>\n          },\n          \"volume\" : {\n            \"container_path\" : <container_path>,\n            \"mode\" : <mode>\n          }\n        }\n      }\n    ]\n  }\n}\n```", "```\n{\n  \"id\" : <offer_id>,\n  \"framework_id\" : <framework_id>,\n  \"slave_id\" : <slave_id>,\n  \"hostname\" : <hostname>,\n  \"resources\" : [\n    {\n      \"name\" : \"disk\",\n      \"type\" : \"SCALAR\",\n      \"scalar\" : { \"value\" : 6144 },\n      \"role\" : <framework_role>,\n      \"reservation\" : {\n        \"principal\" : <framework_principal>\n      }\n    }\n  ]\n}\n```"]