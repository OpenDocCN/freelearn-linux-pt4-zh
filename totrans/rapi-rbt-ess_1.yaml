- en: Chapter 1. Configuring and Programming Raspberry Pi
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章 配置和编程树莓派
- en: Robots are beginning to infiltrate our world. They come in all shapes and sizes,
    with a wide range of capabilities. And, just like the evolution of the personal
    computer before them, much of what is happening in the robot development world
    is coming from hobbyists and do-it-yourselfers that are using a new generation
    of inexpensive hardware and free, open source software to build machines with
    all kinds of amazing capabilities. In this book, you will learn how to build robots
    by building a robot, a four-legged quadruped with sensor and vision capabilities.
    The skills you will learn, however, can also be used on a wide variety of walking,
    rolling, swimming, or flying robots.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 机器人正逐渐渗透到我们的世界中。它们形态各异，功能各不相同。就像个人计算机的进化一样，机器人开发领域的许多进展也来自于那些利用新一代廉价硬件和免费的开源软件进行开发的爱好者和DIY者，他们通过这些工具制造出各种具备惊人能力的机器。在本书中，你将学习如何通过制造一个机器人——一个具备传感器和视觉能力的四足机器人——来学习机器人构建的技能。然而，这些技能也可以应用于各种行走、滚动、游泳或飞行的机器人。
- en: 'In this chapter, you''ll learn:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，你将学习：
- en: How to configure your Raspberry Pi, the control center of your robot, with the
    Raspbian operating system
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用Raspbian操作系统配置树莓派，这将成为你机器人控制中心的一部分。
- en: How to set up a remote development environment so you can program your robot
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何设置远程开发环境，以便你可以编程控制你的机器人。
- en: Basic programming skills in both Python and C so you can both create and edit
    the programs your robot will need to do all those amazing things
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具备Python和C的基本编程技能，这样你就可以创建和编辑机器人所需的程序，来完成所有那些令人惊叹的任务。
- en: Configuring Raspberry Pi – the brain of your robot
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置树莓派——你机器人的大脑
- en: One of the most important parts of your robot is the processor system you use
    to control all the different hardware. In this book, you'll learn how to use Raspberry
    Pi, a small, inexpensive, easy-to-use processor system. Raspberry Pi comes in
    several flavors – the original A and B model, and the new and improved A+ and
    B+ model. The B+ flavor is the most popular and comes with additional input/output
    capability, four USB connections, more memory, and will be the flavor we'll focus
    on in this book.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 你机器人中最重要的部分之一是你用来控制所有不同硬件的处理器系统。在本书中，你将学习如何使用树莓派——一个小型、廉价、易于使用的处理器系统。树莓派有几种不同的型号——最初的A型和B型，以及改进后的A+型和B+型。B+型是最受欢迎的型号，具有额外的输入/输出能力、四个USB接口、更大的内存，它将是本书中我们重点介绍的型号。
- en: 'Here are the items you''ll need to set up an initial Raspberry Pi development
    environment:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是设置初始树莓派开发环境所需的设备：
- en: A Raspberry Pi, Model B 2\. There are three other Raspberry Pi models, the B+,
    the B, and the A. These are models with less processing power and different hardware
    configurations. In this book, we'll focus on the Raspberry Pi Model B 2; it has
    the best processing power and the most useful input/output access. However, many
    of the items in this book will also work with the Raspberry Pi B+ and A versions,
    perhaps with some additional hardware.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个树莓派，B 2 型号。还有其他三种树莓派型号，分别是B+、B和A。这些型号的处理能力较低，并且硬件配置也有所不同。本书将重点介绍树莓派B 2型，它具有最佳的处理能力和最实用的输入/输出接口。然而，本书中的许多内容也适用于树莓派B+和A版本，可能需要一些额外的硬件。
- en: The USB cable to provide power to the board.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一条用于为主板提供电力的USB电缆。
- en: A microSD card — at least 4 GB.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一张microSD卡——至少4GB。
- en: A microSD card writer.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一台microSD卡读卡器。
- en: Another computer that is connected to the Internet.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 另一台已连接到互联网的计算机。
- en: An Internet connection for the board — for the initial configuration steps,
    you'll need a LAN cable and wired LAN connection.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一条用于连接主板的网络线——在初步配置过程中，你需要一根LAN电缆和有线LAN连接。
- en: A wireless LAN device.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一台无线LAN设备。
- en: 'Here is what the Raspberry Pi B 2 board looks like:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是树莓派B 2型号主板的外观：
- en: '![Configuring Raspberry Pi – the brain of your robot](img/B04591_01_01.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![配置树莓派 - 你机器人的大脑](img/B04591_01_01.jpg)'
- en: 'You should also acquaint yourself with the different connections on the board.
    Here they are on the B 2, labelled for your information:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 你还应该熟悉主板上的不同连接端口。以下是B 2型号的连接端口，已标注以供参考：
- en: '![Configuring Raspberry Pi – the brain of your robot](img/B04591_01_02.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![配置树莓派 - 你机器人的大脑](img/B04591_01_02.jpg)'
- en: Installing the operating system
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装操作系统
- en: Before you get started, you'll need to download and create a card with the Raspbian
    operating system. You are going to install Raspbian, an open source version of
    the Debian version of Linux, on your Raspberry Pi.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，你需要下载并创建一张包含Raspbian操作系统的SD卡。你将把Raspbian——一个开源的Debian版本Linux系统——安装到你的树莓派上。
- en: There are two approaches to getting Raspbian on your board. The board is getting
    popular enough that you can now buy an SD card that already has Rasbpian installed,
    or you can download it onto your personal computer and then install it on the
    card. If you are going to download a distribution, you need to decide if you are
    going to use a Windows computer to download and create an SD card, or a Linux
    machine.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种方法可以将Raspbian安装到你的板子上。由于树莓派越来越流行，你现在可以购买一张预装了Raspbian的SD卡，或者你也可以将其下载到个人电脑上，然后安装到SD卡上。如果你打算下载一个发行版，你需要决定是使用Windows电脑来下载并创建SD卡，还是使用Linux机器。
- en: No matter which machine you are going to use, you'll need to download an image.
    Open a browser window. Go to the Raspberry Pi site, [www.raspberrypi.org](http://www.raspberrypi.org),
    and select **Downloads** from the top of the page. This will give you a variety
    of download choices. Go to the **Raspbian** section and select the `.zip` file
    just to the right of the image identifier. This will download an archived file
    that has the image for your Raspbian operating system. Note the default username
    and password; you'll need those later.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你将使用哪台机器，都需要下载一个镜像。打开浏览器窗口，访问树莓派官网，[www.raspberrypi.org](http://www.raspberrypi.org)，然后从页面顶部选择**下载**。这将提供多种下载选项。进入**Raspbian**部分，选择图片标识右侧的`.zip`文件。这将下载一个包含Raspbian操作系统镜像的压缩文件。请记下默认的用户名和密码，稍后会用到。
- en: 'If you''re using Windows, you''ll need to unzip the file using an archiving
    program like 7-Zip. This will leave you with a file that has the `.img` extension,
    a file that can be imaged on your card. Next, you''ll need a program that can
    write the image to the card. Use Image Writer if you are going to create your
    card using a Windows machine. You can find a link to this program at the top of
    the download section on the [www.raspberrypi.org](http://www.raspberrypi.org)
    website. Plug your card into the PC, run this program, and you should see this:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是Windows，你需要通过类似7-Zip的归档程序来解压文件。解压后，你将得到一个`.img`扩展名的文件，这个文件可以被写入到你的SD卡中。接下来，你需要一个程序将镜像写入到卡片中。如果你打算用Windows机器创建SD卡，可以使用Image
    Writer程序。你可以在[www.raspberrypi.org](http://www.raspberrypi.org)网站的下载部分找到该程序的链接。将SD卡插入PC，运行该程序，界面应该如下所示：
- en: '![Installing the operating system](img/B04591_01_03.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![安装操作系统](img/B04591_01_03.jpg)'
- en: 'Select the correct card and image; it should look something like this:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 选择正确的卡片和镜像，应该看起来像这样：
- en: '![Installing the operating system](img/B04591_01_04.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![安装操作系统](img/B04591_01_04.jpg)'
- en: Then select **Write**. This will take some time, but when it is complete, eject
    the card from the PC.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 然后选择**写入**。这将需要一些时间，但完成后，从PC中弹出卡片。
- en: 'If you are using Linux, you''ll need to unarchive the file and then write it
    to the card. You can do all of this with one command. However, you do need to
    find the `/dev` device label for your card. You can do this with the `ls -la /dev/sd*`
    command. If you run this before you plug in your card, you might see something
    like the following:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用Linux，你需要先解压文件，然后将其写入到卡片中。你可以通过一条命令完成所有操作。不过，你需要找到卡片的`/dev`设备标签。你可以通过`ls
    -la /dev/sd*`命令来做到这一点。如果你在插入卡片之前运行此命令，可能会看到如下内容：
- en: '![Installing the operating system](img/B04591_01_05.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![安装操作系统](img/B04591_01_05.jpg)'
- en: 'After plugging in your card, you might see something like the following:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 插入卡片后，你可能会看到如下内容：
- en: '![Installing the operating system](img/B04591_01_06.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![安装操作系统](img/B04591_01_06.jpg)'
- en: 'Note that your card is `sdb`. Now, go to the directory where you downloaded
    the archived image file and issue the following command:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，你的卡片是`/dev/sdb`。现在，进入你下载归档镜像文件的目录，并运行以下命令：
- en: '[PRE0]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The `2015-01-31-raspbian.img` command will be replaced with the image file that
    you downloaded, and `/dev/sdX` will be replaced with your card ID; in this example,
    `/dev/sdb`.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`2015-01-31-raspbian.img`命令将被你下载的镜像文件替代，`/dev/sdX`将被你的卡片ID替代；在这个例子中是`/dev/sdb`。'
- en: Once your card image has been created, install it on the Raspberry Pi. You'll
    also need to plug your Raspberry Pi into the LAN cable, and the LAN cable into
    your wired LAN network.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你的卡片镜像创建完成，安装到Raspberry Pi上。你还需要将Raspberry Pi连接到局域网（LAN）电缆，并将LAN电缆插入有线局域网网络。
- en: Note
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you don't have a wired connection, you can complete the following steps by
    connecting your Raspberry Pi directly to a monitor, keyboard, and mouse.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有有线连接，可以通过直接将Raspberry Pi连接到显示器、键盘和鼠标来完成以下步骤。
- en: Power the device. The **POWER LED** should light and your device should boot
    from the card. To configure the card, you'll need to access it remotely. To do
    this, you'll now need to connect to the device via SSH, a secure protocol that
    allows you to control one computer remotely from another computer.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 开启设备电源。**POWER LED**应当亮起，设备应从卡片启动。为了配置卡片，你需要远程访问它。为此，你现在需要通过SSH连接到设备，SSH是一种安全协议，允许你从另一台计算机远程控制一台计算机。
- en: 'One of the challenges of accessing the system remotely is that you need to
    know the IP address of your board. There is a way to discover this by using an
    IP scanner application. There are several scanners available for free; on Windows,
    a possible choice is Advanced IP Scanner, which is available from [http://www.advanced-ip-scanner.com/](http://www.advanced-ip-scanner.com/).
    Here is what the program looks like when it is run:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 远程访问系统的挑战之一是你需要知道板卡的IP地址。通过使用IP扫描器应用程序，可以发现这一点。有几款免费的扫描器可供选择；在Windows上，一个可能的选择是Advanced
    IP Scanner，可以从[http://www.advanced-ip-scanner.com/](http://www.advanced-ip-scanner.com/)下载。以下是程序运行时的界面：
- en: '![Installing the operating system](img/B04591_01_07.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![安装操作系统](img/B04591_01_07.jpg)'
- en: Clicking on the **Scan** selector scans for all the devices connected to the
    network. You can also do this in Linux; one application for IP scanning in Linux
    is called Nmap. To install Nmap, type in `sudo apt-get install nmap`. To run Nmap,
    type in `sudo nmap -sP 10.25.155.1/154` and the scanner will scan the addresses
    from 10.25.155.1 to 10.25.155.154.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**Scan**选择器可以扫描所有连接到网络的设备。你也可以在Linux上执行此操作；在Linux中，一个IP扫描应用程序叫做Nmap。要安装Nmap，输入`sudo
    apt-get install nmap`。要运行Nmap，输入`sudo nmap -sP 10.25.155.1/154`，扫描器将扫描从10.25.155.1到10.25.155.154的地址。
- en: These scanners can let you know which addresses are being used, and this should
    then let you find your Raspberry Pi IP address. Since you are going to access
    your device via SSH, you'll also need an SSH terminal program running on your
    remote computer. If you are running Microsoft Windows, you can download such an
    application. One simple and easy choice is Putty. It is free and does a very good
    job of allowing you to save your configuration so you don't have to type it in
    each time. This program is available at [www.putty.org](http://www.putty.org).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这些扫描器可以让你知道哪些地址正在使用，这样你就能找到你的Raspberry Pi的IP地址。由于你将通过SSH访问设备，你还需要在远程计算机上运行一个SSH终端程序。如果你使用的是Microsoft
    Windows，可以下载这样的应用程序。一个简单易用的选择是Putty。它是免费的，并且做得非常好，可以保存配置，这样你就不必每次都重新输入。该程序可以从[www.putty.org](http://www.putty.org)下载。
- en: 'Download Putty on your Microsoft Windows machine. Then run `putty.exe`. You
    should see a configuration window. It will look something like the following screenshot:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的Microsoft Windows计算机上下载Putty。然后运行`putty.exe`。你应该会看到一个配置窗口，它看起来像下面的截图：
- en: '![Installing the operating system](img/B04591_01_08.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![安装操作系统](img/B04591_01_08.jpg)'
- en: Type in the `inet addr` from the IP Scanner in the **Host Name** space and make
    sure that the SSH is selected. You may want to save this configuration under Raspberry
    Pi so you can reload it each time.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在**Host Name**字段中输入IP扫描器中的`inet addr`，并确保选择了SSH。你可能希望将此配置保存为“Raspberry Pi”，这样每次都可以重新加载它。
- en: 'When you click on **Open**, the system will try to open a terminal window onto
    your Raspberry Pi via the LAN connection. The first time you do this, you will
    get a warning about an RSA key, as the two computers don''t know about each other;
    so Windows is complaining that a computer it doesn''t know is about to be connected
    in a fairly intimate way. Simply click on **OK**, and you should get a terminal
    with a login prompt, like the following screenshot:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 当你点击**Open**时，系统将尝试通过局域网连接打开Raspberry Pi的终端窗口。第一次这样做时，你会收到一个关于RSA密钥的警告，因为这两台计算机互不认识；所以Windows会提示你一台它不认识的计算机即将以相当亲密的方式连接。只需点击**OK**，你应该会看到一个带有登录提示的终端，像下面的截图一样：
- en: '![Installing the operating system](img/B04591_01_09.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![安装操作系统](img/B04591_01_09.jpg)'
- en: Now you can log in and issue commands to your Raspberry Pi. If you'd like to
    do this from a Linux machine, the process is even simpler. Bring up a terminal
    window and then type in `ssh pi@xxx.xxx.xxx.xxx –p 22`, where `xxx.xxx.xxx.xxx`
    is the `inet addr` of your device. This will then bring you to the login screen
    of your Raspberry Pi, which should look similar to the previous screenshot.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以登录并向Raspberry Pi发送命令。如果你希望从Linux机器上进行操作，过程会更简单。打开一个终端窗口，并输入`ssh pi@xxx.xxx.xxx.xxx
    –p 22`，其中`xxx.xxx.xxx.xxx`是设备的`inet addr`。这将带你进入Raspberry Pi的登录界面，应该与之前的截图类似。
- en: 'After your log in, you should get a screen that looks like the following:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 登录后，你应该看到如下界面：
- en: '![Installing the operating system](img/B04591_01_10.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![安装操作系统](img/B04591_01_10.jpg)'
- en: 'First, you''ll want to expand the file system to take up the entire card. So,
    hit the *Enter* key, and you''ll see the following screen:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要扩展文件系统以占用整个卡片空间。所以，按下*Enter*键，你将看到以下屏幕：
- en: '![Installing the operating system](img/B04591_01_11.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![安装操作系统](img/B04591_01_11.jpg)'
- en: Hit *Enter* once again and you'll go back to the main configuration screen.
    Now, select the **Enable Boot to Desktop/Scratch** option.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 再次按*Enter*键，你将返回到主配置界面。现在，选择**启用桌面/程序启动**选项。
- en: '![Installing the operating system](img/B04591_01_12.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![安装操作系统](img/B04591_01_12.jpg)'
- en: 'When you hit *Enter*, you''ll see the following screen:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 当你按下*Enter*键时，你将看到以下屏幕：
- en: '![Installing the operating system](img/B04591_01_13.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![安装操作系统](img/B04591_01_13.jpg)'
- en: You can also choose to overclock your device. This is a way for you to get higher
    performance from your system. However, there is a risk that you can end up with
    a system that has reliability problems.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以选择超频你的设备。这是一种让你从系统中获取更高性能的方式。不过，超频有可能会导致系统出现可靠性问题。
- en: Once you are done and are back at the main configuration menu, hit the *Tab*
    key until you are positioned over the **<Finish>** selection, then hit *Enter*.
    Then, hit *Enter* again so that you can reboot your Raspberry Pi. This time, when
    you log in, you will not see any configuration selections. However, if you ever
    want to change your configuration choices, you can run the configuration tool
    by typing in `raspi-config` at the command prompt.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，返回到主配置菜单，按*Tab*键直到光标定位到**<Finish>**选项上，然后按*Enter*键。接着，再次按*Enter*键以重启你的Raspberry
    Pi。此次登录时，你将看不到任何配置选项。然而，如果你将来想要更改配置选项，可以通过在命令提示符下输入`raspi-config`来运行配置工具。
- en: Adding a remote graphical user interface
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加远程图形用户界面
- en: For some steps in your robot build, you will need a graphical look at your system.
    You can get this on your Raspberry Pi using an application called vncserver. You'll
    need to install a version of this on your Raspberry Pi by typing in `sudo apt-get
    install tightvncserver` in a terminal window on your Raspberry Pi.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建机器人时，有些步骤你需要通过图形界面查看系统。你可以通过名为vncserver的应用程序，在你的Raspberry Pi上获取这个界面。你需要在Raspberry
    Pi的终端窗口中输入`sudo apt-get install tightvncserver`来安装此应用程序的版本。
- en: 'Tightvncserver is an application that will allow you to remotely view your
    complete graphical desktop. Once you have it installed, you can do the following:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Tightvncserver是一个允许你远程查看完整图形桌面的应用程序。安装完成后，你可以执行以下操作：
- en: You'll need to start the server by typing in `vncserver` in a terminal window
    on the Raspberry Pi.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要通过在Raspberry Pi的终端窗口中输入`vncserver`来启动服务器。
- en: You will then be prompted for a password, prompted to verify the password, and
    then asked if you'd like to have a view only password. Remember the password you
    entered; you'll need it to remotely log in via a VNC viewer.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接着，你将被要求输入密码，并确认密码，然后询问是否希望设置只读密码。记住你输入的密码，你将需要它来通过VNC查看器进行远程登录。
- en: You'll need a VNC viewer application for your remote computer; a good choice
    is Real VNC, available from [http://www.realvnc.com/download/viewer/](http://www.realvnc.com/download/viewer/).
    When you run it, you should see this:![Adding a remote graphical user interface](img/B04591_01_14.jpg)
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要为你的远程计算机安装VNC查看器应用程序；一个不错的选择是Real VNC，可以从[http://www.realvnc.com/download/viewer/](http://www.realvnc.com/download/viewer/)下载。当你运行它时，你应该看到如下界面：![添加远程图形用户界面](img/B04591_01_14.jpg)
- en: Enter the VNC server address, which is the IP address of your Raspberry Pi,
    and click on **Connect**. You will get a warning about an unencrypted connection;
    select **Continue** and you will get this pop-up window:![Adding a remote graphical
    user interface](img/B04591_01_15.jpg)
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入VNC服务器地址，即你的Raspberry Pi的IP地址，然后点击**连接**。你会收到一个关于未加密连接的警告；选择**继续**，你会看到这个弹出窗口：![添加远程图形用户界面](img/B04591_01_15.jpg)
- en: Type in the password you just entered while starting the vncserver, and you
    should then get a graphical view of your Raspberry Pi, which looks like the following
    screenshot:![Adding a remote graphical user interface](img/B04591_01_16.jpg)
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入你在启动vncserver时刚刚设置的密码，接着你将看到Raspberry Pi的图形界面，类似以下截图：![添加远程图形用户界面](img/B04591_01_16.jpg)
- en: You can now access all the capabilities of your system, albeit they may be slower
    if you are doing a graphics-intense data transfer. To avoid having to type in
    vncserver each time you boot your Raspberry Pi, use the instructions at [http://www.havetheknowhow.com/Configure-the-server/Run-VNC-on-boot.html](http://www.havetheknowhow.com/Configure-the-server/Run-VNC-on-boot.html).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以访问系统的所有功能，尽管如果你进行图形密集型的数据传输时，速度可能会变慢。为了避免每次启动Raspberry Pi时都要输入vncserver命令，你可以参考[http://www.havetheknowhow.com/Configure-the-server/Run-VNC-on-boot.html](http://www.havetheknowhow.com/Configure-the-server/Run-VNC-on-boot.html)中的说明来设置。
- en: 'Vncserver is also available via Linux. You can use an application called Remote
    Desktop Viewer to view the remote Raspberry Pi Windows system. If you have not
    installed this application, install it using the updated software application
    based on the type of Linux system you have. Once you have the software, do the
    following:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: vncserver也可以通过Linux使用。你可以使用一个名为“远程桌面查看器”的应用程序来查看远程的Raspberry Pi Windows系统。如果你还没有安装这个应用程序，可以根据你使用的Linux系统类型，使用更新的软件包来安装它。安装完软件后，请按照以下步骤操作：
- en: Run the application, and you should see the following screenshot:![Adding a
    remote graphical user interface](img/B04591_01_17.jpg)
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行该应用程序后，你应该会看到以下截图：![添加远程图形用户界面](img/B04591_01_17.jpg)
- en: Make sure that vncserver is running on the Raspberry Pi; the easiest way to
    do this is to log in using SSH and run vncserver at the prompt. Now, click on
    **Connect** on the **Remote Desktop Viewer**. Fill in the screen as follows. Under
    the **Protocol** selection, choose **VNC**, and you should see the following screenshot:![Adding
    a remote graphical user interface](img/B04591_01_18.jpg)
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保vncserver正在Raspberry Pi上运行；最简单的方式是通过SSH登录并在命令行中运行vncserver。现在，点击**连接**按钮，进入**远程桌面查看器**。根据以下方式填写屏幕内容。在**协议**选择项中，选择**VNC**，你应该能看到以下截图：![添加远程图形用户界面](img/B04591_01_18.jpg)
- en: Now, enter the Host inet address—make sure to include `:1` at the end, and then
    click on **Connect**. You'll need to enter the vncserver password you set up,
    like the following screenshot:![Adding a remote graphical user interface](img/B04591_01_19.jpg)
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，输入主机inet地址—确保在末尾加上`:1`，然后点击**连接**。你需要输入你设置的vncserver密码，像下面的截图所示：![添加远程图形用户界面](img/B04591_01_19.jpg)
- en: You should now see the graphical screen of the Raspberry Pi. You are ready to
    start interacting with the system!
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你应该能看到Raspberry Pi的图形界面。你可以开始与系统进行交互了！
- en: Establishing wireless access
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 建立无线连接
- en: 'Now that your system is configured, the next step is to connect your Raspberry
    Pi to your remote computer using wireless. To do this, you''ll add a wireless
    USB device and configure it. See [http://elinux.org/RPi_USB_Wi-Fi_Adapters](http://elinux.org/RPi_USB_Wi-Fi_Adapters)
    to identify wireless devices that have been verified to work with Raspberry Pi.
    Here is one available at many online electronics outlets:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你的系统已经配置好了，接下来的步骤是通过无线将你的Raspberry Pi连接到远程计算机。为此，你需要添加一个无线USB设备并进行配置。请参考[http://elinux.org/RPi_USB_Wi-Fi_Adapters](http://elinux.org/RPi_USB_Wi-Fi_Adapters)来识别已验证与Raspberry
    Pi兼容的无线设备。以下是一款在许多在线电子商店都有销售的设备：
- en: '![Establishing wireless access](img/B04591_01_20.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![建立无线连接](img/B04591_01_20.jpg)'
- en: 'To connect to your wireless LAN, boot the system and edit the network file
    by typing in `sudo nano /etc/network/interfaces`. Then, edit the file to look
    like this:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 要连接到无线局域网，请启动系统并通过输入`sudo nano /etc/network/interfaces`来编辑网络文件。然后，编辑该文件，使其如下所示：
- en: '![Establishing wireless access](img/B04591_01_21.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![建立无线连接](img/B04591_01_21.jpg)'
- en: Reboot your device and it should now be connected to your wireless network.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 重启你的设备，它现在应该已经连接到无线网络。
- en: Note
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you are using a US keyboard, you may need to edit the keyboard file for your
    keyboard to use nano effectively. To do this, type in `sudo nano /etc/default/keyboard`
    and change `XKBLAYOUT="gb"` to `XKBLAYOUT="us"`.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是美国键盘，可能需要编辑键盘文件，以便有效使用 nano。为此，输入 `sudo nano /etc/default/keyboard` 并将
    `XKBLAYOUT="gb"` 修改为 `XKBLAYOUT="us"`。
- en: Your system has lots of capabilities. Feel free to play with the system, which
    will give you an understanding of what is already there and what you'll want to
    add from a software perspective.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 你的系统有很多功能。尽管去玩弄系统，这将帮助你了解系统中已有的内容以及你从软件角度想要添加的内容。
- en: Programming on Raspberry Pi
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 树莓派上的编程
- en: One last bit of introduction. You'll need some basic programming skills to be
    successful on your project. This section will touch a little on Python and C programming
    on the Raspberry Pi.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一点介绍，你需要一些基本的编程技能才能在项目中取得成功。本节将简要介绍在树莓派上使用 Python 和 C 进行编程。
- en: Creating and running Python programs on the Raspberry Pi
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在树莓派上创建和运行 Python 程序
- en: You'll be using Python for two reasons. First, it is a simple language that
    is intuitive and very easy to use. Second, a lot of open source functionality
    in the robotics world is available in Python. To work the examples in this section,
    you'll need a version of Python installed. Fortunately, the basic Raspbian system
    has a version already installed, so you are ready to begin.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 你将使用 Python 出于两个原因。首先，它是一种简单的语言，直观且非常容易使用。其次，机器人领域中许多开源功能都可以使用 Python。为了运行本节中的示例，你需要安装
    Python 的某个版本。幸运的是，基础的 Raspbian 系统已经安装了一个版本，因此你已经准备好开始了。
- en: Note
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you are new to programming, there are a number of different websites that
    provide interactive tutorials. If you'd like to practice some of the basic programming
    concepts in Python using these tools, go to [www.codeacademy.com](http://www.codeacademy.com)
    or [http://www.learnpython.org/](http://www.learnpython.org/) and give it a try.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是编程新手，有许多不同的网站提供互动式教程。如果你想使用这些工具练习一些 Python 中的基本编程概念，可以访问 [www.codeacademy.com](http://www.codeacademy.com)
    或 [http://www.learnpython.org/](http://www.learnpython.org/) 并试一试。
- en: But, to get you started, let's first cover how to create and run a Python file.
    It turns out that Python is an interactive language, so you could run Python and
    then type in commands one at a time. However, you want to use Python to create
    programs, so you are going to create Python programs and then run these programs
    from the command line by invoking Python.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，为了帮助你入门，首先让我们了解如何创建和运行一个 Python 文件。事实上，Python 是一种交互式语言，你可以运行 Python 后逐个输入命令。但是，你希望使用
    Python 来创建程序，因此你将编写 Python 程序，并通过在命令行中调用 Python 来运行这些程序。
- en: 'Open an example Python file by typing in `emacs example.py`. Now, put some
    code in the file. Start with the lines shown in the following screenshot:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 通过输入 `emacs example.py` 打开一个示例 Python 文件。现在，将一些代码放入文件中。开始时，使用以下截图中的代码行：
- en: '![Creating and running Python programs on the Raspberry Pi](img/B04591_01_22.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![在树莓派上创建和运行 Python 程序](img/B04591_01_22.jpg)'
- en: Note
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Your code may be color coded. I have removed the color coding here so that it
    is easier to read.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 你的代码可能会有颜色编码。我已将颜色编码去除，以便更容易阅读。
- en: 'Let''s go through the code to see what is happening:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看代码，看看发生了什么：
- en: '`a = input("Input value: ")`: One of the basic needs of a program is to get
    input from the user. The `raw_input` part allows us to do that. The data will
    be input by the user and stored in `a`. The prompt `"Input value:"` will be shown
    to the user.'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`a = input("Input value: ")`：程序的基本需求之一是获取用户输入。`raw_input` 部分允许我们做到这一点。数据将由用户输入并存储在
    `a` 中。提示 `"Input value:"` 会显示给用户。'
- en: '`b = input("Input second value: ")`: This data will also be input by the user
    and stored in `b`. The prompt `"Input second value:"` will be shown to the user.'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`b = input("Input second value: ")`：这段数据同样由用户输入并存储在 `b` 中。提示 `"Input second
    value:"` 会显示给用户。'
- en: '`c = a + b`: This is an example of something you can do with the data; in this
    example, you can add `a` and `b`.'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`c = a + b`：这是一个可以使用数据进行的操作示例；在这个例子中，你可以将 `a` 和 `b` 相加。'
- en: '`print c`: Another basic need of our program is to print out results. The print
    command prints out the value of `c`.'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`print c`：程序的另一个基本需求是打印输出结果。print 命令会打印出 `c` 的值。'
- en: 'Once you have created your program, save it (using `ctrl-x ctrl-s`) and quit
    emacs (using `ctrl-x ctrl-c`). Now, from the command line, run your program by
    typing in `python example.py`. You should see something similar to the following
    screenshot:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 创建完程序后，保存它（使用`ctrl-x ctrl-s`）并退出 emacs（使用`ctrl-x ctrl-c`）。现在，从命令行运行程序，输入`python
    example.py`。你应该能看到类似以下截图的内容：
- en: '![Creating and running Python programs on the Raspberry Pi](img/B04591_01_23.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![在树莓派上创建和运行 Python 程序](img/B04591_01_23.jpg)'
- en: 'You can also run the program right from the command line without typing in
    `python example.py` by adding one line to the program. Now, the program should
    look like the following screenshot:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过在程序中添加一行代码，从命令行直接运行程序，而无需输入`python example.py`。现在，程序应该像以下截图所示：
- en: '![Creating and running Python programs on the Raspberry Pi](img/B04591_01_24.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![在树莓派上创建和运行 Python 程序](img/B04591_01_24.jpg)'
- en: 'Adding `#!/usr/bin/python` as the first line simply makes this file available
    for us to execute from the command line. Once you have saved the file and exited
    emacs, type in `chmod +x example.py`. This will change the file''s execution permissions,
    so the computer will now believe it and execute it. You should be able to simply
    type in `./example.py` and the program should run, as shown in the following screenshot:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一行添加`#!/usr/bin/python`仅仅是为了使这个文件能够从命令行执行。保存文件并退出emacs后，输入`chmod +x example.py`。这将更改文件的执行权限，计算机将认可并执行它。你现在应该能够直接输入`./example.py`，程序应该能如截图所示运行：
- en: '![Creating and running Python programs on the Raspberry Pi](img/B04591_01_25.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![在树莓派上创建和运行 Python 程序](img/B04591_01_25.jpg)'
- en: Note that if you simply type in `example.py`, the system will not find the executable
    file. In this case, the file has not been registered with the system, so you have
    to give it a path to the file. In this case, `./` is the current directory.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果你只是输入`example.py`，系统将无法找到可执行文件。在这种情况下，文件尚未在系统中注册，因此你需要为其指定文件路径。在这种情况下，`./`表示当前目录。
- en: An introduction to the C/C++ programming language
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: C/C++ 编程语言介绍
- en: Now that you've been introduced to a simple programming language in Python,
    you'll also need a bit of exposure to a more complex, but powerful, language called
    C. C is the original language of Linux and has been around for many decades, but
    is still widely used by open source developers. It is similar to Python, but is
    also a bit different, and since you may need to understand and make changes to
    C code, you should be familiar with it and know how it is used.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经了解了一种简单的编程语言——Python，你还需要接触一种更复杂但功能强大的语言——C。C 是 Linux 的原始语言，已经存在了几十年，但仍然被开源开发者广泛使用。它与
    Python 相似，但也有所不同。由于你可能需要理解并修改 C 代码，因此你应该熟悉它，并了解它的使用方法。
- en: As with Python, you will need to have access to the language capabilities. These
    come in the form of a compiler and build system, which turns your text files into
    ones that contain programs to machine code that the processor can actually execute.
    To do this, type in `sudo apt-get install build-essential`. This will install
    the programs you need to turn your code into executables for the system.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 和 Python 一样，你需要访问语言功能。这些功能以编译器和构建系统的形式提供，将你的文本文件转换为包含机器代码的程序，以便处理器可以实际执行。要做到这一点，输入`sudo
    apt-get install build-essential`。这将安装将代码转换为系统可执行文件所需的程序。
- en: 'Now that the tools are installed, let''s walk through some simple examples.
    Here is the first C/C++ code example:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 工具安装完成后，让我们从一些简单的例子开始。以下是第一个 C/C++ 代码示例：
- en: '![An introduction to the C/C++ programming language](img/B04591_01_26.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![C/C++ 编程语言介绍](img/B04591_01_26.jpg)'
- en: 'The following is an explanation of the code:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是对代码的解释：
- en: '`#include <iostream>`: This is a library that is included so that your program
    can input data from the keyboard and output information to the screen.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`#include <iostream>`：这是一个包含的库，用于使程序能够从键盘输入数据并将信息输出到屏幕。'
- en: '`int main()`: As with Python, we can put functions and classes in the file,
    but you will always want to start execution at a known point; C defines this as
    the `main` function.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`int main()`：和 Python 一样，我们可以在文件中放置函数和类，但你总是希望从一个已知的起点开始执行；C 语言将这个起点定义为`main`函数。'
- en: '`int a;`: This defines a variable named `a`, of type `int`. C is what we call
    a strongly typed language, which means that we need to declare the type of the
    variable we are defining. The normal types are `int`, a number that has no decimal
    points; `float`, a number that requires decimal points; `char`, a character of
    text, and `bool`, a `true` or `false` value. Also note that every line in C ends
    with the `;` character.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`int a;`：这定义了一个名为`a`的变量，类型为`int`。C是我们所说的强类型语言，这意味着我们需要声明定义变量时的类型。常见的类型有`int`（整数，不带小数点）；`float`（带小数点的数字）；`char`（字符）；和`bool`（`true`或`false`值）。还要注意，C语言中的每一行都以`;`字符结尾。'
- en: '`int b;`: This defines a variable named `b`, of type `int`.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`int b;`：这定义了一个名为`b`的变量，类型为`int`。'
- en: '`int c;`: This defines a variable named `c`, of type `int`.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`int c;`：这定义了一个名为`c`的变量，类型为`int`。'
- en: '`std::cout << "Input value: ";`: This will display the string `"Input value:
    "` on the screen.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`std::cout << "Input value: ";`：这将在屏幕上显示字符串`"Input value: "`。'
- en: '`std::cin >> a;`: The input that the user types will go into the variable `a`.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`std::cin >> a;`：用户输入的内容将存入变量`a`。'
- en: '`std::cout << "Input second value: ";`: This will display the string `"Input
    second value: "` on the screen.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`std::cout << "Input second value: ";`：这将在屏幕上显示字符串`"Input second value: "`。'
- en: '`std::cin >> b;`: The input that the user types will go into the variable `b`.'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`std::cin >> b;`：用户输入的内容将存入变量`b`。'
- en: '`c = a + b`: The statement is a simple addition of two values.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`c = a + b`：这个语句是将两个值相加的简单操作。'
- en: '`std::cout << c << std::endl;`: The `cout` command prints out the value of
    `c`. The `endl` command at the end prints out a carriage return so that the next
    character appears on the next line.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`std::cout << c << std::endl;`：`cout`命令打印出`c`的值。末尾的`endl`命令会打印一个换行符，使得下一个字符出现在下一行。'
- en: '`return 0;`: The main function ends and returns `0`.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`return 0;`：主函数结束并返回`0`。'
- en: To run this program, you'll need to run a compile process to turn it into an
    executable program that you can run. To do this, after you have created the program,
    type in `g++ example2.cpp –o example2`. This will then process your program, turning
    it into a file that the computer can execute. The name of the executable program
    will be `example2` (as specified by the name after the `–o` option).
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行这个程序，你需要通过编译过程将它转换为可执行程序，然后运行。为此，在创建程序后，输入`g++ example2.cpp –o example2`。这将处理你的程序，将它转换为计算机可以执行的文件。可执行程序的名称将是`example2`（由`–o`选项后的名称指定）。
- en: 'If you run an `ls` on your directory after you have compiled this, you should
    see the `example2` file in your directory, as shown in the following screenshot:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在编译完毕后，如果你在目录中运行`ls`，你应该能在目录中看到`example2`文件，如下图所示：
- en: '![An introduction to the C/C++ programming language](img/B04591_01_27.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![C/C++编程语言简介](img/B04591_01_27.jpg)'
- en: 'If you run into a problem, the compiler will try to help you figure out the
    problem. If, for example, you forgot the `int` before `a` in the expression `int
    a`, you would get the following error when you try to compile:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 如果遇到问题，编译器会尝试帮助你找出问题。例如，如果你在`int a`的表达式中忘记了`int`，在尝试编译时会得到以下错误：
- en: '![An introduction to the C/C++ programming language](img/B04591_01_28.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![C/C++编程语言简介](img/B04591_01_28.jpg)'
- en: 'The error message indicates a problem in the `int main()` function and tells
    you that the variable `a` was not successfully declared. Once you have the file
    compiled, to run the executable, type in `./example2`, and you should be able
    to create the following result:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 错误信息指示在`int main()`函数中出现了问题，并告诉你变量`a`没有成功声明。一旦编译好文件，要运行可执行文件，输入`./example2`，你应该能够得到以下结果：
- en: '![An introduction to the C/C++ programming language](img/B04591_01_29.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![C/C++编程语言简介](img/B04591_01_29.jpg)'
- en: Note
  id: totrans-131
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you are interested in learning more about C programming, there are several
    good tutorials out on the Internet that can help-for example, at [http://www.cprogramming.com/tutorial/c-tutorial.html](http://www.cprogramming.com/tutorial/c-tutorial.html)
    and [http://thenewboston.org/list.php?cat=14](http://thenewboston.org/list.php?cat=14).
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有兴趣学习更多关于C编程的内容，互联网上有很多好的教程可以帮助你，例如：[http://www.cprogramming.com/tutorial/c-tutorial.html](http://www.cprogramming.com/tutorial/c-tutorial.html)
    和 [http://thenewboston.org/list.php?cat=14](http://thenewboston.org/list.php?cat=14)。
- en: There is one more aspect of C you will need to know about. The compile process
    that you just encountered seemed fairly straightforward. However, if you have
    your functionality distributed between a lot of files or need lots of libraries,
    the command-line approach to executing a compile can get unwieldy.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: The C development environment provides a way to automate this process; it is
    called the make process. When using this, you create a text program named `makefile`
    that defines the files you want to include and compile, and then, instead of typing
    a long command or set of commands, you simply type in `make` and the system will
    execute a compile based on the definitions in the `makefile` program. There are
    several good tutorials that talk more about this system-for example, [http://www.cs.colby.edu/maxwell/courses/tutorials/maketutor/](http://www.cs.colby.edu/maxwell/courses/tutorials/maketutor/)
    or [http://mrbook.org/tutorials/make/](http://mrbook.org/tutorials/make/).
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: Now you are equipped to edit and create your own programming files. The next
    chapters will provide you with lots of opportunities to practice your skills as
    you translate lines of code into cool robotic capabilities.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Congratulations! You have your Raspberry Pi up and working. No gathering dust
    in the bin for this piece of hardware, Now, you are ready to start commanding
    your Raspberry Pi to do something.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: The next chapter will show you how to construct your biped robot.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
