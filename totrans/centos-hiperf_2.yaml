- en: Chapter 2. Installing Cluster Services and Configuring Network Components
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章：安装集群服务并配置网络组件
- en: In this chapter, you will learn how to set up and configure the basic required
    network infrastructure and also the clustering components that we installed in
    the previous chapter.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习如何设置和配置基本的网络基础设施，并配置我们在上一章中安装的集群组件。
- en: In addition to this, we will review the basic and important concepts of firewalling
    and Internet protocols, and we will explain how to add the firewall rules that
    will allow communication between the nodes and the proper operation of the clustering
    services on each node.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 除此之外，我们还将回顾防火墙和互联网协议的基本概念，并解释如何添加防火墙规则，以允许节点之间的通信，并确保每个节点上的集群服务能够正常运行。
- en: If your native language is any other than English, you must have taken an English
    class or taught yourself (as I did) before being able to read this book. The same
    thing happens when two people who do not speak the same language want to communicate
    with each other. At least one of them needs to know the language of the other,
    or the two of them need to agree on a common idiom in order to be able to understand
    each other.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的母语不是英语，你必须已经上过英语课或像我一样自学过，才能阅读这本书。当两个人不说相同语言时，他们也面临同样的情况。至少其中一个人需要知道对方的语言，或者两人需要达成一致使用一种共同的语言，才能互相理解。
- en: In networking, the equivalent of languages in the above analogy is called **protocols**.
    In order to enable data transmission between two machines, there must be a logical
    way for them to be able to speak to each other. This is at the very heart of the
    Internet protocol suite, also known as the **Internet model**, which provides
    a set of communication protocols or rules.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在网络中，以上类比中的语言对应的就是**协议**。为了使两台机器之间能够进行数据传输，必须有一种逻辑方式让它们能够相互沟通。这正是互联网协议套件的核心内容，也被称为**互联网模型**，它提供了一组通信协议或规则。
- en: It is precisely this set of protocols that make data transmission possible in
    networks such as the Internet. Later in this chapter, we will explain the protocols
    and network ports that participate in the communication inside a cluster.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 正是这一套协议使得在像互联网这样的网络中数据传输成为可能。在本章后面，我们将解释参与集群内部通信的协议和网络端口。
- en: Configuring and starting clustering services
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置和启动集群服务
- en: Having reviewed the key networking concepts that were outlined earlier, we are
    now ready to start describing the cluster services.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在回顾了之前概述的关键网络概念后，我们现在可以开始描述集群服务。
- en: Starting and enabling clustering services
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动并启用集群服务
- en: 'You will recall from the previous chapter that we installed the following clustering
    components:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能还记得，在上一章中我们安装了以下集群组件：
- en: '**Pacemaker**: This is the cluster resource manager'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Pacemaker**：这是集群资源管理器'
- en: '**Corosync**: This is the messaging service'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Corosync**：这是消息传递服务'
- en: '**PCS**: This is the synchronization and configuration tool'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PCS**：这是同步和配置工具'
- en: As you can probably guess from the preceding list, these components should run
    as daemons, a special type of process that runs in the background without the
    need of direct intervention or control of an administrator. Although we installed
    the necessary packages in [Chapter 1](part0014_split_000.html#DB7S1-1d2c6d19b9d242db82da724021b51ea0
    "Chapter 1. Cluster Basics and Installation on CentOS 7"), *Cluster Basics and
    Installation on CentOS 7*, we did not start the cluster resource manager or the
    messaging services. So, we now need to start them manually for the first time
    and enable them to run automatically on startup during the next system boot.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你从之前的列表中可能已经猜到的，这些组件应当作为守护进程运行，守护进程是一种特殊的后台进程，无需管理员直接干预或控制。尽管我们在[第1章](part0014_split_000.html#DB7S1-1d2c6d19b9d242db82da724021b51ea0
    "第1章：集群基础与在CentOS 7上的安装")中安装了必要的软件包，*集群基础与在CentOS 7上的安装*，但我们并没有启动集群资源管理器或消息传递服务。因此，我们现在需要手动首次启动它们，并在下次系统启动时使其自动运行。
- en: We will start by configuring `pacemaker` and `corosync` first and save PCS for
    later in this chapter.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先配置`pacemaker`和`corosync`，并将PCS配置留到本章后面。
- en: 'As shown in the following screenshot, these daemons (also known as units in
    systemd-based systems) are inactive when you first boot both nodes (and are not
    automatically started on reboot) after performing all the tasks outlined in [Chapter
    1](part0014_split_000.html#DB7S1-1d2c6d19b9d242db82da724021b51ea0 "Chapter 1. Cluster
    Basics and Installation on CentOS 7"), *Cluster Basics and Installation on CentOS
    7*. You can check their current running status using the following commands:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如下截图所示，在你完成[第 1 章](part0014_split_000.html#DB7S1-1d2c6d19b9d242db82da724021b51ea0
    "第 1 章：集群基础和 CentOS 7 上的安装")，*集群基础和 CentOS 7 上的安装* 中列出的所有任务后，第一次启动两个节点时，这些守护进程（也称为
    systemd 系统中的单元）是非活动的（并且在重启时不会自动启动）。你可以使用以下命令检查它们当前的运行状态：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![Starting and enabling clustering services](img/00018.jpeg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![启动和启用集群服务](img/00018.jpeg)'
- en: 'In order to start corosync and pacemaker on each node and enable both services
    to start automatically during system boot, first create the corosync configuration
    file by making a copy of the example file, which came with the installation package.
    As opposed to the pacemaker and PCS, corosync does not create the configuration
    file automatically for you:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在每个节点上启动 corosync 和 pacemaker 并启用这两个服务在系统启动时自动启动，首先通过复制安装包中随附的示例文件来创建 corosync
    配置文件。与 pacemaker 和 PCS 不同，corosync 不会为你自动创建配置文件：
- en: 'To create the corosync configuration file, do:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建 corosync 配置文件，请执行以下操作：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'And then restart and enable the services by running the following commands:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 然后通过运行以下命令来重启并启用服务：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In the preceding commands, note that we are not starting corosync manually,
    as it will launch on its own when pacemaker is started. It is important to note
    that on systemd-based systems, enabling a service is not the same as starting
    it. A unit may be enabled but not started, or the other way around. As shown in
    the following code, enabling a service involves creating a symlink to the unit's
    configuration file, which among other things specifies the actions to be taken
    on system boot and shutdown.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的命令中，请注意我们并没有手动启动 corosync，因为当 pacemaker 启动时，corosync 会自动启动。需要注意的是，在基于 systemd
    的系统中，启用服务并不等同于启动它。一个单元可以被启用但未启动，反之亦然。如下所示，启用服务涉及创建一个指向单元配置文件的符号链接，该配置文件指定了系统启动和关机时需要执行的操作等内容。
- en: 'Perform the following operations on both nodes:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在两个节点上执行以下操作：
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Finally, before we can configure the cluster at a later stage, we need to perform
    the following steps:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在我们可以在后续阶段配置集群之前，我们需要执行以下步骤：
- en: 'Start and enable the PCS daemon (`pcsd`), which will be in charge of keeping
    the corosync configuration synced on `node01` and `node02`. In order for the `pcsd`
    daemon to work as expected, corosync and pacemaker must have been started previously.
    Note that when you use the `systemctl` tool to manage services in a systemd-based
    system, you can omit the trailing `.service` after the daemon name (or use it
    if you want, as indicated in [Chapter 1](part0014_split_000.html#DB7S1-1d2c6d19b9d242db82da724021b51ea0
    "Chapter 1. Cluster Basics and Installation on CentOS 7"), *Cluster Basics and
    Installation on CentOS 7*). Start and enable the PCS daemon with:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动并启用 PCS 守护进程（`pcsd`），该守护进程将负责保持 `node01` 和 `node02` 上的 corosync 配置同步。为了使 `pcsd`
    守护进程按预期工作，corosync 和 pacemaker 必须先前已经启动。请注意，当你使用 `systemctl` 工具在基于 systemd 的系统中管理服务时，可以省略守护进程名称后面的
    `.service`（或者如果你愿意，也可以使用它，正如在[第 1 章](part0014_split_000.html#DB7S1-1d2c6d19b9d242db82da724021b51ea0
    "第 1 章：集群基础和 CentOS 7 上的安装")，*集群基础和 CentOS 7 上的安装* 中所示）。通过以下命令启动并启用 PCS 守护进程：
- en: '[PRE4]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now set the password for the hacluster Linux account, which was created automatically
    when PCS was installed. This account is used by the PCS daemon to set up communication
    between nodes, and is best managed when the password is identical on both nodes.
    To set the password for hacluster, type the following command and assign the same
    password on both nodes:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在设置 hacluster Linux 账户的密码，该账户是在安装 PCS 时自动创建的。此账户由 PCS 守护进程用于设置节点之间的通信，最好在两个节点上使用相同的密码来管理此账户。要设置
    hacluster 密码，请输入以下命令，并在两个节点上设置相同的密码：
- en: '[PRE5]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Troubleshooting
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 故障排除
- en: 'Under normal circumstances, starting pacemaker should start corosync automatically.
    You can check corosync''s status with the `systemctl status corosync` command.
    If for some reason that is not the case, you can still run the following command
    to manually start the messaging service:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在正常情况下，启动 pacemaker 应该会自动启动 corosync。你可以通过运行 `systemctl status corosync` 命令来检查
    corosync 的状态。如果出于某种原因 corosync 没有自动启动，你仍然可以运行以下命令手动启动消息服务：
- en: '[PRE6]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Should any of the preceding commands return an error, running `systemctl -l
    status unit`, where `unit` is either corosync or pacemaker, will return a detailed
    status about the respective service.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果前面的命令返回错误，运行 `systemctl -l status unit`，其中 `unit` 可以是 corosync 或 pacemaker，将返回有关相应服务的详细状态。
- en: 'Here is another useful troubleshooting command:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这是另一个有用的故障排除命令：
- en: '[PRE7]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This will query the systemd journal (systemd's own log) and return verbose messages
    about the last events.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这将查询 systemd 日志（systemd 的日志），并返回关于最近事件的详细消息。
- en: Both of these commands will provide helpful information as to what went wrong,
    and point you in the right direction to solve the problem.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个命令将提供有用的信息，帮助你找出出了什么问题，并指引你解决问题的正确方向。
- en: Tip
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: You can read more about the systemd journal in its man page, *man journalctl*,
    or in the online version, which is available at [http://www.freedesktop.org/software/systemd/man/journalctl.html](http://www.freedesktop.org/software/systemd/man/journalctl.html).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在其手册页中阅读更多关于 systemd 日志的信息，*man journalctl*，或者在在线版本中查看，网址是[http://www.freedesktop.org/software/systemd/man/journalctl.html](http://www.freedesktop.org/software/systemd/man/journalctl.html)。
- en: Security fundamentals
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全基础
- en: At this point, we are ready to discuss network security to only allow the proper
    network traffic between the nodes. During the initial setup and while performing
    your first tests, you may want to disable the firewall and SELinux (which is described
    later in this chapter) and then go through both of them at a later stage—it is
    up to you depending on your grade of familiarity with them at this point.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们准备讨论网络安全问题，以便仅允许节点之间正确的网络流量。在初始设置过程中以及执行第一次测试时，你可能希望禁用防火墙和 SELinux（稍后在本章中会介绍），然后在稍后的阶段再通过这两者——具体取决于你目前对它们的熟悉程度。
- en: Letting in and letting out
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 进出控制
- en: 'After having started and enabled the services mentioned earlier, we are ready
    to take a closer look at the network processes involved in the cluster configuration
    and maintenance. With the help of the `netstat` command, a tool included in the
    `net-tools` package for CentOS 7, we will print the current listening network
    ports and verify that corosync is running and listening for connections. Before
    doing so, you will need to install the net-tools package, as it is not included
    in the minimal CentOS 7 setup, using the following command:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动并启用前面提到的服务之后，我们可以更详细地了解集群配置和维护过程中涉及的网络进程。在 `netstat` 命令的帮助下，这是 CentOS 7 中
    `net-tools` 包的一部分，我们将打印出当前的监听网络端口，并验证 corosync 是否正在运行并监听连接。在此之前，你需要安装 `net-tools`
    包，因为它并未包含在 CentOS 7 的最小安装中，使用以下命令进行安装：
- en: '[PRE8]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'As we can see in the following screenshot, Corosync is listening on the **UDP**
    ports `5404` and `5405` of the loopback interface (`127.0.0.1`) and on the port
    `5405` of the multicast address (which is set to `239.255.1.1` by default and
    provides a logical way to identify this group of nodes):'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如下截图所示，Corosync 正在监听回环接口（`127.0.0.1`）的 **UDP** 端口 `5404` 和 `5405`，以及多播地址（默认设置为
    `239.255.1.1`，提供一种逻辑方式来标识这一组节点）上的端口 `5405`：
- en: '![Letting in and letting out](img/00019.jpeg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![进出控制](img/00019.jpeg)'
- en: Note
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**User Datagram Protocol** (UDP) is one of the core members of the Internet
    model. This protocol allows applications to send messages (also known as **datagrams**)
    to hosts in a network in order to set up paths for data transmission without performing
    full handshakes (or a successful connection between two hosts in a network). Additionally,
    UDP does not include error checking and correction in a network communication
    (these checks are performed at the destination application itself).'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**用户数据报协议**（UDP）是互联网模型的核心协议之一。该协议允许应用程序向网络中的主机发送消息（也称为 **数据报**），以便在不进行完整握手（即不在网络中建立成功连接）的情况下设置数据传输路径。此外，UDP
    不包含网络通信中的错误检查和修正（这些检查由目标应用程序本身执行）。'
- en: The **Transmission Control Protocol** (**TCP**) is another core protocol of
    the Internet model. As opposed to UDP, it provides error, delivery, ordering,
    and duplicates checking of data streams between computers in a network. Several
    well-known application layer protocols (such as HTTP, SMTP, and SSH, to name a
    few) are encapsulated in TCP.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**传输控制协议**（**TCP**）是互联网模型的另一个核心协议。与 UDP 相对，它提供了数据流在网络中计算机之间的错误检测、传输、排序和重复检查。几个著名的应用层协议（如
    HTTP、SMTP 和 SSH 等）都封装在 TCP 中。'
- en: '**Internet Group Management Protocol** (**IGMP**) is the communication protocol
    used by network devices (whether they can be either hosts or routers) to establish
    multicast data transmissions, which allows one host on the network to send datagrams
    to several other systems that are interested in receiving the source content.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**互联网组管理协议**（**IGMP**）是网络设备（无论是主机还是路由器）用于建立多播数据传输的通信协议，它允许网络中的一个主机将数据报发送到多个其他感兴趣的系统，供它们接收源内容。'
- en: 'Before we proceed further, we will need to allow traffic through the firewall
    on each node. By default, the ports named in the following list are the default
    ports where these services will listen after being started, as we previously did.
    Specifically, in both nodes, we need to perform the following steps:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，我们需要在每个节点的防火墙上允许流量通过。默认情况下，以下列表中命名的端口是这些服务启动后监听的默认端口，正如我们之前所做的那样。具体来说，在两个节点中，我们需要执行以下步骤：
- en: 'Open the network ports needed by `corosync` (**UDP** ports **5404** and **5405**)
    and PCS (usually **TCP** **2224**) using the following commands:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令打开`corosync`所需的网络端口（**UDP**端口**5404**和**5405**）和PCS（通常是**TCP** **2224**）：
- en: '[PRE9]'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Note
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that the use of `-m` multiport allows you to combine a number of different
    ports in one rule instead of having to write several rules that are almost identical.
    This results in fewer rules and easier maintenance of `iptables`.
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，使用`-m`多端口选项可以将多个不同的端口组合成一条规则，而无需编写几乎相同的多个规则。这将减少规则数量，并简化`iptables`的维护。
- en: 'Allow IGMP and multicast traffic using the following commands:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令允许IGMP和多播流量：
- en: '[PRE10]'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Change the default `iptables` policy for the `INPUT` chain to `DROP`. Thus,
    any packet that does not comply with the rules that we just added will be dropped.
    Note that, as opposed to the `REJECT` policy, `DROP` does not send any response
    whatsoever to the calling client, just "radio silence" while actively dropping
    the packets:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`INPUT`链的默认`iptables`策略更改为`DROP`。因此，任何不符合我们刚刚添加的规则的数据包将被丢弃。请注意，与`REJECT`策略不同，`DROP`不会向调用客户端发送任何响应，只是保持“无线电静默”并主动丢弃数据包：
- en: '[PRE11]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'After adding the necessary rules, our firewall configuration looks as shown
    in the following code, where we can clearly see that besides the rules that we
    added in the two previous steps, there are others that were initialized by default
    when we started and enabled `iptables`, as explained in [Chapter 1](part0014_split_000.html#DB7S1-1d2c6d19b9d242db82da724021b51ea0
    "Chapter 1. Cluster Basics and Installation on CentOS 7"), *Cluster Basics and
    Installation on CentOS 7*. Run the following command to list the firewall rules
    along with their corresponding numbers:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加必要规则后，我们的防火墙配置如下所示，在以下代码中可以清楚地看到，除了我们在前两步中添加的规则外，还有一些是我们启动并启用`iptables`时默认初始化的，如在[第1章](part0014_split_000.html#DB7S1-1d2c6d19b9d242db82da724021b51ea0
    "第1章. 集群基础与CentOS 7的安装")中所解释的，*集群基础与CentOS 7的安装*。运行以下命令以列出防火墙规则及其对应的编号：
- en: '[PRE12]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'If the last default rule in the `INPUT` chain implements a `REJECT` procedure
    for non-compliant packets, we will delete it because we already took care of that
    need by changing the default policy for the chain:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果`INPUT`链中的最后一条默认规则执行了对不符合要求的数据包的`REJECT`操作，我们将删除它，因为我们已经通过修改链的默认策略来解决这个需求：
- en: '[PRE13]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Finally, we must save the firewall rules for persistency across boots. As shown
    in the following screenshot, this consists of saving the changes to `/etc/sysconfig/iptables`:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们必须保存防火墙规则，以确保在系统重启时规则能保持持久性。如以下截图所示，这包括将更改保存到`/etc/sysconfig/iptables`中：
- en: '[PRE14]'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![Letting in and letting out](img/00020.jpeg)'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![Letting in and letting out](img/00020.jpeg)'
- en: 'If we inspect the `/etc/sysconfig/iptables` file with our preferred text editor
    or pager, we will realize that it presents the same firewall rules in a format
    that is somewhat easier to read, as shown in the following code:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们使用首选的文本编辑器或分页程序查看`/etc/sysconfig/iptables`文件，我们会发现该文件以一种较易阅读的格式呈现了相同的防火墙规则，如以下代码所示：
- en: '[PRE15]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Next, you will also need to edit the `/etc/sysconfig/iptables-config` file
    to indicate that firewall rules should be persistent on system shutdown and reboot.
    Note that these lines already exist in the file and need to be changed. As a precaution,
    you may want to back up the existing file before making the change:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您还需要编辑`/etc/sysconfig/iptables-config`文件，以指示防火墙规则应在系统关机和重启时保持持久性。请注意，这些行已经存在于文件中，需要进行更改。为了谨慎起见，您可能希望在进行更改之前备份现有文件：
- en: '[PRE16]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Now, open `/etc/sysconfig/iptables-config` with your preferred text editor
    and ensure that the indicated lines read as follows:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，使用你喜欢的文本编辑器打开`/etc/sysconfig/iptables-config`，并确保指定的行如下所示：
- en: '[PRE17]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: As usual, do not forget to restart `iptables` (`systemctl restart iptables`)
    in order to apply changes.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如往常一样，别忘了重启`iptables`（`systemctl restart iptables`）以应用更改。
- en: 'CentOS 7, just like the previous versions of the distribution, comes with built-in
    **SELinux** (**Security Enhanced Linux**) support. This provides native, flexible
    access control functionality for the operating system based on the kernel itself.
    You may well be wondering what to do with SELinux policies at this stage. The
    current settings, which can be displayed with the `sestatus` and `getenforce`
    commands, and are shown in the following screenshot, will do for the time being:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: CentOS 7，和以往的版本一样，内置了**SELinux**（**Security Enhanced Linux**）支持。这为操作系统提供了基于内核本身的本地、灵活的访问控制功能。你可能会想知道在此阶段应该如何处理SELinux策略。当前的设置，可以通过`sestatus`和`getenforce`命令显示，如下图所示，暂时可以满足需求：
- en: '![Letting in and letting out](img/00021.jpeg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![放行与拒绝](img/00021.jpeg)'
- en: 'In simple terms, we will leave the default mode set to `enforcing` for security
    purposes. This should not cause any issues further down the road, but if it does,
    feel free to set the mode to `permissive` with the following command:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 简单来说，为了安全起见，我们将默认模式保持为`enforcing`。这应该不会引起任何问题，但如果出现问题，可以使用以下命令将模式设置为`permissive`：
- en: '[PRE18]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The preceding command will enable warnings and log errors to help you troubleshoot
    issues while the server is still running. In case you need to troubleshoot issues
    and you suspect that SELinux may be causing them, you should look in `/var/log/audit/audit.log`.
    SELinux log messages, which are labeled with the AVC keyword, are written to that
    file via `auditd`, the Linux auditing system, which is started by default. Otherwise,
    these messages are written to `/var/log/messages`.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 前述命令将启用警告并记录错误，以帮助你在服务器仍在运行时进行故障排除。如果你需要排查问题，并且怀疑SELinux可能是原因，你应该查看`/var/log/audit/audit.log`。SELinux的日志信息会通过`auditd`（Linux审计系统，默认启动）写入该文件，其中带有AVC关键字。否则，这些信息会写入`/var/log/messages`。
- en: Now, before you tackle the next heading, don't forget to repeat the same operations
    and save the changes on the other node as well!
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在处理下一个标题之前，别忘了在另一个节点上重复相同的操作并保存更改！
- en: Getting acquainted with PCS
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解PCS
- en: 'We are getting closer to actually setting up the cluster. Before diving into
    that task, we need to become familiar with PCS—the core component of our cluster—so
    to speak, which will be used to control and configure pacemaker and corosync.
    To begin doing that, we can just run PCS without arguments, as follows:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在接近实际设置集群的步骤。在开始这个任务之前，我们需要了解PCS——我们集群的核心组件——可以说它将用于控制和配置pacemaker与corosync。为了开始这项工作，我们可以仅仅运行PCS而不加参数，如下所示：
- en: '[PRE19]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'This returns the output shown in the following screenshot, which provides a
    short explanation of each option and command available in PCS:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这将返回以下截图中显示的输出，其中提供了每个选项和命令的简要说明：
- en: '![Getting acquainted with PCS](img/00022.jpeg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![了解PCS](img/00022.jpeg)'
- en: 'We are interested in the **Commands** section, where the actual categories
    of clustering that can be managed through this tool are listed, along with a brief
    description of their usage. Each of them supports several capabilities, which
    can be shown by appending the word **help** to `pcs [category]`. For example,
    let''s'' see the functionality that is provided by the `cluster` command (which
    by the way, we will use shortly):'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们对**Commands**部分感兴趣，其中列出了可以通过此工具管理的集群实际类别，并简要描述了它们的使用方法。每个类别都支持多个功能，可以通过在`pcs
    [category]`后附加**help**来显示。例如，让我们看看`cluster`命令所提供的功能（顺便说一下，我们很快会使用到它）：
- en: '[PRE20]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Note
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that the output is truncated for brevity.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，输出已被截断以简化显示。
- en: You will often find yourself examining the documentation, so you should consider
    seriously becoming acquainted with the help.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 你将经常查阅文档，因此你应该认真考虑熟悉帮助功能。
- en: Managing authentication and creating the cluster
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理身份验证并创建集群
- en: We are now ready to authenticate PCS to the `pcsd` service on the nodes specified
    in the command line. By default, all nodes are authenticated to each other and
    thus PCS can talk to itself from one cluster member to the rest.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经准备好将PCS认证到命令行中指定节点上的`pcsd`服务。默认情况下，所有节点之间会进行相互认证，因此PCS可以从一个集群成员与其他成员进行通信。
- en: 'This is precisely where the hacluster user (of which we changed the password
    earlier) comes in handy, as it is the account that is used for this purpose. The
    generic syntax for PCS to perform this step in a cluster with `N` nodes is as
    follows:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这正是`hacluster`用户派上用场的时候（我们之前已经更改了它的密码），因为这是用于此目的的账户。PCS在具有`N`个节点的集群中执行此步骤的通用语法如下：
- en: '[PRE21]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'In our current setup with two nodes, setting up authentication means:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们当前的两节点设置中，设置认证意味着：
- en: '[PRE22]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'We will be prompted to enter the username and password that will be used for
    authentication, as discussed earlier, and fortunately for us, this process does
    not need to be repeated as we can now control the cluster from any of the nodes.
    This procedure is exemplified in the following screenshot (where we set up the
    authentication for `pcs` from `node01`), and later when we create the cluster
    itself issuing the command in `node02`, from where the `/etc/corosync/corosync.conf`
    file is synchronized to the other node:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将被提示输入用户名和密码，以进行认证，正如前面讨论的那样，幸运的是，这个过程不需要重复进行，因为我们现在可以从任何节点控制集群。这个过程在下面的截图中进行了示范（我们从`node01`设置`pcs`的认证），然后当我们从`node02`发出命令创建集群时，`/etc/corosync/corosync.conf`文件会同步到另一个节点：
- en: '![Managing authentication and creating the cluster](img/00023.jpeg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![管理认证并创建集群](img/00023.jpeg)'
- en: 'To create the cluster using the specified nodes, type (on one node only, after
    successfully trying the password as illustrated in the preceding screenshot) the
    following command:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用指定节点创建集群，请在（仅在一个节点上，在如前所示成功尝试密码之后）键入以下命令：
- en: '[PRE23]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Here, `MyCluster` is the name we have chosen for our cluster (and you may want
    to change it according to your liking). Next, press *Enter* and verify the output.
    Note that it is this command that creates the cluster configuration file in `/etc/corosync/corosync.conf`
    on both nodes.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`MyCluster`是我们为集群选择的名称（你可以根据自己的喜好进行更改）。接下来，按下*Enter*键并验证输出。请注意，正是这个命令在两个节点的`/etc/corosync/corosync.conf`路径中创建了集群配置文件。
- en: 'If you created the `corosync.conf` file using the sample configuration file
    as instructed earlier in this chapter (in order to start pacemaker and corosync),
    you will have to use the `--force` option to overwrite that file with the current
    settings of the newly created cluster:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你按照本章前面的说明使用示例配置文件创建了`corosync.conf`文件（以启动pacemaker和corosync），你将需要使用`--force`选项，以当前新创建的集群设置覆盖该文件：
- en: '[PRE24]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Note
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'If you get the following error message while trying to set up the `pcs` authentication.
    Ensure that `pcsd` is running (and enabled) on `nodeXX`, and try again:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在尝试设置`pcs`认证时收到以下错误信息，请确保`pcsd`在`nodeXX`节点上正在运行（并且已启用），然后重试：
- en: '[PRE25]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Note
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: (Here, `XX` is the node number)
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: （此处，`XX`是节点编号）
- en: 'At this point, the `/etc/corosync/corosync.conf` file in `node02` should be
    identical to the same file in `node01`, as can be seen in the output of the following
    `diff` command, when run from either node. An empty output indicates that the
    corosync configuration file has been correctly synced from one node to the other:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，`node02`中的`/etc/corosync/corosync.conf`文件应与`node01`中的文件完全相同，从任一节点运行`diff`命令时，输出为空表示`corosync`配置文件已正确同步到另一个节点：
- en: '[PRE26]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The next step consists of actually starting the cluster by issuing the command
    (again, on one node only):'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是通过发出命令来实际启动集群（同样，仅在一个节点上执行）：
- en: '[PRE27]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Note
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'The command that is used to start the cluster (`pcs cluster start`) deserves
    further clarification:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 用于启动集群的命令（`pcs cluster start`）值得进一步解释：
- en: '[PRE28]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Note
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: There will be times when you want to start the cluster on a specific node. In
    that case, you will name such a node instead of using the `--all` flag.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 有时你可能希望在特定节点上启动集群。在这种情况下，你将指定该节点，而不是使用`--all`标志。
- en: 'The output to the preceding command should be as follows:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 前一个命令的输出应如下所示：
- en: '[PRE29]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Once the cluster has been started, you can check its status from any of the
    nodes (remember that PCS makes it possible for you to manage the cluster from
    any node):'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦集群启动，你可以从任何节点检查其状态（记住，PCS让你可以从任何节点管理集群）：
- en: '[PRE30]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Note
  id: totrans-122
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'The `pcs status` command provides more detailed information, including the
    status of services and resources. It is possible that you notice that one of the
    nodes is `OFFLINE`, as follows:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '`pcs status` 命令提供了更详细的信息，包括服务和资源的状态。可能会注意到其中一个节点显示为 `OFFLINE`，如下所示：'
- en: '[PRE31]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Note
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'In this case, ensure that both pacemaker and corosync are enabled (as indicated
    after the `Daemon status: line`) and started on the node that''s marked as `OFFLINE`,
    and then perform `pcs status` again.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，请确保 `pacemaker` 和 `corosync` 在标记为 `OFFLINE` 的节点上都已启用（如在 `Daemon status:`
    行后指示的），然后再次执行 `pcs status` 命令。
- en: 'Another issue you may encounter is having one or more of the nodes in an unclean
    state. While that is not common, resyncing the nodes by stopping and restarting
    the cluster on both nodes will fix it:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会遇到的另一个问题是，一个或多个节点处于不干净的状态。虽然这不常见，但通过在两个节点上停止和重新启动集群来重新同步节点将解决此问题：
- en: '[PRE32]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The node that is marked as **DC**, that is, **Designated Controller**, is the
    node where the cluster was originally started and from where the cluster-related
    commands will be typically issued. If for some reason, the current DC fails, a
    new designated controller is chosen automatically from the remaining nodes. You
    can see which node is the current DC with:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 标记为 **DC** 的节点，即 **Designated Controller**，是最初启动集群并从该节点典型地发出集群相关命令的节点。如果当前的
    DC 由于某种原因失败，将自动从剩余节点中选择新的指定控制器。您可以使用以下命令查看当前 DC 的节点：
- en: '[PRE33]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'To see the current DC in your cluster, do:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看集群中的当前 DC，请执行：
- en: '[PRE34]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'You will also want to check on each node individually:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 您还需要分别检查每个节点：
- en: 'The `pcs status nodes` command allows you to view all information about the
    cluster and its configured resources:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '`pcs status nodes` 命令允许您查看有关集群及其配置资源的所有信息：'
- en: '[PRE35]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The `corosync-cmapctl` command is another tool for accessing the cluster''s
    object database, where you will be able to view the properties and configuration
    of each node. Since the output of `corosync-cmapctl` command is rather lengthy,
    you may want to filter by a chosen keyword, such as `members` or `cluster_name`,
    for example:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '`corosync-cmapctl` 命令是访问集群对象数据库的另一个工具，您可以在其中查看每个节点的属性和配置。由于 `corosync-cmapctl`
    命令的输出相当长，您可能希望按选定的关键字进行过滤，例如 `members` 或 `cluster_name`：'
- en: '[PRE36]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: As you can see, the preceding output allows you to see the name of your cluster,
    the IP address, and the status of each member.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您可以看到的前面的输出，您可以查看集群的名称、IP 地址以及每个成员的状态。
- en: Setting up a virtual IP for the cluster
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为集群设置虚拟 IP
- en: As mentioned in [Chapter 1](part0014_split_000.html#DB7S1-1d2c6d19b9d242db82da724021b51ea0
    "Chapter 1. Cluster Basics and Installation on CentOS 7"), *Cluster Basics and
    Installation on CentOS 7*, since a cluster is by definition a group of computers
    (which we have been referring to as nodes or members) that work together so that
    the set is seen as a single system from the outside, we need to ensure that end
    users and clients see it that way.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 正如在 [第 1 章](part0014_split_000.html#DB7S1-1d2c6d19b9d242db82da724021b51ea0 "Chapter 1. Cluster
    Basics and Installation on CentOS 7") 中提到的，*Cluster Basics and Installation on
    CentOS 7*，由于集群定义为一组计算机（我们一直称之为节点或成员），它们共同工作，使得外部从端看起来像是单一系统，我们需要确保最终用户和客户也这样看待。
- en: For this reason, the last thing that we will do in this chapter is configure
    a virtual IP, which is the address that external clients will use to connect to
    our cluster. Note that in an ordinary, non-cluster environment, you can use tools,
    such as `ifconfig` to configure a virtual IP for your system.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，本章的最后一件事情是配置虚拟 IP，这是外部客户端连接到我们集群的地址。请注意，在普通的非集群环境中，您可以使用诸如 `ifconfig` 的工具来为系统配置虚拟
    IP。
- en: 'However, in our case, we will use nothing more and nothing less than PCS and
    perform two operations at once:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 但在我们的情况下，我们将只使用 PCS 并同时执行两个操作：
- en: Creating the IPv4 address
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建 IPv4 地址
- en: Assigning it to the cluster as a whole
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将其分配给整个集群
- en: Adding a virtual IP as a cluster resource
  id: totrans-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将虚拟 IP 添加为集群资源
- en: Since a virtual IP is what is called a **cluster resource**, we will use `pcs
    resource help` to look for information on to how to create it. You will need,
    in advance, to pick an IP address that is not being used in your LAN to assign
    to the virtual IP resource. After the virtual IP is initialized, you can ping
    it as usual to confirm its availability.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 由于虚拟 IP 是所谓的 **集群资源**，我们将使用 `pcs resource help` 查找有关如何创建它的信息。您需要事先选择一个在您的局域网中未被使用的
    IP 地址分配给虚拟 IP 资源。初始化虚拟 IP 后，您可以像通常一样对其进行 ping 测试以确认其可用性。
- en: 'To create the virtual IP named `virtual_ip` with the address `192.168.0.4/24`,
    monitored everything 30 seconds on `enp0s3`, run the following command on either
    node:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建名为`virtual_ip`、地址为`192.168.0.4/24`、每30秒监控一次`enp0s3`的虚拟IP，在任一节点上运行以下命令：
- en: '[PRE37]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Up to this point, the virtual IP resource will show as stopped in the output
    of `pcs cluster status` or `pcs status` until a later stage when we will disable
    STONITH (which is a cluster feature that is explained in the next section).
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，在`pcs cluster status`或`pcs status`的输出中，虚拟IP资源将显示为已停止，直到后续阶段我们禁用STONITH（STONITH是一个集群功能，将在下一节中解释）。
- en: Viewing the status of the virtual IP
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查看虚拟IP的状态
- en: 'To view the current status of cluster resources use the following command:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看集群资源的当前状态，请使用以下命令：
- en: '[PRE38]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'In case the newly created virtual IP is not started automatically, you will
    want to perform a more thorough check, including a verbose output of the configuration
    used by the running cluster as provided by `crm_verify`, a tool that is part of
    the pacemaker cluster resource manager:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 如果新创建的虚拟IP没有自动启动，你需要进行更彻底的检查，包括通过`crm_verify`提供的正在运行的集群配置的详细输出，`crm_verify`是pacemaker集群资源管理器的一部分：
- en: '[PRE39]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Note
  id: totrans-155
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**STONITH**, an acronym for **Shoot The Other Node In The Head**, represents
    a cluster feature that prevents nodes in a high-availability cluster from becoming
    active at the same time, and thus serving the same content.'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '**STONITH**，即**Shoot The Other Node In The Head**的缩写，代表一个集群功能，防止高可用集群中的节点同时变为活跃状态，从而避免同时提供相同的内容。'
- en: As the preceding error message indicates, clusters with shared data need STONITH
    to ensure data integrity. However, we will defer the appropriate discussion for
    this feature for the next chapter, and we will disable it for the time being in
    order to be able to show how the virtual IP is started and becomes accessible.
    On the other hand, when `crm_verify –L –V` does not return any output, it means
    that the configuration is valid and free from errors.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面的错误信息所示，共享数据的集群需要STONITH来确保数据完整性。然而，我们将把对这个功能的适当讨论推迟到下一章，并且暂时禁用它，以便能够展示虚拟IP如何启动并变得可访问。另一方面，当`crm_verify
    –L –V`没有返回任何输出时，表示配置有效且没有错误。
- en: 'Go ahead and disable STONITH but keep in mind that we will return to this in
    the next chapter:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 请禁用STONITH，但请记住，我们将在下一章中重新讨论此问题：
- en: '[PRE40]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Next, check the cluster status again.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，再次检查集群状态。
- en: 'The resource should now show as started when you query the cluster status.
    You can check the resource availability by pinging it:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 当你查询集群状态时，资源现在应该显示为已启动。你可以通过 ping 来检查资源的可用性：
- en: '[PRE41]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: If the ping operation returns a warning that some packets were not delivered
    to destination, refer to `/var/log/pacemaker.log` or `/var/log/cluster/corosync.log`
    for information on what could have failed.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 如果ping操作返回一个警告，说明一些数据包未能送达目标，请查看`/var/log/pacemaker.log`或`/var/log/cluster/corosync.log`，获取有关可能失败的原因的信息。
- en: Summary
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learned how to set up and configure the basic required
    network infrastructure and also the clustering components that we installed in
    [Chapter 1](part0014_split_000.html#DB7S1-1d2c6d19b9d242db82da724021b51ea0 "Chapter 1. Cluster
    Basics and Installation on CentOS 7"), *Cluster Basics and Installation on CentOS
    7*. Having reviewed the concepts associated with security, firewalling, and Internet
    protocols, we were able to add the firewall rules that will allow the communication
    of each node with each other and the proper operation of the clustering services
    on each box.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了如何设置和配置基本的网络基础设施，以及我们在[第1章](part0014_split_000.html#DB7S1-1d2c6d19b9d242db82da724021b51ea0
    "Chapter 1. Cluster Basics and Installation on CentOS 7")，*CentOS 7上的集群基础与安装*中安装的集群组件。通过回顾与安全、防火墙和互联网协议相关的概念，我们能够添加防火墙规则，允许每个节点之间的通信，并确保每台机器上的集群服务正常运行。
- en: We will use the tools discussed in this article throughout the rest of this
    book, not only to check on the status of the cluster or the individual nodes,
    but also as a troubleshooting technique in case things don't go as expected.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本书接下来的内容中继续使用本文讨论的工具，不仅用于检查集群或单个节点的状态，还作为故障排除技巧，以防事物未按预期进行。
